yarn run v1.15.2
$ node_modules/.bin/gts check
/home/idnes/Projects/awe/src/exclude/coba/lib/coba.module.ts
Missing semicolon (semicolon)
  1 | import { NgModule } from '@angular/core';
  2 | import { CobaComponent } from './coba.component';
> 3 | import { CobaDepModule } from '@try/coba-dep'
    |                                             ^
  4 | @NgModule({
  5 |   imports: [
  6 |     CobaDepModule


/home/idnes/Projects/awe/src/exclude/coba/public_api.ts
file should end with a newline (eofline)
  1 | export * from './lib/coba.component';
> 2 | export * from './lib/coba.module';
    |                                  ^


/home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-drop.directive.ts
Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  17 | 
  18 |   // tslint:disable-next-line: variable-name
> 19 |   private _multiple: boolean = false;
     |                     ^
  20 | 
  21 |   @Input() disabled;
  22 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  56 |   }
  57 | 
> 58 |   constructor(private _renderer: Renderer2, private _element: ElementRef) {
     |                      ^
  59 |     super();
  60 |   }
  61 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  56 |   }
  57 | 
> 58 |   constructor(private _renderer: Renderer2, private _element: ElementRef) {
     |                                                    ^
  59 |     super();
  60 |   }
  61 | 

Identifier 'transfer' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  68 |   onDrop(event: Event): void {
  69 |     if (!this.disabled) {
> 70 |       let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
     |          ^
  71 |       let files: FileList = transfer.files;
  72 |       if (files.length) {
  73 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  68 |   onDrop(event: Event): void {
  69 |     if (!this.disabled) {
> 70 |       let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
     |                                    ^
  71 |       let files: FileList = transfer.files;
  72 |       if (files.length) {
  73 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];

missing whitespace (whitespace)
  68 |   onDrop(event: Event): void {
  69 |     if (!this.disabled) {
> 70 |       let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
     |                                               ^
  71 |       let files: FileList = transfer.files;
  72 |       if (files.length) {
  73 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];

Identifier 'files' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  69 |     if (!this.disabled) {
  70 |       let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
> 71 |       let files: FileList = transfer.files;
     |          ^
  72 |       if (files.length) {
  73 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];
  74 |         this.onFileDrop.emit(value);

Identifier 'value' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  71 |       let files: FileList = transfer.files;
  72 |       if (files.length) {
> 73 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];
     |            ^
  74 |         this.onFileDrop.emit(value);
  75 |       }
  76 |     }

Identifier 'transfer' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  86 |   @HostListener('dragover', ['$event'])
  87 |   onDragOver(event: Event): void {
> 88 |     let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
     |        ^
  89 |     transfer.dropEffect = this._typeCheck(transfer.types);
  90 |     if (this.disabled || (!this._multiple &&
  91 |       ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  86 |   @HostListener('dragover', ['$event'])
  87 |   onDragOver(event: Event): void {
> 88 |     let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
     |                                  ^
  89 |     transfer.dropEffect = this._typeCheck(transfer.types);
  90 |     if (this.disabled || (!this._multiple &&
  91 |       ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {

missing whitespace (whitespace)
  86 |   @HostListener('dragover', ['$event'])
  87 |   onDragOver(event: Event): void {
> 88 |     let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
     |                                             ^
  89 |     transfer.dropEffect = this._typeCheck(transfer.types);
  90 |     if (this.disabled || (!this._multiple &&
  91 |       ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  89 |     transfer.dropEffect = this._typeCheck(transfer.types);
  90 |     if (this.disabled || (!this._multiple &&
> 91 |       ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {
     |                                                         ^
  92 |       transfer.dropEffect = 'none';
  93 |     } else {
  94 |       transfer.dropEffect = 'copy';

missing whitespace (whitespace)
  89 |     transfer.dropEffect = this._typeCheck(transfer.types);
  90 |     if (this.disabled || (!this._multiple &&
> 91 |       ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {
     |                                                              ^
  92 |       transfer.dropEffect = 'none';
  93 |     } else {
  94 |       transfer.dropEffect = 'copy';

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  123 |    */
  124 |   private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {
> 125 |     let dropEffect: string = 'none';
      |                    ^
  126 |     if (types) {
  127 |       if (((<any>types).contains && (<any>types).contains('Files'))
  128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  125 |     let dropEffect: string = 'none';
  126 |     if (types) {
> 127 |       if (((<any>types).contains && (<any>types).contains('Files'))
      |            ^
  128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
  129 |         dropEffect = 'copy';
  130 |       }

missing whitespace (whitespace)
  125 |     let dropEffect: string = 'none';
  126 |     if (types) {
> 127 |       if (((<any>types).contains && (<any>types).contains('Files'))
      |                 ^
  128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
  129 |         dropEffect = 'copy';
  130 |       }

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  125 |     let dropEffect: string = 'none';
  126 |     if (types) {
> 127 |       if (((<any>types).contains && (<any>types).contains('Files'))
      |                                     ^
  128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
  129 |         dropEffect = 'copy';
  130 |       }

missing whitespace (whitespace)
  125 |     let dropEffect: string = 'none';
  126 |     if (types) {
> 127 |       if (((<any>types).contains && (<any>types).contains('Files'))
      |                                          ^
  128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
  129 |         dropEffect = 'copy';
  130 |       }

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  126 |     if (types) {
  127 |       if (((<any>types).contains && (<any>types).contains('Files'))
> 128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
      |             ^
  129 |         dropEffect = 'copy';
  130 |       }
  131 |     }

missing whitespace (whitespace)
  126 |     if (types) {
  127 |       if (((<any>types).contains && (<any>types).contains('Files'))
> 128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
      |                  ^
  129 |         dropEffect = 'copy';
  130 |       }
  131 |     }

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  126 |     if (types) {
  127 |       if (((<any>types).contains && (<any>types).contains('Files'))
> 128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
      |                                     ^
  129 |         dropEffect = 'copy';
  130 |       }
  131 |     }

missing whitespace (whitespace)
  126 |     if (types) {
  127 |       if (((<any>types).contains && (<any>types).contains('Files'))
> 128 |         || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
      |                                          ^
  129 |         dropEffect = 'copy';
  130 |       }
  131 |     }


/home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-select.directive.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   9 | export class TdFileSelectDirective {
  10 | 
> 11 |   private _multiple: boolean = false;
     |          ^
  12 | 
  13 |   /**
  14 |    * multiple?: boolean

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
   9 | export class TdFileSelectDirective {
  10 | 
> 11 |   private _multiple: boolean = false;
     |                     ^
  12 | 
  13 |   /**
  14 |    * multiple?: boolean

In the class "TdFileSelectDirective", the output property "onFileSelect" should not be prefixed with on (no-output-on-prefix)
  27 |    * Alternative to not use [(ngModel)].
  28 |    */
> 29 |   @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();
     |  ^
  30 | 
  31 |   /**
  32 |    * Binds native 'multiple' attribute if [multiple] property is 'true'.

@Outputs should not be renamed (no-output-rename)
  27 |    * Alternative to not use [(ngModel)].
  28 |    */
> 29 |   @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();
     |  ^
  30 | 
  31 |   /**
  32 |    * Binds native 'multiple' attribute if [multiple] property is 'true'.

Identifier 'fileInputEl' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  48 |   onChange(event: Event): void {
  49 |     if (event.target instanceof HTMLInputElement) {
> 50 |       let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);
     |          ^
  51 |       let files: FileList = fileInputEl.files;
  52 |       if (files.length) {
  53 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  48 |   onChange(event: Event): void {
  49 |     if (event.target instanceof HTMLInputElement) {
> 50 |       let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);
     |                                           ^
  51 |       let files: FileList = fileInputEl.files;
  52 |       if (files.length) {
  53 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];

missing whitespace (whitespace)
  48 |   onChange(event: Event): void {
  49 |     if (event.target instanceof HTMLInputElement) {
> 50 |       let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);
     |                                                             ^
  51 |       let files: FileList = fileInputEl.files;
  52 |       if (files.length) {
  53 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];

Identifier 'files' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  49 |     if (event.target instanceof HTMLInputElement) {
  50 |       let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);
> 51 |       let files: FileList = fileInputEl.files;
     |          ^
  52 |       if (files.length) {
  53 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];
  54 |         this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);

Identifier 'value' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  51 |       let files: FileList = fileInputEl.files;
  52 |       if (files.length) {
> 53 |         let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];
     |            ^
  54 |         this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);
  55 |       }
  56 |     }


/home/idnes/Projects/awe/src/exclude/covalent/tfile/file-input/file-input.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  19 | 
  20 | export class TdFileInputBase {
> 21 |   constructor(public _changeDetectorRef: ChangeDetectorRef) { }
     |                     ^
  22 | }
  23 | 
  24 | /* tslint:disable-next-line */

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  39 | export class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {
  40 | 
> 41 |   private _multiple: boolean = false;
     |          ^
  42 | 
  43 |   /** The native `<input type="file"> element */
  44 |   @ViewChild('fileInput') _inputElement: ElementRef;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  39 | export class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {
  40 | 
> 41 |   private _multiple: boolean = false;
     |                     ^
  42 | 
  43 |   /** The native `<input type="file"> element */
  44 |   @ViewChild('fileInput') _inputElement: ElementRef;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  42 | 
  43 |   /** The native `<input type="file"> element */
> 44 |   @ViewChild('fileInput') _inputElement: ElementRef;
     |                          ^
  45 |   get inputElement(): HTMLInputElement {
  46 |     return this._inputElement.nativeElement;
  47 |   }


In the class "TdFileInputComponent", the directive input property "color" should not be renamed.
However, you should use an alias when the directive name is also an input property, and the directive name
doesn't describe the property. In this last case, you can disable this rule with `tslint:disable-next-line:no-input-rename`.
   (no-input-rename)
  51 |    * Sets button color. Uses same color palette accepted as [MatButton].
  52 |    */
> 53 |   @Input('color') color: string;
     |  ^
  54 | 
  55 |   /**
  56 |    * multiple?: boolean


In the class "TdFileInputComponent", the directive input property "accept" should not be renamed.
However, you should use an alias when the directive name is also an input property, and the directive name
doesn't describe the property. In this last case, you can disable this rule with `tslint:disable-next-line:no-input-rename`.
   (no-input-rename)
  70 |    * Same as 'accept' attribute in <input/> element.
  71 |    */
> 72 |   @Input('accept') accept: string;
     |  ^
  73 | 
  74 |   /**
  75 |    * select?: function

@Outputs should not be renamed (no-output-rename)
  77 |    * Emits a [File | FileList] object.
  78 |    */
> 79 |   @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
     |  ^
  80 | 
  81 |   constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {
  82 |     super(_changeDetectorRef);

In the class "TdFileInputComponent", the output property "onSelect" should not be prefixed with on (no-output-on-prefix)
  77 |    * Emits a [File | FileList] object.
  78 |    */
> 79 |   @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
     |  ^
  80 | 
  81 |   constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {
  82 |     super(_changeDetectorRef);

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  79 |   @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
  80 | 
> 81 |   constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {
     |                      ^
  82 |     super(_changeDetectorRef);
  83 |   }
  84 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  79 |   @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
  80 | 
> 81 |   constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {
     |                                            ^
  82 |     super(_changeDetectorRef);
  83 |   }
  84 | 


/home/idnes/Projects/awe/src/exclude/covalent/tfile/file-upload/file-upload.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   9 | 
  10 | export class TdFileUploadBase {
> 11 |   constructor(public _changeDetectorRef: ChangeDetectorRef) { }
     |                     ^
  12 | }
  13 | 
  14 | /* tslint:disable-next-line */

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  29 | export class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {
  30 | 
> 31 |   private _multiple: boolean = false;
     |          ^
  32 |   private _required: boolean = false;
  33 | 
  34 |   @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  29 | export class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {
  30 | 
> 31 |   private _multiple: boolean = false;
     |                     ^
  32 |   private _required: boolean = false;
  33 | 
  34 |   @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  30 | 
  31 |   private _multiple: boolean = false;
> 32 |   private _required: boolean = false;
     |          ^
  33 | 
  34 |   @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;
  35 | 

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  30 | 
  31 |   private _multiple: boolean = false;
> 32 |   private _required: boolean = false;
     |                     ^
  33 | 
  34 |   @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;
  35 | 


In the class "TdFileUploadComponent", the directive input property "defaultColor" should not be renamed.
However, you should use an alias when the directive name is also an input property, and the directive name
doesn't describe the property. In this last case, you can disable this rule with `tslint:disable-next-line:no-input-rename`.
   (no-input-rename)
  40 |    * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.
  41 |    */
> 42 |   @Input('defaultColor') defaultColor: string = 'primary';
     |  ^
  43 | 
  44 |   /**
  45 |    * activeColor?: string

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  40 |    * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.
  41 |    */
> 42 |   @Input('defaultColor') defaultColor: string = 'primary';
     |                                       ^
  43 | 
  44 |   /**
  45 |    * activeColor?: string


In the class "TdFileUploadComponent", the directive input property "activeColor" should not be renamed.
However, you should use an alias when the directive name is also an input property, and the directive name
doesn't describe the property. In this last case, you can disable this rule with `tslint:disable-next-line:no-input-rename`.
   (no-input-rename)
  46 |    * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.
  47 |    */
> 48 |   @Input('activeColor') activeColor: string = 'accent';
     |  ^
  49 | 
  50 |   /**
  51 |    * cancelColor?: string

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  46 |    * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.
  47 |    */
> 48 |   @Input('activeColor') activeColor: string = 'accent';
     |                                     ^
  49 | 
  50 |   /**
  51 |    * cancelColor?: string


In the class "TdFileUploadComponent", the directive input property "cancelColor" should not be renamed.
However, you should use an alias when the directive name is also an input property, and the directive name
doesn't describe the property. In this last case, you can disable this rule with `tslint:disable-next-line:no-input-rename`.
   (no-input-rename)
  52 |    * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.
  53 |    */
> 54 |   @Input('cancelColor') cancelColor: string = 'warn';
     |  ^
  55 | 
  56 |   /**
  57 |    * multiple?: boolean

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  52 |    * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.
  53 |    */
> 54 |   @Input('cancelColor') cancelColor: string = 'warn';
     |                                     ^
  55 | 
  56 |   /**
  57 |    * multiple?: boolean


In the class "TdFileUploadComponent", the directive input property "accept" should not be renamed.
However, you should use an alias when the directive name is also an input property, and the directive name
doesn't describe the property. In this last case, you can disable this rule with `tslint:disable-next-line:no-input-rename`.
   (no-input-rename)
  84 |    * Same as 'accept' attribute in <input/> element.
  85 |    */
> 86 |   @Input('accept') accept: string;
     |  ^
  87 | 
  88 |   /**
  89 |    * select?: function

@Outputs should not be renamed (no-output-rename)
  91 |    * Emits a [File | FileList] object.
  92 |    */
> 93 |   @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
     |  ^
  94 | 
  95 |   /**
  96 |    * upload?: function

In the class "TdFileUploadComponent", the output property "onSelect" should not be prefixed with on (no-output-on-prefix)
  91 |    * Emits a [File | FileList] object.
  92 |    */
> 93 |   @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
     |  ^
  94 | 
  95 |   /**
  96 |    * upload?: function

In the class "TdFileUploadComponent", the output property "onUpload" should not be prefixed with on (no-output-on-prefix)
   98 |    * Emits a [File | FileList] object.
   99 |    */
> 100 |   @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
      |  ^
  101 | 
  102 |   /**
  103 |    * cancel?: function

@Outputs should not be renamed (no-output-rename)
   98 |    * Emits a [File | FileList] object.
   99 |    */
> 100 |   @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
      |  ^
  101 | 
  102 |   /**
  103 |    * cancel?: function

In the class "TdFileUploadComponent", the output property "onCancel" should not be prefixed with on (no-output-on-prefix)
  104 |    * Event emitted when cancel button is clicked.
  105 |    */
> 106 |   @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();
      |  ^
  107 | 
  108 |   constructor(_changeDetectorRef: ChangeDetectorRef) {
  109 |     super(_changeDetectorRef);

@Outputs should not be renamed (no-output-rename)
  104 |    * Event emitted when cancel button is clicked.
  105 |    */
> 106 |   @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();
      |  ^
  107 | 
  108 |   constructor(_changeDetectorRef: ChangeDetectorRef) {
  109 |     super(_changeDetectorRef);

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  106 |   @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();
  107 | 
> 108 |   constructor(_changeDetectorRef: ChangeDetectorRef) {
      |              ^
  109 |     super(_changeDetectorRef);
  110 |   }
  111 | 


/home/idnes/Projects/awe/src/exclude/covalent/tfile/file.module.ts
Missing semicolon (semicolon)
  14 | import { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';
  15 | import { TdFileService } from './services/file.service';
> 16 | import { CovalentCommonModule } from '@try/tcommon'
     |                                                   ^
  17 | 
  18 | const TD_FILE: Type<any>[] = [
  19 |   TdFileSelectDirective,


/home/idnes/Projects/awe/src/exclude/covalent/tfile/services/file.service.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  13 | export class TdFileService {
  14 | 
> 15 |   private _progressSubject: Subject<number> = new Subject<number>();
     |          ^
  16 |   private _progressObservable: Observable<number>;
  17 | 
  18 |   /**

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  14 | 
  15 |   private _progressSubject: Subject<number> = new Subject<number>();
> 16 |   private _progressObservable: Observable<number>;
     |          ^
  17 | 
  18 |   /**
  19 |    * Gets progress observable to keep track of the files being uploaded.

Identifier 'xhr' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  43 |   upload(options: IUploadOptions): Observable<any> {
  44 |     return new Observable<any>((subscriber: Subscriber<any>) => {
> 45 |       let xhr: XMLHttpRequest = new XMLHttpRequest();
     |          ^
  46 |       let formData: FormData = new FormData();
  47 | 
  48 |       if (options.file !== undefined) {

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  55 | 
  56 |       xhr.upload.onprogress = (event: ProgressEvent) => {
> 57 |         let progress: number = 0;
     |                      ^
  58 |         if (event.lengthComputable) {
  59 |           progress = Math.round(event.loaded / event.total * 100);
  60 |         }

for (... in ...) statements must be filtered with an if statement (forin)
  76 |       xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
  77 |       if (options.headers) {
> 78 |         for (let key in options.headers) {
     |        ^
  79 |           xhr.setRequestHeader(key, options.headers[key]);
  80 |         }
  81 |       }

Identifier 'key' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  76 |       xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
  77 |       if (options.headers) {
> 78 |         for (let key in options.headers) {
     |                 ^
  79 |           xhr.setRequestHeader(key, options.headers[key]);
  80 |         }
  81 |       }


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/control-value-accesor.mixin.ts
Spaces before function parens are disallowed (space-before-function-paren)
  23 | /** Mixin to augment a component with ngModel support. */
  24 | export function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>
> 25 |                 (base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {
     |               ^
  26 |   return class extends base {
  27 |     private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;
  28 |     private _subjectValueChanges: Subject<any>;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  25 |                 (base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {
  26 |   return class extends base {
> 27 |     private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;
     |            ^
  28 |     private _subjectValueChanges: Subject<any>;
  29 |     valueChanges: Observable<any>;
  30 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  26 |   return class extends base {
  27 |     private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;
> 28 |     private _subjectValueChanges: Subject<any>;
     |            ^
  29 |     valueChanges: Observable<any>;
  30 | 
  31 |     constructor(...args: any[]) {

trailing whitespace (no-trailing-whitespace)
  30 | 
  31 |     constructor(...args: any[]) {
> 32 |       super(...args); 
     |                     ^
  33 |       this._subjectValueChanges = new Subject<any>();
  34 |       this.valueChanges = this._subjectValueChanges.asObservable();
  35 |     }


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disable-ripple.mixin.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  12 | export function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {
  13 |   return class extends base {
> 14 |     private _disableRipple: boolean = false;
     |            ^
  15 | 
  16 |     constructor(...args: any[]) {
  17 |       super(...args);

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  12 | export function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {
  13 |   return class extends base {
> 14 |     private _disableRipple: boolean = false;
     |                            ^
  15 | 
  16 |     constructor(...args: any[]) {
  17 |       super(...args);

Identifier 'newValue' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  22 |     }
  23 |     set disableRipple(value: boolean) {
> 24 |       let newValue: boolean = coerceBooleanProperty(value);
     |          ^
  25 |       if (this._disableRipple !== newValue) {
  26 |         this._disableRipple = newValue;
  27 |         this.onDisableRippleChange(this._disableRipple);


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disabled.mixin.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  12 | export function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {
  13 |   return class extends base {
> 14 |     private _disabled: boolean = false;
     |            ^
  15 | 
  16 |     constructor(...args: any[]) {
  17 |       super(...args);

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  12 | export function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {
  13 |   return class extends base {
> 14 |     private _disabled: boolean = false;
     |                       ^
  15 | 
  16 |     constructor(...args: any[]) {
  17 |       super(...args);

Identifier 'newValue' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  22 |     }
  23 |     set disabled(value: boolean) {
> 24 |       let newValue: boolean = coerceBooleanProperty(value);
     |          ^
  25 |       if (this._disabled !== newValue) {
  26 |         this._disabled = newValue;
  27 |         this.onDisabledChange(this._disabled);


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/auto-trim/auto-trim.directive.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   8 | export class TdAutoTrimDirective {
   9 | 
> 10 |   constructor(@Optional() @Host() private _model: NgModel) {}
     |                                          ^
  11 | 
  12 |   /**
  13 |    * Listens to host's (blur) event and trims value.


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/validators/validators.ts
Identifier 'func' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  3 | export class CovalentValidators {
  4 |   static min(minValue: any): ValidatorFn {
> 5 |     let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {
    |        ^
  6 |       if (!!Validators.required(c) || (!minValue && minValue !== 0)) {
  7 |         return undefined;
  8 |       }

Identifier 'v' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   7 |         return undefined;
   8 |       }
>  9 |       let v: number = c.value;
     |          ^
  10 |       return v < minValue ?
  11 |         { min: {minValue: minValue, actualValue: v} } :
  12 |         undefined;

Expected property shorthand in object literal ('{minValue}'). (object-literal-shorthand)
   9 |       let v: number = c.value;
  10 |       return v < minValue ?
> 11 |         { min: {minValue: minValue, actualValue: v} } :
     |                ^
  12 |         undefined;
  13 |     };
  14 |     return func;

Identifier 'func' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  16 | 
  17 |   static max(maxValue: any): ValidatorFn {
> 18 |     let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {
     |        ^
  19 |       if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {
  20 |         return undefined;
  21 |       }

Identifier 'v' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  20 |         return undefined;
  21 |       }
> 22 |       let v: number = c.value;
     |          ^
  23 |       return v > maxValue ?
  24 |         { max: {maxValue: maxValue, actualValue: v} } :
  25 |         undefined;

Expected property shorthand in object literal ('{maxValue}'). (object-literal-shorthand)
  22 |       let v: number = c.value;
  23 |       return v > maxValue ?
> 24 |         { max: {maxValue: maxValue, actualValue: v} } :
     |                ^
  25 |         undefined;
  26 |     };
  27 |     return func;


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/bytes/bytes.pipe.ts
Identifier 'k' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  15 |       return 'Invalid Number';
  16 |     }
> 17 |     let k: number = 1024;
     |        ^
  18 |     let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];
  19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
  20 |     // if less than 1

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  15 |       return 'Invalid Number';
  16 |     }
> 17 |     let k: number = 1024;
     |           ^
  18 |     let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];
  19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
  20 |     // if less than 1

Identifier 'sizes' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  16 |     }
  17 |     let k: number = 1024;
> 18 |     let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];
     |        ^
  19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
  20 |     // if less than 1
  21 |     if (i < 0) {

Identifier 'i' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  17 |     let k: number = 1024;
  18 |     let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];
> 19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
     |        ^
  20 |     // if less than 1
  21 |     if (i < 0) {
  22 |       return 'Invalid Number';


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/decimal-bytes/decimal-bytes.pipe.ts
Identifier 'k' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  15 |       return 'Invalid Number';
  16 |     }
> 17 |     let k: number = 1000;
     |        ^
  18 |     let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
  19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
  20 |     // if less than 1

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  15 |       return 'Invalid Number';
  16 |     }
> 17 |     let k: number = 1000;
     |           ^
  18 |     let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
  19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
  20 |     // if less than 1

Identifier 'sizes' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  16 |     }
  17 |     let k: number = 1000;
> 18 |     let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
     |        ^
  19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
  20 |     // if less than 1
  21 |     if (i < 0) {

Identifier 'i' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  17 |     let k: number = 1000;
  18 |     let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
> 19 |     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
     |        ^
  20 |     // if less than 1
  21 |     if (i < 0) {
  22 |       return 'Invalid Number';


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/digits/digits.pipe.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   8 | export class TdDigitsPipe implements PipeTransform {
   9 | 
> 10 |   private _decimalPipe: DecimalPipe;
     |          ^
  11 | 
  12 |   constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {
  13 |     this._decimalPipe = new DecimalPipe(this._locale);

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  10 |   private _decimalPipe: DecimalPipe;
  11 | 
> 12 |   constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {
     |                                         ^
  13 |     this._decimalPipe = new DecimalPipe(this._locale);
  14 |   }
  15 | 

Identifier 'k' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  24 |       return this._decimalPipe.transform(digits.toFixed(precision));
  25 |     }
> 26 |     let k: number = 1000;
     |        ^
  27 |     let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];
  28 |     let i: number = Math.floor(Math.log(digits) / Math.log(k));
  29 |     let size: string = sizes[i];

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  24 |       return this._decimalPipe.transform(digits.toFixed(precision));
  25 |     }
> 26 |     let k: number = 1000;
     |           ^
  27 |     let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];
  28 |     let i: number = Math.floor(Math.log(digits) / Math.log(k));
  29 |     let size: string = sizes[i];

Identifier 'sizes' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  25 |     }
  26 |     let k: number = 1000;
> 27 |     let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];
     |        ^
  28 |     let i: number = Math.floor(Math.log(digits) / Math.log(k));
  29 |     let size: string = sizes[i];
  30 |     return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');

Identifier 'i' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  26 |     let k: number = 1000;
  27 |     let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];
> 28 |     let i: number = Math.floor(Math.log(digits) / Math.log(k));
     |        ^
  29 |     let size: string = sizes[i];
  30 |     return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');
  31 |   }

Identifier 'size' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  27 |     let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];
  28 |     let i: number = Math.floor(Math.log(digits) / Math.log(k));
> 29 |     let size: string = sizes[i];
     |        ^
  30 |     return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');
  31 |   }
  32 | }


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/time-ago/time-ago.pipe.ts
Identifier 'ref' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   8 |     // Convert time to date object if not already
   9 |     time = new Date(time);
> 10 |     let ref: Date = new Date(reference);
     |        ^
  11 | 
  12 |     // If not a valid timestamp, return 'Invalid Date'
  13 |     if (!time.getTime()) {

Identifier 'startTime' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  17 |     // For unit testing, we need to be able to declare a static start time
  18 |     // for calculations, or else speed of tests can bork.
> 19 |     let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();
     |        ^
  20 |     let diff: number = Math.floor((startTime - time.getTime()) / 1000);
  21 | 
  22 |     if (diff < 2) {


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/time-difference/time-difference.pipe.ts
Identifier 'startTime' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   7 | export class TdTimeDifferencePipe implements PipeTransform {
   8 |   transform(start: any, end?: any): string {
>  9 |     let startTime: Date = new Date(start);
     |        ^
  10 |     let endTime: Date;
  11 | 
  12 |     if (end !== undefined) {

Identifier 'days' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  22 |     let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);
  23 | 
> 24 |     let days: number = Math.floor(diff / (60 * 60 * 24));
     |        ^
  25 |     diff = diff - (days * (60 * 60 * 24));
  26 | 
  27 |     let hours: number = Math.floor(diff / (60 * 60));

Identifier 'hours' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  25 |     diff = diff - (days * (60 * 60 * 24));
  26 | 
> 27 |     let hours: number = Math.floor(diff / (60 * 60));
     |        ^
  28 |     diff = diff - (hours * (60 * 60));
  29 | 
  30 |     let minutes: number = Math.floor(diff / (60));

Identifier 'minutes' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  28 |     diff = diff - (hours * (60 * 60));
  29 | 
> 30 |     let minutes: number = Math.floor(diff / (60));
     |        ^
  31 |     diff -= minutes * (60);
  32 | 
  33 |     let seconds: number = diff;

Identifier 'seconds' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  31 |     diff -= minutes * (60);
  32 | 
> 33 |     let seconds: number = diff;
     |        ^
  34 | 
  35 |     let pad: string = '00';
  36 | 

Identifier 'pad' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  33 |     let seconds: number = diff;
  34 | 
> 35 |     let pad: string = '00';
     |        ^
  36 | 
  37 |     let daysFormatted: string = '';
  38 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  33 |     let seconds: number = diff;
  34 | 
> 35 |     let pad: string = '00';
     |             ^
  36 | 
  37 |     let daysFormatted: string = '';
  38 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  35 |     let pad: string = '00';
  36 | 
> 37 |     let daysFormatted: string = '';
     |                       ^
  38 | 
  39 |     if (days > 0 && days < 2) {
  40 |       daysFormatted = ' day - ';


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/time-until/time-until.pipe.ts
Identifier 'ref' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   8 |     // Convert time to date object if not already
   9 |     time = new Date(time);
> 10 |     let ref: Date = new Date(reference);
     |        ^
  11 | 
  12 |     // If not a valid timestamp, return 'Invalid Date'
  13 |     if (!time.getTime()) {

Identifier 'startTime' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  17 |     // For unit testing, we need to be able to declare a static start time
  18 |     // for calculations, or else speed of tests can bork.
> 19 |     let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();
     |        ^
  20 |     let diff: number = Math.floor((time.getTime() - startTime) / 1000);
  21 | 
  22 |     if (diff < 2) {


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/icon.service.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   9 | export class IconService {
  10 | 
> 11 |   private _icons: string[] = [
     |          ^
  12 |     'access_alarm',
  13 |     'access_alarms',
  14 |     'access_time',


/home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/router-path.service.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   6 | @Injectable()
   7 | export class RouterPathService {
>  8 | private static _previousRoute: string = '/';
     |               ^
   9 |   constructor(private _router: Router) {
  10 |     this._router.events.pipe(
  11 |       filter((e: any) => e instanceof RoutesRecognized),

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
   6 | @Injectable()
   7 | export class RouterPathService {
>  8 | private static _previousRoute: string = '/';
     |                               ^
   9 |   constructor(private _router: Router) {
  10 |     this._router.events.pipe(
  11 |       filter((e: any) => e instanceof RoutesRecognized),

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   7 | export class RouterPathService {
   8 | private static _previousRoute: string = '/';
>  9 |   constructor(private _router: Router) {
     |                      ^
  10 |     this._router.events.pipe(
  11 |       filter((e: any) => e instanceof RoutesRecognized),
  12 |       pairwise(),


/home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  19 |   year: number;
  20 | 
> 21 |   private _activeDate: Date;
     |          ^
  22 | 
  23 |   /** The number of blank cells in the first row before the 1st of the month. */
  24 |   _firstWeekOffset: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  22 | 
  23 |   /** The number of blank cells in the first row before the 1st of the month. */
> 24 |   _firstWeekOffset: number;
     |  ^
  25 | 
  26 |   /** The date of the month that today falls on. Null if today is in another month. */
  27 |   _todayDate: number | null;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  25 | 
  26 |   /** The date of the month that today falls on. Null if today is in another month. */
> 27 |   _todayDate: number | null;
     |  ^
  28 | 
  29 |   /** The names of the weekdays. */
  30 |   _weekdays: { long: string, narrow: string }[];

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  28 | 
  29 |   /** The names of the weekdays. */
> 30 |   _weekdays: { long: string, narrow: string }[];
     |  ^
  31 | 
  32 |   /** Grid of calendar cells representing the dates of the month. */
  33 |   _weeks: MatCalendarCell[][];

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  31 | 
  32 |   /** Grid of calendar cells representing the dates of the month. */
> 33 |   _weeks: MatCalendarCell[][];
     |  ^
  34 | 
  35 |   monthMatrix: [number, Array<number>] = [7, []];
  36 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  39 |   constructor(@Optional()
  40 |               @Inject(MAT_DATE_FORMATS)
> 41 |               private _dateFormats: MatDateFormats,
     |                      ^
  42 |               public nativeDateAdapter: NativeDateAdapter) {
  43 | 
  44 |     const firstDayOfWeek = this.nativeDateAdapter.getFirstDayOfWeek();


/home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-monthly-view/mat-calendar-monthly-view.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  29 | 
  30 |   /** The number of blank cells in the first row before the 1st of the month. */
> 31 |   _firstWeekOffset: number;
     |  ^
  32 | 
  33 |   /** The date of the month that today falls on. Null if today is in another month. */
  34 |   _todayDate: number | null;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  32 | 
  33 |   /** The date of the month that today falls on. Null if today is in another month. */
> 34 |   _todayDate: number | null;
     |  ^
  35 | 
  36 |   /** The names of the weekdays. */
  37 |   _weekdays: { long: string, narrow: string }[];

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  35 | 
  36 |   /** The names of the weekdays. */
> 37 |   _weekdays: { long: string, narrow: string }[];
     |  ^
  38 | 
  39 |   constructor(public nativeDateAdapter: NativeDateAdapter,
  40 |               public calendarDateHelper: CalendarDateHelper) {


/home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  19 |   year: number;
  20 | 
> 21 |   private _activeDate: Date;
     |          ^
  22 | 
  23 |   /** The number of blank cells in the first row before the 1st of the month. */
  24 |   _firstWeekOffset: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  22 | 
  23 |   /** The number of blank cells in the first row before the 1st of the month. */
> 24 |   _firstWeekOffset: number;
     |  ^
  25 | 
  26 |   /** The date of the month that today falls on. Null if today is in another month. */
  27 |   _todayDate: number | null;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  25 | 
  26 |   /** The date of the month that today falls on. Null if today is in another month. */
> 27 |   _todayDate: number | null;
     |  ^
  28 | 
  29 |   /** The names of the weekdays. */
  30 |   _weekdays: { long: string, narrow: string }[];

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  28 | 
  29 |   /** The names of the weekdays. */
> 30 |   _weekdays: { long: string, narrow: string }[];
     |  ^
  31 | 
  32 |   /** Grid of calendar cells representing the dates of the month. */
  33 |   _weeks: MatCalendarCell[][];

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  31 | 
  32 |   /** Grid of calendar cells representing the dates of the month. */
> 33 |   _weeks: MatCalendarCell[][];
     |  ^
  34 | 
  35 |   monthMatrix: [number, Array<number>] = [7, []];
  36 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  38 | 
  39 |   constructor(@Optional() @Inject(MAT_DATE_FORMATS)
> 40 |               private _dateFormats: MatDateFormats,
     |                      ^
  41 |               public nativeDateAdapter: NativeDateAdapter) {
  42 | 
  43 |     const firstDayOfWeek = this.nativeDateAdapter.getFirstDayOfWeek();


/home/idnes/Projects/awe/src/lib/calendar/module/service/mat-calendar.service.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  16 |   onDateReset: EventEmitter<Date> = new EventEmitter<Date>();
  17 | 
> 18 |   constructor(private _nativeDateAdapter: NativeDateAdapter) {
     |                      ^
  19 |     this.selectedDate = this._nativeDateAdapter.clone(this.currentDate);
  20 |   }
  21 | 


/home/idnes/Projects/awe/src/lib/calendar/module/services/helpers/calendar-date-helper.service.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  20 |   weeks: MatCalendarCell[][];
  21 | 
> 22 |   constructor(public _nativeDateAdapter: NativeDateAdapter) {
     |                     ^
  23 |     this.init();
  24 |   }
  25 | 


/home/idnes/Projects/awe/src/lib/calendar/module/services/mat-calendar.service.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  16 |   onDateReset: EventEmitter<Date> = new EventEmitter<Date>();
  17 | 
> 18 |   constructor(private _nativeDateAdapter: NativeDateAdapter) {
     |                      ^
  19 |     this.selectedDate = this._nativeDateAdapter.clone(this.currentDate);
  20 |   }
  21 | 


/home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.component.ts
Missing semicolon (semicolon)
  10 | import { ColorPickerService } from './color-picker.service';
  11 | 
> 12 | import {Overlay} from '@angular/cdk/overlay'
     |                                            ^
  13 | 
  14 | @Component({
  15 |   selector: 'color-picker',

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  20 | })
  21 | export class ColorPickerComponent implements OnInit, OnDestroy, AfterViewInit {
> 22 |   private isIE10: boolean = false;
     |                  ^
  23 | 
  24 |   private hsva: Hsva;
  25 | 

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  40 |   private directiveElementRef: ElementRef;
  41 | 
> 42 |   private dialogArrowSize: number = 10;
     |                           ^
  43 |   private dialogArrowOffset: number = 15;
  44 | 
  45 |   private dialogInputFields: ColorFormats[] = [

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  41 | 
  42 |   private dialogArrowSize: number = 10;
> 43 |   private dialogArrowOffset: number = 15;
     |                             ^
  44 | 
  45 |   private dialogInputFields: ColorFormats[] = [
  46 |     ColorFormats.HEX,

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  49 |   ];
  50 | 
> 51 |   private useRootViewContainer: boolean = false;
     |                                ^
  52 | 
  53 |   public show: boolean;
  54 |   public hidden: boolean;

parameters are not aligned (align)
  191 | 
  192 |   public setupDialog(instance: any, elementRef: ElementRef, color: any,
> 193 |     cpWidth: string, cpHeight: string, cpDialogDisplay: string, cpFallbackColor: string,
      |    ^
  194 |     cpColorMode: string, cpAlphaChannel: AlphaChannel, cpOutputFormat: OutputFormat,
  195 |     cpDisableInput: boolean, cpIgnoredElements: any, cpSaveClickOutside: boolean,
  196 |     cpUseRootViewContainer: boolean, cpPosition: string, cpPositionOffset: string,

parameters are not aligned (align)
  192 |   public setupDialog(instance: any, elementRef: ElementRef, color: any,
  193 |     cpWidth: string, cpHeight: string, cpDialogDisplay: string, cpFallbackColor: string,
> 194 |     cpColorMode: string, cpAlphaChannel: AlphaChannel, cpOutputFormat: OutputFormat,
      |    ^
  195 |     cpDisableInput: boolean, cpIgnoredElements: any, cpSaveClickOutside: boolean,
  196 |     cpUseRootViewContainer: boolean, cpPosition: string, cpPositionOffset: string,
  197 |     cpPositionRelativeToArrow: boolean, cpPresetLabel: string, cpPresetColors: string[],

parameters are not aligned (align)
  193 |     cpWidth: string, cpHeight: string, cpDialogDisplay: string, cpFallbackColor: string,
  194 |     cpColorMode: string, cpAlphaChannel: AlphaChannel, cpOutputFormat: OutputFormat,
> 195 |     cpDisableInput: boolean, cpIgnoredElements: any, cpSaveClickOutside: boolean,
      |    ^
  196 |     cpUseRootViewContainer: boolean, cpPosition: string, cpPositionOffset: string,
  197 |     cpPositionRelativeToArrow: boolean, cpPresetLabel: string, cpPresetColors: string[],
  198 |     cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string, cpPresetEmptyMessageClass: string,

parameters are not aligned (align)
  194 |     cpColorMode: string, cpAlphaChannel: AlphaChannel, cpOutputFormat: OutputFormat,
  195 |     cpDisableInput: boolean, cpIgnoredElements: any, cpSaveClickOutside: boolean,
> 196 |     cpUseRootViewContainer: boolean, cpPosition: string, cpPositionOffset: string,
      |    ^
  197 |     cpPositionRelativeToArrow: boolean, cpPresetLabel: string, cpPresetColors: string[],
  198 |     cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string, cpPresetEmptyMessageClass: string,
  199 |     cpOKButton: boolean, cpOKButtonClass: string, cpOKButtonText: string,

parameters are not aligned (align)
  195 |     cpDisableInput: boolean, cpIgnoredElements: any, cpSaveClickOutside: boolean,
  196 |     cpUseRootViewContainer: boolean, cpPosition: string, cpPositionOffset: string,
> 197 |     cpPositionRelativeToArrow: boolean, cpPresetLabel: string, cpPresetColors: string[],
      |    ^
  198 |     cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string, cpPresetEmptyMessageClass: string,
  199 |     cpOKButton: boolean, cpOKButtonClass: string, cpOKButtonText: string,
  200 |     cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string,

parameters are not aligned (align)
  196 |     cpUseRootViewContainer: boolean, cpPosition: string, cpPositionOffset: string,
  197 |     cpPositionRelativeToArrow: boolean, cpPresetLabel: string, cpPresetColors: string[],
> 198 |     cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string, cpPresetEmptyMessageClass: string,
      |    ^
  199 |     cpOKButton: boolean, cpOKButtonClass: string, cpOKButtonText: string,
  200 |     cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string,
  201 |     cpAddColorButton: boolean, cpAddColorButtonClass: string, cpAddColorButtonText: string,

parameters are not aligned (align)
  197 |     cpPositionRelativeToArrow: boolean, cpPresetLabel: string, cpPresetColors: string[],
  198 |     cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string, cpPresetEmptyMessageClass: string,
> 199 |     cpOKButton: boolean, cpOKButtonClass: string, cpOKButtonText: string,
      |    ^
  200 |     cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string,
  201 |     cpAddColorButton: boolean, cpAddColorButtonClass: string, cpAddColorButtonText: string,
  202 |     cpRemoveColorButtonClass: string): void

parameters are not aligned (align)
  198 |     cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string, cpPresetEmptyMessageClass: string,
  199 |     cpOKButton: boolean, cpOKButtonClass: string, cpOKButtonText: string,
> 200 |     cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string,
      |    ^
  201 |     cpAddColorButton: boolean, cpAddColorButtonClass: string, cpAddColorButtonText: string,
  202 |     cpRemoveColorButtonClass: string): void
  203 |   {

parameters are not aligned (align)
  199 |     cpOKButton: boolean, cpOKButtonClass: string, cpOKButtonText: string,
  200 |     cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string,
> 201 |     cpAddColorButton: boolean, cpAddColorButtonClass: string, cpAddColorButtonText: string,
      |    ^
  202 |     cpRemoveColorButtonClass: string): void
  203 |   {
  204 |     this.setInitialColor(color);

parameters are not aligned (align)
  200 |     cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string,
  201 |     cpAddColorButton: boolean, cpAddColorButtonClass: string, cpAddColorButtonText: string,
> 202 |     cpRemoveColorButtonClass: string): void
      |    ^
  203 |   {
  204 |     this.setInitialColor(color);
  205 | 

misplaced opening brace (one-line)
  201 |     cpAddColorButton: boolean, cpAddColorButtonClass: string, cpAddColorButtonText: string,
  202 |     cpRemoveColorButtonClass: string): void
> 203 |   {
      |  ^
  204 |     this.setInitialColor(color);
  205 | 
  206 |     this.setColorMode(cpColorMode);

misplaced opening brace (one-line)
  260 |     if (cpOutputFormat === 'hex' &&
  261 |         cpAlphaChannel !== 'always' && cpAlphaChannel !== 'forced')
> 262 |     {
      |    ^
  263 |       this.cpAlphaChannel = 'disabled';
  264 |     }
  265 |   }

Expected property shorthand in object literal ('{slider}'). (object-literal-shorthand)
  331 | 
  332 |   public onDragEnd(slider: string): void {
> 333 |     this.directiveInstance.sliderDragEnd({ slider: slider, color: this.outputColor });
      |                                           ^
  334 |   }
  335 | 
  336 |   public onDragStart(slider: string): void {

Expected property shorthand in object literal ('{slider}'). (object-literal-shorthand)
  335 | 
  336 |   public onDragStart(slider: string): void {
> 337 |     this.directiveInstance.sliderDragStart({ slider: slider, color: this.outputColor });
      |                                             ^
  338 |   }
  339 | 
  340 |   public onMouseDown(event: MouseEvent): void {

misplaced opening brace (one-line)
  344 |         !this.isDescendant(this.directiveElementRef.nativeElement, event.target) &&
  345 |         this.cpIgnoredElements.filter((item: any) => item === event.target).length === 0)
> 346 |     {
      |    ^
  347 |       if (!this.cpSaveClickOutside) {
  348 |         this.setColorFromString(this.initialColor, false);
  349 | 

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  479 |       this.directiveInstance.inputChanged({
  480 |         input: 'hex',
> 481 |         valid: valid,
      |        ^
  482 |         value: value,
  483 |         color: this.outputColor
  484 |       });

Expected property shorthand in object literal ('{value}'). (object-literal-shorthand)
  480 |         input: 'hex',
  481 |         valid: valid,
> 482 |         value: value,
      |        ^
  483 |         color: this.outputColor
  484 |       });
  485 |     }

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  503 |     this.directiveInstance.inputChanged({
  504 |       input: 'red',
> 505 |       valid: valid,
      |      ^
  506 |       value: rgba.r,
  507 |       color: this.outputColor
  508 |     });

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  526 |     this.directiveInstance.inputChanged({
  527 |       input: 'blue',
> 528 |       valid: valid,
      |      ^
  529 |       value: rgba.b,
  530 |       color: this.outputColor
  531 |     });

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  549 |     this.directiveInstance.inputChanged({
  550 |       input: 'green',
> 551 |       valid: valid,
      |      ^
  552 |       value: rgba.g,
  553 |       color: this.outputColor
  554 |     });

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  568 |     this.directiveInstance.inputChanged({
  569 |       input: 'hue',
> 570 |       valid: valid,
      |      ^
  571 |       value: this.hsva.h,
  572 |       color: this.outputColor
  573 |     });

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  585 |     this.directiveInstance.inputChanged({
  586 |       input: 'value',
> 587 |       valid: valid,
      |      ^
  588 |       value: this.hsva.v,
  589 |       color: this.outputColor
  590 |     });

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  602 |     this.directiveInstance.inputChanged({
  603 |       input: 'alpha',
> 604 |       valid: valid,
      |      ^
  605 |       value: this.hsva.a,
  606 |       color: this.outputColor
  607 |     });

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  625 |     this.directiveInstance.inputChanged({
  626 |       input: 'lightness',
> 627 |       valid: valid,
      |      ^
  628 |       value: hsla.l,
  629 |       color: this.outputColor
  630 |     });

Expected property shorthand in object literal ('{valid}'). (object-literal-shorthand)
  648 |     this.directiveInstance.inputChanged({
  649 |       input: 'saturation',
> 650 |       valid: valid,
      |      ^
  651 |       value: hsla.s,
  652 |       color: this.outputColor
  653 |     });

object access via string literals is disallowed (no-string-literal)
  709 |       window.removeEventListener('resize', this.listenerResize);
  710 | 
> 711 |       if (!this.cdRef['destroyed']) {
      |                      ^
  712 |         this.cdRef.detectChanges();
  713 |       }
  714 |     }

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  771 |       this.position = 'relative';
  772 |     } else {
> 773 |       let position = 'static', transform = '', style;
      |      ^
  774 | 
  775 |       let parentNode: any = null, transformNode: any = null;
  776 | 

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  773 |       let position = 'static', transform = '', style;
  774 | 
> 775 |       let parentNode: any = null, transformNode: any = null;
      |      ^
  776 | 
  777 |       let node = this.directiveElementRef.nativeElement.parentNode;
  778 | 

misplaced opening brace (one-line)
  805 |       if (this.useRootViewContainer || (position === 'fixed' &&
  806 |          (!parentNode || parentNode instanceof HTMLUnknownElement)))
> 807 |       {
      |      ^
  808 |         this.top = boxDirective.top;
  809 |         this.left = boxDirective.left;
  810 |       } else {


/home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.directive.ts
Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  15 |   private dialog: any;
  16 | 
> 17 |   private dialogCreated: boolean = false;
     |                         ^
  18 |   private ignoreChanges: boolean = false;
  19 | 
  20 |   private cmpRef: ComponentRef<ColorPickerComponent>;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  16 | 
  17 |   private dialogCreated: boolean = false;
> 18 |   private ignoreChanges: boolean = false;
     |                         ^
  19 | 
  20 |   private cmpRef: ComponentRef<ColorPickerComponent>;
  21 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  22 |   @Input() colorPicker: string;
  23 | 
> 24 |   @Input() cpWidth: string = '230px';
     |                    ^
  25 |   @Input() cpHeight: string = 'auto';
  26 | 
  27 |   @Input() cpToggle: boolean = false;

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  23 | 
  24 |   @Input() cpWidth: string = '230px';
> 25 |   @Input() cpHeight: string = 'auto';
     |                     ^
  26 | 
  27 |   @Input() cpToggle: boolean = false;
  28 |   @Input() cpDisabled: boolean = false;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  25 |   @Input() cpHeight: string = 'auto';
  26 | 
> 27 |   @Input() cpToggle: boolean = false;
     |                     ^
  28 |   @Input() cpDisabled: boolean = false;
  29 | 
  30 |   @Input() cpIgnoredElements: any = [];

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  26 | 
  27 |   @Input() cpToggle: boolean = false;
> 28 |   @Input() cpDisabled: boolean = false;
     |                       ^
  29 | 
  30 |   @Input() cpIgnoredElements: any = [];
  31 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  30 |   @Input() cpIgnoredElements: any = [];
  31 | 
> 32 |   @Input() cpFallbackColor: string = '';
     |                            ^
  33 | 
  34 |   @Input() cpColorMode: ColorMode = 'color';
  35 | 

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  37 |   @Input() cpAlphaChannel: AlphaChannel = 'enabled';
  38 | 
> 39 |   @Input() cpDisableInput: boolean = false;
     |                           ^
  40 | 
  41 |   @Input() cpDialogDisplay: string = 'popup';
  42 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  39 |   @Input() cpDisableInput: boolean = false;
  40 | 
> 41 |   @Input() cpDialogDisplay: string = 'popup';
     |                            ^
  42 | 
  43 |   @Input() cpSaveClickOutside: boolean = true;
  44 | 

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  41 |   @Input() cpDialogDisplay: string = 'popup';
  42 | 
> 43 |   @Input() cpSaveClickOutside: boolean = true;
     |                               ^
  44 | 
  45 |   @Input() cpUseRootViewContainer: boolean = false;
  46 | 

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  43 |   @Input() cpSaveClickOutside: boolean = true;
  44 | 
> 45 |   @Input() cpUseRootViewContainer: boolean = false;
     |                                   ^
  46 | 
  47 |   @Input() cpPosition: string = 'right';
  48 |   @Input() cpPositionOffset: string = '0%';

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  45 |   @Input() cpUseRootViewContainer: boolean = false;
  46 | 
> 47 |   @Input() cpPosition: string = 'right';
     |                       ^
  48 |   @Input() cpPositionOffset: string = '0%';
  49 |   @Input() cpPositionRelativeToArrow: boolean = false;
  50 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  46 | 
  47 |   @Input() cpPosition: string = 'right';
> 48 |   @Input() cpPositionOffset: string = '0%';
     |                             ^
  49 |   @Input() cpPositionRelativeToArrow: boolean = false;
  50 | 
  51 |   @Input() cpOKButton: boolean = false;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  47 |   @Input() cpPosition: string = 'right';
  48 |   @Input() cpPositionOffset: string = '0%';
> 49 |   @Input() cpPositionRelativeToArrow: boolean = false;
     |                                      ^
  50 | 
  51 |   @Input() cpOKButton: boolean = false;
  52 |   @Input() cpOKButtonText: string = 'OK';

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  49 |   @Input() cpPositionRelativeToArrow: boolean = false;
  50 | 
> 51 |   @Input() cpOKButton: boolean = false;
     |                       ^
  52 |   @Input() cpOKButtonText: string = 'OK';
  53 |   @Input() cpOKButtonClass: string = 'cp-ok-button-class';
  54 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  50 | 
  51 |   @Input() cpOKButton: boolean = false;
> 52 |   @Input() cpOKButtonText: string = 'OK';
     |                           ^
  53 |   @Input() cpOKButtonClass: string = 'cp-ok-button-class';
  54 | 
  55 |   @Input() cpCancelButton: boolean = false;

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  51 |   @Input() cpOKButton: boolean = false;
  52 |   @Input() cpOKButtonText: string = 'OK';
> 53 |   @Input() cpOKButtonClass: string = 'cp-ok-button-class';
     |                            ^
  54 | 
  55 |   @Input() cpCancelButton: boolean = false;
  56 |   @Input() cpCancelButtonText: string = 'Cancel';

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  53 |   @Input() cpOKButtonClass: string = 'cp-ok-button-class';
  54 | 
> 55 |   @Input() cpCancelButton: boolean = false;
     |                           ^
  56 |   @Input() cpCancelButtonText: string = 'Cancel';
  57 |   @Input() cpCancelButtonClass: string = 'cp-cancel-button-class';
  58 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  54 | 
  55 |   @Input() cpCancelButton: boolean = false;
> 56 |   @Input() cpCancelButtonText: string = 'Cancel';
     |                               ^
  57 |   @Input() cpCancelButtonClass: string = 'cp-cancel-button-class';
  58 | 
  59 |   @Input() cpPresetLabel: string = 'Preset colors';

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  55 |   @Input() cpCancelButton: boolean = false;
  56 |   @Input() cpCancelButtonText: string = 'Cancel';
> 57 |   @Input() cpCancelButtonClass: string = 'cp-cancel-button-class';
     |                                ^
  58 | 
  59 |   @Input() cpPresetLabel: string = 'Preset colors';
  60 |   @Input() cpPresetColors: string[];

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  57 |   @Input() cpCancelButtonClass: string = 'cp-cancel-button-class';
  58 | 
> 59 |   @Input() cpPresetLabel: string = 'Preset colors';
     |                          ^
  60 |   @Input() cpPresetColors: string[];
  61 |   @Input() cpMaxPresetColorsLength: number = 6;
  62 | 

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  59 |   @Input() cpPresetLabel: string = 'Preset colors';
  60 |   @Input() cpPresetColors: string[];
> 61 |   @Input() cpMaxPresetColorsLength: number = 6;
     |                                    ^
  62 | 
  63 |   @Input() cpPresetEmptyMessage: string = 'No colors added';
  64 |   @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message';

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  61 |   @Input() cpMaxPresetColorsLength: number = 6;
  62 | 
> 63 |   @Input() cpPresetEmptyMessage: string = 'No colors added';
     |                                 ^
  64 |   @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message';
  65 | 
  66 |   @Input() cpAddColorButton: boolean = false;

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  62 | 
  63 |   @Input() cpPresetEmptyMessage: string = 'No colors added';
> 64 |   @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message';
     |                                      ^
  65 | 
  66 |   @Input() cpAddColorButton: boolean = false;
  67 |   @Input() cpAddColorButtonText: string = 'Add color';

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  64 |   @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message';
  65 | 
> 66 |   @Input() cpAddColorButton: boolean = false;
     |                             ^
  67 |   @Input() cpAddColorButtonText: string = 'Add color';
  68 |   @Input() cpAddColorButtonClass: string = 'cp-add-color-button-class';
  69 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  65 | 
  66 |   @Input() cpAddColorButton: boolean = false;
> 67 |   @Input() cpAddColorButtonText: string = 'Add color';
     |                                 ^
  68 |   @Input() cpAddColorButtonClass: string = 'cp-add-color-button-class';
  69 | 
  70 |   @Input() cpRemoveColorButtonClass: string = 'cp-remove-color-button-class';

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  66 |   @Input() cpAddColorButton: boolean = false;
  67 |   @Input() cpAddColorButtonText: string = 'Add color';
> 68 |   @Input() cpAddColorButtonClass: string = 'cp-add-color-button-class';
     |                                  ^
  69 | 
  70 |   @Input() cpRemoveColorButtonClass: string = 'cp-remove-color-button-class';
  71 | 

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  68 |   @Input() cpAddColorButtonClass: string = 'cp-add-color-button-class';
  69 | 
> 70 |   @Input() cpRemoveColorButtonClass: string = 'cp-remove-color-button-class';
     |                                     ^
  71 | 
  72 |   @Output() cpInputChange = new EventEmitter<any>(true);
  73 | 

parameters are not aligned (align)
  100 | 
  101 |   constructor(private injector: Injector, private cfr: ComponentFactoryResolver,
> 102 |     private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,
      |    ^
  103 |     private _service: ColorPickerService) {}
  104 | 
  105 |   ngOnDestroy(): void {

parameters are not aligned (align)
  101 |   constructor(private injector: Injector, private cfr: ComponentFactoryResolver,
  102 |     private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,
> 103 |     private _service: ColorPickerService) {}
      |    ^
  104 | 
  105 |   ngOnDestroy(): void {
  106 |     if (this.cmpRef !== undefined) {

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  101 |   constructor(private injector: Injector, private cfr: ComponentFactoryResolver,
  102 |     private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,
> 103 |     private _service: ColorPickerService) {}
      |            ^
  104 | 
  105 |   ngOnDestroy(): void {
  106 |     if (this.cmpRef !== undefined) {

ReflectiveInjector is deprecated: from v5 - slow and brings in a lot of code, Use `Injector.create` instead. (deprecation)
  161 | 
  162 |       const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);
> 163 |       const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);
      |                       ^
  164 | 
  165 |       this.cmpRef = vcRef.createComponent(compFactory, 0, injector, []);
  166 | 

parentInjector is deprecated: No replacement (deprecation)
  161 | 
  162 |       const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);
> 163 |       const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);
      |                                                                          ^
  164 | 
  165 |       this.cmpRef = vcRef.createComponent(compFactory, 0, injector, []);
  166 | 


/home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.module.ts
Missing semicolon (semicolon)
   7 | import { ColorPickerComponent } from './color-picker.component';
   8 | import { ColorPickerDirective } from './color-picker.directive';
>  9 | import {OverlayModule} from '@angular/cdk/overlay'
     |                                                  ^
  10 | 
  11 | @NgModule({
  12 |   imports: [ CommonModule, OverlayModule ],


/home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.service.ts
Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  20 | 
  21 |   public hsva2hsla(hsva: Hsva): Hsla {
> 22 |     const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;
     |    ^
  23 | 
  24 |     if (v === 0) {
  25 |       return new Hsla(h, 0, 0, a);

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  34 | 
  35 |   public hsla2hsva(hsla: Hsla): Hsva {
> 36 |     const h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1);
     |    ^
  37 |     const l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);
  38 | 
  39 |     if (l === 0) {

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  35 |   public hsla2hsva(hsla: Hsla): Hsva {
  36 |     const h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1);
> 37 |     const l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);
     |    ^
  38 | 
  39 |     if (l === 0) {
  40 |       return new Hsva(h, 0, 0, a);

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  47 | 
  48 |   public hsvaToRgba(hsva: Hsva): Rgba {
> 49 |     let r: number, g: number, b: number;
     |    ^
  50 | 
  51 |     const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;
  52 | 

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  49 |     let r: number, g: number, b: number;
  50 | 
> 51 |     const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;
     |    ^
  52 | 
  53 |     const i = Math.floor(h * 6);
  54 |     const f = h * 6 - i;

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
   98 | 
   99 |   public rgbaToHsva(rgba: Rgba): Hsva {
> 100 |     let h: number, s: number;
      |    ^
  101 | 
  102 |     const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1);
  103 |     const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  100 |     let h: number, s: number;
  101 | 
> 102 |     const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1);
      |    ^
  103 |     const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);
  104 | 
  105 |     const max = Math.max(r, g, b), min = Math.min(r, g, b);

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  101 | 
  102 |     const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1);
> 103 |     const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);
      |    ^
  104 | 
  105 |     const max = Math.max(r, g, b), min = Math.min(r, g, b);
  106 | 

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  103 |     const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);
  104 | 
> 105 |     const max = Math.max(r, g, b), min = Math.min(r, g, b);
      |    ^
  106 | 
  107 |     const v: number = max, d = max - min;
  108 | 

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  105 |     const max = Math.max(r, g, b), min = Math.min(r, g, b);
  106 | 
> 107 |     const v: number = max, d = max - min;
      |    ^
  108 | 
  109 |     s = (max === 0) ? 0 : d / max;
  110 | 

Expected method shorthand in object literal ('{parse() {...}}'). (object-literal-shorthand)
  156 |       {
  157 |         re: /(rgb)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*%?,\s*(\d{1,3})\s*%?(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
> 158 |         parse: function(execResult: any) {
      |        ^
  159 |           return new Rgba(parseInt(execResult[2], 10) / 255,
  160 |             parseInt(execResult[3], 10) / 255,
  161 |             parseInt(execResult[4], 10) / 255,

non-arrow functions are forbidden (only-arrow-functions)
  156 |       {
  157 |         re: /(rgb)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*%?,\s*(\d{1,3})\s*%?(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
> 158 |         parse: function(execResult: any) {
      |               ^
  159 |           return new Rgba(parseInt(execResult[2], 10) / 255,
  160 |             parseInt(execResult[3], 10) / 255,
  161 |             parseInt(execResult[4], 10) / 255,

Expected method shorthand in object literal ('{parse() {...}}'). (object-literal-shorthand)
  164 |       }, {
  165 |         re: /(hsl)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
> 166 |         parse: function(execResult: any) {
      |        ^
  167 |           return new Hsla(parseInt(execResult[2], 10) / 360,
  168 |             parseInt(execResult[3], 10) / 100,
  169 |             parseInt(execResult[4], 10) / 100,

non-arrow functions are forbidden (only-arrow-functions)
  164 |       }, {
  165 |         re: /(hsl)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
> 166 |         parse: function(execResult: any) {
      |               ^
  167 |           return new Hsla(parseInt(execResult[2], 10) / 360,
  168 |             parseInt(execResult[3], 10) / 100,
  169 |             parseInt(execResult[4], 10) / 100,

Expected method shorthand in object literal ('{parse() {...}}'). (object-literal-shorthand)
  176 |       stringParsers.push({
  177 |         re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,
> 178 |         parse: function(execResult: any) {
      |        ^
  179 |           return new Rgba(parseInt(execResult[1], 16) / 255,
  180 |             parseInt(execResult[2], 16) / 255,
  181 |             parseInt(execResult[3], 16) / 255,

non-arrow functions are forbidden (only-arrow-functions)
  176 |       stringParsers.push({
  177 |         re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,
> 178 |         parse: function(execResult: any) {
      |               ^
  179 |           return new Rgba(parseInt(execResult[1], 16) / 255,
  180 |             parseInt(execResult[2], 16) / 255,
  181 |             parseInt(execResult[3], 16) / 255,

Expected method shorthand in object literal ('{parse() {...}}'). (object-literal-shorthand)
  186 |       stringParsers.push({
  187 |         re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,
> 188 |         parse: function(execResult: any) {
      |        ^
  189 |           return new Rgba(parseInt(execResult[1], 16) / 255,
  190 |             parseInt(execResult[2], 16) / 255,
  191 |             parseInt(execResult[3], 16) / 255,

non-arrow functions are forbidden (only-arrow-functions)
  186 |       stringParsers.push({
  187 |         re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,
> 188 |         parse: function(execResult: any) {
      |               ^
  189 |           return new Rgba(parseInt(execResult[1], 16) / 255,
  190 |             parseInt(execResult[2], 16) / 255,
  191 |             parseInt(execResult[3], 16) / 255,

Expected method shorthand in object literal ('{parse() {...}}'). (object-literal-shorthand)
  197 |     stringParsers.push({
  198 |       re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,
> 199 |       parse: function(execResult: any) {
      |      ^
  200 |         return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,
  201 |           parseInt(execResult[2] + execResult[2], 16) / 255,
  202 |           parseInt(execResult[3] + execResult[3], 16) / 255,

non-arrow functions are forbidden (only-arrow-functions)
  197 |     stringParsers.push({
  198 |       re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,
> 199 |       parse: function(execResult: any) {
      |             ^
  200 |         return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,
  201 |           parseInt(execResult[2] + execResult[2], 16) / 255,
  202 |           parseInt(execResult[3] + execResult[3], 16) / 255,

Multiple variable declarations in the same statement are forbidden (one-variable-per-declaration)
  209 |         const parser = stringParsers[key];
  210 | 
> 211 |         const match = parser.re.exec(colorString), color: any = match && parser.parse(match);
      |        ^
  212 | 
  213 |         if (color) {
  214 |           if (color instanceof Rgba) {


/home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.service.ts
ConnectedPositionStrategy is deprecated: Use `FlexibleConnectedPositionStrategy` instead. (deprecation)
  68 |   public openContextMenu(context: IContextMenuContext) {
  69 |     const { anchorElement, event, parentContextMenu } = context;
> 70 |     let positionStrategy: ConnectedPositionStrategy;
     |                          ^
  71 | 
  72 |     if (!parentContextMenu) {
  73 |       const mouseEvent = event as MouseEvent;

missing whitespace (whitespace)
  146 |     contextMenuContent.instance.menuClass = menuClass;
  147 |     // tslint:disable-next-line: no-angle-bracket-type-assertion
> 148 |     (<OverlayRefWithContextMenu>overlay).contextMenu = contextMenuContent.instance;
      |                                ^
  149 | 
  150 |     const subscriptions: Subscription = new Subscription();
  151 |     subscriptions.add(contextMenuContent.instance.execute.asObservable()


/home/idnes/Projects/awe/src/lib/currency-mask/index.ts
Missing semicolon (semicolon)
> 1 | export * from './lib/currency-mask.module'
    |                                          ^
  2 | 


/home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.config.ts
" should be ' (quotemark)
> 1 | import {InjectionToken} from "@angular/core";
    |                             ^
  2 | 
  3 | export interface CurrencyMaskConfig {
  4 |   align: string;

" should be ' (quotemark)
  13 | }
  14 | 
> 15 | export let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>("currency.mask.config");
     |                                                                         ^
  16 | 


/home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.directive.ts
" should be ' (quotemark)
  12 |   OnInit,
  13 |   Optional
> 14 | } from "@angular/core";
     |       ^
  15 | 
  16 | import {ControlValueAccessor, NG_VALUE_ACCESSOR} from "@angular/forms";
  17 | import {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from "./currency-mask.config";

" should be ' (quotemark)
  14 | } from "@angular/core";
  15 | 
> 16 | import {ControlValueAccessor, NG_VALUE_ACCESSOR} from "@angular/forms";
     |                                                      ^
  17 | import {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from "./currency-mask.config";
  18 | import {InputHandler} from "./input.handler";
  19 | 

" should be ' (quotemark)
  15 | 
  16 | import {ControlValueAccessor, NG_VALUE_ACCESSOR} from "@angular/forms";
> 17 | import {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from "./currency-mask.config";
     |                                                       ^
  18 | import {InputHandler} from "./input.handler";
  19 | 
  20 | export const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {

" should be ' (quotemark)
  16 | import {ControlValueAccessor, NG_VALUE_ACCESSOR} from "@angular/forms";
  17 | import {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from "./currency-mask.config";
> 18 | import {InputHandler} from "./input.handler";
     |                           ^
  19 | 
  20 | export const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {
  21 |   provide: NG_VALUE_ACCESSOR,

variable 'CurrencyMaskDirective' used before declaration (no-use-before-declare)
  20 | export const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {
  21 |   provide: NG_VALUE_ACCESSOR,
> 22 |   useExisting: forwardRef(() => CurrencyMaskDirective),
     |                                ^
  23 |   multi: true,
  24 | };
  25 | 

" should be ' (quotemark)
  25 | 
  26 | @Directive({
> 27 |     selector: "[currencyMask]",
     |              ^
  28 |     providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]
  29 | })
  30 | export class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {

" should be ' (quotemark)
  36 | 
  37 |   public optionsTemplate = {
> 38 |       align: "right",
     |             ^
  39 |       allowNegative: true,
  40 |       allowZero: true,
  41 |       decimal: ".",

" should be ' (quotemark)
  39 |       allowNegative: true,
  40 |       allowZero: true,
> 41 |       decimal: ".",
     |               ^
  42 |       precision: 2,
  43 |       prefix: "$ ",
  44 |       suffix: "",

" should be ' (quotemark)
  41 |       decimal: ".",
  42 |       precision: 2,
> 43 |       prefix: "$ ",
     |              ^
  44 |       suffix: "",
  45 |       thousands: ",",
  46 |       nullable: false

" should be ' (quotemark)
  42 |       precision: 2,
  43 |       prefix: "$ ",
> 44 |       suffix: "",
     |              ^
  45 |       thousands: ",",
  46 |       nullable: false
  47 |   };

" should be ' (quotemark)
  43 |       prefix: "$ ",
  44 |       suffix: "",
> 45 |       thousands: ",",
     |                 ^
  46 |       nullable: false
  47 |   };
  48 | 

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  65 |     if (this.keyValueDiffer.diff(this.options)) {
  66 |       this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;
> 67 |       this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));
     |                                       ^
  68 |     }
  69 |   }
  70 | 

missing whitespace (whitespace)
  65 |     if (this.keyValueDiffer.diff(this.options)) {
  66 |       this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;
> 67 |       this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));
     |                                            ^
  68 |     }
  69 |   }
  70 | 

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  70 | 
  71 |   ngOnInit() {
> 72 |     this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));
     |                                                                         ^
  73 |   }
  74 | 
  75 |   @HostListener("blur", ["$event"])

missing whitespace (whitespace)
  70 | 
  71 |   ngOnInit() {
> 72 |     this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));
     |                                                                              ^
  73 |   }
  74 | 
  75 |   @HostListener("blur", ["$event"])

" should be ' (quotemark)
  73 |   }
  74 | 
> 75 |   @HostListener("blur", ["$event"])
     |                ^
  76 |   handleBlur(event: any) {
  77 |     this.inputHandler.getOnModelTouched().apply(event);
  78 |   }

" should be ' (quotemark)
  73 |   }
  74 | 
> 75 |   @HostListener("blur", ["$event"])
     |                         ^
  76 |   handleBlur(event: any) {
  77 |     this.inputHandler.getOnModelTouched().apply(event);
  78 |   }

" should be ' (quotemark)
  78 |   }
  79 | 
> 80 |   @HostListener("cut", ["$event"])
     |                ^
  81 |   handleCut(event: any) {
  82 |     if (!this.isChromeAndroid()) {
  83 |       this.inputHandler.handleCut(event);

" should be ' (quotemark)
  78 |   }
  79 | 
> 80 |   @HostListener("cut", ["$event"])
     |                        ^
  81 |   handleCut(event: any) {
  82 |     if (!this.isChromeAndroid()) {
  83 |       this.inputHandler.handleCut(event);

" should be ' (quotemark)
  85 |   }
  86 | 
> 87 |   @HostListener("input", ["$event"])
     |                ^
  88 |   handleInput(event: any) {
  89 |     if (this.isChromeAndroid()) {
  90 |       this.inputHandler.handleInput(event);

" should be ' (quotemark)
  85 |   }
  86 | 
> 87 |   @HostListener("input", ["$event"])
     |                          ^
  88 |   handleInput(event: any) {
  89 |     if (this.isChromeAndroid()) {
  90 |       this.inputHandler.handleInput(event);

" should be ' (quotemark)
  92 |   }
  93 | 
> 94 |   @HostListener("keydown", ["$event"])
     |                ^
  95 |   handleKeydown(event: any) {
  96 |     if (!this.isChromeAndroid()) {
  97 |       this.inputHandler.handleKeydown(event);

" should be ' (quotemark)
  92 |   }
  93 | 
> 94 |   @HostListener("keydown", ["$event"])
     |                            ^
  95 |   handleKeydown(event: any) {
  96 |     if (!this.isChromeAndroid()) {
  97 |       this.inputHandler.handleKeydown(event);

" should be ' (quotemark)
   99 |   }
  100 | 
> 101 |   @HostListener("keypress", ["$event"])
      |                ^
  102 |   handleKeypress(event: any) {
  103 |     if (!this.isChromeAndroid()) {
  104 |       this.inputHandler.handleKeypress(event);

" should be ' (quotemark)
   99 |   }
  100 | 
> 101 |   @HostListener("keypress", ["$event"])
      |                             ^
  102 |   handleKeypress(event: any) {
  103 |     if (!this.isChromeAndroid()) {
  104 |       this.inputHandler.handleKeypress(event);

" should be ' (quotemark)
  106 |   }
  107 | 
> 108 |   @HostListener("paste", ["$event"])
      |                ^
  109 |   handlePaste(event: any) {
  110 |     if (!this.isChromeAndroid()) {
  111 |       this.inputHandler.handlePaste(event);

" should be ' (quotemark)
  106 |   }
  107 | 
> 108 |   @HostListener("paste", ["$event"])
      |                          ^
  109 |   handlePaste(event: any) {
  110 |     if (!this.isChromeAndroid()) {
  111 |       this.inputHandler.handlePaste(event);

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  117 |   }
  118 | 
> 119 |   registerOnChange(callbackFunction: Function): void {
      |                                     ^
  120 |     this.inputHandler.setOnModelChange(callbackFunction);
  121 |   }
  122 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  121 |   }
  122 | 
> 123 |   registerOnTouched(callbackFunction: Function): void {
      |                                      ^
  124 |     this.inputHandler.setOnModelTouched(callbackFunction);
  125 |   }
  126 | 


/home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.module.ts
" should be ' (quotemark)
  2 | import {CommonModule} from '@angular/common';
  3 | import {FormsModule} from '@angular/forms';
> 4 | import {CurrencyMaskDirective} from "./currency-mask.directive";
    |                                    ^
  5 | import {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from "./currency-mask.config";
  6 | 
  7 | @NgModule({

" should be ' (quotemark)
  3 | import {FormsModule} from '@angular/forms';
  4 | import {CurrencyMaskDirective} from "./currency-mask.directive";
> 5 | import {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from "./currency-mask.config";
    |                                                       ^
  6 | 
  7 | @NgModule({
  8 |   imports: [ CommonModule, FormsModule ],

Missing semicolon (semicolon)
  18 |         useValue: config,
  19 |       }]
> 20 |     }
     |     ^
  21 |   }
  22 | }
  23 | 


/home/idnes/Projects/awe/src/lib/currency-mask/lib/input.handler.ts
" should be ' (quotemark)
> 1 | import {InputService} from "./input.service";
    |                           ^
  2 | 
  3 | export class InputHandler {
  4 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  4 | 
  5 |     private inputService: InputService;
> 6 |     private onModelChange: Function;
    |                           ^
  7 |     private onModelTouched: Function;
  8 | 
  9 |     constructor(htmlInputElement: HTMLInputElement, options: any) {

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
   5 |     private inputService: InputService;
   6 |     private onModelChange: Function;
>  7 |     private onModelTouched: Function;
     |                            ^
   8 | 
   9 |     constructor(htmlInputElement: HTMLInputElement, options: any) {
  10 |         this.inputService = new InputService(htmlInputElement, options);

Identifier 'keyCode' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  20 | 
  21 |     handleInput(event: any): void {
> 22 |         let keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);
     |            ^
  23 |         let rawValueLength = this.inputService.rawValue.length;
  24 |         let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;
  25 |         let storedRawValueLength = this.inputService.storedRawValue.length;

Identifier 'rawValueLength' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  21 |     handleInput(event: any): void {
  22 |         let keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);
> 23 |         let rawValueLength = this.inputService.rawValue.length;
     |            ^
  24 |         let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;
  25 |         let storedRawValueLength = this.inputService.storedRawValue.length;
  26 |         this.inputService.rawValue = this.inputService.storedRawValue;

Identifier 'rawValueSelectionEnd' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  22 |         let keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);
  23 |         let rawValueLength = this.inputService.rawValue.length;
> 24 |         let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;
     |            ^
  25 |         let storedRawValueLength = this.inputService.storedRawValue.length;
  26 |         this.inputService.rawValue = this.inputService.storedRawValue;
  27 | 

Identifier 'storedRawValueLength' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  23 |         let rawValueLength = this.inputService.rawValue.length;
  24 |         let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;
> 25 |         let storedRawValueLength = this.inputService.storedRawValue.length;
     |            ^
  26 |         this.inputService.rawValue = this.inputService.storedRawValue;
  27 | 
  28 |         if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {

!= should be !== (triple-equals)
  26 |         this.inputService.rawValue = this.inputService.storedRawValue;
  27 | 
> 28 |         if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {
     |                           ^
  29 |             this.setCursorPosition(event);
  30 |             return;
  31 |         }

!= should be !== (triple-equals)
  26 |         this.inputService.rawValue = this.inputService.storedRawValue;
  27 | 
> 28 |         if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {
     |                                                                                                      ^
  29 |             this.setCursorPosition(event);
  30 |             return;
  31 |         }

Identifier 'keyCode' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  57 | 
  58 |     handleKeydown(event: any): void {
> 59 |         let keyCode = event.which || event.charCode || event.keyCode;
     |            ^
  60 | 
  61 |         if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
  62 |             event.preventDefault();

== should be === (triple-equals)
  59 |         let keyCode = event.which || event.charCode || event.keyCode;
  60 | 
> 61 |         if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
     |                    ^
  62 |             event.preventDefault();
  63 |             let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
  64 | 

== should be === (triple-equals)
  59 |         let keyCode = event.which || event.charCode || event.keyCode;
  60 | 
> 61 |         if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
     |                                    ^
  62 |             event.preventDefault();
  63 |             let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
  64 | 

== should be === (triple-equals)
  59 |         let keyCode = event.which || event.charCode || event.keyCode;
  60 | 
> 61 |         if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
     |                                                     ^
  62 |             event.preventDefault();
  63 |             let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
  64 | 

Exceeds maximum line length of 140 (max-line-length)
  61 |         if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
  62 |             event.preventDefault();
> 63 |             let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
  64 | 
  65 |             if (selectionRangeLength == 0) {
  66 |                 this.inputService.removeNumber(keyCode);

Identifier 'selectionRangeLength' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  61 |         if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
  62 |             event.preventDefault();
> 63 |             let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
     |                ^
  64 | 
  65 |             if (selectionRangeLength == 0) {
  66 |                 this.inputService.removeNumber(keyCode);

== should be === (triple-equals)
  63 |             let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
  64 | 
> 65 |             if (selectionRangeLength == 0) {
     |                                     ^
  66 |                 this.inputService.removeNumber(keyCode);
  67 |                 this.onModelChange(this.inputService.value);
  68 |             }

Identifier 'keyCode' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  80 | 
  81 |     handleKeypress(event: any): void {
> 82 |         let keyCode = event.which || event.charCode || event.keyCode;
     |            ^
  83 | 
  84 |         if (keyCode === 97 && event.ctrlKey) {
  85 |             return;

Exceeds maximum line length of 140 (max-line-length)
  101 |             default:
  102 |                 if (this.inputService.canInputMoreNumbers) {
> 103 |                     let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
  104 | 
  105 |                     if (selectionRangeLength == this.inputService.rawValue.length) {
  106 |                         this.setValue(0);

Identifier 'selectionRangeLength' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  101 |             default:
  102 |                 if (this.inputService.canInputMoreNumbers) {
> 103 |                     let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
      |                        ^
  104 | 
  105 |                     if (selectionRangeLength == this.inputService.rawValue.length) {
  106 |                         this.setValue(0);

== should be === (triple-equals)
  103 |                     let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
  104 | 
> 105 |                     if (selectionRangeLength == this.inputService.rawValue.length) {
      |                                             ^
  106 |                         this.setValue(0);
  107 |                     }
  108 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  127 |     }
  128 | 
> 129 |     getOnModelChange(): Function {
      |                        ^
  130 |         return this.onModelChange;
  131 |     }
  132 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  131 |     }
  132 | 
> 133 |     setOnModelChange(callbackFunction: Function): void {
      |                                       ^
  134 |         this.onModelChange = callbackFunction;
  135 |     }
  136 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  135 |     }
  136 | 
> 137 |     getOnModelTouched(): Function {
      |                         ^
  138 |         return this.onModelTouched;
  139 |     }
  140 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  139 |     }
  140 | 
> 141 |     setOnModelTouched(callbackFunction: Function) {
      |                                        ^
  142 |         this.onModelTouched = callbackFunction;
  143 |     }
  144 | 

non-arrow functions are forbidden (only-arrow-functions)
  148 | 
  149 |     private setCursorPosition(event: any): void {
> 150 |         setTimeout(function () {
      |                   ^
  151 |             event.target.setSelectionRange(event.target.value.length, event.target.value.length);
  152 |         }, 0);
  153 |     }

Spaces before function parens are disallowed (space-before-function-paren)
  148 | 
  149 |     private setCursorPosition(event: any): void {
> 150 |         setTimeout(function () {
      |                           ^
  151 |             event.target.setSelectionRange(event.target.value.length, event.target.value.length);
  152 |         }, 0);
  153 |     }


/home/idnes/Projects/awe/src/lib/currency-mask/lib/input.manager.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  1 | export class InputManager {
  2 | 
> 3 |     private _storedRawValue: string;
    |            ^
  4 | 
  5 |     constructor(private htmlInputElement: any) {
  6 |     }

Identifier 'textRange' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  11 |             this.htmlInputElement.setSelectionRange(position, position);
  12 |         } else if (this.htmlInputElement.createTextRange) {
> 13 |             let textRange = this.htmlInputElement.createTextRange();
     |                ^
  14 |             textRange.collapse(true);
  15 |             textRange.moveEnd("character", position);
  16 |             textRange.moveStart("character", position);

" should be ' (quotemark)
  13 |             let textRange = this.htmlInputElement.createTextRange();
  14 |             textRange.collapse(true);
> 15 |             textRange.moveEnd("character", position);
     |                              ^
  16 |             textRange.moveStart("character", position);
  17 |             textRange.select();
  18 |         }

" should be ' (quotemark)
  14 |             textRange.collapse(true);
  15 |             textRange.moveEnd("character", position);
> 16 |             textRange.moveStart("character", position);
     |                                ^
  17 |             textRange.select();
  18 |         }
  19 |     }

Identifier 'newLength' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  21 |     updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {
  22 |         this.rawValue = newRawValue;
> 23 |         let newLength = newRawValue.length;
     |            ^
  24 |         selectionStart = selectionStart - (oldLength - newLength);
  25 |         this.setCursorAt(selectionStart);
  26 |     }

Identifier 'haventReachedMaxLength' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  27 | 
  28 |     get canInputMoreNumbers(): boolean {
> 29 |         let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);
     |            ^
  30 |         let selectionStart = this.inputSelection.selectionStart;
  31 |         let selectionEnd = this.inputSelection.selectionEnd;
  32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&

Identifier 'selectionStart' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  28 |     get canInputMoreNumbers(): boolean {
  29 |         let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);
> 30 |         let selectionStart = this.inputSelection.selectionStart;
     |            ^
  31 |         let selectionEnd = this.inputSelection.selectionEnd;
  32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
  33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));

Identifier 'selectionEnd' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  29 |         let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);
  30 |         let selectionStart = this.inputSelection.selectionStart;
> 31 |         let selectionEnd = this.inputSelection.selectionEnd;
     |            ^
  32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
  33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
  34 |         let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");

Identifier 'haveNumberSelected' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  30 |         let selectionStart = this.inputSelection.selectionStart;
  31 |         let selectionEnd = this.inputSelection.selectionEnd;
> 32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
     |            ^
  33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
  34 |         let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");
  35 |         return haventReachedMaxLength || haveNumberSelected || startWithZero;

!= should be !== (triple-equals)
  30 |         let selectionStart = this.inputSelection.selectionStart;
  31 |         let selectionEnd = this.inputSelection.selectionEnd;
> 32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
     |                                                   ^
  33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
  34 |         let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");
  35 |         return haventReachedMaxLength || haveNumberSelected || startWithZero;

Exceeds maximum line length of 140 (max-line-length)
  31 |         let selectionEnd = this.inputSelection.selectionEnd;
  32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
> 33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
  34 |         let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");
  35 |         return haventReachedMaxLength || haveNumberSelected || startWithZero;
  36 |     }

Identifier 'startWithZero' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
  33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
> 34 |         let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");
     |            ^
  35 |         return haventReachedMaxLength || haveNumberSelected || startWithZero;
  36 |     }
  37 | 

== should be === (triple-equals)
  32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
  33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
> 34 |         let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");
     |                                                                         ^
  35 |         return haventReachedMaxLength || haveNumberSelected || startWithZero;
  36 |     }
  37 | 

" should be ' (quotemark)
  32 |         let haveNumberSelected = !!(selectionStart != selectionEnd &&
  33 |                                     this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
> 34 |         let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");
     |                                                                            ^
  35 |         return haventReachedMaxLength || haveNumberSelected || startWithZero;
  36 |     }
  37 | 

== should be === (triple-equals)
  40 |         let selectionEnd = 0;
  41 | 
> 42 |         if (typeof this.htmlInputElement.selectionStart == "number" && typeof this.htmlInputElement.selectionEnd == "number") {
     |                                                        ^
  43 |             selectionStart = this.htmlInputElement.selectionStart;
  44 |             selectionEnd = this.htmlInputElement.selectionEnd;
  45 |         } else {

" should be ' (quotemark)
  40 |         let selectionEnd = 0;
  41 | 
> 42 |         if (typeof this.htmlInputElement.selectionStart == "number" && typeof this.htmlInputElement.selectionEnd == "number") {
     |                                                           ^
  43 |             selectionStart = this.htmlInputElement.selectionStart;
  44 |             selectionEnd = this.htmlInputElement.selectionEnd;
  45 |         } else {

== should be === (triple-equals)
  40 |         let selectionEnd = 0;
  41 | 
> 42 |         if (typeof this.htmlInputElement.selectionStart == "number" && typeof this.htmlInputElement.selectionEnd == "number") {
     |                                                                                                                 ^
  43 |             selectionStart = this.htmlInputElement.selectionStart;
  44 |             selectionEnd = this.htmlInputElement.selectionEnd;
  45 |         } else {

" should be ' (quotemark)
  40 |         let selectionEnd = 0;
  41 | 
> 42 |         if (typeof this.htmlInputElement.selectionStart == "number" && typeof this.htmlInputElement.selectionEnd == "number") {
     |                                                                                                                    ^
  43 |             selectionStart = this.htmlInputElement.selectionStart;
  44 |             selectionEnd = this.htmlInputElement.selectionEnd;
  45 |         } else {

Identifier 'range' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  44 |             selectionEnd = this.htmlInputElement.selectionEnd;
  45 |         } else {
> 46 |             let range = (<any>document).selection.createRange();
     |                ^
  47 | 
  48 |             if (range && range.parentElement() == this.htmlInputElement) {
  49 |                 let lenght = this.htmlInputElement.value.length;

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  44 |             selectionEnd = this.htmlInputElement.selectionEnd;
  45 |         } else {
> 46 |             let range = (<any>document).selection.createRange();
     |                         ^
  47 | 
  48 |             if (range && range.parentElement() == this.htmlInputElement) {
  49 |                 let lenght = this.htmlInputElement.value.length;

missing whitespace (whitespace)
  44 |             selectionEnd = this.htmlInputElement.selectionEnd;
  45 |         } else {
> 46 |             let range = (<any>document).selection.createRange();
     |                              ^
  47 | 
  48 |             if (range && range.parentElement() == this.htmlInputElement) {
  49 |                 let lenght = this.htmlInputElement.value.length;

== should be === (triple-equals)
  46 |             let range = (<any>document).selection.createRange();
  47 | 
> 48 |             if (range && range.parentElement() == this.htmlInputElement) {
     |                                               ^
  49 |                 let lenght = this.htmlInputElement.value.length;
  50 |                 let normalizedValue = this.htmlInputElement.value.replace(/\r\n/g, "\n");
  51 |                 let startRange = this.htmlInputElement.createTextRange();

Identifier 'lenght' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  47 | 
  48 |             if (range && range.parentElement() == this.htmlInputElement) {
> 49 |                 let lenght = this.htmlInputElement.value.length;
     |                    ^
  50 |                 let normalizedValue = this.htmlInputElement.value.replace(/\r\n/g, "\n");
  51 |                 let startRange = this.htmlInputElement.createTextRange();
  52 |                 startRange.moveToBookmark(range.getBookmark());

Identifier 'normalizedValue' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  48 |             if (range && range.parentElement() == this.htmlInputElement) {
  49 |                 let lenght = this.htmlInputElement.value.length;
> 50 |                 let normalizedValue = this.htmlInputElement.value.replace(/\r\n/g, "\n");
     |                    ^
  51 |                 let startRange = this.htmlInputElement.createTextRange();
  52 |                 startRange.moveToBookmark(range.getBookmark());
  53 |                 let endRange = this.htmlInputElement.createTextRange();

" should be ' (quotemark)
  48 |             if (range && range.parentElement() == this.htmlInputElement) {
  49 |                 let lenght = this.htmlInputElement.value.length;
> 50 |                 let normalizedValue = this.htmlInputElement.value.replace(/\r\n/g, "\n");
     |                                                                                   ^
  51 |                 let startRange = this.htmlInputElement.createTextRange();
  52 |                 startRange.moveToBookmark(range.getBookmark());
  53 |                 let endRange = this.htmlInputElement.createTextRange();

Identifier 'startRange' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  49 |                 let lenght = this.htmlInputElement.value.length;
  50 |                 let normalizedValue = this.htmlInputElement.value.replace(/\r\n/g, "\n");
> 51 |                 let startRange = this.htmlInputElement.createTextRange();
     |                    ^
  52 |                 startRange.moveToBookmark(range.getBookmark());
  53 |                 let endRange = this.htmlInputElement.createTextRange();
  54 |                 endRange.collapse(false);

Identifier 'endRange' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  51 |                 let startRange = this.htmlInputElement.createTextRange();
  52 |                 startRange.moveToBookmark(range.getBookmark());
> 53 |                 let endRange = this.htmlInputElement.createTextRange();
     |                    ^
  54 |                 endRange.collapse(false);
  55 | 
  56 |                 if (startRange.compareEndPoints("StartToEnd", endRange) > -1) {

" should be ' (quotemark)
  54 |                 endRange.collapse(false);
  55 | 
> 56 |                 if (startRange.compareEndPoints("StartToEnd", endRange) > -1) {
     |                                                ^
  57 |                     selectionStart = selectionEnd = lenght;
  58 |                 } else {
  59 |                     selectionStart = -startRange.moveStart("character", -lenght);

" should be ' (quotemark)
  57 |                     selectionStart = selectionEnd = lenght;
  58 |                 } else {
> 59 |                     selectionStart = -startRange.moveStart("character", -lenght);
     |                                                           ^
  60 |                     selectionStart += normalizedValue.slice(0, selectionStart).split("\n").length - 1;
  61 | 
  62 |                     if (startRange.compareEndPoints("EndToEnd", endRange) > -1) {

" should be ' (quotemark)
  58 |                 } else {
  59 |                     selectionStart = -startRange.moveStart("character", -lenght);
> 60 |                     selectionStart += normalizedValue.slice(0, selectionStart).split("\n").length - 1;
     |                                                                                     ^
  61 | 
  62 |                     if (startRange.compareEndPoints("EndToEnd", endRange) > -1) {
  63 |                         selectionEnd = lenght;

" should be ' (quotemark)
  60 |                     selectionStart += normalizedValue.slice(0, selectionStart).split("\n").length - 1;
  61 | 
> 62 |                     if (startRange.compareEndPoints("EndToEnd", endRange) > -1) {
     |                                                    ^
  63 |                         selectionEnd = lenght;
  64 |                     } else {
  65 |                         selectionEnd = -startRange.moveEnd("character", -lenght);

" should be ' (quotemark)
  63 |                         selectionEnd = lenght;
  64 |                     } else {
> 65 |                         selectionEnd = -startRange.moveEnd("character", -lenght);
     |                                                           ^
  66 |                         selectionEnd += normalizedValue.slice(0, selectionEnd).split("\n").length - 1;
  67 |                     }
  68 |                 }

" should be ' (quotemark)
  64 |                     } else {
  65 |                         selectionEnd = -startRange.moveEnd("character", -lenght);
> 66 |                         selectionEnd += normalizedValue.slice(0, selectionEnd).split("\n").length - 1;
     |                                                                                     ^
  67 |                     }
  68 |                 }
  69 |             }

Expected property shorthand in object literal ('{selectionStart}'). (object-literal-shorthand)
  71 | 
  72 |         return {
> 73 |             selectionStart: selectionStart,
     |            ^
  74 |             selectionEnd: selectionEnd
  75 |         };
  76 |     }

Expected property shorthand in object literal ('{selectionEnd}'). (object-literal-shorthand)
  72 |         return {
  73 |             selectionStart: selectionStart,
> 74 |             selectionEnd: selectionEnd
     |            ^
  75 |         };
  76 |     }
  77 | 


/home/idnes/Projects/awe/src/lib/currency-mask/lib/input.service.ts
" should be ' (quotemark)
> 1 | import {InputManager} from "./input.manager";
    |                           ^
  2 | import {CurrencyMaskConfig} from "./currency-mask.config";
  3 | 
  4 | 

" should be ' (quotemark)
  1 | import {InputManager} from "./input.manager";
> 2 | import {CurrencyMaskConfig} from "./currency-mask.config";
    |                                 ^
  3 | 
  4 | 
  5 | export class InputService {

" should be ' (quotemark)
   7 | 
   8 |     initialize() {
>  9 |         this.PER_AR_NUMBER.set("\u06F0", "0");
     |                               ^
  10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");

" should be ' (quotemark)
   7 | 
   8 |     initialize() {
>  9 |         this.PER_AR_NUMBER.set("\u06F0", "0");
     |                                         ^
  10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");

" should be ' (quotemark)
   8 |     initialize() {
   9 |         this.PER_AR_NUMBER.set("\u06F0", "0");
> 10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
     |                               ^
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");

" should be ' (quotemark)
   8 |     initialize() {
   9 |         this.PER_AR_NUMBER.set("\u06F0", "0");
> 10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
     |                                         ^
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");

" should be ' (quotemark)
   9 |         this.PER_AR_NUMBER.set("\u06F0", "0");
  10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
> 11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
     |                               ^
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");

" should be ' (quotemark)
   9 |         this.PER_AR_NUMBER.set("\u06F0", "0");
  10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
> 11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
     |                                         ^
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");

" should be ' (quotemark)
  10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
> 12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
     |                               ^
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");

" should be ' (quotemark)
  10 |         this.PER_AR_NUMBER.set("\u06F1", "1");
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
> 12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
     |                                         ^
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");

" should be ' (quotemark)
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
> 13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
     |                               ^
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");

" should be ' (quotemark)
  11 |         this.PER_AR_NUMBER.set("\u06F2", "2");
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
> 13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
     |                                         ^
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");

" should be ' (quotemark)
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
> 14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
     |                               ^
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");

" should be ' (quotemark)
  12 |         this.PER_AR_NUMBER.set("\u06F3", "3");
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
> 14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
     |                                         ^
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");

" should be ' (quotemark)
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
> 15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
     |                               ^
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");

" should be ' (quotemark)
  13 |         this.PER_AR_NUMBER.set("\u06F4", "4");
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
> 15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
     |                                         ^
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");

" should be ' (quotemark)
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
> 16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
     |                               ^
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
  19 | 

" should be ' (quotemark)
  14 |         this.PER_AR_NUMBER.set("\u06F5", "5");
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
> 16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
     |                                         ^
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
  19 | 

" should be ' (quotemark)
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
> 17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
     |                               ^
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
  19 | 
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");

" should be ' (quotemark)
  15 |         this.PER_AR_NUMBER.set("\u06F6", "6");
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
> 17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
     |                                         ^
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
  19 | 
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");

" should be ' (quotemark)
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
> 18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
     |                               ^
  19 | 
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");

" should be ' (quotemark)
  16 |         this.PER_AR_NUMBER.set("\u06F7", "7");
  17 |         this.PER_AR_NUMBER.set("\u06F8", "8");
> 18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
     |                                         ^
  19 | 
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");

" should be ' (quotemark)
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
  19 | 
> 20 |         this.PER_AR_NUMBER.set("\u0660", "0");
     |                               ^
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");

" should be ' (quotemark)
  18 |         this.PER_AR_NUMBER.set("\u06F9", "9");
  19 | 
> 20 |         this.PER_AR_NUMBER.set("\u0660", "0");
     |                                         ^
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");

" should be ' (quotemark)
  19 | 
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");
> 21 |         this.PER_AR_NUMBER.set("\u0661", "1");
     |                               ^
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");

" should be ' (quotemark)
  19 | 
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");
> 21 |         this.PER_AR_NUMBER.set("\u0661", "1");
     |                                         ^
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");

" should be ' (quotemark)
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");
> 22 |         this.PER_AR_NUMBER.set("\u0662", "2");
     |                               ^
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");

" should be ' (quotemark)
  20 |         this.PER_AR_NUMBER.set("\u0660", "0");
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");
> 22 |         this.PER_AR_NUMBER.set("\u0662", "2");
     |                                         ^
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");

" should be ' (quotemark)
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
> 23 |         this.PER_AR_NUMBER.set("\u0663", "3");
     |                               ^
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");

" should be ' (quotemark)
  21 |         this.PER_AR_NUMBER.set("\u0661", "1");
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
> 23 |         this.PER_AR_NUMBER.set("\u0663", "3");
     |                                         ^
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");

" should be ' (quotemark)
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
> 24 |         this.PER_AR_NUMBER.set("\u0664", "4");
     |                               ^
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");

" should be ' (quotemark)
  22 |         this.PER_AR_NUMBER.set("\u0662", "2");
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
> 24 |         this.PER_AR_NUMBER.set("\u0664", "4");
     |                                         ^
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");

" should be ' (quotemark)
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
> 25 |         this.PER_AR_NUMBER.set("\u0665", "5");
     |                               ^
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");

" should be ' (quotemark)
  23 |         this.PER_AR_NUMBER.set("\u0663", "3");
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
> 25 |         this.PER_AR_NUMBER.set("\u0665", "5");
     |                                         ^
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");

" should be ' (quotemark)
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
> 26 |         this.PER_AR_NUMBER.set("\u0666", "6");
     |                               ^
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");
  29 |         this.PER_AR_NUMBER.set("\u0669", "9");

" should be ' (quotemark)
  24 |         this.PER_AR_NUMBER.set("\u0664", "4");
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
> 26 |         this.PER_AR_NUMBER.set("\u0666", "6");
     |                                         ^
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");
  29 |         this.PER_AR_NUMBER.set("\u0669", "9");

" should be ' (quotemark)
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
> 27 |         this.PER_AR_NUMBER.set("\u0667", "7");
     |                               ^
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");
  29 |         this.PER_AR_NUMBER.set("\u0669", "9");
  30 |     }

" should be ' (quotemark)
  25 |         this.PER_AR_NUMBER.set("\u0665", "5");
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
> 27 |         this.PER_AR_NUMBER.set("\u0667", "7");
     |                                         ^
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");
  29 |         this.PER_AR_NUMBER.set("\u0669", "9");
  30 |     }

" should be ' (quotemark)
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
> 28 |         this.PER_AR_NUMBER.set("\u0668", "8");
     |                               ^
  29 |         this.PER_AR_NUMBER.set("\u0669", "9");
  30 |     }
  31 | 

" should be ' (quotemark)
  26 |         this.PER_AR_NUMBER.set("\u0666", "6");
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
> 28 |         this.PER_AR_NUMBER.set("\u0668", "8");
     |                                         ^
  29 |         this.PER_AR_NUMBER.set("\u0669", "9");
  30 |     }
  31 | 

" should be ' (quotemark)
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");
> 29 |         this.PER_AR_NUMBER.set("\u0669", "9");
     |                               ^
  30 |     }
  31 | 
  32 |     inputManager: InputManager;

" should be ' (quotemark)
  27 |         this.PER_AR_NUMBER.set("\u0667", "7");
  28 |         this.PER_AR_NUMBER.set("\u0668", "8");
> 29 |         this.PER_AR_NUMBER.set("\u0669", "9");
     |                                         ^
  30 |     }
  31 | 
  32 |     inputManager: InputManager;

Declaration of instance field not allowed after declaration of instance method. Instead, this should come at the beginning of the class/interface. (member-ordering)
  30 |     }
  31 | 
> 32 |     inputManager: InputManager;
     |    ^
  33 | 
  34 |     constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {
  35 |         this.inputManager = new InputManager(htmlInputElement);

Missing semicolon (semicolon)
  34 |     constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {
  35 |         this.inputManager = new InputManager(htmlInputElement);
> 36 |         this.initialize()
     |                         ^
  37 |     }
  38 | 
  39 |     addNumber(keyCode: number): void {

" should be ' (quotemark)
  39 |     addNumber(keyCode: number): void {
  40 |         if (!this.rawValue) {
> 41 |             this.rawValue = this.applyMask(false, "0");
     |                                                  ^
  42 |         }
  43 | 
  44 |         let keyChar = String.fromCharCode(keyCode);

Identifier 'keyChar' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  42 |         }
  43 | 
> 44 |         let keyChar = String.fromCharCode(keyCode);
     |            ^
  45 |         let selectionStart = this.inputSelection.selectionStart;
  46 |         let selectionEnd = this.inputSelection.selectionEnd;
  47 |         this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);

Identifier 'selectionStart' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  43 | 
  44 |         let keyChar = String.fromCharCode(keyCode);
> 45 |         let selectionStart = this.inputSelection.selectionStart;
     |            ^
  46 |         let selectionEnd = this.inputSelection.selectionEnd;
  47 |         this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);
  48 |         this.updateFieldValue(selectionStart + 1);

Identifier 'selectionEnd' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  44 |         let keyChar = String.fromCharCode(keyCode);
  45 |         let selectionStart = this.inputSelection.selectionStart;
> 46 |         let selectionEnd = this.inputSelection.selectionEnd;
     |            ^
  47 |         this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);
  48 |         this.updateFieldValue(selectionStart + 1);
  49 |     }

Identifier 'allowNegative' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  50 | 
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
> 52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
     |             ^
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 

Identifier 'decimal' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  50 | 
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
> 52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
     |                            ^
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 

Identifier 'precision' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  50 | 
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
> 52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
     |                                     ^
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 

Identifier 'prefix' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  50 | 
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
> 52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
     |                                                ^
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 

Identifier 'suffix' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  50 | 
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
> 52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
     |                                                        ^
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 

Identifier 'thousands' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  50 | 
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
> 52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
     |                                                                ^
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 

Identifier 'nullable' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  50 | 
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
> 52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
     |                                                                           ^
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 

Forbidden constructor, use a literal or simple function call instead (no-construct)
  51 |     applyMask(isNumber: boolean, rawValue: string): string {
  52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
> 53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
     |                              ^
  54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
  55 | 
  56 |         if (!onlyNumbers) {

Identifier 'onlyNumbers' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
> 54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
     |            ^
  55 | 
  56 |         if (!onlyNumbers) {
  57 |             return "";

" should be ' (quotemark)
  52 |         let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
  53 |         rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
> 54 |         let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
     |                                                                                ^
  55 | 
  56 |         if (!onlyNumbers) {
  57 |             return "";

" should be ' (quotemark)
  55 | 
  56 |         if (!onlyNumbers) {
> 57 |             return "";
     |                   ^
  58 |         }
  59 | 
  60 |         let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)

" should be ' (quotemark)
  59 | 
  60 |         let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)
> 61 |           .replace(/^\u0660*/g, "")
     |                                ^
  62 |           .replace(/^\u06F0*/g, "")
  63 |           .replace(/^0*/g, "")
  64 |           .replace(/\B(?=([0-9\u0660-\u0669\u06F0-\u06F9]{3})+(?![0-9\u0660-\u0669\u06F0-\u06F9]))/g, thousands);

" should be ' (quotemark)
  60 |         let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)
  61 |           .replace(/^\u0660*/g, "")
> 62 |           .replace(/^\u06F0*/g, "")
     |                                ^
  63 |           .replace(/^0*/g, "")
  64 |           .replace(/\B(?=([0-9\u0660-\u0669\u06F0-\u06F9]{3})+(?![0-9\u0660-\u0669\u06F0-\u06F9]))/g, thousands);
  65 | 

" should be ' (quotemark)
  61 |           .replace(/^\u0660*/g, "")
  62 |           .replace(/^\u06F0*/g, "")
> 63 |           .replace(/^0*/g, "")
     |                           ^
  64 |           .replace(/\B(?=([0-9\u0660-\u0669\u06F0-\u06F9]{3})+(?![0-9\u0660-\u0669\u06F0-\u06F9]))/g, thousands);
  65 | 
  66 |         if (integerPart.startsWith(thousands)) {

== should be === (triple-equals)
  69 | 
  70 | 
> 71 |         if (integerPart == "") {
     |                        ^
  72 |             integerPart = "0";
  73 |         }
  74 | 

" should be ' (quotemark)
  69 | 
  70 | 
> 71 |         if (integerPart == "") {
     |                           ^
  72 |             integerPart = "0";
  73 |         }
  74 | 

" should be ' (quotemark)
  70 | 
  71 |         if (integerPart == "") {
> 72 |             integerPart = "0";
     |                          ^
  73 |         }
  74 | 
  75 |         let newRawValue = integerPart;

Identifier 'decimalPart' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  74 | 
  75 |         let newRawValue = integerPart;
> 76 |         let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);
     |            ^
  77 | 
  78 |         if (precision > 0) {
  79 |             newRawValue += decimal + decimalPart;

Identifier 'isZero' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  80 |         }
  81 | 
> 82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
     |            ^
  83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }

Missing radix parameter (radix)
  80 |         }
  81 | 
> 82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
     |                     ^
  83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }

== should be === (triple-equals)
  80 |         }
  81 | 
> 82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
     |                                           ^
  83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }

Missing radix parameter (radix)
  80 |         }
  81 | 
> 82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
     |                                                    ^
  83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }

== should be === (triple-equals)
  80 |         }
  81 | 
> 82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
     |                                                                          ^
  83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }

== should be === (triple-equals)
  80 |         }
  81 | 
> 82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
     |                                                                                              ^
  83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }

" should be ' (quotemark)
  80 |         }
  81 | 
> 82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
     |                                                                                                 ^
  83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }

Identifier 'operator' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  81 | 
  82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
> 83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
     |            ^
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }
  86 | 

" should be ' (quotemark)
  81 | 
  82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
> 83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
     |                                         ^
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }
  86 | 

" should be ' (quotemark)
  81 | 
  82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
> 83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
     |                                                                                  ^
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }
  86 | 

" should be ' (quotemark)
  81 | 
  82 |         let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
> 83 |         let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
     |                                                                                        ^
  84 |         return operator + prefix + newRawValue + suffix;
  85 |     }
  86 | 

if statements must be braced (curly)
  86 | 
  87 |     clearMask(rawValue: string): number {
> 88 |         if (this.isNullable() && rawValue === "")
     |        ^
  89 |             return null;
  90 | 
  91 |         let value = (rawValue || "0").replace(this.options.prefix, "").replace(this.options.suffix, "");

" should be ' (quotemark)
  86 | 
  87 |     clearMask(rawValue: string): number {
> 88 |         if (this.isNullable() && rawValue === "")
     |                                              ^
  89 |             return null;
  90 | 
  91 |         let value = (rawValue || "0").replace(this.options.prefix, "").replace(this.options.suffix, "");

" should be ' (quotemark)
  89 |             return null;
  90 | 
> 91 |         let value = (rawValue || "0").replace(this.options.prefix, "").replace(this.options.suffix, "");
     |                                 ^
  92 | 
  93 |         if (this.options.thousands) {
  94 |             value = value.replace(new RegExp("\\" + this.options.thousands, "g"), "");

" should be ' (quotemark)
  89 |             return null;
  90 | 
> 91 |         let value = (rawValue || "0").replace(this.options.prefix, "").replace(this.options.suffix, "");
     |                                                                   ^
  92 | 
  93 |         if (this.options.thousands) {
  94 |             value = value.replace(new RegExp("\\" + this.options.thousands, "g"), "");

" should be ' (quotemark)
  89 |             return null;
  90 | 
> 91 |         let value = (rawValue || "0").replace(this.options.prefix, "").replace(this.options.suffix, "");
     |                                                                                                    ^
  92 | 
  93 |         if (this.options.thousands) {
  94 |             value = value.replace(new RegExp("\\" + this.options.thousands, "g"), "");

" should be ' (quotemark)
  92 | 
  93 |         if (this.options.thousands) {
> 94 |             value = value.replace(new RegExp("\\" + this.options.thousands, "g"), "");
     |                                             ^
  95 |         }
  96 | 
  97 |         if (this.options.decimal) {

" should be ' (quotemark)
  92 | 
  93 |         if (this.options.thousands) {
> 94 |             value = value.replace(new RegExp("\\" + this.options.thousands, "g"), "");
     |                                                                            ^
  95 |         }
  96 | 
  97 |         if (this.options.decimal) {

" should be ' (quotemark)
  92 | 
  93 |         if (this.options.thousands) {
> 94 |             value = value.replace(new RegExp("\\" + this.options.thousands, "g"), "");
     |                                                                                  ^
  95 |         }
  96 | 
  97 |         if (this.options.decimal) {

" should be ' (quotemark)
   96 | 
   97 |         if (this.options.decimal) {
>  98 |             value = value.replace(this.options.decimal, ".");
      |                                                        ^
   99 |         }
  100 | 
  101 |         this.PER_AR_NUMBER.forEach((val: string, key: string) => {

" should be ' (quotemark)
  100 | 
  101 |         this.PER_AR_NUMBER.forEach((val: string, key: string) => {
> 102 |             const re = new RegExp(key, "g");
      |                                       ^
  103 |             value = value.replace(re, val);
  104 |         });
  105 |         return parseFloat(value);

!= should be !== (triple-equals)
  107 | 
  108 |     changeToNegative(): void {
> 109 |         if (this.options.allowNegative && this.rawValue != "" && this.rawValue.charAt(0) != "-" && this.value != 0) {
      |                                                        ^
  110 |             this.rawValue = "-" + this.rawValue;
  111 |         }
  112 |     }

" should be ' (quotemark)
  107 | 
  108 |     changeToNegative(): void {
> 109 |         if (this.options.allowNegative && this.rawValue != "" && this.rawValue.charAt(0) != "-" && this.value != 0) {
      |                                                           ^
  110 |             this.rawValue = "-" + this.rawValue;
  111 |         }
  112 |     }

!= should be !== (triple-equals)
  107 | 
  108 |     changeToNegative(): void {
> 109 |         if (this.options.allowNegative && this.rawValue != "" && this.rawValue.charAt(0) != "-" && this.value != 0) {
      |                                                                                         ^
  110 |             this.rawValue = "-" + this.rawValue;
  111 |         }
  112 |     }

" should be ' (quotemark)
  107 | 
  108 |     changeToNegative(): void {
> 109 |         if (this.options.allowNegative && this.rawValue != "" && this.rawValue.charAt(0) != "-" && this.value != 0) {
      |                                                                                            ^
  110 |             this.rawValue = "-" + this.rawValue;
  111 |         }
  112 |     }

!= should be !== (triple-equals)
  107 | 
  108 |     changeToNegative(): void {
> 109 |         if (this.options.allowNegative && this.rawValue != "" && this.rawValue.charAt(0) != "-" && this.value != 0) {
      |                                                                                                              ^
  110 |             this.rawValue = "-" + this.rawValue;
  111 |         }
  112 |     }

" should be ' (quotemark)
  108 |     changeToNegative(): void {
  109 |         if (this.options.allowNegative && this.rawValue != "" && this.rawValue.charAt(0) != "-" && this.value != 0) {
> 110 |             this.rawValue = "-" + this.rawValue;
      |                            ^
  111 |         }
  112 |     }
  113 | 

" should be ' (quotemark)
  113 | 
  114 |     changeToPositive(): void {
> 115 |         this.rawValue = this.rawValue.replace("-", "");
      |                                              ^
  116 |     }
  117 | 
  118 |     removeNumber(keyCode: number): void {

" should be ' (quotemark)
  113 | 
  114 |     changeToPositive(): void {
> 115 |         this.rawValue = this.rawValue.replace("-", "");
      |                                                   ^
  116 |     }
  117 | 
  118 |     removeNumber(keyCode: number): void {

== should be === (triple-equals)
  117 | 
  118 |     removeNumber(keyCode: number): void {
> 119 |         if (this.isNullable() && this.value == 0) {
      |                                            ^
  120 |             this.rawValue = null;
  121 |             return;
  122 |         }

statements are not aligned (align)
  130 |         }
  131 | 
> 132 |     let move = this.rawValue.substr(selectionStart - 1, 1).match(/\d/) ? 0 : -1;
      |    ^
  133 |     if ((
  134 |           keyCode == 8 &&
  135 |           selectionStart - 1 === 0 &&

statements are not aligned (align)
  131 | 
  132 |     let move = this.rawValue.substr(selectionStart - 1, 1).match(/\d/) ? 0 : -1;
> 133 |     if ((
      |    ^
  134 |           keyCode == 8 &&
  135 |           selectionStart - 1 === 0 &&
  136 |           !(this.rawValue.substr(selectionStart, 1).match(/\d/))

== should be === (triple-equals)
  132 |     let move = this.rawValue.substr(selectionStart - 1, 1).match(/\d/) ? 0 : -1;
  133 |     if ((
> 134 |           keyCode == 8 &&
      |                  ^
  135 |           selectionStart - 1 === 0 &&
  136 |           !(this.rawValue.substr(selectionStart, 1).match(/\d/))
  137 |         ) ||

== should be === (triple-equals)
  137 |         ) ||
  138 |         (
> 139 |           (keyCode == 46 || keyCode == 63272) &&
      |                   ^
  140 |           selectionStart === 0 &&
  141 |           !(this.rawValue.substr(selectionStart + 1, 1).match(/\d/))
  142 |         )

== should be === (triple-equals)
  137 |         ) ||
  138 |         (
> 139 |           (keyCode == 46 || keyCode == 63272) &&
      |                                    ^
  140 |           selectionStart === 0 &&
  141 |           !(this.rawValue.substr(selectionStart + 1, 1).match(/\d/))
  142 |         )

Unnecessary semicolon (semicolon)
  143 |     ) {
  144 |       move = 1;
> 145 |     };
      |     ^
  146 |     selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
  147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
  148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);

statements are not aligned (align)
  144 |       move = 1;
  145 |     };
> 146 |     selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
      |    ^
  147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
  148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
  149 |     this.updateFieldValue(selectionStart + move);

== should be === (triple-equals)
  144 |       move = 1;
  145 |     };
> 146 |     selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
      |                           ^
  147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
  148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
  149 |     this.updateFieldValue(selectionStart + move);

== should be === (triple-equals)
  144 |       move = 1;
  145 |     };
> 146 |     selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
      |                                            ^
  147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
  148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
  149 |     this.updateFieldValue(selectionStart + move);

statements are not aligned (align)
  145 |     };
  146 |     selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
> 147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
      |    ^
  148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
  149 |     this.updateFieldValue(selectionStart + move);
  150 |   }

== should be === (triple-equals)
  145 |     };
  146 |     selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
> 147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
      |                             ^
  148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
  149 |     this.updateFieldValue(selectionStart + move);
  150 |   }

statements are not aligned (align)
  146 |     selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
  147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
> 148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
      |    ^
  149 |     this.updateFieldValue(selectionStart + move);
  150 |   }
  151 | 

statements are not aligned (align)
  147 |     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
  148 |     this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
> 149 |     this.updateFieldValue(selectionStart + move);
      |    ^
  150 |   }
  151 | 
  152 |     updateFieldValue(selectionStart?: number): void {

Identifier 'newRawValue' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  151 | 
  152 |     updateFieldValue(selectionStart?: number): void {
> 153 |         let newRawValue = this.applyMask(false, this.rawValue || "");
      |            ^
  154 |         selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;
  155 |         this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);
  156 |     }

" should be ' (quotemark)
  151 | 
  152 |     updateFieldValue(selectionStart?: number): void {
> 153 |         let newRawValue = this.applyMask(false, this.rawValue || "");
      |                                                                 ^
  154 |         selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;
  155 |         this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);
  156 |     }

== should be === (triple-equals)
  152 |     updateFieldValue(selectionStart?: number): void {
  153 |         let newRawValue = this.applyMask(false, this.rawValue || "");
> 154 |         selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;
      |                                        ^
  155 |         this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);
  156 |     }
  157 | 

Identifier 'value' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  157 | 
  158 |     updateOptions(options: any): void {
> 159 |         let value: number = this.value;
      |            ^
  160 |         this.options = options;
  161 |         this.value = value;
  162 |     }

" should be ' (quotemark)
  195 | 
  196 |     set value(value: number) {
> 197 |         this.rawValue = this.applyMask(true, "" + value);
      |                                             ^
  198 |     }
  199 | }
  200 | 


/home/idnes/Projects/awe/src/lib/input-mask/lib/config.ts
Unnecessarily quoted property '0' found. (object-literal-key-quotes)
  33 |     specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', '\''],
  34 |     patterns: {
> 35 |         '0': {
     |        ^
  36 |             pattern: new RegExp('\\d'),
  37 |         },
  38 |         '9': {

Unnecessarily quoted property '9' found. (object-literal-key-quotes)
  36 |             pattern: new RegExp('\\d'),
  37 |         },
> 38 |         '9': {
     |        ^
  39 |             pattern: new RegExp('\\d'),
  40 |             optional: true
  41 |         },

Unnecessarily quoted property 'A' found. (object-literal-key-quotes)
  40 |             optional: true
  41 |         },
> 42 |         'A': {
     |        ^
  43 |             pattern: new RegExp('\[a-zA-Z0-9\]')
  44 |         },
  45 |         'S': {

Unnecessarily quoted property 'S' found. (object-literal-key-quotes)
  43 |             pattern: new RegExp('\[a-zA-Z0-9\]')
  44 |         },
> 45 |         'S': {
     |        ^
  46 |             pattern: new RegExp('\[a-zA-Z\]')
  47 |         },
  48 |         'd': {

Unnecessarily quoted property 'd' found. (object-literal-key-quotes)
  46 |             pattern: new RegExp('\[a-zA-Z\]')
  47 |         },
> 48 |         'd': {
     |        ^
  49 |             pattern: new RegExp('\\d'),
  50 |         },
  51 |         'm': {

Unnecessarily quoted property 'm' found. (object-literal-key-quotes)
  49 |             pattern: new RegExp('\\d'),
  50 |         },
> 51 |         'm': {
     |        ^
  52 |             pattern: new RegExp('\\d'),
  53 |         },
  54 |         'H': {

Unnecessarily quoted property 'H' found. (object-literal-key-quotes)
  52 |             pattern: new RegExp('\\d'),
  53 |         },
> 54 |         'H': {
     |        ^
  55 |             pattern: new RegExp('\\d'),
  56 |         },
  57 |         'h': {

Unnecessarily quoted property 'h' found. (object-literal-key-quotes)
  55 |             pattern: new RegExp('\\d'),
  56 |         },
> 57 |         'h': {
     |        ^
  58 |             pattern: new RegExp('\\d'),
  59 |         },
  60 |         's': {

Unnecessarily quoted property 's' found. (object-literal-key-quotes)
  58 |             pattern: new RegExp('\\d'),
  59 |         },
> 60 |         's': {
     |        ^
  61 |             pattern: new RegExp('\\d'),
  62 |         }
  63 |     }


/home/idnes/Projects/awe/src/lib/input-mask/lib/mask-applier.service.ts
Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
   8 |   public showTemplate: IConfig['showTemplate'];
   9 |   public clearIfNotMatch: IConfig['clearIfNotMatch'];
> 10 |   public maskExpression: string = '';
     |                         ^
  11 |   public shownMaskExpression: string = '';
  12 |   public maskSpecialCharacters: IConfig['specialCharacters'];
  13 |   public maskAvailablePatterns: IConfig['patterns'];

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
   9 |   public clearIfNotMatch: IConfig['clearIfNotMatch'];
  10 |   public maskExpression: string = '';
> 11 |   public shownMaskExpression: string = '';
     |                              ^
  12 |   public maskSpecialCharacters: IConfig['specialCharacters'];
  13 |   public maskAvailablePatterns: IConfig['patterns'];
  14 |   public prefix: IConfig['prefix'];

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  16 |   public customPattern: IConfig['patterns'];
  17 | 
> 18 |   private _shift: Set<number>;
     |          ^
  19 | 
  20 |   public constructor(
  21 |     @Inject(config) protected _config: IConfig

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  19 | 
  20 |   public constructor(
> 21 |     @Inject(config) protected _config: IConfig
     |                              ^
  22 |   ) {
  23 |     this._shift = new Set();
  24 |     this.maskSpecialCharacters = this._config!.specialCharacters;

Forbidden non null assertion (no-non-null-assertion)
  22 |   ) {
  23 |     this._shift = new Set();
> 24 |     this.maskSpecialCharacters = this._config!.specialCharacters;
     |                                 ^
  25 |     this.maskAvailablePatterns = this._config.patterns;
  26 |     this.clearIfNotMatch = this._config.clearIfNotMatch;
  27 |     this.dropSpecialCharacters = this._config.dropSpecialCharacters;

Forbidden non null assertion (no-non-null-assertion)
  26 |     this.clearIfNotMatch = this._config.clearIfNotMatch;
  27 |     this.dropSpecialCharacters = this._config.dropSpecialCharacters;
> 28 |     this.maskSpecialCharacters = this._config!.specialCharacters;
     |                                 ^
  29 |     this.maskAvailablePatterns = this._config.patterns;
  30 |     this.prefix = this._config.prefix;
  31 |     this.sufix = this._config.sufix;

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  43 |     maskExpression: string,
  44 |     position: number = 0,
> 45 |     cb: Function = () => { }
     |        ^
  46 |   ): string {
  47 |     if (inputValue === undefined || inputValue === null || maskExpression === undefined) {
  48 |       return '';

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  48 |       return '';
  49 |     }
> 50 |     let cursor: number = 0;
     |                ^
  51 |     let result: string = ``;
  52 |     let multi: boolean = false;
  53 |     let shiftStep: number;

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  49 |     }
  50 |     let cursor: number = 0;
> 51 |     let result: string = ``;
     |                ^
  52 |     let multi: boolean = false;
  53 |     let shiftStep: number;
  54 | 

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  50 |     let cursor: number = 0;
  51 |     let result: string = ``;
> 52 |     let multi: boolean = false;
     |               ^
  53 |     let shiftStep: number;
  54 | 
  55 |     if (inputValue.slice(0, this.prefix.length) === this.prefix) {

statements are not aligned (align)
  144 |               continue;
  145 |             }
> 146 |           } if (maskExpression[cursor] === 'h') {
      |            ^
  147 |             if (result === '2' && Number(inputSymbol) > 3) {
  148 |               continue;
  149 |             }

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  236 | 
  237 | 
> 238 |     let shift: number = 1;
      |               ^
  239 |     let newPosition: number = position + 1;
  240 | 
  241 |     while (this._shift.has(newPosition)) {

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  245 | 
  246 |     cb(this._shift.has(position) ? shift : 0);
> 247 |     let res: string = `${this.prefix}${result}`;
      |             ^
  248 |     res = this.sufix ? `${this.prefix}${result}${this.sufix}` : `${this.prefix}${result}`;
  249 |     if (result.length === 0) {
  250 |       res = `${this.prefix}${result}`;


/home/idnes/Projects/awe/src/lib/input-mask/lib/mask.directive.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  23 | })
  24 | export class MaskDirective implements ControlValueAccessor {
> 25 |   private _maskValue: string;
     |          ^
  26 |   private _inputValue: string;
  27 |   private _position: number | null = null;
  28 |   // tslint:disable-next-line

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  24 | export class MaskDirective implements ControlValueAccessor {
  25 |   private _maskValue: string;
> 26 |   private _inputValue: string;
     |          ^
  27 |   private _position: number | null = null;
  28 |   // tslint:disable-next-line
  29 |   private _start: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  25 |   private _maskValue: string;
  26 |   private _inputValue: string;
> 27 |   private _position: number | null = null;
     |          ^
  28 |   // tslint:disable-next-line
  29 |   private _start: number;
  30 |   private _end: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  28 |   // tslint:disable-next-line
  29 |   private _start: number;
> 30 |   private _end: number;
     |          ^
  31 |   // tslint:disable-next-line
  32 |   public onChange = (_: any) => { };
  33 |   public onTouch = () => { };

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  35 |     // tslint:disable-next-line
  36 |     @Inject(DOCUMENT) private document: any,
> 37 |     private _maskService: MaskService
     |            ^
  38 |   ) { }
  39 | 
  40 | 

keyCode is deprecated. (deprecation)
  185 |   public a(e: KeyboardEvent): void {
  186 |     const el: HTMLInputElement = e.target as HTMLInputElement;
> 187 |     if (e.keyCode === 38) {
      |          ^
  188 |       e.preventDefault();
  189 |     }
  190 |     if (e.keyCode === 37 || e.keyCode === 8) {

keyCode is deprecated. (deprecation)
  188 |       e.preventDefault();
  189 |     }
> 190 |     if (e.keyCode === 37 || e.keyCode === 8) {
      |          ^
  191 |       if ((el.selectionStart as number) <= this._maskService.prefix.length
  192 |         && (el.selectionEnd as number) <= this._maskService.prefix.length) {
  193 |         e.preventDefault();

keyCode is deprecated. (deprecation)
  188 |       e.preventDefault();
  189 |     }
> 190 |     if (e.keyCode === 37 || e.keyCode === 8) {
      |                              ^
  191 |       if ((el.selectionStart as number) <= this._maskService.prefix.length
  192 |         && (el.selectionEnd as number) <= this._maskService.prefix.length) {
  193 |         e.preventDefault();

keyCode is deprecated. (deprecation)
  194 |       }
  195 |       this.onFocus(e);
> 196 |       if (e.keyCode === 8
      |            ^
  197 |         && el.selectionStart === 0
  198 |         && el.selectionEnd === el.value.length) {
  199 |         el.value = this._maskService.prefix;


/home/idnes/Projects/awe/src/lib/input-mask/lib/mask.module.ts
Spaces before function parens are disallowed (space-before-function-paren)
  44 |  */
  45 | export function _configFactory
> 46 |   (initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {
     | ^
  47 |   return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };
  48 | }
  49 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  44 |  */
  45 | export function _configFactory
> 46 |   (initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {
     |                                                                                   ^
  47 |   return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };
  48 | }
  49 | 


/home/idnes/Projects/awe/src/lib/input-mask/lib/mask.pipe.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   9 | export class MaskPipe implements PipeTransform {
  10 | 
> 11 |   public constructor(private _maskService: MaskApplierService) { }
     |                             ^
  12 | 
  13 |   public transform(value: string|number, mask: string | [string, IConfig['patterns']]): string {
  14 |     if (!value) {


/home/idnes/Projects/awe/src/lib/input-mask/lib/mask.service.ts
Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
   6 | @Injectable()
   7 | export class MaskService extends MaskApplierService {
>  8 |   public maskExpression: string = '';
     |                         ^
   9 |   public isNumberValue: boolean = false;
  10 |   public showMaskTyped: boolean = false;
  11 |   public maskIsShown: string = '';

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
   7 | export class MaskService extends MaskApplierService {
   8 |   public maskExpression: string = '';
>  9 |   public isNumberValue: boolean = false;
     |                        ^
  10 |   public showMaskTyped: boolean = false;
  11 |   public maskIsShown: string = '';
  12 |   private _formElement: HTMLInputElement;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
   8 |   public maskExpression: string = '';
   9 |   public isNumberValue: boolean = false;
> 10 |   public showMaskTyped: boolean = false;
     |                        ^
  11 |   public maskIsShown: string = '';
  12 |   private _formElement: HTMLInputElement;
  13 |   // tslint:disable-next-line

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
   9 |   public isNumberValue: boolean = false;
  10 |   public showMaskTyped: boolean = false;
> 11 |   public maskIsShown: string = '';
     |                      ^
  12 |   private _formElement: HTMLInputElement;
  13 |   // tslint:disable-next-line
  14 |   public onChange = (_: any) => { };

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  10 |   public showMaskTyped: boolean = false;
  11 |   public maskIsShown: string = '';
> 12 |   private _formElement: HTMLInputElement;
     |          ^
  13 |   // tslint:disable-next-line
  14 |   public onChange = (_: any) => { };
  15 |   public onTouch = () => { };

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  17 |     // tslint:disable-next-line
  18 |     @Inject(DOCUMENT) private document: any,
> 19 |     @Inject(config) protected _config: IConfig,
     |                              ^
  20 |     private _elementRef: ElementRef,
  21 |     private _renderer: Renderer2
  22 |   ) {

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  18 |     @Inject(DOCUMENT) private document: any,
  19 |     @Inject(config) protected _config: IConfig,
> 20 |     private _elementRef: ElementRef,
     |            ^
  21 |     private _renderer: Renderer2
  22 |   ) {
  23 |     super(_config);

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  19 |     @Inject(config) protected _config: IConfig,
  20 |     private _elementRef: ElementRef,
> 21 |     private _renderer: Renderer2
     |            ^
  22 |   ) {
  23 |     super(_config);
  24 |     this._formElement = this._elementRef.nativeElement;

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  29 |     maskExpression: string,
  30 |     position: number = 0,
> 31 |     cb: Function = () => { }
     |        ^
  32 |   ): string {
  33 | 
  34 |     this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  58 |         )
  59 |         : this.onChange(this._removeSufix(this._removePrefix(result)));
> 60 |     let ifMaskIsShown: string = '';
     |                       ^
  61 |     if (!this.showMaskTyped) {
  62 |       return result;
  63 |     }

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  70 |   public applyValueChanges(
  71 |     position: number = 0,
> 72 |     cb: Function = () => { }
     |        ^
  73 |   ): void {
  74 |     const maskedInput: string | number = this.applyMask(
  75 |       this._formElement.value,


/home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  29 |   @Output() load = new EventEmitter<string>();
  30 | 
> 31 |   private _lineHighlight = false;
     |          ^
  32 |   private _lineNumbers = false;
  33 | 
  34 |   constructor(

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  30 | 
  31 |   private _lineHighlight = false;
> 32 |   private _lineNumbers = false;
     |          ^
  33 | 
  34 |   constructor(
  35 |     public element: ElementRef<HTMLElement>,


/home/idnes/Projects/awe/src/lib/password-strength/module/animations/index.ts
Expected property shorthand in object literal ('{timing}'). (object-literal-shorthand)
  2 | 
  3 | export function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {
> 4 |   const params = {timing: timing, delay: 0, rotateX, rotateY};
    |                  ^
  5 | 
  6 |   return animation(
  7 |     [


/home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  14 |   isVisible: boolean;
  15 | 
> 16 |   _type: Type = 'text';
     |  ^
  17 | 
  18 |   get type() {
  19 |     return this.isVisible ? 'text' : 'password';


/home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength-info/mat-password-strength-info.component.ts
Missing semicolon (semicolon)
   98 |   ngOnInit(): void {
   99 |     if (!this.minCharsCriteriaMsg) {
> 100 |       this.minCharsCriteriaMsg = `contains at least ${this.passwordComponent.min} characters`
      |                                                                                             ^
  101 |     }
  102 |   }
  103 | 


/home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength/mat-password-strength.component.ts
In the class "MatPasswordStrengthComponent", the output property "onStrengthChanged" should not be prefixed with on (no-output-on-prefix)
  38 |   @Input() max = 30;
  39 | 
> 40 |   @Output()
     |  ^
  41 |   onStrengthChanged: EventEmitter<number> = new EventEmitter<number>();
  42 | 
  43 |   criteriaMap = new Map<Criteria, RegExp>();

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  51 |   passwordFormControl: AbstractControl = new FormControl();
  52 | 
> 53 |   private _strength = 0;
     |          ^
  54 | 
  55 |   private _color: string;
  56 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  53 |   private _strength = 0;
  54 | 
> 55 |   private _color: string;
     |          ^
  56 | 
  57 |   ngOnInit(): void {
  58 |     this.setRulesAndValidators();

Missing semicolon (semicolon)
  149 |     this.validators.map(criteria => {
  150 |       this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(criteria)));
> 151 |     })
      |      ^
  152 | 
  153 |   }
  154 | 


/home/idnes/Projects/awe/src/lib/pipes/array/filter-by.ts
Shadowed name: 'props' (no-shadowed-variable)
  30 |         return terms.some(term => {
  31 |           const value = extractDeepPropertyByMapKey(obj, prop);
> 32 |           const { props, tail } = extractDeepPropertyByParentMapKey(obj, prop);
     |                  ^
  33 | 
  34 |           if (isUndefined(value) && !isUndefined(props) && Array.isArray(props)) {
  35 |             return props.some(parent => {


/home/idnes/Projects/awe/src/lib/pipes/object/omit.ts
Don't use 'Object' as a type. Avoid using the `Object` type. Did you mean `object`? (ban-types)
  4 | @Pipe({ name: 'omit' })
  5 | export class OmitPipe implements PipeTransform {
> 6 |   transform(obj: any, ...args: Array<string>): Object {
    |                                               ^
  7 |     if (Array.isArray(obj) || !isObject(obj)) {
  8 |       return obj;
  9 |     }


/home/idnes/Projects/awe/src/lib/qrcode/index.ts
Missing semicolon (semicolon)
> 1 | export * from './lib/qrcode.module'
    |                                   ^
  2 | 


/home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-animation.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  11 | 
  12 |   /** Number of milliseconds for each Tick */
> 13 |   private _tick: number;
     |          ^
  14 | 
  15 |   /** Interval */
  16 |   private _interval: any;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  14 | 
  15 |   /** Interval */
> 16 |   private _interval: any;
     |          ^
  17 | 
  18 |   /** Time Lapsed in milliseconds */
  19 |   private _timeLapsed: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  17 | 
  18 |   /** Time Lapsed in milliseconds */
> 19 |   private _timeLapsed: number;
     |          ^
  20 | 
  21 |   /** Percentage of time lapsed */
  22 |   private _percentage: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  20 | 
  21 |   /** Percentage of time lapsed */
> 22 |   private _percentage: number;
     |          ^
  23 | 
  24 |   /** Position of the Element */
  25 |   private _position: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  23 | 
  24 |   /** Position of the Element */
> 25 |   private _position: number;
     |          ^
  26 | 
  27 |   /** Last Element Position */
  28 |   private _lastPosition: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  26 | 
  27 |   /** Last Element Position */
> 28 |   private _lastPosition: number;
     |          ^
  29 | 
  30 |   /** Start Position of the Element */
  31 |   private _startPosition: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  29 | 
  30 |   /** Start Position of the Element */
> 31 |   private _startPosition: number;
     |          ^
  32 | 
  33 |   /** The Distance to scroll */
  34 |   private _distance: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  32 | 
  33 |   /** The Distance to scroll */
> 34 |   private _distance: number;
     |          ^
  35 | 
  36 |   /** Observable Source */
  37 |   private _source$: ReplaySubject<number>;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  35 | 
  36 |   /** Observable Source */
> 37 |   private _source$: ReplaySubject<number>;
     |          ^
  38 | 
  39 |   /** Scroll Top of the Window */
  40 |   private _windowScrollTop: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  38 | 
  39 |   /** Scroll Top of the Window */
> 40 |   private _windowScrollTop: number;
     |          ^
  41 | 
  42 |   /** Mapped Offset taken from the active Offset Map */
  43 |   private _mappedOffset: number;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  41 | 
  42 |   /** Mapped Offset taken from the active Offset Map */
> 43 |   private _mappedOffset: number;
     |          ^
  44 | 
  45 |   /**
  46 |    * Class Constructor.

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  55 |    */
  56 |   constructor(
> 57 |     private _container: HTMLElement,
     |            ^
  58 |     private _listenerTarget: ScrollToListenerTarget,
  59 |     private readonly _isWindow: boolean,
  60 |     private readonly _to: number,

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  56 |   constructor(
  57 |     private _container: HTMLElement,
> 58 |     private _listenerTarget: ScrollToListenerTarget,
     |            ^
  59 |     private readonly _isWindow: boolean,
  60 |     private readonly _to: number,
  61 |     private readonly _options: ScrollToConfigOptions,

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  57 |     private _container: HTMLElement,
  58 |     private _listenerTarget: ScrollToListenerTarget,
> 59 |     private readonly _isWindow: boolean,
     |                     ^
  60 |     private readonly _to: number,
  61 |     private readonly _options: ScrollToConfigOptions,
  62 |     private _isBrowser: boolean

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  58 |     private _listenerTarget: ScrollToListenerTarget,
  59 |     private readonly _isWindow: boolean,
> 60 |     private readonly _to: number,
     |                     ^
  61 |     private readonly _options: ScrollToConfigOptions,
  62 |     private _isBrowser: boolean
  63 |   ) {

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  59 |     private readonly _isWindow: boolean,
  60 |     private readonly _to: number,
> 61 |     private readonly _options: ScrollToConfigOptions,
     |                     ^
  62 |     private _isBrowser: boolean
  63 |   ) {
  64 |     this._tick = 16;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  60 |     private readonly _to: number,
  61 |     private readonly _options: ScrollToConfigOptions,
> 62 |     private _isBrowser: boolean
     |            ^
  63 |   ) {
  64 |     this._tick = 16;
  65 |     this._interval = null;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  109 | 
  110 |   /** Recursively loop over the Scroll Animation */
> 111 |   private _loop = (): void => {
      |          ^
  112 | 
  113 |     this._timeLapsed += this._tick;
  114 |     this._percentage = (this._timeLapsed / this._options.duration);


/home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.service.ts
'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  165 |    * @param options         The Merged Configuration Object
  166 |    * @param targetNode    the targeted HTMLElement
> 167 |    * @returns
      |      ^
  168 |    */
  169 |   private _getContainer(options: ScrollToConfigOptions, targetNode: HTMLElement): HTMLElement | null {
  170 | 

Expected method shorthand in object literal ('{get() {...}}'). (object-literal-shorthand)
  211 |     try {
  212 |       const opts = Object.defineProperty({}, 'passive', {
> 213 |         get: function () {
      |        ^
  214 |           supportsPassive = true;
  215 |         }
  216 |       });

non-arrow functions are forbidden (only-arrow-functions)
  211 |     try {
  212 |       const opts = Object.defineProperty({}, 'passive', {
> 213 |         get: function () {
      |             ^
  214 |           supportsPassive = true;
  215 |         }
  216 |       });

Spaces before function parens are disallowed (space-before-function-paren)
  211 |     try {
  212 |       const opts = Object.defineProperty({}, 'passive', {
> 213 |         get: function () {
      |                     ^
  214 |           supportsPassive = true;
  215 |         }
  216 |       });

if statements must be braced (curly)
  238 |     handler: EventListenerOrEventListenerObject): void {
  239 | 
> 240 |     if (!listenerTarget) listenerTarget = window;
      |    ^
  241 |     events.forEach(event => listenerTarget.removeEventListener(event, handler));
  242 |   }
  243 | 

if statements must be braced (curly)
  257 |     const overflowRegex: RegExp = /(auto|scroll|overlay)/;
  258 | 
> 259 |     if (style.position === 'fixed') return null;
      |    ^
  260 | 
  261 |     for (let parent = nativeElement; parent = parent.parentElement; null) {
  262 | 

Assignments in conditional expressions are forbidden (no-conditional-assignment)
  259 |     if (style.position === 'fixed') return null;
  260 | 
> 261 |     for (let parent = nativeElement; parent = parent.parentElement; null) {
      |                                     ^
  262 | 
  263 |       style = window.getComputedStyle(parent);
  264 | 

if statements must be braced (curly)
  263 |       style = window.getComputedStyle(parent);
  264 | 
> 265 |       if (style.position === 'absolute'
      |      ^
  266 |         || style.overflow === 'hidden'
  267 |         || style.overflowY === 'hidden') continue;
  268 | 

if statements must be braced (curly)
  267 |         || style.overflowY === 'hidden') continue;
  268 | 
> 269 |       if (overflowRegex.test(style.overflow + style.overflowY)
      |      ^
  270 |         || parent.tagName === 'BODY') return parent;
  271 |     }
  272 | 

if statements must be braced (curly)
  314 |    */
  315 |   private _getListenerTarget(container: HTMLElement): ScrollToListenerTarget {
> 316 |     if (!container) return null;
      |    ^
  317 |     return this._isDocumentBody(container) ? window : container;
  318 |   }
  319 | 


/home/idnes/Projects/awe/src/lib/split-pane/lib/component/split.component.ts
Exceeds maximum line length of 140 (max-line-length)
> 1 | import { Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, AfterViewInit, OnDestroy, ElementRef, NgZone, ViewChildren, QueryList } from '@angular/core';
  2 | import { Observable, Subscriber, Subject } from 'rxjs';
  3 | import { debounceTime } from 'rxjs/operators';
  4 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  48 | export class SplitComponent implements AfterViewInit, OnDestroy {
  49 | 
> 50 |   private _direction: 'horizontal' | 'vertical' = 'horizontal';
     |          ^
  51 | 
  52 |   @Input() set direction(v: 'horizontal' | 'vertical') {
  53 |     this._direction = (v === 'vertical') ? 'vertical' : 'horizontal';

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  65 |   ////
  66 | 
> 67 |   private _gutterSize: number = 11;
     |          ^
  68 | 
  69 |   @Input() set gutterSize(v: number) {
  70 |     v = Number(v);

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  65 |   ////
  66 | 
> 67 |   private _gutterSize: number = 11;
     |                       ^
  68 | 
  69 |   @Input() set gutterSize(v: number) {
  70 |     v = Number(v);

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  80 |   ////
  81 | 
> 82 |   private _useTransition: boolean = false;
     |          ^
  83 | 
  84 |   @Input() set useTransition(v: boolean) {
  85 |     this._useTransition = getInputBoolean(v);

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  80 |   ////
  81 | 
> 82 |   private _useTransition: boolean = false;
     |                          ^
  83 | 
  84 |   @Input() set useTransition(v: boolean) {
  85 |     this._useTransition = getInputBoolean(v);

if statements must be braced (curly)
  85 |     this._useTransition = getInputBoolean(v);
  86 | 
> 87 |     if (this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'is-transition');
     |    ^
  88 |     else this.renderer.removeClass(this.elRef.nativeElement, 'is-transition');
  89 |   }
  90 | 

else statements must be braced (curly)
  86 | 
  87 |     if (this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'is-transition');
> 88 |     else this.renderer.removeClass(this.elRef.nativeElement, 'is-transition');
     |    ^
  89 |   }
  90 | 
  91 |   get useTransition(): boolean {

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   95 |   ////
   96 | 
>  97 |   private _disabled: boolean = false;
      |          ^
   98 | 
   99 |   @Input() set disabled(v: boolean) {
  100 |     this._disabled = getInputBoolean(v);

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
   95 |   ////
   96 | 
>  97 |   private _disabled: boolean = false;
      |                     ^
   98 | 
   99 |   @Input() set disabled(v: boolean) {
  100 |     this._disabled = getInputBoolean(v);

if statements must be braced (curly)
  100 |     this._disabled = getInputBoolean(v);
  101 | 
> 102 |     if (this._disabled) this.renderer.addClass(this.elRef.nativeElement, 'is-disabled');
      |    ^
  103 |     else this.renderer.removeClass(this.elRef.nativeElement, 'is-disabled');
  104 |   }
  105 | 

else statements must be braced (curly)
  101 | 
  102 |     if (this._disabled) this.renderer.addClass(this.elRef.nativeElement, 'is-disabled');
> 103 |     else this.renderer.removeClass(this.elRef.nativeElement, 'is-disabled');
      |    ^
  104 |   }
  105 | 
  106 |   get disabled(): boolean {

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  110 |   ////
  111 | 
> 112 |   private _dir: 'ltr' | 'rtl' = 'ltr';
      |          ^
  113 | 
  114 |   @Input() set dir(v: 'ltr' | 'rtl') {
  115 |     v = (v === 'rtl') ? 'rtl' : 'ltr';

Missing semicolon (semicolon)
  125 |   ////
  126 | 
> 127 |   private dragStartSubscriber: Subscriber<{ gutterNum: number, sizes: Array<number> }>
      |                                                                                      ^
  128 |   @Output() get dragStart(): Observable<{ gutterNum: number, sizes: Array<number> }> {
  129 |     return new Observable(subscriber => this.dragStartSubscriber = subscriber);
  130 |   }

Missing semicolon (semicolon)
  130 |   }
  131 | 
> 132 |   private dragEndSubscriber: Subscriber<{ gutterNum: number, sizes: Array<number> }>
      |                                                                                    ^
  133 |   @Output() get dragEnd(): Observable<{ gutterNum: number, sizes: Array<number> }> {
  134 |     return new Observable(subscriber => this.dragEndSubscriber = subscriber);
  135 |   }

Missing semicolon (semicolon)
  135 |   }
  136 | 
> 137 |   private gutterClickSubscriber: Subscriber<{ gutterNum: number, sizes: Array<number> }>
      |                                                                                        ^
  138 |   @Output() get gutterClick(): Observable<{ gutterNum: number, sizes: Array<number> }> {
  139 |     return new Observable(subscriber => this.gutterClickSubscriber = subscriber);
  140 |   }

Missing semicolon (semicolon)
  140 |   }
  141 | 
> 142 |   private transitionEndSubscriber: Subscriber<Array<number>>
      |                                                            ^
  143 |   @Output() get transitionEnd(): Observable<Array<number>> {
  144 |     return new Observable(subscriber => this.transitionEndSubscriber = subscriber).pipe(
  145 |       debounceTime<Array<number>>(20)

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  152 |   ////
  153 | 
> 154 |   private isDragging: boolean = false;
      |                      ^
  155 |   private currentGutterNum: number = 0;
  156 |   private startPoint: IPoint | null = null;
  157 |   private endPoint: IPoint | null = null;

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  153 | 
  154 |   private isDragging: boolean = false;
> 155 |   private currentGutterNum: number = 0;
      |                            ^
  156 |   private startPoint: IPoint | null = null;
  157 |   private endPoint: IPoint | null = null;
  158 | 

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  160 |   private readonly hidedAreas: Array<IArea> = [];
  161 | 
> 162 |   private readonly dragListeners: Array<Function> = [];
      |                                        ^
  163 |   private readonly dragStartValues = {
  164 |     sizePixelContainer: 0,
  165 |     sizePixelA: 0,

parameters are not aligned (align)
  172 | 
  173 |   constructor(private ngZone: NgZone,
> 174 |     private elRef: ElementRef,
      |    ^
  175 |     private cdRef: ChangeDetectorRef,
  176 |     private renderer: Renderer2) {
  177 |     // To force adding default class, could be override by user @Input() or not

parameters are not aligned (align)
  173 |   constructor(private ngZone: NgZone,
  174 |     private elRef: ElementRef,
> 175 |     private cdRef: ChangeDetectorRef,
      |    ^
  176 |     private renderer: Renderer2) {
  177 |     // To force adding default class, could be override by user @Input() or not
  178 |     this.direction = this._direction;

parameters are not aligned (align)
  174 |     private elRef: ElementRef,
  175 |     private cdRef: ChangeDetectorRef,
> 176 |     private renderer: Renderer2) {
      |    ^
  177 |     // To force adding default class, could be override by user @Input() or not
  178 |     this.direction = this._direction;
  179 |   }

misplaced 'else' (one-line)
  202 |       this.build(true, true);
  203 |     }
> 204 |     else {
      |    ^
  205 |       this.hidedAreas.push(newArea);
  206 |     }
  207 |   }

misplaced 'else' (one-line)
  215 |       this.build(true, true);
  216 |     }
> 217 |     else if (this.hidedAreas.some(a => a.component === component)) {
      |    ^
  218 |       area = this.hidedAreas.find(a => a.component === component);
  219 |       this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);
  220 |     }

Shadowed name: 'area' (no-shadowed-variable)
  250 | 
  251 |     const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);
> 252 |     areas.forEach(area => {
      |                  ^
  253 |       area.order = 0;
  254 |       area.size = 0;
  255 |     })

Missing semicolon (semicolon)
  253 |       area.order = 0;
  254 |       area.size = 0;
> 255 |     })
      |      ^
  256 |     this.hidedAreas.push(...areas);
  257 | 
  258 |     this.build(true, true);

Shadowed name: 'total' (no-shadowed-variable)
  270 |     sizes = sizes.map(s => s / 100);
  271 | 
> 272 |     const total = sizes.reduce((total: number, v: number) => total + v, 0);
      |                                ^
  273 |     if (!isValidTotalSize(total)) {
  274 |       return false;
  275 |     }

Missing semicolon (semicolon)
  278 |       // @ts-ignore
  279 |       area.component._size = sizes[i];
> 280 |     })
      |      ^
  281 | 
  282 |     this.build(false, true);
  283 |     return true;

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  293 |       // If user provided 'order' for each area, use it to sort them.
  294 |       if (this.displayedAreas.every(a => a.component.order !== null)) {
> 295 |         this.displayedAreas.sort((a, b) => (<number>a.component.order) - (<number>b.component.order));
      |                                            ^
  296 |       }
  297 | 
  298 |       // Then set real order with multiples of 2, numbers between will be used by gutters.

missing whitespace (whitespace)
  293 |       // If user provided 'order' for each area, use it to sort them.
  294 |       if (this.displayedAreas.every(a => a.component.order !== null)) {
> 295 |         this.displayedAreas.sort((a, b) => (<number>a.component.order) - (<number>b.component.order));
      |                                                    ^
  296 |       }
  297 | 
  298 |       // Then set real order with multiples of 2, numbers between will be used by gutters.

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  293 |       // If user provided 'order' for each area, use it to sort them.
  294 |       if (this.displayedAreas.every(a => a.component.order !== null)) {
> 295 |         this.displayedAreas.sort((a, b) => (<number>a.component.order) - (<number>b.component.order));
      |                                                                          ^
  296 |       }
  297 | 
  298 |       // Then set real order with multiples of 2, numbers between will be used by gutters.

missing whitespace (whitespace)
  293 |       // If user provided 'order' for each area, use it to sort them.
  294 |       if (this.displayedAreas.every(a => a.component.order !== null)) {
> 295 |         this.displayedAreas.sort((a, b) => (<number>a.component.order) - (<number>b.component.order));
      |                                                                                  ^
  296 |       }
  297 | 
  298 |       // Then set real order with multiples of 2, numbers between will be used by gutters.

Exceeds maximum line length of 140 (max-line-length)
  308 |     if (resetSizes === true) {
  309 | 
> 310 |       const totalUserSize = <number>this.displayedAreas.reduce((total: number, s: IArea) => s.component.size ? total + s.component.size : total, 0);
  311 | 
  312 |       // If user provided 'size' for each area and total == 1, use it.
  313 |       if (this.displayedAreas.every(a => a.component.size !== null) && isValidTotalSize(totalUserSize)) {

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  308 |     if (resetSizes === true) {
  309 | 
> 310 |       const totalUserSize = <number>this.displayedAreas.reduce((total: number, s: IArea) => s.component.size ? total + s.component.size : total, 0);
      |                            ^
  311 | 
  312 |       // If user provided 'size' for each area and total == 1, use it.
  313 |       if (this.displayedAreas.every(a => a.component.size !== null) && isValidTotalSize(totalUserSize)) {

missing whitespace (whitespace)
  308 |     if (resetSizes === true) {
  309 | 
> 310 |       const totalUserSize = <number>this.displayedAreas.reduce((total: number, s: IArea) => s.component.size ? total + s.component.size : total, 0);
      |                                    ^
  311 | 
  312 |       // If user provided 'size' for each area and total == 1, use it.
  313 |       if (this.displayedAreas.every(a => a.component.size !== null) && isValidTotalSize(totalUserSize)) {

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  314 | 
  315 |         this.displayedAreas.forEach(area => {
> 316 |           area.size = <number>area.component.size;
      |                      ^
  317 |         });
  318 |       }
  319 |       // Else set equal sizes for all areas.

missing whitespace (whitespace)
  314 | 
  315 |         this.displayedAreas.forEach(area => {
> 316 |           area.size = <number>area.component.size;
      |                              ^
  317 |         });
  318 |       }
  319 |       // Else set equal sizes for all areas.

misplaced 'else' (one-line)
  318 |       }
  319 |       // Else set equal sizes for all areas.
> 320 |       else {
      |      ^
  321 |         const size = 1 / this.displayedAreas.length;
  322 | 
  323 |         this.displayedAreas.forEach(area => {

misplaced 'else' (one-line)
  355 |       // All area sizes (container percentage) are less than guterSize,
  356 |       // It means containerSize < ngGutters * gutterSize
> 357 |       else {
      |      ^
  358 |         this.displayedAreas[this.displayedAreas.length - 1].size = 1;
  359 |       }
  360 |     }

misplaced 'else' (one-line)
  452 |       return;
  453 |     }
> 454 |     else if (newSizePixelA < this.gutterSize) {
      |    ^
  455 |       newSizePixelB += newSizePixelA;
  456 |       newSizePixelA = 0;
  457 |     }

misplaced 'else' (one-line)
  456 |       newSizePixelA = 0;
  457 |     }
> 458 |     else if (newSizePixelB < this.gutterSize) {
      |    ^
  459 |       newSizePixelA += newSizePixelB;
  460 |       newSizePixelB = 0;
  461 |     }

misplaced 'else' (one-line)
  467 |       areaA.size = 0;
  468 |     }
> 469 |     else if (newSizePixelB === 0) {
      |    ^
  470 |       areaA.size += areaB.size;
  471 |       areaB.size = 0;
  472 |     }

misplaced 'else' (one-line)
  471 |       areaB.size = 0;
  472 |     }
> 473 |     else {
      |    ^
  474 |       // NEW_PERCENT = START_PERCENT / START_PIXEL * NEW_PIXEL;
  475 |       if (this.dragStartValues.sizePercentA === 0) {
  476 |         areaB.size = this.dragStartValues.sizePercentB / this.dragStartValues.sizePixelB * newSizePixelB;

misplaced 'else' (one-line)
  477 |         areaA.size = this.dragStartValues.sizePercentB - areaB.size;
  478 |       }
> 479 |       else if (this.dragStartValues.sizePercentB === 0) {
      |      ^
  480 |         areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;
  481 |         areaB.size = this.dragStartValues.sizePercentA - areaA.size;
  482 |       }

misplaced 'else' (one-line)
  481 |         areaB.size = this.dragStartValues.sizePercentA - areaA.size;
  482 |       }
> 483 |       else {
      |      ^
  484 |         areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;
  485 |         areaB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - areaA.size;
  486 |       }

Missing semicolon (semicolon)
  530 |         this.startPoint = null;
  531 |         this.endPoint = null;
> 532 |       })
      |        ^
  533 |     });
  534 |   }
  535 | 

misplaced 'else' (one-line)
  542 |       }
  543 |     }
> 544 |     else if (type === 'end') {
      |    ^
  545 |       if (this.dragEndSubscriber) {
  546 |         this.ngZone.run(() => this.dragEndSubscriber.next({ gutterNum: this.currentGutterNum, sizes }));
  547 |       }

misplaced 'else' (one-line)
  547 |       }
  548 |     }
> 549 |     else if (type === 'click') {
      |    ^
  550 |       if (this.gutterClickSubscriber) {
  551 |         this.ngZone.run(() => this.gutterClickSubscriber.next({ gutterNum: this.currentGutterNum, sizes }));
  552 |       }

misplaced 'else' (one-line)
  552 |       }
  553 |     }
> 554 |     else if (type === 'transitionEnd') {
      |    ^
  555 |       if (this.transitionEndSubscriber) {
  556 |         this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));
  557 |       }

misplaced 'else' (one-line)
  557 |       }
  558 |     }
> 559 |     else if (type === 'progress') {
      |    ^
  560 |       // Stay outside zone to allow users do what they want about change detection mechanism.
  561 |       this.dragProgressSubject.next({ gutterNum: this.currentGutterNum, sizes });
  562 |     }


/home/idnes/Projects/awe/src/lib/split-pane/lib/directive/splitArea.directive.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
   9 | export class SplitAreaDirective implements OnInit, OnDestroy {
  10 | 
> 11 |     private _order: number | null = null;
     |            ^
  12 | 
  13 |     @Input() set order(v: number | null) {
  14 |         v = Number(v);

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  24 |     ////
  25 | 
> 26 |     private _size: number | null = null;
     |            ^
  27 | 
  28 |     @Input() set size(v: number | null) {
  29 |         v = Number(v);

missing whitespace (whitespace)
  28 |     @Input() set size(v: number | null) {
  29 |         v = Number(v);
> 30 |         this._size = (!isNaN(v) && v >= 0 && v <= 100) ? (v/100) : null;
     |                                                           ^
  31 | 
  32 |         this.split.updateArea(this, false, true);
  33 |     }

missing whitespace (whitespace)
  28 |     @Input() set size(v: number | null) {
  29 |         v = Number(v);
> 30 |         this._size = (!isNaN(v) && v >= 0 && v <= 100) ? (v/100) : null;
     |                                                            ^
  31 | 
  32 |         this.split.updateArea(this, false, true);
  33 |     }

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  39 |     ////
  40 | 
> 41 |     private _visible: boolean = true;
     |            ^
  42 | 
  43 |     @Input() set visible(v: boolean) {
  44 |         this._visible = getInputBoolean(v);

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  39 |     ////
  40 | 
> 41 |     private _visible: boolean = true;
     |                      ^
  42 | 
  43 |     @Input() set visible(v: boolean) {
  44 |         this._visible = getInputBoolean(v);

missing whitespace (whitespace)
  44 |         this._visible = getInputBoolean(v);
  45 | 
> 46 |         if(this._visible) {
     |          ^
  47 |             this.split.showArea(this);
  48 |             this.renderer.removeClass(this.elRef.nativeElement, 'is-hided');
  49 |         }

misplaced 'else' (one-line)
  48 |             this.renderer.removeClass(this.elRef.nativeElement, 'is-hided');
  49 |         }
> 50 |         else {
     |        ^
  51 |             this.split.hideArea(this);
  52 |             this.renderer.addClass(this.elRef.nativeElement, 'is-hided');
  53 |         }

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  60 |     ////
  61 | 
> 62 |     private transitionListener: Function;
     |                                ^
  63 |     private readonly lockListeners: Array<Function> = [];
  64 | 
  65 |     constructor(private ngZone: NgZone,

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  61 | 
  62 |     private transitionListener: Function;
> 63 |     private readonly lockListeners: Array<Function> = [];
     |                                          ^
  64 | 
  65 |     constructor(private ngZone: NgZone,
  66 |                 public elRef: ElementRef,

missing whitespace (whitespace)
  76 |             this.transitionListener = this.renderer.listen(this.elRef.nativeElement, 'transitionend', (event: TransitionEvent) => {
  77 |                 // Limit only flex-basis transition to trigger the event
> 78 |                 if(event.propertyName === 'flex-basis') {
     |                  ^
  79 |                     this.split.notify('transitionEnd');
  80 |                 }
  81 |             });

missing whitespace (whitespace)
   99 | 
  100 |     public unlockEvents(): void {
> 101 |         while(this.lockListeners.length > 0) {
      |             ^
  102 |             const fct = this.lockListeners.pop();
  103 |             if(fct) {
  104 |                 fct();

missing whitespace (whitespace)
  101 |         while(this.lockListeners.length > 0) {
  102 |             const fct = this.lockListeners.pop();
> 103 |             if(fct) {
      |              ^
  104 |                 fct();
  105 |             }
  106 |         }

missing whitespace (whitespace)
  110 |         this.unlockEvents();
  111 | 
> 112 |         if(this.transitionListener) {
      |          ^
  113 |             this.transitionListener();
  114 |         }
  115 | 


/home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IArea.ts
" should be ' (quotemark)
> 1 | import { SplitAreaDirective } from "../directive/splitArea.directive";
    |                                   ^
  2 | 
  3 | export interface IArea {
  4 |     component: SplitAreaDirective;

file should end with a newline (eofline)
  5 |     size: number;
  6 |     order: number;
> 7 | }
    | ^


/home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IPoint.ts
file should end with a newline (eofline)
  3 |     x: number;
  4 |     y: number;
> 5 | }
    | ^


/home/idnes/Projects/awe/src/lib/split-pane/lib/module.ts
" should be ' (quotemark)
   5 | import { SplitComponent } from './component/split.component';
   6 | import { SplitAreaDirective } from './directive/splitArea.directive';
>  7 | import { UndetectedEventPlugin } from "./service/UndetectedEventPlugin";
     |                                      ^
   8 | 
   9 | @NgModule({
  10 |     imports: [


/home/idnes/Projects/awe/src/lib/split-pane/lib/service/UndetectedEventPlugin.ts
Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  14 |     }
  15 | 
> 16 |     addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {
     |                                                                       ^
  17 |         const realEventName = eventName.slice(20);
  18 | 
  19 |         return this.manager.getZone().runOutsideAngular(() => this.manager.addEventListener(element, realEventName, handler));

Don't use 'Function' as a type. Avoid using the `Function` type. Prefer a specific function type, like `() => void`. (ban-types)
  14 |     }
  15 | 
> 16 |     addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {
     |                                                                                  ^
  17 |         const realEventName = eventName.slice(20);
  18 | 
  19 |         return this.manager.getZone().runOutsideAngular(() => this.manager.addEventListener(element, realEventName, handler));


/home/idnes/Projects/awe/src/lib/split-pane/lib/utils.ts
missing whitespace (whitespace)
   6 | export function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {
   7 |     // TouchEvent
>  8 |     if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {
     |      ^
   9 |         return {
  10 |             x: (<TouchEvent> event).touches[0].clientX,
  11 |             y: (<TouchEvent> event).touches[0].clientY,

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
   6 | export function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {
   7 |     // TouchEvent
>  8 |     if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {
     |        ^
   9 |         return {
  10 |             x: (<TouchEvent> event).touches[0].clientX,
  11 |             y: (<TouchEvent> event).touches[0].clientY,

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
   6 | export function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {
   7 |     // TouchEvent
>  8 |     if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {
     |                                                      ^
   9 |         return {
  10 |             x: (<TouchEvent> event).touches[0].clientX,
  11 |             y: (<TouchEvent> event).touches[0].clientY,

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
   8 |     if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {
   9 |         return {
> 10 |             x: (<TouchEvent> event).touches[0].clientX,
     |                ^
  11 |             y: (<TouchEvent> event).touches[0].clientY,
  12 |         };
  13 |     }

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
   9 |         return {
  10 |             x: (<TouchEvent> event).touches[0].clientX,
> 11 |             y: (<TouchEvent> event).touches[0].clientY,
     |                ^
  12 |         };
  13 |     }
  14 |     // MouseEvent

misplaced 'else' (one-line)
  13 |     }
  14 |     // MouseEvent
> 15 |     else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {
     |    ^
  16 |         return {
  17 |             x: (<MouseEvent> event).clientX,
  18 |             y: (<MouseEvent> event).clientY,

missing whitespace (whitespace)
  13 |     }
  14 |     // MouseEvent
> 15 |     else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {
     |           ^
  16 |         return {
  17 |             x: (<MouseEvent> event).clientX,
  18 |             y: (<MouseEvent> event).clientY,

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  13 |     }
  14 |     // MouseEvent
> 15 |     else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {
     |             ^
  16 |         return {
  17 |             x: (<MouseEvent> event).clientX,
  18 |             y: (<MouseEvent> event).clientY,

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  13 |     }
  14 |     // MouseEvent
> 15 |     else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {
     |                                                           ^
  16 |         return {
  17 |             x: (<MouseEvent> event).clientX,
  18 |             y: (<MouseEvent> event).clientY,

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  15 |     else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {
  16 |         return {
> 17 |             x: (<MouseEvent> event).clientX,
     |                ^
  18 |             y: (<MouseEvent> event).clientY,
  19 |         };
  20 |     }

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  16 |         return {
  17 |             x: (<MouseEvent> event).clientX,
> 18 |             y: (<MouseEvent> event).clientY,
     |                ^
  19 |         };
  20 |     }
  21 |     return null;


/home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-stacked/bar-horizontal-stacked.component.ts
Missing semicolon (semicolon)
  65 |   @Input() yAxisTicks: any[];
  66 |   @Input() barPadding = 8;
> 67 |   @Input() roundDomains = false
     |                               ^
  68 |   @Input() xScaleMax: number;
  69 |   @Input() showDataLabel = false
  70 |   @Input() dataLabelFormatting: any;

Missing semicolon (semicolon)
  67 |   @Input() roundDomains = false
  68 |   @Input() xScaleMax: number;
> 69 |   @Input() showDataLabel = false
     |                                ^
  70 |   @Input() dataLabelFormatting: any;
  71 | 
  72 |   @Output() activate: EventEmitter<any> = new EventEmitter();


/home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/series-vertical/series-vertical.component.ts
if statements must be braced (curly)
  267 | 
  268 |   isActive(entry): boolean {
> 269 |     if (!this.activeEntries) return false;
      |    ^
  270 |     const item = this.activeEntries.find(d => {
  271 |       return entry.name === d.name && entry.series === d.series;
  272 |     });


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/y-axis-ticks.component.ts
non-arrow functions are forbidden (only-arrow-functions)
  150 |       this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);
  151 |     } else {
> 152 |       this.tickFormat = function(d) {
      |                        ^
  153 |         if (d.constructor.name === 'Date') {
  154 |           return d.toLocaleDateString();
  155 |         }

non-arrow functions are forbidden (only-arrow-functions)
  158 |     }
  159 | 
> 160 |     this.adjustedScale = scale.bandwidth ? function(d) {
      |                                           ^
  161 |       return scale(d) + scale.bandwidth() * 0.5;
  162 |     } : scale;
  163 | 


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/base-chart/base-chart.component.ts
JSDoc tag '@private' is redundant in TypeScript code. (no-redundant-jsdoc)
  156 |    * Clones the data into a new object
  157 |    *
> 158 |    * @private
      |      ^
  159 |    * @param {any} data
  160 |    * @returns {*}
  161 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  157 |    *
  158 |    * @private
> 159 |    * @param {any} data
      |      ^
  160 |    * @returns {*}
  161 |    *
  162 |    * @memberOf BaseChart

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  157 |    *
  158 |    * @private
> 159 |    * @param {any} data
      |            ^
  160 |    * @returns {*}
  161 |    *
  162 |    * @memberOf BaseChart

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  158 |    * @private
  159 |    * @param {any} data
> 160 |    * @returns {*}
      |      ^
  161 |    *
  162 |    * @memberOf BaseChart
  163 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  158 |    * @private
  159 |    * @param {any} data
> 160 |    * @returns {*}
      |              ^
  161 |    *
  162 |    * @memberOf BaseChart
  163 |    */

object access via string literals is disallowed (no-string-literal)
  167 |     for (const item of data) {
  168 |       const copy = {
> 169 |         name: item['name']
      |                   ^
  170 |       };
  171 | 
  172 |       if (item['value'] !== undefined) {

object access via string literals is disallowed (no-string-literal)
  170 |       };
  171 | 
> 172 |       if (item['value'] !== undefined) {
      |               ^
  173 |         copy['value'] = item['value'];
  174 |       }
  175 | 

object access via string literals is disallowed (no-string-literal)
  171 | 
  172 |       if (item['value'] !== undefined) {
> 173 |         copy['value'] = item['value'];
      |             ^
  174 |       }
  175 | 
  176 |       if (item['series'] !== undefined) {

object access via string literals is disallowed (no-string-literal)
  171 | 
  172 |       if (item['value'] !== undefined) {
> 173 |         copy['value'] = item['value'];
      |                             ^
  174 |       }
  175 | 
  176 |       if (item['series'] !== undefined) {

object access via string literals is disallowed (no-string-literal)
  174 |       }
  175 | 
> 176 |       if (item['series'] !== undefined) {
      |               ^
  177 |         copy['series'] = [];
  178 |         for (const seriesItem of item['series']) {
  179 |           const seriesItemCopy = Object.assign({}, seriesItem);

object access via string literals is disallowed (no-string-literal)
  175 | 
  176 |       if (item['series'] !== undefined) {
> 177 |         copy['series'] = [];
      |             ^
  178 |         for (const seriesItem of item['series']) {
  179 |           const seriesItemCopy = Object.assign({}, seriesItem);
  180 |           copy['series'].push(seriesItemCopy);

object access via string literals is disallowed (no-string-literal)
  176 |       if (item['series'] !== undefined) {
  177 |         copy['series'] = [];
> 178 |         for (const seriesItem of item['series']) {
      |                                      ^
  179 |           const seriesItemCopy = Object.assign({}, seriesItem);
  180 |           copy['series'].push(seriesItemCopy);
  181 |         }

object access via string literals is disallowed (no-string-literal)
  178 |         for (const seriesItem of item['series']) {
  179 |           const seriesItemCopy = Object.assign({}, seriesItem);
> 180 |           copy['series'].push(seriesItemCopy);
      |               ^
  181 |         }
  182 |       }
  183 | 

object access via string literals is disallowed (no-string-literal)
  182 |       }
  183 | 
> 184 |       if (item['extra'] !== undefined) {
      |               ^
  185 |         copy['extra'] = JSON.parse(JSON.stringify(item['extra']));
  186 |       }
  187 | 

object access via string literals is disallowed (no-string-literal)
  183 | 
  184 |       if (item['extra'] !== undefined) {
> 185 |         copy['extra'] = JSON.parse(JSON.stringify(item['extra']));
      |             ^
  186 |       }
  187 | 
  188 |       results.push(copy);

object access via string literals is disallowed (no-string-literal)
  183 | 
  184 |       if (item['extra'] !== undefined) {
> 185 |         copy['extra'] = JSON.parse(JSON.stringify(item['extra']));
      |                                                       ^
  186 |       }
  187 | 
  188 |       results.push(copy);


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/charts/chart.component.ts
Forbidden bitwise operation (no-bitwise)
  109 |     const chartColumns = 12 - legendColumns;
  110 | 
> 111 |     this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);
      |                      ^
  112 |     this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')
  113 |       ? ~~(this.view[0] * legendColumns / 12.0)
  114 |       : this.chartWidth;

Forbidden bitwise operation (no-bitwise)
  109 |     const chartColumns = 12 - legendColumns;
  110 | 
> 111 |     this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);
      |                       ^
  112 |     this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')
  113 |       ? ~~(this.view[0] * legendColumns / 12.0)
  114 |       : this.chartWidth;

Forbidden bitwise operation (no-bitwise)
  111 |     this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);
  112 |     this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')
> 113 |       ? ~~(this.view[0] * legendColumns / 12.0)
      |        ^
  114 |       : this.chartWidth;
  115 |   }
  116 | 

Forbidden bitwise operation (no-bitwise)
  111 |     this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);
  112 |     this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')
> 113 |       ? ~~(this.view[0] * legendColumns / 12.0)
      |         ^
  114 |       : this.chartWidth;
  115 |   }
  116 | 


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.directive.ts
JSDoc tag '@class' is redundant in TypeScript code. (no-redundant-jsdoc)
  10 |  *
  11 |  * @export
> 12 |  * @class CountUpDirective
     |    ^
  13 |  */
  14 | @Component({
  15 |   selector: '[ng-svg-charts-count-up]',

The name of the class CountUpDirective should end with the suffix Component (https://angular.io/styleguide#style-02-03) (component-class-suffix)
  16 |   template: `{{value}}`
  17 | })
> 18 | export class CountUpDirective implements OnDestroy {
     |             ^
  19 |   @Input() countDuration = 1;
  20 |   @Input() countPrefix = '';
  21 |   @Input() countSuffix = '';

if statements must be braced (curly)
  28 | 
  29 |   get countDecimals(): number {
> 30 |     if (this._countDecimals) return this._countDecimals;
     |    ^
  31 |     return decimalChecker(this.countTo);
  32 |   }
  33 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  62 |   private animationReq: any;
  63 | 
> 64 |   private _countDecimals = 0;
     |          ^
  65 |   private _countTo = 0;
  66 |   private _countFrom = 0;
  67 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  63 | 
  64 |   private _countDecimals = 0;
> 65 |   private _countTo = 0;
     |          ^
  66 |   private _countFrom = 0;
  67 | 
  68 |   constructor(private cd: ChangeDetectorRef, element: ElementRef) {

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  64 |   private _countDecimals = 0;
  65 |   private _countTo = 0;
> 66 |   private _countFrom = 0;
     |          ^
  67 | 
  68 |   constructor(private cd: ChangeDetectorRef, element: ElementRef) {
  69 |     this.nativeElement = element.nativeElement;

if statements must be braced (curly)
  83 |       this.value = valueFormatting(value);
  84 |       this.cd.markForCheck();
> 85 |       if (!finished) this.countChange.emit({ value: this.value, progress });
     |      ^
  86 |       if (finished) this.countFinish.emit({ value: this.value, progress });
  87 |     };
  88 | 

if statements must be braced (curly)
  84 |       this.cd.markForCheck();
  85 |       if (!finished) this.countChange.emit({ value: this.value, progress });
> 86 |       if (finished) this.countFinish.emit({ value: this.value, progress });
     |      ^
  87 |     };
  88 | 
  89 |     this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.helper.ts
'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
   8 |  *
   9 |  * @export
> 10 |  * @param {any} countFrom
     |    ^
  11 |  * @param {any} countTo
  12 |  * @param {any} countDecimals
  13 |  * @param {any} countDuration

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
   8 |  *
   9 |  * @export
> 10 |  * @param {any} countFrom
     |          ^
  11 |  * @param {any} countTo
  12 |  * @param {any} countDecimals
  13 |  * @param {any} countDuration

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
   9 |  * @export
  10 |  * @param {any} countFrom
> 11 |  * @param {any} countTo
     |    ^
  12 |  * @param {any} countDecimals
  13 |  * @param {any} countDuration
  14 |  * @param {any} callback

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
   9 |  * @export
  10 |  * @param {any} countFrom
> 11 |  * @param {any} countTo
     |          ^
  12 |  * @param {any} countDecimals
  13 |  * @param {any} countDuration
  14 |  * @param {any} callback

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  10 |  * @param {any} countFrom
  11 |  * @param {any} countTo
> 12 |  * @param {any} countDecimals
     |    ^
  13 |  * @param {any} countDuration
  14 |  * @param {any} callback
  15 |  * @returns

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  10 |  * @param {any} countFrom
  11 |  * @param {any} countTo
> 12 |  * @param {any} countDecimals
     |          ^
  13 |  * @param {any} countDuration
  14 |  * @param {any} callback
  15 |  * @returns

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  11 |  * @param {any} countTo
  12 |  * @param {any} countDecimals
> 13 |  * @param {any} countDuration
     |    ^
  14 |  * @param {any} callback
  15 |  * @returns
  16 |  */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  11 |  * @param {any} countTo
  12 |  * @param {any} countDecimals
> 13 |  * @param {any} countDuration
     |          ^
  14 |  * @param {any} callback
  15 |  * @returns
  16 |  */

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  12 |  * @param {any} countDecimals
  13 |  * @param {any} countDuration
> 14 |  * @param {any} callback
     |    ^
  15 |  * @returns
  16 |  */
  17 | export function count(countFrom, countTo, countDecimals, countDuration, callback) {

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  12 |  * @param {any} countDecimals
  13 |  * @param {any} countDuration
> 14 |  * @param {any} callback
     |          ^
  15 |  * @returns
  16 |  */
  17 | export function count(countFrom, countTo, countDecimals, countDuration, callback) {

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  13 |  * @param {any} countDuration
  14 |  * @param {any} callback
> 15 |  * @returns
     |    ^
  16 |  */
  17 | export function count(countFrom, countTo, countDecimals, countDuration, callback) {
  18 |   const startVal = Number(countFrom);

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  65 |  *
  66 |  * @export
> 67 |  * @param {any} countTo
     |    ^
  68 |  * @returns
  69 |  */
  70 | export function decimalChecker(countTo) {

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  65 |  *
  66 |  * @export
> 67 |  * @param {any} countTo
     |          ^
  68 |  * @returns
  69 |  */
  70 | export function decimalChecker(countTo) {

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  66 |  * @export
  67 |  * @param {any} countTo
> 68 |  * @returns
     |    ^
  69 |  */
  70 | export function decimalChecker(countTo) {
  71 |   const endVal = Number(countTo);


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/domain.helper.ts
'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  4 |  * @export
  5 |  * @returns array
> 6 |  * @param results
    |    ^
  7 |  */
  8 | export function getUniqueXDomainValues(results: any[]): any[] {
  9 |   const valueSet = new Set();

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  18 | /**
  19 |  * Get the scaleType of enumerable of values.
> 20 |  * @param values
     |    ^
  21 |  * @returns {string} 'time', 'linear' or 'ordinal'
  22 |  */
  23 | export function getScaleType(values: any[], checkDateType = true): string {

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  19 |  * Get the scaleType of enumerable of values.
  20 |  * @param values
> 21 |  * @returns {string} 'time', 'linear' or 'ordinal'
     |            ^
  22 |  */
  23 | export function getScaleType(values: any[], checkDateType = true): string {
  24 |   if (checkDateType) {


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/label.helper.ts
'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  3 |  *
  4 |  * @export
> 5 |  * @param {*} label
    |    ^
  6 |  * @returns {string}
  7 |  */
  8 | export function formatLabel(label: any): string {

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  3 |  *
  4 |  * @export
> 5 |  * @param {*} label
    |          ^
  6 |  * @returns {string}
  7 |  */
  8 | export function formatLabel(label: any): string {

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  4 |  * @export
  5 |  * @param {*} label
> 6 |  * @returns {string}
    |    ^
  7 |  */
  8 | export function formatLabel(label: any): string {
  9 |   if (label instanceof Date) {

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  4 |  * @export
  5 |  * @param {*} label
> 6 |  * @returns {string}
    |            ^
  7 |  */
  8 | export function formatLabel(label: any): string {
  9 |   if (label instanceof Date) {


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/legend.component.ts
missing whitespace (whitespace)
  67 |     const items = [];
  68 | 
> 69 |     for(const label of this.data) {
     |       ^
  70 |       const formattedLabel = formatLabel(label);
  71 | 
  72 |       const idx = items.findIndex((i) => {

if statements must be braced (curly)
  87 | 
  88 |   isActive(entry): boolean {
> 89 |     if (!this.activeEntries) return false;
     |    ^
  90 |     const item = this.activeEntries.find(d => {
  91 |       return entry.label === d.name;
  92 |     });


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/scale-legend.component.ts
Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  48 |   /**
  49 |    * Generates the string used in the gradient stylesheet properties
> 50 |    * @param  {array} colors array of colors
     |             ^
  51 |    * @param  {array} splits array of splits on a scale of (0, 1)
  52 |    * @return {string}
  53 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  49 |    * Generates the string used in the gradient stylesheet properties
  50 |    * @param  {array} colors array of colors
> 51 |    * @param  {array} splits array of splits on a scale of (0, 1)
     |             ^
  52 |    * @return {string}
  53 |    */
  54 |   gradientString(colors, splits): string {

'@return' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  50 |    * @param  {array} colors array of colors
  51 |    * @param  {array} splits array of splits on a scale of (0, 1)
> 52 |    * @return {string}
     |      ^
  53 |    */
  54 |   gradientString(colors, splits): string {
  55 |     // add the 100%

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  50 |    * @param  {array} colors array of colors
  51 |    * @param  {array} splits array of splits on a scale of (0, 1)
> 52 |    * @return {string}
     |             ^
  53 |    */
  54 |   gradientString(colors, splits): string {
  55 |     // add the 100%


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/shape.helper.ts
Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  3 |  *
  4 |  * @export
> 5 |  * @param {*} x, y, w, h, r, tl, tr, bl, br
    |          ^
  6 |  * @returns {string}
  7 |  */
  8 | export function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  4 |  * @export
  5 |  * @param {*} x, y, w, h, r, tl, tr, bl, br
> 6 |  * @returns {string}
    |    ^
  7 |  */
  8 | export function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {
  9 |   let retval = '';

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  4 |  * @export
  5 |  * @param {*} x, y, w, h, r, tl, tr, bl, br
> 6 |  * @returns {string}
    |            ^
  7 |  */
  8 | export function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {
  9 |   let retval = '';


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tick-format.helper.ts
non-arrow functions are forbidden (only-arrow-functions)
  2 | 
  3 | export function tickFormat(fieldType, groupByType): (label: string) => string {
> 4 |   return function(label: string): string {
    |         ^
  5 |     if (label === 'No Value' || label === 'Other') {
  6 |       return label;
  7 |     }

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
   8 |     if (fieldType === 'date' && groupByType === 'groupBy') {
   9 |       const formatter = timeFormat('MM/DD/YYYY');
> 10 |       return formatter(<any>label);
     |                       ^
  11 |     }
  12 | 
  13 |     return label.toString();

missing whitespace (whitespace)
   8 |     if (fieldType === 'date' && groupByType === 'groupBy') {
   9 |       const formatter = timeFormat('MM/DD/YYYY');
> 10 |       return formatter(<any>label);
     |                            ^
  11 |     }
  12 | 
  13 |     return label.toString();


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/timeline/timeline.component.ts
In the class "TimelineComponent", the output property "onDomainChange" should not be prefixed with on (no-output-on-prefix)
  51 | 
  52 |   @Output() select = new EventEmitter();
> 53 |   @Output() onDomainChange = new EventEmitter();
     |  ^
  54 | 
  55 |   element: HTMLElement;
  56 |   dims: any;


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection-registery.service.ts
missing whitespace (whitespace)
  50 | 
  51 |     if (comps) {
> 52 |       for(const comp of comps) {
     |         ^
  53 |         this.destroy(comp);
  54 |       }
  55 |     }


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection.service.ts
JSDoc tag '@class' is redundant in TypeScript code. (no-redundant-jsdoc)
  16 |  *
  17 |  * @export
> 18 |  * @class InjectionService
     |    ^
  19 |  */
  20 | @Injectable()
  21 | export class InjectionService {

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  26 |    * things like ngUpgrade that doesn't have a ApplicationRef root.
  27 |    *
> 28 |    * @param container
     |      ^
  29 |    */
  30 |   static setGlobalRootViewContainer(container: ComponentRef<any>): void {
  31 |     InjectionService.globalRootViewContainer = container;

Declaration of instance field not allowed after declaration of static method. Instead, this should come after static fields. (member-ordering)
  32 |   }
  33 | 
> 34 |   private _container: ComponentRef<any>;
     |  ^
  35 | 
  36 |   constructor(
  37 |     private applicationRef: ApplicationRef,

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  32 |   }
  33 | 
> 34 |   private _container: ComponentRef<any>;
     |          ^
  35 | 
  36 |   constructor(
  37 |     private applicationRef: ApplicationRef,

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  43 |    * Gets the root view container to inject the component to.
  44 |    *
> 45 |    * @returns {ComponentRef<any>}
     |      ^
  46 |    *
  47 |    * @memberOf InjectionService
  48 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  43 |    * Gets the root view container to inject the component to.
  44 |    *
> 45 |    * @returns {ComponentRef<any>}
     |              ^
  46 |    *
  47 |    * @memberOf InjectionService
  48 |    */

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  67 |    * things like ngUpgrade that doesn't have a ApplicationRef root.
  68 |    *
> 69 |    * @param {any} container
     |      ^
  70 |    *
  71 |    * @memberOf InjectionService
  72 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  67 |    * things like ngUpgrade that doesn't have a ApplicationRef root.
  68 |    *
> 69 |    * @param {any} container
     |            ^
  70 |    *
  71 |    * @memberOf InjectionService
  72 |    */

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  78 |    * Gets the html element for a component ref.
  79 |    *
> 80 |    * @param {ComponentRef<any>} componentRef
     |      ^
  81 |    * @returns {HTMLElement}
  82 |    *
  83 |    * @memberOf InjectionService

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  78 |    * Gets the html element for a component ref.
  79 |    *
> 80 |    * @param {ComponentRef<any>} componentRef
     |            ^
  81 |    * @returns {HTMLElement}
  82 |    *
  83 |    * @memberOf InjectionService

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  79 |    *
  80 |    * @param {ComponentRef<any>} componentRef
> 81 |    * @returns {HTMLElement}
     |      ^
  82 |    *
  83 |    * @memberOf InjectionService
  84 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  79 |    *
  80 |    * @param {ComponentRef<any>} componentRef
> 81 |    * @returns {HTMLElement}
     |              ^
  82 |    *
  83 |    * @memberOf InjectionService
  84 |    */

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  93 |    * Gets the root component container html element.
  94 |    *
> 95 |    * @returns {HTMLElement}
     |      ^
  96 |    *
  97 |    * @memberOf InjectionService
  98 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  93 |    * Gets the root component container html element.
  94 |    *
> 95 |    * @returns {HTMLElement}
     |              ^
  96 |    *
  97 |    * @memberOf InjectionService
  98 |    */

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  104 |    * Projects the bindings onto the component
  105 |    *
> 106 |    * @param {ComponentRef<any>} component
      |      ^
  107 |    * @param {*} options
  108 |    * @returns {ComponentRef<any>}
  109 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  104 |    * Projects the bindings onto the component
  105 |    *
> 106 |    * @param {ComponentRef<any>} component
      |            ^
  107 |    * @param {*} options
  108 |    * @returns {ComponentRef<any>}
  109 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  105 |    *
  106 |    * @param {ComponentRef<any>} component
> 107 |    * @param {*} options
      |      ^
  108 |    * @returns {ComponentRef<any>}
  109 |    *
  110 |    * @memberOf InjectionService

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  105 |    *
  106 |    * @param {ComponentRef<any>} component
> 107 |    * @param {*} options
      |            ^
  108 |    * @returns {ComponentRef<any>}
  109 |    *
  110 |    * @memberOf InjectionService

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  106 |    * @param {ComponentRef<any>} component
  107 |    * @param {*} options
> 108 |    * @returns {ComponentRef<any>}
      |      ^
  109 |    *
  110 |    * @memberOf InjectionService
  111 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  106 |    * @param {ComponentRef<any>} component
  107 |    * @param {*} options
> 108 |    * @returns {ComponentRef<any>}
      |              ^
  109 |    *
  110 |    * @memberOf InjectionService
  111 |    */

'@template' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  133 |    * Appends a component to a adjacent location
  134 |    *
> 135 |    * @template T
      |      ^
  136 |    * @param {Type<T>} componentClass
  137 |    * @param {*} [options={}]
  138 |    * @param {Element} [location=this.getRootViewContainerNode()]

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  134 |    *
  135 |    * @template T
> 136 |    * @param {Type<T>} componentClass
      |      ^
  137 |    * @param {*} [options={}]
  138 |    * @param {Element} [location=this.getRootViewContainerNode()]
  139 |    * @returns {ComponentRef<any>}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  134 |    *
  135 |    * @template T
> 136 |    * @param {Type<T>} componentClass
      |            ^
  137 |    * @param {*} [options={}]
  138 |    * @param {Element} [location=this.getRootViewContainerNode()]
  139 |    * @returns {ComponentRef<any>}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  135 |    * @template T
  136 |    * @param {Type<T>} componentClass
> 137 |    * @param {*} [options={}]
      |      ^
  138 |    * @param {Element} [location=this.getRootViewContainerNode()]
  139 |    * @returns {ComponentRef<any>}
  140 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  135 |    * @template T
  136 |    * @param {Type<T>} componentClass
> 137 |    * @param {*} [options={}]
      |            ^
  138 |    * @param {Element} [location=this.getRootViewContainerNode()]
  139 |    * @returns {ComponentRef<any>}
  140 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  136 |    * @param {Type<T>} componentClass
  137 |    * @param {*} [options={}]
> 138 |    * @param {Element} [location=this.getRootViewContainerNode()]
      |      ^
  139 |    * @returns {ComponentRef<any>}
  140 |    *
  141 |    * @memberOf InjectionService

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  136 |    * @param {Type<T>} componentClass
  137 |    * @param {*} [options={}]
> 138 |    * @param {Element} [location=this.getRootViewContainerNode()]
      |            ^
  139 |    * @returns {ComponentRef<any>}
  140 |    *
  141 |    * @memberOf InjectionService

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  137 |    * @param {*} [options={}]
  138 |    * @param {Element} [location=this.getRootViewContainerNode()]
> 139 |    * @returns {ComponentRef<any>}
      |      ^
  140 |    *
  141 |    * @memberOf InjectionService
  142 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  137 |    * @param {*} [options={}]
  138 |    * @param {Element} [location=this.getRootViewContainerNode()]
> 139 |    * @returns {ComponentRef<any>}
      |              ^
  140 |    *
  141 |    * @memberOf InjectionService
  142 |    */


/home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/position/position.ts
JSDoc tag '@class' is redundant in TypeScript code. (no-redundant-jsdoc)
  39 |  *
  40 |  * @export
> 41 |  * @class PositionHelper
     |    ^
  42 |  */
  43 | export class PositionHelper {
  44 | 

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  46 |    * Calculate vertical alignment position
  47 |    *
> 48 |    * @static
     |      ^
  49 |    * @param {any} elDimensions
  50 |    * @param {any} popoverDimensions
  51 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  47 |    *
  48 |    * @static
> 49 |    * @param {any} elDimensions
     |      ^
  50 |    * @param {any} popoverDimensions
  51 |    * @param {any} alignment
  52 |    * @returns {number}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  47 |    *
  48 |    * @static
> 49 |    * @param {any} elDimensions
     |            ^
  50 |    * @param {any} popoverDimensions
  51 |    * @param {any} alignment
  52 |    * @returns {number}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  48 |    * @static
  49 |    * @param {any} elDimensions
> 50 |    * @param {any} popoverDimensions
     |      ^
  51 |    * @param {any} alignment
  52 |    * @returns {number}
  53 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  48 |    * @static
  49 |    * @param {any} elDimensions
> 50 |    * @param {any} popoverDimensions
     |            ^
  51 |    * @param {any} alignment
  52 |    * @returns {number}
  53 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  49 |    * @param {any} elDimensions
  50 |    * @param {any} popoverDimensions
> 51 |    * @param {any} alignment
     |      ^
  52 |    * @returns {number}
  53 |    *
  54 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  49 |    * @param {any} elDimensions
  50 |    * @param {any} popoverDimensions
> 51 |    * @param {any} alignment
     |            ^
  52 |    * @returns {number}
  53 |    *
  54 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  50 |    * @param {any} popoverDimensions
  51 |    * @param {any} alignment
> 52 |    * @returns {number}
     |      ^
  53 |    *
  54 |    * @memberOf PositionHelper
  55 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  50 |    * @param {any} popoverDimensions
  51 |    * @param {any} alignment
> 52 |    * @returns {number}
     |              ^
  53 |    *
  54 |    * @memberOf PositionHelper
  55 |    */

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  67 |    * Calculate vertical caret position
  68 |    *
> 69 |    * @static
     |      ^
  70 |    * @param {any} elDimensions
  71 |    * @param {any} popoverDimensions
  72 |    * @param {any} caretDimensions

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  68 |    *
  69 |    * @static
> 70 |    * @param {any} elDimensions
     |      ^
  71 |    * @param {any} popoverDimensions
  72 |    * @param {any} caretDimensions
  73 |    * @param {any} alignment

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  68 |    *
  69 |    * @static
> 70 |    * @param {any} elDimensions
     |            ^
  71 |    * @param {any} popoverDimensions
  72 |    * @param {any} caretDimensions
  73 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  69 |    * @static
  70 |    * @param {any} elDimensions
> 71 |    * @param {any} popoverDimensions
     |      ^
  72 |    * @param {any} caretDimensions
  73 |    * @param {any} alignment
  74 |    * @returns {number}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  69 |    * @static
  70 |    * @param {any} elDimensions
> 71 |    * @param {any} popoverDimensions
     |            ^
  72 |    * @param {any} caretDimensions
  73 |    * @param {any} alignment
  74 |    * @returns {number}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  70 |    * @param {any} elDimensions
  71 |    * @param {any} popoverDimensions
> 72 |    * @param {any} caretDimensions
     |      ^
  73 |    * @param {any} alignment
  74 |    * @returns {number}
  75 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  70 |    * @param {any} elDimensions
  71 |    * @param {any} popoverDimensions
> 72 |    * @param {any} caretDimensions
     |            ^
  73 |    * @param {any} alignment
  74 |    * @returns {number}
  75 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  71 |    * @param {any} popoverDimensions
  72 |    * @param {any} caretDimensions
> 73 |    * @param {any} alignment
     |      ^
  74 |    * @returns {number}
  75 |    *
  76 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  71 |    * @param {any} popoverDimensions
  72 |    * @param {any} caretDimensions
> 73 |    * @param {any} alignment
     |            ^
  74 |    * @returns {number}
  75 |    *
  76 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  72 |    * @param {any} caretDimensions
  73 |    * @param {any} alignment
> 74 |    * @returns {number}
     |      ^
  75 |    *
  76 |    * @memberOf PositionHelper
  77 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  72 |    * @param {any} caretDimensions
  73 |    * @param {any} alignment
> 74 |    * @returns {number}
     |              ^
  75 |    *
  76 |    * @memberOf PositionHelper
  77 |    */

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  102 |    * Calculate horz alignment position
  103 |    *
> 104 |    * @static
      |      ^
  105 |    * @param {any} elDimensions
  106 |    * @param {any} popoverDimensions
  107 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  103 |    *
  104 |    * @static
> 105 |    * @param {any} elDimensions
      |      ^
  106 |    * @param {any} popoverDimensions
  107 |    * @param {any} alignment
  108 |    * @returns {number}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  103 |    *
  104 |    * @static
> 105 |    * @param {any} elDimensions
      |            ^
  106 |    * @param {any} popoverDimensions
  107 |    * @param {any} alignment
  108 |    * @returns {number}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  104 |    * @static
  105 |    * @param {any} elDimensions
> 106 |    * @param {any} popoverDimensions
      |      ^
  107 |    * @param {any} alignment
  108 |    * @returns {number}
  109 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  104 |    * @static
  105 |    * @param {any} elDimensions
> 106 |    * @param {any} popoverDimensions
      |            ^
  107 |    * @param {any} alignment
  108 |    * @returns {number}
  109 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  105 |    * @param {any} elDimensions
  106 |    * @param {any} popoverDimensions
> 107 |    * @param {any} alignment
      |      ^
  108 |    * @returns {number}
  109 |    *
  110 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  105 |    * @param {any} elDimensions
  106 |    * @param {any} popoverDimensions
> 107 |    * @param {any} alignment
      |            ^
  108 |    * @returns {number}
  109 |    *
  110 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  106 |    * @param {any} popoverDimensions
  107 |    * @param {any} alignment
> 108 |    * @returns {number}
      |      ^
  109 |    *
  110 |    * @memberOf PositionHelper
  111 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  106 |    * @param {any} popoverDimensions
  107 |    * @param {any} alignment
> 108 |    * @returns {number}
      |              ^
  109 |    *
  110 |    * @memberOf PositionHelper
  111 |    */

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  123 |    * Calculate horz caret position
  124 |    *
> 125 |    * @static
      |      ^
  126 |    * @param {any} elDimensions
  127 |    * @param {any} popoverDimensions
  128 |    * @param {any} caretDimensions

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  124 |    *
  125 |    * @static
> 126 |    * @param {any} elDimensions
      |      ^
  127 |    * @param {any} popoverDimensions
  128 |    * @param {any} caretDimensions
  129 |    * @param {any} alignment

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  124 |    *
  125 |    * @static
> 126 |    * @param {any} elDimensions
      |            ^
  127 |    * @param {any} popoverDimensions
  128 |    * @param {any} caretDimensions
  129 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  125 |    * @static
  126 |    * @param {any} elDimensions
> 127 |    * @param {any} popoverDimensions
      |      ^
  128 |    * @param {any} caretDimensions
  129 |    * @param {any} alignment
  130 |    * @returns {number}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  125 |    * @static
  126 |    * @param {any} elDimensions
> 127 |    * @param {any} popoverDimensions
      |            ^
  128 |    * @param {any} caretDimensions
  129 |    * @param {any} alignment
  130 |    * @returns {number}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  126 |    * @param {any} elDimensions
  127 |    * @param {any} popoverDimensions
> 128 |    * @param {any} caretDimensions
      |      ^
  129 |    * @param {any} alignment
  130 |    * @returns {number}
  131 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  126 |    * @param {any} elDimensions
  127 |    * @param {any} popoverDimensions
> 128 |    * @param {any} caretDimensions
      |            ^
  129 |    * @param {any} alignment
  130 |    * @returns {number}
  131 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  127 |    * @param {any} popoverDimensions
  128 |    * @param {any} caretDimensions
> 129 |    * @param {any} alignment
      |      ^
  130 |    * @returns {number}
  131 |    *
  132 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  127 |    * @param {any} popoverDimensions
  128 |    * @param {any} caretDimensions
> 129 |    * @param {any} alignment
      |            ^
  130 |    * @returns {number}
  131 |    *
  132 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  128 |    * @param {any} caretDimensions
  129 |    * @param {any} alignment
> 130 |    * @returns {number}
      |      ^
  131 |    *
  132 |    * @memberOf PositionHelper
  133 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  128 |    * @param {any} caretDimensions
  129 |    * @param {any} alignment
> 130 |    * @returns {number}
      |              ^
  131 |    *
  132 |    * @memberOf PositionHelper
  133 |    */

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  158 |    * Checks if the element's position should be flipped
  159 |    *
> 160 |    * @static
      |      ^
  161 |    * @param {any} elDimensions
  162 |    * @param {any} popoverDimensions
  163 |    * @param {any} placement

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  159 |    *
  160 |    * @static
> 161 |    * @param {any} elDimensions
      |      ^
  162 |    * @param {any} popoverDimensions
  163 |    * @param {any} placement
  164 |    * @param {any} alignment

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  159 |    *
  160 |    * @static
> 161 |    * @param {any} elDimensions
      |            ^
  162 |    * @param {any} popoverDimensions
  163 |    * @param {any} placement
  164 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  160 |    * @static
  161 |    * @param {any} elDimensions
> 162 |    * @param {any} popoverDimensions
      |      ^
  163 |    * @param {any} placement
  164 |    * @param {any} alignment
  165 |    * @param {any} spacing

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  160 |    * @static
  161 |    * @param {any} elDimensions
> 162 |    * @param {any} popoverDimensions
      |            ^
  163 |    * @param {any} placement
  164 |    * @param {any} alignment
  165 |    * @param {any} spacing

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  161 |    * @param {any} elDimensions
  162 |    * @param {any} popoverDimensions
> 163 |    * @param {any} placement
      |      ^
  164 |    * @param {any} alignment
  165 |    * @param {any} spacing
  166 |    * @returns {boolean}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  161 |    * @param {any} elDimensions
  162 |    * @param {any} popoverDimensions
> 163 |    * @param {any} placement
      |            ^
  164 |    * @param {any} alignment
  165 |    * @param {any} spacing
  166 |    * @returns {boolean}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  162 |    * @param {any} popoverDimensions
  163 |    * @param {any} placement
> 164 |    * @param {any} alignment
      |      ^
  165 |    * @param {any} spacing
  166 |    * @returns {boolean}
  167 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  162 |    * @param {any} popoverDimensions
  163 |    * @param {any} placement
> 164 |    * @param {any} alignment
      |            ^
  165 |    * @param {any} spacing
  166 |    * @returns {boolean}
  167 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  163 |    * @param {any} placement
  164 |    * @param {any} alignment
> 165 |    * @param {any} spacing
      |      ^
  166 |    * @returns {boolean}
  167 |    *
  168 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  163 |    * @param {any} placement
  164 |    * @param {any} alignment
> 165 |    * @param {any} spacing
      |            ^
  166 |    * @returns {boolean}
  167 |    *
  168 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  164 |    * @param {any} alignment
  165 |    * @param {any} spacing
> 166 |    * @returns {boolean}
      |      ^
  167 |    *
  168 |    * @memberOf PositionHelper
  169 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  164 |    * @param {any} alignment
  165 |    * @param {any} spacing
> 166 |    * @returns {boolean}
      |              ^
  167 |    *
  168 |    * @memberOf PositionHelper
  169 |    */

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  204 |    * Position caret
  205 |    *
> 206 |    * @static
      |      ^
  207 |    * @param {any} placement
  208 |    * @param {any} elmDim
  209 |    * @param {any} hostDim

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  205 |    *
  206 |    * @static
> 207 |    * @param {any} placement
      |      ^
  208 |    * @param {any} elmDim
  209 |    * @param {any} hostDim
  210 |    * @param {any} caretDimensions

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  205 |    *
  206 |    * @static
> 207 |    * @param {any} placement
      |            ^
  208 |    * @param {any} elmDim
  209 |    * @param {any} hostDim
  210 |    * @param {any} caretDimensions

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  206 |    * @static
  207 |    * @param {any} placement
> 208 |    * @param {any} elmDim
      |      ^
  209 |    * @param {any} hostDim
  210 |    * @param {any} caretDimensions
  211 |    * @param {any} alignment

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  206 |    * @static
  207 |    * @param {any} placement
> 208 |    * @param {any} elmDim
      |            ^
  209 |    * @param {any} hostDim
  210 |    * @param {any} caretDimensions
  211 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  207 |    * @param {any} placement
  208 |    * @param {any} elmDim
> 209 |    * @param {any} hostDim
      |      ^
  210 |    * @param {any} caretDimensions
  211 |    * @param {any} alignment
  212 |    * @returns {*}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  207 |    * @param {any} placement
  208 |    * @param {any} elmDim
> 209 |    * @param {any} hostDim
      |            ^
  210 |    * @param {any} caretDimensions
  211 |    * @param {any} alignment
  212 |    * @returns {*}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  208 |    * @param {any} elmDim
  209 |    * @param {any} hostDim
> 210 |    * @param {any} caretDimensions
      |      ^
  211 |    * @param {any} alignment
  212 |    * @returns {*}
  213 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  208 |    * @param {any} elmDim
  209 |    * @param {any} hostDim
> 210 |    * @param {any} caretDimensions
      |            ^
  211 |    * @param {any} alignment
  212 |    * @returns {*}
  213 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  209 |    * @param {any} hostDim
  210 |    * @param {any} caretDimensions
> 211 |    * @param {any} alignment
      |      ^
  212 |    * @returns {*}
  213 |    *
  214 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  209 |    * @param {any} hostDim
  210 |    * @param {any} caretDimensions
> 211 |    * @param {any} alignment
      |            ^
  212 |    * @returns {*}
  213 |    *
  214 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  210 |    * @param {any} caretDimensions
  211 |    * @param {any} alignment
> 212 |    * @returns {*}
      |      ^
  213 |    *
  214 |    * @memberOf PositionHelper
  215 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  210 |    * @param {any} caretDimensions
  211 |    * @param {any} alignment
> 212 |    * @returns {*}
      |              ^
  213 |    *
  214 |    * @memberOf PositionHelper
  215 |    */

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  242 |    * Position content
  243 |    *
> 244 |    * @static
      |      ^
  245 |    * @param {any} placement
  246 |    * @param {any} elmDim
  247 |    * @param {any} hostDim

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  243 |    *
  244 |    * @static
> 245 |    * @param {any} placement
      |      ^
  246 |    * @param {any} elmDim
  247 |    * @param {any} hostDim
  248 |    * @param {any} spacing

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  243 |    *
  244 |    * @static
> 245 |    * @param {any} placement
      |            ^
  246 |    * @param {any} elmDim
  247 |    * @param {any} hostDim
  248 |    * @param {any} spacing

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  244 |    * @static
  245 |    * @param {any} placement
> 246 |    * @param {any} elmDim
      |      ^
  247 |    * @param {any} hostDim
  248 |    * @param {any} spacing
  249 |    * @param {any} alignment

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  244 |    * @static
  245 |    * @param {any} placement
> 246 |    * @param {any} elmDim
      |            ^
  247 |    * @param {any} hostDim
  248 |    * @param {any} spacing
  249 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  245 |    * @param {any} placement
  246 |    * @param {any} elmDim
> 247 |    * @param {any} hostDim
      |      ^
  248 |    * @param {any} spacing
  249 |    * @param {any} alignment
  250 |    * @returns {*}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  245 |    * @param {any} placement
  246 |    * @param {any} elmDim
> 247 |    * @param {any} hostDim
      |            ^
  248 |    * @param {any} spacing
  249 |    * @param {any} alignment
  250 |    * @returns {*}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  246 |    * @param {any} elmDim
  247 |    * @param {any} hostDim
> 248 |    * @param {any} spacing
      |      ^
  249 |    * @param {any} alignment
  250 |    * @returns {*}
  251 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  246 |    * @param {any} elmDim
  247 |    * @param {any} hostDim
> 248 |    * @param {any} spacing
      |            ^
  249 |    * @param {any} alignment
  250 |    * @returns {*}
  251 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  247 |    * @param {any} hostDim
  248 |    * @param {any} spacing
> 249 |    * @param {any} alignment
      |      ^
  250 |    * @returns {*}
  251 |    *
  252 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  247 |    * @param {any} hostDim
  248 |    * @param {any} spacing
> 249 |    * @param {any} alignment
      |            ^
  250 |    * @returns {*}
  251 |    *
  252 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  248 |    * @param {any} spacing
  249 |    * @param {any} alignment
> 250 |    * @returns {*}
      |      ^
  251 |    *
  252 |    * @memberOf PositionHelper
  253 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  248 |    * @param {any} spacing
  249 |    * @param {any} alignment
> 250 |    * @returns {*}
      |              ^
  251 |    *
  252 |    * @memberOf PositionHelper
  253 |    */

JSDoc tag '@static' is redundant in TypeScript code. (no-redundant-jsdoc)
  280 |    * Determine placement based on flip
  281 |    *
> 282 |    * @static
      |      ^
  283 |    * @param {any} placement
  284 |    * @param {any} elmDim
  285 |    * @param {any} hostDim

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  281 |    *
  282 |    * @static
> 283 |    * @param {any} placement
      |      ^
  284 |    * @param {any} elmDim
  285 |    * @param {any} hostDim
  286 |    * @param {any} spacing

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  281 |    *
  282 |    * @static
> 283 |    * @param {any} placement
      |            ^
  284 |    * @param {any} elmDim
  285 |    * @param {any} hostDim
  286 |    * @param {any} spacing

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  282 |    * @static
  283 |    * @param {any} placement
> 284 |    * @param {any} elmDim
      |      ^
  285 |    * @param {any} hostDim
  286 |    * @param {any} spacing
  287 |    * @param {any} alignment

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  282 |    * @static
  283 |    * @param {any} placement
> 284 |    * @param {any} elmDim
      |            ^
  285 |    * @param {any} hostDim
  286 |    * @param {any} spacing
  287 |    * @param {any} alignment

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  283 |    * @param {any} placement
  284 |    * @param {any} elmDim
> 285 |    * @param {any} hostDim
      |      ^
  286 |    * @param {any} spacing
  287 |    * @param {any} alignment
  288 |    * @returns {*}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  283 |    * @param {any} placement
  284 |    * @param {any} elmDim
> 285 |    * @param {any} hostDim
      |            ^
  286 |    * @param {any} spacing
  287 |    * @param {any} alignment
  288 |    * @returns {*}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  284 |    * @param {any} elmDim
  285 |    * @param {any} hostDim
> 286 |    * @param {any} spacing
      |      ^
  287 |    * @param {any} alignment
  288 |    * @returns {*}
  289 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  284 |    * @param {any} elmDim
  285 |    * @param {any} hostDim
> 286 |    * @param {any} spacing
      |            ^
  287 |    * @param {any} alignment
  288 |    * @returns {*}
  289 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  285 |    * @param {any} hostDim
  286 |    * @param {any} spacing
> 287 |    * @param {any} alignment
      |      ^
  288 |    * @returns {*}
  289 |    *
  290 |    * @memberOf PositionHelper

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  285 |    * @param {any} hostDim
  286 |    * @param {any} spacing
> 287 |    * @param {any} alignment
      |            ^
  288 |    * @returns {*}
  289 |    *
  290 |    * @memberOf PositionHelper

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  286 |    * @param {any} spacing
  287 |    * @param {any} alignment
> 288 |    * @returns {*}
      |      ^
  289 |    *
  290 |    * @memberOf PositionHelper
  291 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  286 |    * @param {any} spacing
  287 |    * @param {any} alignment
> 288 |    * @returns {*}
      |              ^
  289 |    *
  290 |    * @memberOf PositionHelper
  291 |    */


/home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge.component.ts
if statements must be braced (curly)
  334 | 
  335 |   isActive(entry): boolean {
> 336 |     if (!this.activeEntries) return false;
      |    ^
  337 |     const item = this.activeEntries.find(d => {
  338 |       return entry.name === d.name && entry.series === d.series;
  339 |     });


/home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/linear-gauge.component.ts
if statements must be braced (curly)
  198 | 
  199 |     const { width, height } = el.nativeElement.getBoundingClientRect();
> 200 |     if (width === 0 || height === 0) return;
      |    ^
  201 |     const oldScale = resizeScale;
  202 |     const availableWidth = this.dims.width;
  203 |     const availableHeight = Math.max(this.dims.height / 2 - 15, 0);


/home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map.component.ts
'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  215 |    *    Mixed: [8,"2%"], ["8px","2%"], "8,2%", "[8,2%]"
  216 |    *
> 217 |    * @param {(string | number | Array<string | number>)} value
      |      ^
  218 |    * @param {number} [index=0]
  219 |    * @param {number} N
  220 |    * @param {number} L

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  215 |    *    Mixed: [8,"2%"], ["8px","2%"], "8,2%", "[8,2%]"
  216 |    *
> 217 |    * @param {(string | number | Array<string | number>)} value
      |            ^
  218 |    * @param {number} [index=0]
  219 |    * @param {number} N
  220 |    * @param {number} L

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  216 |    *
  217 |    * @param {(string | number | Array<string | number>)} value
> 218 |    * @param {number} [index=0]
      |      ^
  219 |    * @param {number} N
  220 |    * @param {number} L
  221 |    * @returns {number}

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  216 |    *
  217 |    * @param {(string | number | Array<string | number>)} value
> 218 |    * @param {number} [index=0]
      |            ^
  219 |    * @param {number} N
  220 |    * @param {number} L
  221 |    * @returns {number}

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  217 |    * @param {(string | number | Array<string | number>)} value
  218 |    * @param {number} [index=0]
> 219 |    * @param {number} N
      |      ^
  220 |    * @param {number} L
  221 |    * @returns {number}
  222 |    *

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  217 |    * @param {(string | number | Array<string | number>)} value
  218 |    * @param {number} [index=0]
> 219 |    * @param {number} N
      |            ^
  220 |    * @param {number} L
  221 |    * @returns {number}
  222 |    *

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  218 |    * @param {number} [index=0]
  219 |    * @param {number} N
> 220 |    * @param {number} L
      |      ^
  221 |    * @returns {number}
  222 |    *
  223 |    * @memberOf HeatMapComponent

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  218 |    * @param {number} [index=0]
  219 |    * @param {number} N
> 220 |    * @param {number} L
      |            ^
  221 |    * @returns {number}
  222 |    *
  223 |    * @memberOf HeatMapComponent

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  219 |    * @param {number} N
  220 |    * @param {number} L
> 221 |    * @returns {number}
      |      ^
  222 |    *
  223 |    * @memberOf HeatMapComponent
  224 |    */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  219 |    * @param {number} N
  220 |    * @param {number} L
> 221 |    * @returns {number}
      |              ^
  222 |    *
  223 |    * @memberOf HeatMapComponent
  224 |    */


/home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-series.component.ts
if statements must be braced (curly)
  154 | 
  155 |   isActive(entry): boolean {
> 156 |     if (!this.activeEntries) return false;
      |    ^
  157 |     const item = this.activeEntries.find(d => {
  158 |       return entry.name === d.name && entry.series === d.series;
  159 |     });


/home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-chart.component.ts
Forbidden bitwise operation (no-bitwise)
  213 |     });
  214 | 
> 215 |     const halfWidth = ~~(this.dims.width / 2);
      |                      ^
  216 |     const halfHeight = ~~(this.dims.height / 2);
  217 | 
  218 |     const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);

Forbidden bitwise operation (no-bitwise)
  213 |     });
  214 | 
> 215 |     const halfWidth = ~~(this.dims.width / 2);
      |                       ^
  216 |     const halfHeight = ~~(this.dims.height / 2);
  217 | 
  218 |     const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);

Forbidden bitwise operation (no-bitwise)
  214 | 
  215 |     const halfWidth = ~~(this.dims.width / 2);
> 216 |     const halfHeight = ~~(this.dims.height / 2);
      |                       ^
  217 | 
  218 |     const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);
  219 | 

Forbidden bitwise operation (no-bitwise)
  214 | 
  215 |     const halfWidth = ~~(this.dims.width / 2);
> 216 |     const halfHeight = ~~(this.dims.height / 2);
      |                        ^
  217 | 
  218 |     const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);
  219 | 

Forbidden bitwise operation (no-bitwise)
  302 | 
  303 |     this.radiusTicks = this.yAxisScale
> 304 |       .ticks(~~(this.dims.height / 50))
      |             ^
  305 |       .map(d => this.yScale(d));
  306 |   }
  307 | 

Forbidden bitwise operation (no-bitwise)
  302 | 
  303 |     this.radiusTicks = this.yAxisScale
> 304 |       .ticks(~~(this.dims.height / 50))
      |              ^
  305 |       .map(d => this.yScale(d));
  306 |   }
  307 | 


/home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/color-utils.ts
Shadowed name: 'color' (no-shadowed-variable)
  18 |  */
  19 | export function invertColor(value: string): string {
> 20 |   const color = rgb(value);
     |        ^
  21 |   const { r, g, b, opacity } = color;
  22 |   if (opacity === 0) {
  23 |     return color.toString();


/home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/id.ts
Forbidden bitwise operation (no-bitwise)
  12 |  */
  13 | export function id(): string {
> 14 |   let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);
     |                         ^
  15 | 
  16 |   // append a 'a' because neo gets mad
  17 |   newId = `a${newId}`;


/home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/sort.ts
if statements must be braced (curly)
  31 | 
  32 |     if (direction === 'asc') {
> 33 |       if (aDate > bDate) return 1;
     |      ^
  34 |       if (bDate > aDate) return -1;
  35 |       return 0;
  36 |     } else {

if statements must be braced (curly)
  32 |     if (direction === 'asc') {
  33 |       if (aDate > bDate) return 1;
> 34 |       if (bDate > aDate) return -1;
     |      ^
  35 |       return 0;
  36 |     } else {
  37 |       if (aDate > bDate) return -1;

if statements must be braced (curly)
  35 |       return 0;
  36 |     } else {
> 37 |       if (aDate > bDate) return -1;
     |      ^
  38 |       if (bDate > aDate) return 1;
  39 |       return 0;
  40 |     }

if statements must be braced (curly)
  36 |     } else {
  37 |       if (aDate > bDate) return -1;
> 38 |       if (bDate > aDate) return 1;
     |      ^
  39 |       return 0;
  40 |     }
  41 |   });


/home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/throttle.ts
'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  4 |  *
  5 |  * @export
> 6 |  * @param {*}      func
    |    ^
  7 |  * @param {number} wait
  8 |  * @param {*}      [options]
  9 |  * @returns

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  4 |  *
  5 |  * @export
> 6 |  * @param {*}      func
    |          ^
  7 |  * @param {number} wait
  8 |  * @param {*}      [options]
  9 |  * @returns

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
   5 |  * @export
   6 |  * @param {*}      func
>  7 |  * @param {number} wait
     |    ^
   8 |  * @param {*}      [options]
   9 |  * @returns
  10 |  */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
   5 |  * @export
   6 |  * @param {*}      func
>  7 |  * @param {number} wait
     |          ^
   8 |  * @param {*}      [options]
   9 |  * @returns
  10 |  */

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
   6 |  * @param {*}      func
   7 |  * @param {number} wait
>  8 |  * @param {*}      [options]
     |    ^
   9 |  * @returns
  10 |  */
  11 | export function throttle(func: any, wait: number, options?: any) {

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
   6 |  * @param {*}      func
   7 |  * @param {number} wait
>  8 |  * @param {*}      [options]
     |          ^
   9 |  * @returns
  10 |  */
  11 | export function throttle(func: any, wait: number, options?: any) {

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
   7 |  * @param {number} wait
   8 |  * @param {*}      [options]
>  9 |  * @returns
     |    ^
  10 |  */
  11 | export function throttle(func: any, wait: number, options?: any) {
  12 |   options = options || {};

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  56 |  *
  57 |  * @export
> 58 |  * @param {number} duration
     |    ^
  59 |  * @param {*} [options]
  60 |  * @returns
  61 |  */

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  56 |  *
  57 |  * @export
> 58 |  * @param {number} duration
     |          ^
  59 |  * @param {*} [options]
  60 |  * @returns
  61 |  */

'@param' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  57 |  * @export
  58 |  * @param {number} duration
> 59 |  * @param {*} [options]
     |    ^
  60 |  * @returns
  61 |  */
  62 | export function throttleable(duration: number, options?: any) {

Type annotation in JSDoc is redundant in TypeScript code. (no-redundant-jsdoc)
  57 |  * @export
  58 |  * @param {number} duration
> 59 |  * @param {*} [options]
     |          ^
  60 |  * @returns
  61 |  */
  62 | export function throttleable(duration: number, options?: any) {

'@returns' is redundant in TypeScript code if it has no description. (no-redundant-jsdoc)
  58 |  * @param {number} duration
  59 |  * @param {*} [options]
> 60 |  * @returns
     |    ^
  61 |  */
  62 | export function throttleable(duration: number, options?: any) {
  63 |   return function innerDecorator(target, key, descriptor) {


/home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumb/breadcrumb.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  20 | export class TdBreadcrumbComponent implements AfterViewInit {
  21 | 
> 22 |   private _displayCrumb: boolean = true;
     |          ^
  23 |   private _width: number = 0;
  24 |   // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'
  25 |   separatorIcon: string = 'chevron_right';

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  20 | export class TdBreadcrumbComponent implements AfterViewInit {
  21 | 
> 22 |   private _displayCrumb: boolean = true;
     |                         ^
  23 |   private _width: number = 0;
  24 |   // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'
  25 |   separatorIcon: string = 'chevron_right';

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  21 | 
  22 |   private _displayCrumb: boolean = true;
> 23 |   private _width: number = 0;
     |          ^
  24 |   // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'
  25 |   separatorIcon: string = 'chevron_right';
  26 |   // Should show the right chevron or not before the label

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  21 | 
  22 |   private _displayCrumb: boolean = true;
> 23 |   private _width: number = 0;
     |                  ^
  24 |   // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'
  25 |   separatorIcon: string = 'chevron_right';
  26 |   // Should show the right chevron or not before the label

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  23 |   private _width: number = 0;
  24 |   // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'
> 25 |   separatorIcon: string = 'chevron_right';
     |                 ^
  26 |   // Should show the right chevron or not before the label
  27 |   _displayIcon: boolean = true;
  28 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  25 |   separatorIcon: string = 'chevron_right';
  26 |   // Should show the right chevron or not before the label
> 27 |   _displayIcon: boolean = true;
     |  ^
  28 | 
  29 |   get displayCrumb(): boolean {
  30 |     return this._displayCrumb;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  25 |   separatorIcon: string = 'chevron_right';
  26 |   // Should show the right chevron or not before the label
> 27 |   _displayIcon: boolean = true;
     |                ^
  28 | 
  29 |   get displayCrumb(): boolean {
  30 |     return this._displayCrumb;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  56 |   }
  57 | 
> 58 |   constructor(private _elementRef: ElementRef,
     |                      ^
  59 |               private _changeDetectorRef: ChangeDetectorRef) {
  60 |   }
  61 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  57 | 
  58 |   constructor(private _elementRef: ElementRef,
> 59 |               private _changeDetectorRef: ChangeDetectorRef) {
     |                      ^
  60 |   }
  61 | 
  62 |   ngAfterViewInit(): void {

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
  63 |     // set the width from the actual rendered DOM element
  64 |     setTimeout(() => {
> 65 |       this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;
     |                     ^
  66 |       this._changeDetectorRef.markForCheck();
  67 |     });
  68 |   }

missing whitespace (whitespace)
  63 |     // set the width from the actual rendered DOM element
  64 |     setTimeout(() => {
> 65 |       this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;
     |                                  ^
  66 |       this._changeDetectorRef.markForCheck();
  67 |     });
  68 |   }


/home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumbs.component.ts
variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  38 | export class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {
  39 | 
> 40 |   private _resizeSubscription: Subscription = Subscription.EMPTY;
     |          ^
  41 |   private _widthSubject: Subject<number> = new Subject<number>();
  42 |   private _resizing: boolean = false;
  43 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  39 | 
  40 |   private _resizeSubscription: Subscription = Subscription.EMPTY;
> 41 |   private _widthSubject: Subject<number> = new Subject<number>();
     |          ^
  42 |   private _resizing: boolean = false;
  43 | 
  44 |   // all the sub components, which are the individual breadcrumbs

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  40 |   private _resizeSubscription: Subscription = Subscription.EMPTY;
  41 |   private _widthSubject: Subject<number> = new Subject<number>();
> 42 |   private _resizing: boolean = false;
     |          ^
  43 | 
  44 |   // all the sub components, which are the individual breadcrumbs
  45 |   @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;

Type boolean trivially inferred from a boolean literal, remove type annotation (no-inferrable-types)
  40 |   private _resizeSubscription: Subscription = Subscription.EMPTY;
  41 |   private _widthSubject: Subject<number> = new Subject<number>();
> 42 |   private _resizing: boolean = false;
     |                     ^
  43 | 
  44 |   // all the sub components, which are the individual breadcrumbs
  45 |   @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  43 | 
  44 |   // all the sub components, which are the individual breadcrumbs
> 45 |   @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;
     |                                          ^
  46 |   // the list of hidden breadcrumbs not shown right now (responsive)
  47 |   hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];
  48 | 


In the class "TdBreadcrumbsComponent", the directive input property "separatorIcon" should not be renamed.
However, you should use an alias when the directive name is also an input property, and the directive name
doesn't describe the property. In this last case, you can disable this rule with `tslint:disable-next-line:no-input-rename`.
   (no-input-rename)
  50 |    * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.
  51 |    */
> 52 |   @Input('separatorIcon') separatorIcon: string = 'chevron_right';
     |  ^
  53 | 
  54 |   constructor(private _elementRef: ElementRef,
  55 |               private _changeDetectorRef: ChangeDetectorRef) {

Type string trivially inferred from a string literal, remove type annotation (no-inferrable-types)
  50 |    * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.
  51 |    */
> 52 |   @Input('separatorIcon') separatorIcon: string = 'chevron_right';
     |                                         ^
  53 | 
  54 |   constructor(private _elementRef: ElementRef,
  55 |               private _changeDetectorRef: ChangeDetectorRef) {

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  52 |   @Input('separatorIcon') separatorIcon: string = 'chevron_right';
  53 | 
> 54 |   constructor(private _elementRef: ElementRef,
     |                      ^
  55 |               private _changeDetectorRef: ChangeDetectorRef) {
  56 |   }
  57 | 

variable name must be in lowerCamelCase, PascalCase or UPPER_CASE (variable-name)
  53 | 
  54 |   constructor(private _elementRef: ElementRef,
> 55 |               private _changeDetectorRef: ChangeDetectorRef) {
     |                      ^
  56 |   }
  57 | 
  58 |   ngOnInit(): void {

Identifier 'element' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   95 |   */
   96 |   get nativeElementWidth(): number {
>  97 |     let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);
      |        ^
   98 |     // Need to take into account border, margin and padding that might be around all the crumbs
   99 |     let style: CSSStyleDeclaration = window.getComputedStyle(element);
  100 |     let borderLeft: number = parseInt(style.borderLeft, 10);

Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead. (no-angle-bracket-type-assertion)
   95 |   */
   96 |   get nativeElementWidth(): number {
>  97 |     let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);
      |                                ^
   98 |     // Need to take into account border, margin and padding that might be around all the crumbs
   99 |     let style: CSSStyleDeclaration = window.getComputedStyle(element);
  100 |     let borderLeft: number = parseInt(style.borderLeft, 10);

missing whitespace (whitespace)
   95 |   */
   96 |   get nativeElementWidth(): number {
>  97 |     let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);
      |                                             ^
   98 |     // Need to take into account border, margin and padding that might be around all the crumbs
   99 |     let style: CSSStyleDeclaration = window.getComputedStyle(element);
  100 |     let borderLeft: number = parseInt(style.borderLeft, 10);

Identifier 'style' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   97 |     let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);
   98 |     // Need to take into account border, margin and padding that might be around all the crumbs
>  99 |     let style: CSSStyleDeclaration = window.getComputedStyle(element);
      |        ^
  100 |     let borderLeft: number = parseInt(style.borderLeft, 10);
  101 |     let borderRight: number = parseInt(style.borderRight, 10);
  102 |     let marginLeft: number = parseInt(style.marginLeft, 10);

Identifier 'borderLeft' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   98 |     // Need to take into account border, margin and padding that might be around all the crumbs
   99 |     let style: CSSStyleDeclaration = window.getComputedStyle(element);
> 100 |     let borderLeft: number = parseInt(style.borderLeft, 10);
      |        ^
  101 |     let borderRight: number = parseInt(style.borderRight, 10);
  102 |     let marginLeft: number = parseInt(style.marginLeft, 10);
  103 |     let marginRight: number = parseInt(style.marginRight, 10);

Identifier 'borderRight' is never reassigned; use 'const' instead of 'let'. (prefer-const)
   99 |     let style: CSSStyleDeclaration = window.getComputedStyle(element);
  100 |     let borderLeft: number = parseInt(style.borderLeft, 10);
> 101 |     let borderRight: number = parseInt(style.borderRight, 10);
      |        ^
  102 |     let marginLeft: number = parseInt(style.marginLeft, 10);
  103 |     let marginRight: number = parseInt(style.marginRight, 10);
  104 |     let paddingLeft: number = parseInt(style.paddingLeft, 10);

Identifier 'marginLeft' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  100 |     let borderLeft: number = parseInt(style.borderLeft, 10);
  101 |     let borderRight: number = parseInt(style.borderRight, 10);
> 102 |     let marginLeft: number = parseInt(style.marginLeft, 10);
      |        ^
  103 |     let marginRight: number = parseInt(style.marginRight, 10);
  104 |     let paddingLeft: number = parseInt(style.paddingLeft, 10);
  105 |     let paddingRight: number = parseInt(style.paddingRight, 10);

Identifier 'marginRight' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  101 |     let borderRight: number = parseInt(style.borderRight, 10);
  102 |     let marginLeft: number = parseInt(style.marginLeft, 10);
> 103 |     let marginRight: number = parseInt(style.marginRight, 10);
      |        ^
  104 |     let paddingLeft: number = parseInt(style.paddingLeft, 10);
  105 |     let paddingRight: number = parseInt(style.paddingRight, 10);
  106 | 

Identifier 'paddingLeft' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  102 |     let marginLeft: number = parseInt(style.marginLeft, 10);
  103 |     let marginRight: number = parseInt(style.marginRight, 10);
> 104 |     let paddingLeft: number = parseInt(style.paddingLeft, 10);
      |        ^
  105 |     let paddingRight: number = parseInt(style.paddingRight, 10);
  106 | 
  107 |     return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;

Identifier 'paddingRight' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  103 |     let marginRight: number = parseInt(style.marginRight, 10);
  104 |     let paddingLeft: number = parseInt(style.paddingLeft, 10);
> 105 |     let paddingRight: number = parseInt(style.paddingRight, 10);
      |        ^
  106 | 
  107 |     return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;
  108 |   }

Identifier 'breadcrumbArray' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  119 |    */
  120 |   private setCrumbIcons(): void {
> 121 |     let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();
      |        ^
  122 |     if (breadcrumbArray.length > 0) {
  123 |       // don't show the icon on the last breadcrumb
  124 |       breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;

Identifier 'crumbsArray' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  130 | 
  131 |   private _calculateVisibility(): void {
> 132 |     let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();
      |        ^
  133 |     let crumbWidthSum: number = 0;
  134 |     let hiddenCrumbs: TdBreadcrumbComponent[] = [];
  135 |     // loop through crumbs in reverse order to calculate which ones should be removed

Type number trivially inferred from a number literal, remove type annotation (no-inferrable-types)
  131 |   private _calculateVisibility(): void {
  132 |     let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();
> 133 |     let crumbWidthSum: number = 0;
      |                       ^
  134 |     let hiddenCrumbs: TdBreadcrumbComponent[] = [];
  135 |     // loop through crumbs in reverse order to calculate which ones should be removed
  136 |     for (let i: number = crumbsArray.length - 1; i >= 0; i--) {

Identifier 'hiddenCrumbs' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  132 |     let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();
  133 |     let crumbWidthSum: number = 0;
> 134 |     let hiddenCrumbs: TdBreadcrumbComponent[] = [];
      |        ^
  135 |     // loop through crumbs in reverse order to calculate which ones should be removed
  136 |     for (let i: number = crumbsArray.length - 1; i >= 0; i--) {
  137 |       let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];

Identifier 'breadcrumb' is never reassigned; use 'const' instead of 'let'. (prefer-const)
  135 |     // loop through crumbs in reverse order to calculate which ones should be removed
  136 |     for (let i: number = crumbsArray.length - 1; i >= 0; i--) {
> 137 |       let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];
      |          ^
  138 |       // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array
  139 |       // and hide it
  140 |       if ((crumbWidthSum + breadcrumb.width) > this.nativeElementWidth) {


/home/idnes/Projects/awe/src/lib/window-resize-listener/lib/window-scroll-listener.service.ts
create is deprecated: use new Observable() instead (deprecation)
  12 |   constructor() {
  13 |     this.initOptimizedSCrollEvent();
> 14 |     this.scrollObservable = Observable.create((observer: Observer<any>) => {
     |                                       ^
  15 |       this.optimizedScrollCallback = () => {
  16 |         observer.next(0);
  17 |       };

non-arrow functions are forbidden (only-arrow-functions)
  58 |     const throttle = type => {
  59 |       let running = false;
> 60 |       this.nativeScrollCallback = function() {
     |                                  ^
  61 |         if (running) {
  62 |           return;
  63 |         }

non-arrow functions are forbidden (only-arrow-functions)
  63 |         }
  64 |         running = true;
> 65 |         requestAnimationFrame(function() {
     |                              ^
  66 |           window.dispatchEvent(
  67 |             new CustomEvent(ScrollListenerService.OPTIMIZED_SCROLL_NAME)
  68 |           );


/home/idnes/Projects/awe/src/web/app/core/data/funca.ts
of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  27 |     return getChild(d).pipe(
  28 |       expand(
> 29 |         itm => of(itm).pipe(mergeMap(i => getChild(i.id)))
     |               ^
  30 |       ),
  31 |       // startWith(y(root)),
  32 |       // take(500),


/home/idnes/Projects/awe/src/web/app/core/initializer.ts
of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  15 |   size: SIZE
  16 | ) => {
> 17 |   const observable$ = of(true);
     |                      ^
  18 |   const renderer = rendererFactory2.createRenderer(null, null);
  19 |   // console.log(window.innerWidth);
  20 |   // return async () => await pref.create({key: 'hello', value: 'world'}).toPromise();


/home/idnes/Projects/awe/src/web/app/core/services/address.service.ts
of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
   7 | 
   8 |   get_administrative_division(a: any, b: any, c: any) {
>  9 |     return of([]);
     |           ^
  10 |   }
  11 | }
  12 | 


/home/idnes/Projects/awe/src/web/app/core/services/dummy.service.ts
of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  93 |     getChild('').pipe(
  94 |       expand(
> 95 |         itm => of(itm).pipe(mergeMap(i => getChild(i.id)))
     |               ^
  96 |       ),
  97 |       take(500),
  98 |       toArray()

of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  123 |       };
  124 | 
> 125 |       const root$ = of(root);
      |                    ^
  126 | 
  127 |       const rec$ = getChild(root);
  128 |       return rec$.pipe(

of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  128 |       return rec$.pipe(
  129 |         expand(
> 130 |           id => of(id).pipe(mergeMap(i => getChild(i.i)))
      |                ^
  131 |         ),
  132 |         toArray()
  133 |       );

of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  158 |       };
  159 | 
> 160 |       const root$ = of(root);
      |                    ^
  161 | 
  162 |       const rec$ = getChild(root);
  163 |       return rec$.pipe(

of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  163 |       return rec$.pipe(
  164 |         expand(
> 165 |           id => of(id).pipe(mergeMap(i => getChild(i.i)))
      |                ^
  166 |         ),
  167 |         toArray()
  168 |       );


/home/idnes/Projects/awe/src/web/app/core/services/routename.service.ts
startWith is deprecated: use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) (deprecation)
  16 |       .asObservable()
  17 |       .pipe(
> 18 |         startWith(null),
     |        ^
  19 |         pairwise(),
  20 |         filter((x: any) => (x[1] !== x[0])),
  21 |         // map(w => (`${w[0]}=>${w[1]}`)),


/home/idnes/Projects/awe/src/web/app/extra/components/chart-bar-group/index.ts
" should be ' (quotemark)
> 1 | export {ChartBarGroupComponent as ChartBarGroup} from "./chart-bar-group";
    |                                                      ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/chart-bar/index.ts
file should end with a newline (eofline)
> 1 | export { ChartBarComponent as ChartBar } from './chart-bar.component';
    |                                                                      ^


/home/idnes/Projects/awe/src/web/app/extra/components/chart-donut/index.ts
Missing semicolon (semicolon)
> 1 | export {ChartDonutComponent as ChartDonut} from './chart-donut.component'
    |                                                                         ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/chart-line/index.ts
Missing semicolon (semicolon)
> 1 | export {ChartLineComponent as ChartLine} from './chart-line.component'
    |                                                                      ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/confirm-dialog.component.ts
Missing semicolon (semicolon)
> 1 | import {Component} from '@angular/core'
    |                                       ^
  2 | 
  3 | @Component({
  4 |   selector: 'confirm-dialog',


/home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/index.ts
Missing semicolon (semicolon)
> 1 | export {ConfirmDialogComponent as ConfirmDialog} from './confirm-dialog.component'
    |                                                                                  ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/filter-box/index.ts
Missing semicolon (semicolon)
> 1 | export {FilterBoxComponent as FilterBox} from './filter-box.component'
    |                                                                      ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/member-table/member-table.component.ts
Missing semicolon (semicolon)
  131 | 
  132 |   onCopySuccess(e: any) {
> 133 |     this._clipboardService.copyFromContent(e)
      |                                             ^
  134 |   }
  135 | 
  136 |   onCopyError() {}


/home/idnes/Projects/awe/src/web/app/extra/components/page-bottom-sheet/index.ts
Missing semicolon (semicolon)
> 1 | export {PageBottomSheetComponent as PageBottomSheet} from  './page-bottom-sheet.component'
    |                                                                                          ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/index.ts
Missing semicolon (semicolon)
> 1 | export {SnackbarNotificationComponent as SnackbarNotification} from './snackbar-notification.component'
    |                                                                                                       ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/snackbar-notification.component.ts
Too many spaces before 'from' (import-spacing)
> 1 | import {Component, Inject}  from '@angular/core'
    |                          ^
  2 | // import { MAT_SNACK_BAR_DATA } from '@angular/material';
  3 | 
  4 | @Component({

Missing semicolon (semicolon)
> 1 | import {Component, Inject}  from '@angular/core'
    |                                                ^
  2 | // import { MAT_SNACK_BAR_DATA } from '@angular/material';
  3 | 
  4 | @Component({


/home/idnes/Projects/awe/src/web/app/extra/components/svg-svg/svg-svg.component.ts
missing whitespace (whitespace)
  136 |     const { clientHeight, clientWidth } = element;
  137 |     console.log({ev, h: clientHeight, w: clientWidth, e: element});
> 138 |     if(ev === 'on changes') {
      |      ^
  139 |       this.w = clientWidth;
  140 |       this.h = clientHeight;
  141 |     }


/home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/index.ts
Missing semicolon (semicolon)
> 1 | export {TreeViewerComponent as TreeViewer} from './tree-viewer.component'
    |                                                                         ^
  2 | 


/home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/level.ts
Missing semicolon (semicolon)
  270 |     ]
  271 |   }
> 272 | ]
      | ^
  273 | export interface levelInterface {
  274 |   id: number;
  275 |   name: string;

Class name must be in pascal case (class-name)
  271 |   }
  272 | ]
> 273 | export interface levelInterface {
      |                 ^
  274 |   id: number;
  275 |   name: string;
  276 |   requirement: number;

Missing semicolon (semicolon)
  275 |   name: string;
  276 |   requirement: number;
> 277 |   percentage?: [number]
      |                       ^
  278 | }
  279 | 


/home/idnes/Projects/awe/src/web/app/extra/screens/admin-screen/admin-screen.component.ts
of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  18 |   height: 0;
  19 |   onResized(event: ResizedEvent) {
> 20 |     of(event).pipe(
     |    ^
  21 |       throttleTime(60)
  22 |     ).subscribe(x => console.log(x));
  23 |   }


/home/idnes/Projects/awe/src/web/app/extra/screens/dev-screen/dev-screen.component.ts
Unnecessarily quoted property 'A' found. (object-literal-key-quotes)
  18 |   rw: string;
  19 |   paz: string;
> 20 |   mypattern = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } };
     |                ^
  21 |   rtrw = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } }
  22 | 
  23 |   constructor(public dummy: Dummy) {

Unnecessarily quoted property 'B' found. (object-literal-key-quotes)
  18 |   rw: string;
  19 |   paz: string;
> 20 |   mypattern = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } };
     |                                                       ^
  21 |   rtrw = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } }
  22 | 
  23 |   constructor(public dummy: Dummy) {

Unnecessarily quoted property 'A' found. (object-literal-key-quotes)
  19 |   paz: string;
  20 |   mypattern = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } };
> 21 |   rtrw = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } }
     |           ^
  22 | 
  23 |   constructor(public dummy: Dummy) {
  24 |     this.xyz = '';

Unnecessarily quoted property 'B' found. (object-literal-key-quotes)
  19 |   paz: string;
  20 |   mypattern = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } };
> 21 |   rtrw = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } }
     |                                                  ^
  22 | 
  23 |   constructor(public dummy: Dummy) {
  24 |     this.xyz = '';

Missing semicolon (semicolon)
  19 |   paz: string;
  20 |   mypattern = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } };
> 21 |   rtrw = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } }
     |                                                                                         ^
  22 | 
  23 |   constructor(public dummy: Dummy) {
  24 |     this.xyz = '';


/home/idnes/Projects/awe/src/web/app/extra/screens/member-add-screen/member-add-screen.component.ts
Missing semicolon (semicolon)
  1 | import {Component, OnInit, AfterViewInit, OnDestroy} from '@angular/core';
  2 | import {FormBuilder, FormGroup, Validators} from '@angular/forms';
> 3 | import {MatSnackBar, MatBottomSheet, MatDialog} from '@angular/material'
    |                                                                        ^
  4 | import {Router} from '@angular/router';
  5 | import {SubscriptionLike} from 'rxjs';
  6 | import {map, forEach, find, transform} from 'lodash';


/home/idnes/Projects/awe/src/web/app/screens/login-screen/login-screen.component.ts
of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  56 |     this.animationState = 'showSpinner';
  57 |     // from(this.authenticationService.login())
> 58 |     of(true)
     |    ^
  59 |       .pipe(
  60 |         delay(6000),
  61 |         mergeMap(() => this.authenticationService.login()),


/home/idnes/Projects/awe/src/web/app/shared/animations/expandTableRow.ts
Missing semicolon (semicolon)
> 1 | import {trigger, transition, style, animate, state} from '@angular/animations'
    |                                                                              ^
  2 | export const expandTableRows = trigger('detailExpand', [
  3 |   state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),
  4 |   state('expanded', style({height: '*'})),


/home/idnes/Projects/awe/src/web/app/shared/components/app-base/app-base.component.ts
of is deprecated: use {@link scheduled} instead `scheduled([a, b, c], scheduler)` (deprecation)
  42 | 
  43 |   ngOnInit() {
> 44 |     of(true).pipe(delay(1000)).subscribe(() => this.logoShow = false);
     |    ^
  45 |   }
  46 | }
  47 | 


/home/idnes/Projects/awe/src/web/app/shared/components/box-padding/box-padding.component.ts
Missing semicolon (semicolon)
> 1 | import { Component, Input, OnInit, HostBinding } from '@angular/core'
    |                                                                     ^
  2 | @Component({
  3 |   selector: 'box-padding',
  4 |   templateUrl: 'template.html',


/home/idnes/Projects/awe/src/web/app/shared/components/page-standard/page-standard.interface.ts
Class name must be in pascal case (class-name)
> 1 | export interface pageStandard {
    |                 ^
  2 |   clickBack(): void;
  3 | }
  4 | 


/home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/index.ts
Missing semicolon (semicolon)
> 1 | export {ScrollPaddingComponent as ScrollPadding} from  './scroll-padding.component'
    |                                                                                   ^
  2 | 


/home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/scroll-padding.component.ts
Missing semicolon (semicolon)
> 1 | import {Component, Input, OnInit} from '@angular/core'
    |                                                      ^
  2 | 
  3 | @Component({
  4 |   selector: 'scroll-padding',


Index: /home/idnes/Projects/awe/src/animation/search.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/animation/search.animation.ts
+++ /home/idnes/Projects/awe/src/animation/search.animation.ts
@@ -1,13 +1,25 @@
-import { animate, AnimationTriggerMetadata, state, style, transition, trigger, group, animateChild, query } from '@angular/animations';
+import {
+  animate,
+  AnimationTriggerMetadata,
+  state,
+  style,
+  transition,
+  trigger,
+  group,
+  animateChild,
+  query,
+} from '@angular/animations';
 
-export const slideInLeftAnimation: AnimationTriggerMetadata =
-  trigger('routeAnimation', [
-    state('*',
+export const slideInLeftAnimation: AnimationTriggerMetadata = trigger(
+  'routeAnimation',
+  [
+    state(
+      '*',
       style({
         opacity: 1,
         transform: 'translateX(0)',
-      }),
+      })
     ),
     transition(':enter', [
       group([
         query('@*', animateChild(), { optional: true }),
@@ -20,22 +32,28 @@
     ]),
     transition(':leave', [
       group([
         query('@*', animateChild(), { optional: true }),
-        animate('0.5s ease-out', style({
-          opacity: 0,
-          transform: 'translateX(100%)',
-        })),
+        animate(
+          '0.5s ease-out',
+          style({
+            opacity: 0,
+            transform: 'translateX(100%)',
+          })
+        ),
       ]),
     ]),
-  ]);
-export const slideInDownAnimation: AnimationTriggerMetadata =
-  trigger('routeAnimation', [
-    state('*',
+  ]
+);
+export const slideInDownAnimation: AnimationTriggerMetadata = trigger(
+  'routeAnimation',
+  [
+    state(
+      '*',
       style({
         opacity: 1,
         transform: 'translateY(0)',
-      }),
+      })
     ),
     transition(':enter', [
       group([
         query('@*', animateChild(), { optional: true }),
@@ -48,11 +66,15 @@
     ]),
     transition(':leave', [
       group([
         query('@*', animateChild(), { optional: true }),
-        animate('0.5s ease-out', style({
-          opacity: 0,
-          transform: 'translateY(100%)',
-        })),
+        animate(
+          '0.5s ease-out',
+          style({
+            opacity: 0,
+            transform: 'translateY(100%)',
+          })
+        ),
       ]),
     ]),
-  ]);
+  ]
+);

Index: /home/idnes/Projects/awe/src/exclude/coba/public_api.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/coba/public_api.ts
+++ /home/idnes/Projects/awe/src/exclude/coba/public_api.ts
@@ -1,2 +1,2 @@
 export * from './lib/coba.component';
-export * from './lib/coba.module';
\ No newline at end of file
+export * from './lib/coba.module';

Index: /home/idnes/Projects/awe/src/exclude/coba/lib/coba.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/coba/lib/coba.component.ts
+++ /home/idnes/Projects/awe/src/exclude/coba/lib/coba.component.ts
@@ -1,7 +1,7 @@
 import { Component } from '@angular/core';
 
 @Component({
   selector: 'coba',
-  template: '<p>coba-coba</p><coba-dep></coba-dep>'
+  template: '<p>coba-coba</p><coba-dep></coba-dep>',
 })
-export class CobaComponent { }
+export class CobaComponent {}

Index: /home/idnes/Projects/awe/src/exclude/coba/lib/coba.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/coba/lib/coba.module.ts
+++ /home/idnes/Projects/awe/src/exclude/coba/lib/coba.module.ts
@@ -1,15 +1,9 @@
 import { NgModule } from '@angular/core';
 import { CobaComponent } from './coba.component';
-import { CobaDepModule } from '@try/coba-dep'
+import { CobaDepModule } from '@try/coba-dep';
 @NgModule({
-  imports: [
-    CobaDepModule
-  ],
-  declarations: [
-    CobaComponent
-  ],
-  exports: [
-    CobaComponent
-  ]
+  imports: [CobaDepModule],
+  declarations: [CobaComponent],
+  exports: [CobaComponent],
 })
-export class CobaModule { }
+export class CobaModule {}

Index: /home/idnes/Projects/awe/src/exclude/coba-dep/lib/coba-dep.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/coba-dep/lib/coba-dep.component.ts
+++ /home/idnes/Projects/awe/src/exclude/coba-dep/lib/coba-dep.component.ts
@@ -1,7 +1,7 @@
 import { Component } from '@angular/core';
 
 @Component({
   selector: 'coba-dep',
-  template: '<p>coba-dep-coba</p>'
+  template: '<p>coba-dep-coba</p>',
 })
-export class CobaDepComponent { }
+export class CobaDepComponent {}

Index: /home/idnes/Projects/awe/src/exclude/coba-dep/lib/coba-dep.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/coba-dep/lib/coba-dep.module.ts
+++ /home/idnes/Projects/awe/src/exclude/coba-dep/lib/coba-dep.module.ts
@@ -1,11 +1,7 @@
 import { NgModule } from '@angular/core';
 import { CobaDepComponent } from './coba-dep.component';
 @NgModule({
-  declarations: [
-    CobaDepComponent
-  ],
-  exports: [
-    CobaDepComponent
-  ]
+  declarations: [CobaDepComponent],
+  exports: [CobaDepComponent],
 })
-export class CobaDepModule { }
+export class CobaDepModule {}

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/file.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/file.module.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/file.module.ts
@@ -10,11 +10,14 @@
 
 import { TdFileSelectDirective } from './directives/file-select.directive';
 import { TdFileDropDirective } from './directives/file-drop.directive';
 import { TdFileUploadComponent } from './file-upload/file-upload.component';
-import { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';
+import {
+  TdFileInputComponent,
+  TdFileInputLabelDirective,
+} from './file-input/file-input.component';
 import { TdFileService } from './services/file.service';
-import { CovalentCommonModule } from '@try/tcommon'
+import { CovalentCommonModule } from '@try/tcommon';
 
 const TD_FILE: Type<any>[] = [
   TdFileSelectDirective,
   TdFileDropDirective,
@@ -29,19 +32,11 @@
     CommonModule,
     MatIconModule,
     MatButtonModule,
     PortalModule,
-    CovalentCommonModule
+    CovalentCommonModule,
   ],
-  declarations: [
-    TD_FILE,
-  ],
-  exports: [
-    TD_FILE,
-  ],
-  providers: [
-    TdFileService,
-  ],
+  declarations: [TD_FILE],
+  exports: [TD_FILE],
+  providers: [TdFileService],
 })
-export class CovalentFileModule {
-
-}
+export class CovalentFileModule {}

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-drop.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-drop.directive.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-drop.directive.ts
@@ -1,21 +1,26 @@
 import { Directive, Input, Output, EventEmitter } from '@angular/core';
-import { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';
+import {
+  HostListener,
+  HostBinding,
+  ElementRef,
+  Renderer2,
+} from '@angular/core';
 import { coerceBooleanProperty } from '@angular/cdk/coercion';
 
 import { ICanDisable, mixinDisabled } from '@try/tcommon';
 
-export class TdFileDropBase { }
+export class TdFileDropBase {}
 
 /* tslint:disable-next-line */
 export const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);
 
 @Directive({
   selector: '[tdFileDrop]',
   // inputs: ['disabled'],
 })
-export class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {
-
+export class TdFileDropDirective extends _TdFileDropMixinBase
+  implements ICanDisable {
   // tslint:disable-next-line: variable-name
   private _multiple: boolean = false;
 
   @Input() disabled;
@@ -36,9 +41,11 @@
    * Emits a [FileList | File] object.
    */
 
   // tslint:disable-next-line
-  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();
+  @Output('fileDrop') onFileDrop: EventEmitter<
+    FileList | File
+  > = new EventEmitter<FileList | File>();
 
   /**
    * Binds native 'multiple' attribute if [multiple] property is 'true'.
    */
@@ -69,9 +76,13 @@
     if (!this.disabled) {
       let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
       let files: FileList = transfer.files;
       if (files.length) {
-        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];
+        let value: FileList | File = this._multiple
+          ? files.length > 1
+            ? files
+            : files[0]
+          : files[0];
         this.onFileDrop.emit(value);
       }
     }
     this._renderer.removeClass(this._element.nativeElement, 'drop-zone');
@@ -86,10 +97,14 @@
   @HostListener('dragover', ['$event'])
   onDragOver(event: Event): void {
     let transfer: DataTransfer = (<DragEvent>event).dataTransfer;
     transfer.dropEffect = this._typeCheck(transfer.types);
-    if (this.disabled || (!this._multiple &&
-      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {
+    if (
+      this.disabled ||
+      (!this._multiple &&
+        ((transfer.items && transfer.items.length > 1) ||
+          (<any>transfer).mozItemCount > 1))
+    ) {
       transfer.dropEffect = 'none';
     } else {
       transfer.dropEffect = 'copy';
     }
@@ -123,10 +138,12 @@
    */
   private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {
     let dropEffect: string = 'none';
     if (types) {
-      if (((<any>types).contains && (<any>types).contains('Files'))
-        || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {
+      if (
+        ((<any>types).contains && (<any>types).contains('Files')) ||
+        ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)
+      ) {
         dropEffect = 'copy';
       }
     }
     return dropEffect;

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-select.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-select.directive.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/directives/file-select.directive.ts
@@ -6,9 +6,8 @@
 @Directive({
   selector: '[tdFileSelect]',
 })
 export class TdFileSelectDirective {
-
   private _multiple: boolean = false;
 
   /**
    * multiple?: boolean
@@ -25,9 +24,11 @@
    * Event emitted when a file or files are selected in host [HTMLInputElement].
    * Emits a [FileList | File] object.
    * Alternative to not use [(ngModel)].
    */
-  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();
+  @Output('fileSelect') onFileSelect: EventEmitter<
+    FileList | File
+  > = new EventEmitter<FileList | File>();
 
   /**
    * Binds native 'multiple' attribute if [multiple] property is 'true'.
    */
@@ -35,10 +36,9 @@
   get multipleBinding(): string {
     return this._multiple ? '' : undefined;
   }
 
-  constructor(@Optional() @Host() private model: NgModel) {
-  }
+  constructor(@Optional() @Host() private model: NgModel) {}
 
   /**
    * Listens to 'change' host event to get [HTMLInputElement] files.
    * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.
@@ -46,13 +46,19 @@
    */
   @HostListener('change', ['$event'])
   onChange(event: Event): void {
     if (event.target instanceof HTMLInputElement) {
-      let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);
+      let fileInputEl: HTMLInputElement = <HTMLInputElement>event.target;
       let files: FileList = fileInputEl.files;
       if (files.length) {
-        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];
-        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);
+        let value: FileList | File = this._multiple
+          ? files.length > 1
+            ? files
+            : files[0]
+          : files[0];
+        this.model
+          ? this.model.update.emit(value)
+          : this.onFileSelect.emit(value);
       }
     }
   }
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/file-input/file-input.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/file-input/file-input.component.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/file-input/file-input.component.ts
@@ -1,44 +1,67 @@
 import {
-  Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,
-  ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef
+  Component,
+  Directive,
+  Input,
+  Output,
+  EventEmitter,
+  ChangeDetectionStrategy,
+  ViewChild,
+  ElementRef,
+  Renderer2,
+  TemplateRef,
+  ViewContainerRef,
+  ChangeDetectorRef,
+  forwardRef,
 } from '@angular/core';
 import { coerceBooleanProperty } from '@angular/cdk/coercion';
 import { TemplatePortalDirective } from '@angular/cdk/portal';
 import { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';
 
-import { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@try/tcommon';
+import {
+  ICanDisable,
+  mixinDisabled,
+  IControlValueAccessor,
+  mixinControlValueAccessor,
+} from '@try/tcommon';
 
 @Directive({
   selector: '[td-file-input-label]ng-template',
 })
 export class TdFileInputLabelDirective extends TemplatePortalDirective {
-  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {
+  constructor(
+    templateRef: TemplateRef<any>,
+    viewContainerRef: ViewContainerRef
+  ) {
     super(templateRef, viewContainerRef);
   }
 }
 
 export class TdFileInputBase {
-  constructor(public _changeDetectorRef: ChangeDetectorRef) { }
+  constructor(public _changeDetectorRef: ChangeDetectorRef) {}
 }
 
 /* tslint:disable-next-line */
-export const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));
+export const _TdFileInputMixinBase = mixinControlValueAccessor(
+  mixinDisabled(TdFileInputBase)
+);
 
 @Component({
   changeDetection: ChangeDetectionStrategy.OnPush,
-  providers: [{
-    provide: NG_VALUE_ACCESSOR,
-    useExisting: forwardRef(() => TdFileInputComponent),
-    multi: true,
-  }],
+  providers: [
+    {
+      provide: NG_VALUE_ACCESSOR,
+      useExisting: forwardRef(() => TdFileInputComponent),
+      multi: true,
+    },
+  ],
   selector: 'td-file-input',
   inputs: ['disabled', 'value'],
   styleUrls: ['./file-input.component.scss'],
   templateUrl: './file-input.component.html',
 })
-export class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {
-
+export class TdFileInputComponent extends _TdFileInputMixinBase
+  implements IControlValueAccessor, ICanDisable {
   private _multiple: boolean = false;
 
   /** The native `<input type="file"> element */
   @ViewChild('fileInput') _inputElement: ElementRef;
@@ -75,11 +98,16 @@
    * select?: function
    * Event emitted a file is selected
    * Emits a [File | FileList] object.
    */
-  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
+  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<
+    File | FileList
+  >();
 
-  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {
+  constructor(
+    private _renderer: Renderer2,
+    _changeDetectorRef: ChangeDetectorRef
+  ) {
     super(_changeDetectorRef);
   }
 
   /**

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/file-upload/file-upload.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/file-upload/file-upload.component.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/file-upload/file-upload.component.ts
@@ -1,40 +1,60 @@
 import {
-  Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,
-  forwardRef
+  Component,
+  Input,
+  Output,
+  EventEmitter,
+  ChangeDetectionStrategy,
+  ViewChild,
+  ContentChild,
+  ChangeDetectorRef,
+  forwardRef,
 } from '@angular/core';
 import { coerceBooleanProperty } from '@angular/cdk/coercion';
-import { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@try/tcommon';
-import { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';
+import {
+  ICanDisable,
+  mixinDisabled,
+  IControlValueAccessor,
+  mixinControlValueAccessor,
+} from '@try/tcommon';
+import {
+  TdFileInputComponent,
+  TdFileInputLabelDirective,
+} from '../file-input/file-input.component';
 import { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';
 
 export class TdFileUploadBase {
-  constructor(public _changeDetectorRef: ChangeDetectorRef) { }
+  constructor(public _changeDetectorRef: ChangeDetectorRef) {}
 }
 
 /* tslint:disable-next-line */
-export const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));
+export const _TdFileUploadMixinBase = mixinControlValueAccessor(
+  mixinDisabled(TdFileUploadBase)
+);
 
 @Component({
   changeDetection: ChangeDetectionStrategy.OnPush,
-  providers: [{
-    provide: NG_VALUE_ACCESSOR,
-    useExisting: forwardRef(() => TdFileUploadComponent),
-    multi: true,
-  }],
+  providers: [
+    {
+      provide: NG_VALUE_ACCESSOR,
+      useExisting: forwardRef(() => TdFileUploadComponent),
+      multi: true,
+    },
+  ],
   selector: 'td-file-upload',
   inputs: ['disabled', 'value'],
   styleUrls: ['./file-upload.component.scss'],
   templateUrl: './file-upload.component.html',
 })
-export class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {
-
+export class TdFileUploadComponent extends _TdFileUploadMixinBase
+  implements IControlValueAccessor, ICanDisable {
   private _multiple: boolean = false;
   private _required: boolean = false;
 
   @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;
 
-  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;
+  @ContentChild(TdFileInputLabelDirective)
+  inputLabel: TdFileInputLabelDirective;
 
   /**
    * defaultColor?: string
    * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.
@@ -89,16 +109,20 @@
    * select?: function
    * Event emitted when a file is selected.
    * Emits a [File | FileList] object.
    */
-  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
+  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<
+    File | FileList
+  >();
 
   /**
    * upload?: function
    * Event emitted when upload button is clicked.
    * Emits a [File | FileList] object.
    */
-  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();
+  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<
+    File | FileList
+  >();
 
   /**
    * cancel?: function
    * Event emitted when cancel button is clicked.

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/services/file.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/services/file.service.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/services/file.service.ts
@@ -4,15 +4,14 @@
 export interface IUploadOptions {
   url: string;
   method: 'post' | 'put';
   file?: File;
-  headers?: {[key: string]: string};
+  headers?: { [key: string]: string };
   formData?: FormData;
 }
 
 @Injectable()
 export class TdFileService {
-
   private _progressSubject: Subject<number> = new Subject<number>();
   private _progressObservable: Observable<number>;
 
   /**
@@ -49,15 +48,17 @@
         formData.append('file', options.file);
       } else if (options.formData !== undefined) {
         formData = options.formData;
       } else {
-        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');
+        return subscriber.error(
+          'For [IUploadOptions] you have to set either the [file] or the [formData] property.'
+        );
       }
 
       xhr.upload.onprogress = (event: ProgressEvent) => {
         let progress: number = 0;
         if (event.lengthComputable) {
-          progress = Math.round(event.loaded / event.total * 100);
+          progress = Math.round((event.loaded / event.total) * 100);
         }
         this._progressSubject.next(progress);
       };
 

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/common.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/common.module.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/common.module.ts
@@ -10,15 +10,12 @@
 
 // Form Directives
 import { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';
 
-const TD_FORMS: Type<any>[] = [
-  TdAutoTrimDirective,
-];
+const TD_FORMS: Type<any>[] = [TdAutoTrimDirective];
 
 // Validators
-const TD_VALIDATORS: Type<any>[] = [
-];
+const TD_VALIDATORS: Type<any>[] = [];
 
 /**
  * PIPES
  */
@@ -47,28 +44,10 @@
 import { RouterPathService } from './services/router-path.service';
 import { IconService } from './services/icon.service';
 
 @NgModule({
-  imports: [
-    FormsModule,
-    CommonModule,
-  ],
-  declarations: [
-    TD_FORMS,
-    TD_PIPES,
-    TD_VALIDATORS,
-  ],
-  exports: [
-    FormsModule,
-    CommonModule,
-    TD_FORMS,
-    TD_PIPES,
-    TD_VALIDATORS,
-  ],
-  providers: [
-    RouterPathService,
-    IconService,
-  ],
+  imports: [FormsModule, CommonModule],
+  declarations: [TD_FORMS, TD_PIPES, TD_VALIDATORS],
+  exports: [FormsModule, CommonModule, TD_FORMS, TD_PIPES, TD_VALIDATORS],
+  providers: [RouterPathService, IconService],
 })
-export class CovalentCommonModule {
-
-}
+export class CovalentCommonModule {}

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/bounce/bounce.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/bounce/bounce.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/bounce/bounce.animation.ts
@@ -1,7 +1,16 @@
-
-import { trigger, state, style, keyframes, transition, animate,
-         AnimationTriggerMetadata, query, animateChild, group } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  keyframes,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  query,
+  animateChild,
+  group,
+} from '@angular/animations';
 import { IAnimationOptions } from '../common/interfaces';
 
 /**
  * const tdBounceAnimation
@@ -15,28 +24,80 @@
  *
  * usage: [@tdBounce]="{ value: true | false, params: { duration: 200 }}"
  */
 export const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [
-  state('0', style({
-    transform: 'translate3d(0, 0, 0)',
-  })),
-  state('1',  style({
-    transform: 'translate3d(0, 0, 0)',
-  })),
-  transition('0 <=> 1', [
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',
-      keyframes([
-        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0}),
-        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.2}),
-        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.4}),
-        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.43}),
-        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.53}),
-        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -15px, 0)', offset: .7}),
-        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.8}),
-        style({transform: 'translate3d(0, -4px, 0)', offset: .9}),
-        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 1.0}),
-      ])),
-    ]),
-  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),
+  state(
+    '0',
+    style({
+      transform: 'translate3d(0, 0, 0)',
+    })
+  ),
+  state(
+    '1',
+    style({
+      transform: 'translate3d(0, 0, 0)',
+    })
+  ),
+  transition(
+    '0 <=> 1',
+    [
+      group([
+        query('@*', animateChild(), { optional: true }),
+        animate(
+          '{{ duration }}ms {{ delay }}ms {{ ease }}',
+          keyframes([
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.215, 0.610, 0.355, 1.000)',
+              transform: 'translate3d(0, 0, 0)',
+              offset: 0,
+            }),
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.215, 0.610, 0.355, 1.000)',
+              transform: 'translate3d(0, 0, 0)',
+              offset: 0.2,
+            }),
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.755, 0.050, 0.855, 0.060)',
+              transform: 'translate3d(0, -30px, 0)',
+              offset: 0.4,
+            }),
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.755, 0.050, 0.855, 0.060)',
+              transform: 'translate3d(0, -30px, 0)',
+              offset: 0.43,
+            }),
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.215, 0.610, 0.355, 1.000)',
+              transform: 'translate3d(0, 0, 0)',
+              offset: 0.53,
+            }),
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.755, 0.050, 0.855, 0.060)',
+              transform: 'translate3d(0, -15px, 0)',
+              offset: 0.7,
+            }),
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.215, 0.610, 0.355, 1.000)',
+              transform: 'translate3d(0, 0, 0)',
+              offset: 0.8,
+            }),
+            style({ transform: 'translate3d(0, -4px, 0)', offset: 0.9 }),
+            style({
+              animationTimingFunction:
+                'cubic-bezier(0.215, 0.610, 0.355, 1.000)',
+              transform: 'translate3d(0, 0, 0)',
+              offset: 1.0,
+            }),
+          ])
+        ),
+      ]),
+    ],
+    { params: { duration: 500, delay: '0', ease: 'ease-out' } }
+  ),
 ]);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/collapse/collapse.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/collapse/collapse.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/collapse/collapse.animation.ts
@@ -1,11 +1,21 @@
-import { trigger, state, style, transition, animate,
-         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  AUTO_STYLE,
+  query,
+  animateChild,
+  group,
+} from '@angular/animations';
 import { IAnimationOptions } from '../common/interfaces';
 
 export interface ICollapseAnimation extends IAnimationOptions {
-   easeOnClose?: string;
-   easeOnOpen?: string;
+  easeOnClose?: string;
+  easeOnOpen?: string;
 }
 
 /**
  * const tdCollapseAnimation
@@ -19,40 +29,63 @@
  * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.
  *
  * usage: [@tdCollapse]="{ value: true | false, params: { duration: 500 }}"
  */
-export const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [
-  state('1', style({
-    height: '0',
-    overflow: 'hidden',
-  })),
-  state('0',  style({
-    height: AUTO_STYLE,
-    overflow: AUTO_STYLE,
-  })),
-  transition('0 => 1', [
-    style({
-      overflow: 'hidden',
-      height: AUTO_STYLE,
-    }),
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({
+export const tdCollapseAnimation: AnimationTriggerMetadata = trigger(
+  'tdCollapse',
+  [
+    state(
+      '1',
+      style({
         height: '0',
         overflow: 'hidden',
-      })),
-    ]),
-  ], { params: { duration: 150, delay: '0', ease: 'ease-in' }}),
-  transition('1 => 0', [
-    style({
-      height: '0',
-      overflow: 'hidden',
-    }),
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({
-        overflow: 'hidden',
+      })
+    ),
+    state(
+      '0',
+      style({
         height: AUTO_STYLE,
-      })),
-    ]),
-  ], { params: { duration: 150, delay: '0', ease: 'ease-out' }}),
-]);
+        overflow: AUTO_STYLE,
+      })
+    ),
+    transition(
+      '0 => 1',
+      [
+        style({
+          overflow: 'hidden',
+          height: AUTO_STYLE,
+        }),
+        group([
+          query('@*', animateChild(), { optional: true }),
+          animate(
+            '{{ duration }}ms {{ delay }}ms {{ ease }}',
+            style({
+              height: '0',
+              overflow: 'hidden',
+            })
+          ),
+        ]),
+      ],
+      { params: { duration: 150, delay: '0', ease: 'ease-in' } }
+    ),
+    transition(
+      '1 => 0',
+      [
+        style({
+          height: '0',
+          overflow: 'hidden',
+        }),
+        group([
+          query('@*', animateChild(), { optional: true }),
+          animate(
+            '{{ duration }}ms {{ delay }}ms {{ ease }}',
+            style({
+              overflow: 'hidden',
+              height: AUTO_STYLE,
+            })
+          ),
+        ]),
+      ],
+      { params: { duration: 150, delay: '0', ease: 'ease-out' } }
+    ),
+  ]
+);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/common/interfaces.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/common/interfaces.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/common/interfaces.ts
@@ -1,5 +1,5 @@
 export interface IAnimationOptions {
   anchor?: string;
   duration?: number;
   delay?: number;
- }
+}

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/fade/fadeInOut.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/fade/fadeInOut.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/fade/fadeInOut.animation.ts
@@ -1,6 +1,16 @@
-import { trigger, state, style, transition, animate,
-         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group  } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  AUTO_STYLE,
+  query,
+  animateChild,
+  group,
+} from '@angular/animations';
 import { IAnimationOptions } from '../common/interfaces';
 
 export interface IFadeInOutAnimation extends IAnimationOptions {
   easeOnIn?: string;
@@ -19,26 +29,43 @@
  * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.
  *
  * usage: [@tdFadeInOut]="{ value: true | false, params: { duration: 200 }}"
  */
-export const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [
-    state('0', style({
-      opacity: '0',
-      visibility: 'hidden',
-    })),
-    state('1',  style({
-      opacity: AUTO_STYLE,
-      visibility: AUTO_STYLE,
-    })),
-    transition('0 => 1', [
-      group([
-        query('@*', animateChild(), { optional: true }),
-        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),
-      ]),
-    ], { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' }}),
-    transition('1 => 0', [
-      group([
-        query('@*', animateChild(), { optional: true }),
-        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),
-    ]),
-  ], { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' }}),
-]);
+export const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger(
+  'tdFadeInOut',
+  [
+    state(
+      '0',
+      style({
+        opacity: '0',
+        visibility: 'hidden',
+      })
+    ),
+    state(
+      '1',
+      style({
+        opacity: AUTO_STYLE,
+        visibility: AUTO_STYLE,
+      })
+    ),
+    transition(
+      '0 => 1',
+      [
+        group([
+          query('@*', animateChild(), { optional: true }),
+          animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),
+        ]),
+      ],
+      { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' } }
+    ),
+    transition(
+      '1 => 0',
+      [
+        group([
+          query('@*', animateChild(), { optional: true }),
+          animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),
+        ]),
+      ],
+      { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' } }
+    ),
+  ]
+);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/flash/flash.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/flash/flash.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/flash/flash.animation.ts
@@ -1,7 +1,17 @@
-
-import { trigger, state, style, keyframes, transition, animate,
-         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  keyframes,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  AUTO_STYLE,
+  query,
+  animateChild,
+  group,
+} from '@angular/animations';
 import { IAnimationOptions } from '../common/interfaces';
 
 /**
  * const tdFlashAnimation
@@ -15,24 +25,36 @@
  *
  * usage: [@tdFlash]="{ value: true | false, params: { duration: 200 }}"
  */
 export const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [
-  state('0', style({
-    opacity: 1,
-  })),
-  state('1',  style({
-    opacity: 1,
-  })),
-  transition('0 <=> 1', [
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',
-      keyframes([
-        style({opacity: 1, offset: 0}),
-        style({opacity: 0, offset: 0.25}),
-        style({opacity: 1, offset: 0.5}),
-        style({opacity: 0, offset: 0.75}),
-        style({opacity: 1, offset: 1.0}),
-      ])),
-    ]),
-  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),
+  state(
+    '0',
+    style({
+      opacity: 1,
+    })
+  ),
+  state(
+    '1',
+    style({
+      opacity: 1,
+    })
+  ),
+  transition(
+    '0 <=> 1',
+    [
+      group([
+        query('@*', animateChild(), { optional: true }),
+        animate(
+          '{{ duration }}ms {{ delay }}ms {{ ease }}',
+          keyframes([
+            style({ opacity: 1, offset: 0 }),
+            style({ opacity: 0, offset: 0.25 }),
+            style({ opacity: 1, offset: 0.5 }),
+            style({ opacity: 0, offset: 0.75 }),
+            style({ opacity: 1, offset: 1.0 }),
+          ])
+        ),
+      ]),
+    ],
+    { params: { duration: 500, delay: '0', ease: 'ease-out' } }
+  ),
 ]);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/headshake/headshake.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/headshake/headshake.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/headshake/headshake.animation.ts
@@ -1,7 +1,17 @@
-
-import { trigger, state, style, keyframes, transition, animate,
-         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  keyframes,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  AUTO_STYLE,
+  query,
+  animateChild,
+  group,
+} from '@angular/animations';
 import { IAnimationOptions } from '../common/interfaces';
 
 /**
  * const tdHeadshakeAnimation
@@ -14,26 +24,53 @@
  * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.
  *
  * usage: [@tdHeadshake]="{ value: true | false, params: { duration: 200 }}"
  */
-export const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [
-  state('0', style({
-    transform: 'translateX(0)',
-  })),
-  state('1',  style({
-    transform: 'translateX(0)',
-  })),
-  transition('0 <=> 1', [
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',
-      keyframes([
-        style({transform: 'translateX(0)', offset: 0}),
-        style({transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065}),
-        style({transform: 'translateX(5px) rotateY(7deg)', offset: 0.185}),
-        style({transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315}),
-        style({transform: 'translateX(2px) rotateY(3deg)', offset: 0.435}),
-        style({transform: 'translateX(0)', offset: 0.50}),
-      ])),
-    ]),
-  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),
-]);
+export const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger(
+  'tdHeadshake',
+  [
+    state(
+      '0',
+      style({
+        transform: 'translateX(0)',
+      })
+    ),
+    state(
+      '1',
+      style({
+        transform: 'translateX(0)',
+      })
+    ),
+    transition(
+      '0 <=> 1',
+      [
+        group([
+          query('@*', animateChild(), { optional: true }),
+          animate(
+            '{{ duration }}ms {{ delay }}ms {{ ease }}',
+            keyframes([
+              style({ transform: 'translateX(0)', offset: 0 }),
+              style({
+                transform: 'translateX(-6px) rotateY(-9deg)',
+                offset: 0.065,
+              }),
+              style({
+                transform: 'translateX(5px) rotateY(7deg)',
+                offset: 0.185,
+              }),
+              style({
+                transform: 'translateX(-3px) rotateY(-5deg)',
+                offset: 0.315,
+              }),
+              style({
+                transform: 'translateX(2px) rotateY(3deg)',
+                offset: 0.435,
+              }),
+              style({ transform: 'translateX(0)', offset: 0.5 }),
+            ])
+          ),
+        ]),
+      ],
+      { params: { duration: 500, delay: '0', ease: 'ease-out' } }
+    ),
+  ]
+);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/jello/jello.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/jello/jello.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/jello/jello.animation.ts
@@ -1,7 +1,17 @@
-
-import { trigger, state, style, keyframes, transition, animate,
-         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  keyframes,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  AUTO_STYLE,
+  query,
+  animateChild,
+  group,
+} from '@angular/animations';
 import { IAnimationOptions } from '../common/interfaces';
 
 /**
  * const tdJelloAnimation
@@ -15,28 +25,61 @@
  *
  * usage: [@tdJello]="{ value: true | false, params: { duration: 200 }}"
  */
 export const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [
-  state('0', style({
-    transform: 'none',
-  })),
-  state('1',  style({
-    transform: 'none',
-  })),
-  transition('0 <=> 1', [
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',
-      keyframes([
-        style({transform: 'none', offset: 0}),
-        style({transform: 'none', offset: 0.011}),
-        style({transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222}),
-        style({transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333}),
-        style({transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444}),
-        style({transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555}),
-        style({transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666}),
-        style({transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777}),
-        style({transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888}),
-      ])),
-    ]),
-  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),
+  state(
+    '0',
+    style({
+      transform: 'none',
+    })
+  ),
+  state(
+    '1',
+    style({
+      transform: 'none',
+    })
+  ),
+  transition(
+    '0 <=> 1',
+    [
+      group([
+        query('@*', animateChild(), { optional: true }),
+        animate(
+          '{{ duration }}ms {{ delay }}ms {{ ease }}',
+          keyframes([
+            style({ transform: 'none', offset: 0 }),
+            style({ transform: 'none', offset: 0.011 }),
+            style({
+              transform: 'skewX(-12.5deg) skewY(-12.5deg)',
+              offset: 0.222,
+            }),
+            style({
+              transform: 'skewX(6.25deg) skewY(6.25deg)',
+              offset: 0.333,
+            }),
+            style({
+              transform: 'skewX(-3.125deg) skewY(-3.125deg)',
+              offset: 0.444,
+            }),
+            style({
+              transform: 'skewX(1.5625deg) skewY(1.5625deg)',
+              offset: 0.555,
+            }),
+            style({
+              transform: 'skewX(-0.78125deg) skewY(-0.78125deg)',
+              offset: 0.666,
+            }),
+            style({
+              transform: 'skewX(0.390625deg) skewY(0.390625deg)',
+              offset: 0.777,
+            }),
+            style({
+              transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)',
+              offset: 0.888,
+            }),
+          ])
+        ),
+      ]),
+    ],
+    { params: { duration: 500, delay: '0', ease: 'ease-out' } }
+  ),
 ]);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/pulse/pulse.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/pulse/pulse.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/pulse/pulse.animation.ts
@@ -1,7 +1,17 @@
-
-import { trigger, state, style, keyframes, transition, animate,
-         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  keyframes,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  AUTO_STYLE,
+  query,
+  animateChild,
+  group,
+} from '@angular/animations';
 import { IAnimationOptions } from '../common/interfaces';
 
 /**
  * const tdPulseAnimation
@@ -15,23 +25,34 @@
  *
  * usage: [@tdPulse]="{ value: true | false, params: { duration: 200 }}"
  */
 export const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [
-  state('0', style({
-    transform: 'scale3d(1, 1, 1)',
-  })),
-  state('1',  style({
-    transform: 'scale3d(1, 1, 1)',
-  })),
-  transition('0 <=> 1', [
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',
-      keyframes([
-          style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),
-          style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),
-          style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),
-        ]),
-      ),
-    ]),
-  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),
+  state(
+    '0',
+    style({
+      transform: 'scale3d(1, 1, 1)',
+    })
+  ),
+  state(
+    '1',
+    style({
+      transform: 'scale3d(1, 1, 1)',
+    })
+  ),
+  transition(
+    '0 <=> 1',
+    [
+      group([
+        query('@*', animateChild(), { optional: true }),
+        animate(
+          '{{ duration }}ms {{ delay }}ms {{ ease }}',
+          keyframes([
+            style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),
+            style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),
+            style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),
+          ])
+        ),
+      ]),
+    ],
+    { params: { duration: 500, delay: '0', ease: 'ease-out' } }
+  ),
 ]);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/rotate/rotate.animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/rotate/rotate.animation.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/animations/rotate/rotate.animation.ts
@@ -1,7 +1,14 @@
 import {
-  trigger, state, style, transition, animate, AnimationTriggerMetadata,
-  query, animateChild, group,
+  trigger,
+  state,
+  style,
+  transition,
+  animate,
+  AnimationTriggerMetadata,
+  query,
+  animateChild,
+  group,
 } from '@angular/animations';
 
 import { IAnimationOptions } from '../common/interfaces';
 
@@ -25,17 +32,29 @@
  * usage: [@tdRotate]="{ value: true | false, params: { degreesEnd: 90 }}"
  */
 
 export const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [
-  state('0', style({
-    transform: 'rotate({{ degressStart }}deg)',
-  }), { params: { degressStart: 0 }}),
-  state('1',  style({
-    transform: 'rotate({{ degreesEnd }}deg)',
-  }), { params: { degreesEnd: 180 }}),
-  transition('0 <=> 1', [
-    group([
-      query('@*', animateChild(), { optional: true }),
-      animate('{{ duration }}ms {{ delay }}ms {{ ease }}'),
-    ]),
-  ], { params: { duration: 250, delay: '0', ease: 'ease-in' }}),
+  state(
+    '0',
+    style({
+      transform: 'rotate({{ degressStart }}deg)',
+    }),
+    { params: { degressStart: 0 } }
+  ),
+  state(
+    '1',
+    style({
+      transform: 'rotate({{ degreesEnd }}deg)',
+    }),
+    { params: { degreesEnd: 180 } }
+  ),
+  transition(
+    '0 <=> 1',
+    [
+      group([
+        query('@*', animateChild(), { optional: true }),
+        animate('{{ duration }}ms {{ delay }}ms {{ ease }}'),
+      ]),
+    ],
+    { params: { duration: 250, delay: '0', ease: 'ease-in' } }
+  ),
 ]);

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/control-value-accesor.mixin.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/control-value-accesor.mixin.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/control-value-accesor.mixin.ts
@@ -20,17 +20,21 @@
   _changeDetectorRef: ChangeDetectorRef;
 }
 
 /** Mixin to augment a component with ngModel support. */
-export function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>
-                (base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {
+export function mixinControlValueAccessor<
+  T extends Constructor<IHasChangeDetectorRef>
+>(base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {
   return class extends base {
-    private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;
+    private _value: any =
+      initialValue instanceof Array
+        ? Object.assign([], initialValue)
+        : initialValue;
     private _subjectValueChanges: Subject<any>;
     valueChanges: Observable<any>;
 
     constructor(...args: any[]) {
-      super(...args); 
+      super(...args);
       this._subjectValueChanges = new Subject<any>();
       this.valueChanges = this._subjectValueChanges.asObservable();
     }
 
@@ -60,7 +64,6 @@
     }
 
     onChange = (_: any) => noop;
     onTouched = () => noop;
-
   };
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disable-ripple.mixin.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disable-ripple.mixin.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disable-ripple.mixin.ts
@@ -8,9 +8,11 @@
   onDisableRippleChange(v: boolean): void;
 }
 
 /** Mixin to augment a component or directive with a `disabled` property. */
-export function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {
+export function mixinDisableRipple<T extends Constructor<{}>>(
+  base: T
+): Constructor<ICanDisableRipple> & T {
   return class extends base {
     private _disableRipple: boolean = false;
 
     constructor(...args: any[]) {

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disabled.mixin.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disabled.mixin.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/behaviors/disabled.mixin.ts
@@ -8,9 +8,11 @@
   onDisabledChange(v: boolean): void;
 }
 
 /** Mixin to augment a component or directive with a `disabled` property. */
-export function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {
+export function mixinDisabled<T extends Constructor<{}>>(
+  base: T
+): Constructor<ICanDisable> & T {
   return class extends base {
     private _disabled: boolean = false;
 
     constructor(...args: any[]) {

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/auto-trim/auto-trim.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/auto-trim/auto-trim.directive.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/auto-trim/auto-trim.directive.ts
@@ -5,17 +5,20 @@
 @Directive({
   selector: '[tdAutoTrim]',
 })
 export class TdAutoTrimDirective {
-
   constructor(@Optional() @Host() private _model: NgModel) {}
 
   /**
    * Listens to host's (blur) event and trims value.
    */
   @HostListener('blur', ['$event'])
   onBlur(event: Event): void {
-    if (this._model && this._model.value && typeof(this._model.value) === 'string') {
+    if (
+      this._model &&
+      this._model.value &&
+      typeof this._model.value === 'string'
+    ) {
       this._model.update.emit(this._model.value.trim());
     }
   }
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/validators/validators.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/validators/validators.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/forms/validators/validators.ts
@@ -1,36 +1,33 @@
 import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';
 
 export class CovalentValidators {
   static min(minValue: any): ValidatorFn {
-    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {
+    let func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {
       if (!!Validators.required(c) || (!minValue && minValue !== 0)) {
         return undefined;
       }
       let v: number = c.value;
-      return v < minValue ?
-        { min: {minValue: minValue, actualValue: v} } :
-        undefined;
+      return v < minValue
+        ? { min: { minValue: minValue, actualValue: v } }
+        : undefined;
     };
     return func;
   }
 
   static max(maxValue: any): ValidatorFn {
-    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {
+    let func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {
       if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {
         return undefined;
       }
       let v: number = c.value;
-      return v > maxValue ?
-        { max: {maxValue: maxValue, actualValue: v} } :
-        undefined;
+      return v > maxValue
+        ? { max: { maxValue: maxValue, actualValue: v } }
+        : undefined;
     };
     return func;
   }
 
-  static numberRequired(c: AbstractControl): {[key: string]: any} {
-    return (Number.isNaN(c.value)) ?
-        { required: true } :
-        undefined;
+  static numberRequired(c: AbstractControl): { [key: string]: any } {
+    return Number.isNaN(c.value) ? { required: true } : undefined;
   }
-
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/bytes/bytes.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/bytes/bytes.pipe.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/bytes/bytes.pipe.ts
@@ -2,9 +2,8 @@
 
 @Pipe({
   name: 'bytes',
 })
-
 export class TdBytesPipe implements PipeTransform {
   /* `bytes` needs to be `any` or TypeScript complains
   Tried both `number` and `number | string` */
   transform(bytes: any, precision: number = 2): string {
@@ -14,13 +13,25 @@
       /* If not a valid number, return 'Invalid Number' */
       return 'Invalid Number';
     }
     let k: number = 1024;
-    let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];
+    let sizes: string[] = [
+      'B',
+      'KiB',
+      'MiB',
+      'GiB',
+      'TiB',
+      'PiB',
+      'EiB',
+      'ZiB',
+      'YiB',
+    ];
     let i: number = Math.floor(Math.log(bytes) / Math.log(k));
     // if less than 1
     if (i < 0) {
       return 'Invalid Number';
     }
-    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];
+    return (
+      parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i]
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/decimal-bytes/decimal-bytes.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/decimal-bytes/decimal-bytes.pipe.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/decimal-bytes/decimal-bytes.pipe.ts
@@ -2,9 +2,8 @@
 
 @Pipe({
   name: 'decimalBytes',
 })
-
 export class TdDecimalBytesPipe implements PipeTransform {
   /* `bytes` needs to be `any` or TypeScript complains
   Tried both `number` and `number | string` */
   transform(bytes: any, precision: number = 2): string {
@@ -20,7 +19,9 @@
     // if less than 1
     if (i < 0) {
       return 'Invalid Number';
     }
-    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];
+    return (
+      parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i]
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/digits/digits.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/digits/digits.pipe.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/digits/digits.pipe.ts
@@ -3,11 +3,9 @@
 
 @Pipe({
   name: 'digits',
 })
-
 export class TdDigitsPipe implements PipeTransform {
-
   private _decimalPipe: DecimalPipe;
 
   constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {
     this._decimalPipe = new DecimalPipe(this._locale);
@@ -26,7 +24,11 @@
     let k: number = 1000;
     let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];
     let i: number = Math.floor(Math.log(digits) / Math.log(k));
     let size: string = sizes[i];
-    return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');
+    return (
+      this._decimalPipe.transform(
+        parseFloat((digits / Math.pow(k, i)).toFixed(precision))
+      ) + (size ? ' ' + size : '')
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/time-difference/time-difference.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/time-difference/time-difference.pipe.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/time-difference/time-difference.pipe.ts
@@ -2,9 +2,8 @@
 
 @Pipe({
   name: 'timeDifference',
 })
-
 export class TdTimeDifferencePipe implements PipeTransform {
   transform(start: any, end?: any): string {
     let startTime: Date = new Date(start);
     let endTime: Date;
@@ -18,18 +17,20 @@
     if (!startTime.getTime() || !endTime.getTime()) {
       return 'Invalid Date';
     }
 
-    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);
+    let diff: number = Math.floor(
+      (endTime.getTime() - startTime.getTime()) / 1000
+    );
 
     let days: number = Math.floor(diff / (60 * 60 * 24));
-    diff = diff - (days * (60 * 60 * 24));
+    diff = diff - days * (60 * 60 * 24);
 
     let hours: number = Math.floor(diff / (60 * 60));
-    diff = diff - (hours * (60 * 60));
+    diff = diff - hours * (60 * 60);
 
-    let minutes: number = Math.floor(diff / (60));
-    diff -= minutes * (60);
+    let minutes: number = Math.floor(diff / 60);
+    diff -= minutes * 60;
 
     let seconds: number = diff;
 
     let pad: string = '00';
@@ -38,13 +39,20 @@
 
     if (days > 0 && days < 2) {
       daysFormatted = ' day - ';
     } else if (days > 1) {
-      daysFormatted = ' days - ' ;
+      daysFormatted = ' days - ';
     }
 
-    return (days > 0 ? days + daysFormatted : daysFormatted) +
-     pad.substring(0, pad.length - (hours + '').length) + hours + ':' +
-     pad.substring(0, pad.length - (minutes + '').length) + minutes + ':' +
-     pad.substring(0, pad.length - (seconds + '').length) + seconds;
+    return (
+      (days > 0 ? days + daysFormatted : daysFormatted) +
+      pad.substring(0, pad.length - (hours + '').length) +
+      hours +
+      ':' +
+      pad.substring(0, pad.length - (minutes + '').length) +
+      minutes +
+      ':' +
+      pad.substring(0, pad.length - (seconds + '').length) +
+      seconds
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/truncate/truncate.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/truncate/truncate.pipe.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/pipes/truncate/truncate.pipe.ts
@@ -2,9 +2,8 @@
 
 @Pipe({
   name: 'truncate',
 })
-
 export class TdTruncatePipe implements PipeTransform {
   transform(text: any, length: number): string {
     if (typeof text !== 'string') {
       return '';

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/icon.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/icon.service.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/icon.service.ts
@@ -6,9 +6,8 @@
 import { Injectable } from '@angular/core';
 
 @Injectable()
 export class IconService {
-
   private _icons: string[] = [
     'access_alarm',
     'access_alarms',
     'access_time',

Index: /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/router-path.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/router-path.service.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tfile/tcommon/services/router-path.service.ts
@@ -4,22 +4,24 @@
 import { filter, pairwise } from 'rxjs/operators';
 
 @Injectable()
 export class RouterPathService {
-private static _previousRoute: string = '/';
+  private static _previousRoute: string = '/';
   constructor(private _router: Router) {
-    this._router.events.pipe(
-      filter((e: any) => e instanceof RoutesRecognized),
-      pairwise(),
-    ).subscribe((e: any[]) => {
-      RouterPathService._previousRoute = e[0].urlAfterRedirects;
-    });
+    this._router.events
+      .pipe(
+        filter((e: any) => e instanceof RoutesRecognized),
+        pairwise()
+      )
+      .subscribe((e: any[]) => {
+        RouterPathService._previousRoute = e[0].urlAfterRedirects;
+      });
   }
 
   /*
-  * Utility function to get the route the user previously went to
-  * good for use in a "back button"
-  */
+   * Utility function to get the route the user previously went to
+   * good for use in a "back button"
+   */
   getPreviousRoute(): string {
     return RouterPathService._previousRoute;
   }
 }

Index: /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search.module.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search.module.ts
@@ -17,16 +17,8 @@
     MatInputModule,
     MatIconModule,
     MatButtonModule,
   ],
-  declarations: [
-    TdSearchInputComponent,
-    TdSearchBoxComponent,
-  ],
-  exports: [
-    TdSearchInputComponent,
-    TdSearchBoxComponent,
-  ],
+  declarations: [TdSearchInputComponent, TdSearchBoxComponent],
+  exports: [TdSearchInputComponent, TdSearchBoxComponent],
 })
-export class CovalentSearchModule {
-
-}
+export class CovalentSearchModule {}

Index: /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search-box/search-box.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search-box/search-box.component.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search-box/search-box.component.ts
@@ -1,46 +1,70 @@
-import { Component, ViewChild, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';
+import {
+  Component,
+  ViewChild,
+  Input,
+  Output,
+  EventEmitter,
+  ChangeDetectionStrategy,
+  ChangeDetectorRef,
+  forwardRef,
+} from '@angular/core';
 import { NG_VALUE_ACCESSOR } from '@angular/forms';
-import { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  transition,
+  animate,
+  AUTO_STYLE,
+} from '@angular/animations';
 
 import { TdSearchInputComponent } from '../search-input/search-input.component';
 import { IControlValueAccessor, mixinControlValueAccessor } from '../../common';
 
 export class TdSearchBoxBase {
   // tslint:disable-next-line
-  constructor(public _changeDetectorRef: ChangeDetectorRef) { }
+  constructor(public _changeDetectorRef: ChangeDetectorRef) {}
 }
 
 /* tslint:disable-next-line */
 export const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);
 
 @Component({
-  providers: [{
-    provide: NG_VALUE_ACCESSOR,
-    useExisting: forwardRef(() => TdSearchBoxComponent),
-    multi: true,
-  }],
+  providers: [
+    {
+      provide: NG_VALUE_ACCESSOR,
+      useExisting: forwardRef(() => TdSearchBoxComponent),
+      multi: true,
+    },
+  ],
   selector: 'td-search-box',
   templateUrl: './search-box.component.html',
-  styleUrls: ['./search-box.component.scss' ],
+  styleUrls: ['./search-box.component.scss'],
   changeDetection: ChangeDetectionStrategy.OnPush,
   animations: [
     trigger('inputState', [
-      state('0', style({
-        width: '0%',
-        margin: '0px',
-      })),
-      state('1',  style({
-        width: '100%',
-        margin: AUTO_STYLE,
-      })),
+      state(
+        '0',
+        style({
+          width: '0%',
+          margin: '0px',
+        })
+      ),
+      state(
+        '1',
+        style({
+          width: '100%',
+          margin: AUTO_STYLE,
+        })
+      ),
       transition('0 => 1', animate('200ms ease-in')),
       transition('1 => 0', animate('200ms ease-out')),
     ]),
   ],
 })
-export class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {
-
+export class TdSearchBoxComponent extends _TdSearchBoxMixinBase
+  implements IControlValueAccessor {
   @Input() value: any;
   // tslint:disable-next-line: variable-name
   private _searchVisible = false;
   // tslint:disable-next-line: variable-name
@@ -99,9 +123,11 @@
    * searchDebounce: function($event)
    * Event emitted after the [debounce] timeout.
    */
   // tslint:disable-next-line
-  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();
+  @Output('searchDebounce') onSearchDebounce: EventEmitter<
+    string
+  > = new EventEmitter<string>();
 
   /**
    * search: function($event)
    * Event emitted after the key enter has been pressed.

Index: /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search-input/search-input.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search-input/search-input.component.ts
+++ /home/idnes/Projects/awe/src/exclude/covalent/tsearch/search-input/search-input.component.ts
@@ -1,7 +1,23 @@
-import { Component, ViewChild, OnInit, Input, Output, EventEmitter, Optional,
-         ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';
-import { trigger, state, style, transition, animate } from '@angular/animations';
+import {
+  Component,
+  ViewChild,
+  OnInit,
+  Input,
+  Output,
+  EventEmitter,
+  Optional,
+  ChangeDetectionStrategy,
+  ChangeDetectorRef,
+  forwardRef,
+} from '@angular/core';
+import {
+  trigger,
+  state,
+  style,
+  transition,
+  animate,
+} from '@angular/animations';
 import { FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';
 import { Dir } from '@angular/cdk/bidi';
 import { MatInput } from '@angular/material/input';
 
@@ -10,45 +26,58 @@
 import { IControlValueAccessor, mixinControlValueAccessor } from '../../common';
 
 export class TdSearchInputBase {
   // tslint:disable-next-line: variable-name
-  constructor(public _changeDetectorRef: ChangeDetectorRef) { }
+  constructor(public _changeDetectorRef: ChangeDetectorRef) {}
 }
 
 /* tslint:disable-next-line */
-export const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);
+export const _TdSearchInputMixinBase = mixinControlValueAccessor(
+  TdSearchInputBase
+);
 
 @Component({
-  providers: [{
-    provide: NG_VALUE_ACCESSOR,
-    useExisting: forwardRef(() => TdSearchInputComponent),
-    multi: true,
-  }],
+  providers: [
+    {
+      provide: NG_VALUE_ACCESSOR,
+      useExisting: forwardRef(() => TdSearchInputComponent),
+      multi: true,
+    },
+  ],
   selector: 'td-search-input',
   templateUrl: './search-input.component.html',
-  styleUrls: ['./search-input.component.scss' ],
+  styleUrls: ['./search-input.component.scss'],
   changeDetection: ChangeDetectionStrategy.OnPush,
   animations: [
     trigger('searchState', [
-      state('hide-left', style({
-        transform: 'translateX(-150%)',
-        display: 'none',
-      })),
-      state('hide-right', style({
-        transform: 'translateX(150%)',
-        display: 'none',
-      })),
-      state('show',  style({
-        transform: 'translateX(0%)',
-        display: 'block',
-      })),
+      state(
+        'hide-left',
+        style({
+          transform: 'translateX(-150%)',
+          display: 'none',
+        })
+      ),
+      state(
+        'hide-right',
+        style({
+          transform: 'translateX(150%)',
+          display: 'none',
+        })
+      ),
+      state(
+        'show',
+        style({
+          transform: 'translateX(0%)',
+          display: 'block',
+        })
+      ),
       transition('* => show', animate('200ms ease-in')),
       transition('show => *', animate('200ms ease-out')),
     ]),
   ],
 })
-export class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {
-
+export class TdSearchInputComponent extends _TdSearchInputMixinBase
+  implements IControlValueAccessor, OnInit {
   // tslint:disable-next-line: variable-name
   @ViewChild(MatInput) _input: MatInput;
 
   @Input() value: any;
@@ -82,9 +111,11 @@
    * searchDebounce: function($event)
    * Event emitted after the [debounce] timeout.
    */
   // tslint:disable-next-line
-  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();
+  @Output('searchDebounce') onSearchDebounce: EventEmitter<
+    string
+  > = new EventEmitter<string>();
 
   /**
    * search: function($event)
    * Event emitted after the key enter has been pressed.
@@ -116,19 +147,22 @@
   constructor(
     // tslint:disable-next-line: variable-name
     @Optional() private _dir: Dir,
     // tslint:disable-next-line: variable-name
-    _changeDetectorRef: ChangeDetectorRef) {
+    _changeDetectorRef: ChangeDetectorRef
+  ) {
     super(_changeDetectorRef);
   }
 
   ngOnInit(): void {
-    this._input.ngControl.valueChanges.pipe(
-      debounceTime(this.debounce),
-      skip(1), // skip first change when value is set to undefined
-    ).subscribe((value: string) => {
-      this._searchTermChanged(value);
-    });
+    this._input.ngControl.valueChanges
+      .pipe(
+        debounceTime(this.debounce),
+        skip(1) // skip first change when value is set to undefined
+      )
+      .subscribe((value: string) => {
+        this._searchTermChanged(value);
+      });
   }
 
   /**
    * Method to focus to underlying input.
@@ -161,6 +195,5 @@
 
   private _searchTermChanged(value: string): void {
     this.onSearchDebounce.emit(value);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/animations/lib/bouncing.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/animations/lib/bouncing.ts
+++ /home/idnes/Projects/awe/src/lib/animations/lib/bouncing.ts
@@ -2,9 +2,9 @@
   AnimationReferenceMetadata,
   animation,
   style,
   animate,
-  keyframes
+  keyframes,
 } from '@angular/animations';
 import { DEFAULT_TIMING } from './utils';
 
 export const bounceIn = animation(
@@ -16,12 +16,12 @@
       style({ transform: 'scale3d(.9, .9, .9)', offset: 0.4 }),
       style({
         opacity: 1,
         transform: 'scale3d(1.03, 1.03, 1.03)',
-        offset: 0.6
+        offset: 0.6,
       }),
       style({ transform: 'scale3d(.97, .97, .97)', offset: 0.8 }),
-      style({ opacity: 1, transform: 'scale3d(1, 1, 1)', offset: 1 })
+      style({ opacity: 1, transform: 'scale3d(1, 1, 1)', offset: 1 }),
     ])
   ),
   { params: { timing: DEFAULT_TIMING, delay: 0 } }
 );
@@ -33,18 +33,18 @@
       keyframes([
         style({
           opacity: 0,
           transform: 'translate3d(0, {{ a }}, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 1,
           transform: 'translate3d(0, {{ b }}, 0)',
-          offset: 0.6
+          offset: 0.6,
         }),
         style({ transform: 'translate3d(0, {{ c }}, 0)', offset: 0.75 }),
         style({ transform: 'translate3d(0, {{ d }}, 0)', offset: 0.9 }),
-        style({ opacity: 1, transform: 'none', offset: 1 })
+        style({ opacity: 1, transform: 'none', offset: 1 }),
       ])
     ),
     {
       params: {
@@ -52,10 +52,10 @@
         delay: 0,
         a,
         b,
         c,
-        d
-      }
+        d,
+      },
     }
   );
 }
 
@@ -66,18 +66,18 @@
       keyframes([
         style({
           opacity: 0,
           transform: 'translate3d({{ a }}, 0, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 1,
           transform: 'translate3d({{ b }}, 0, 0)',
-          offset: 0.6
+          offset: 0.6,
         }),
         style({ transform: 'translate3d({{ c }}, 0, 0)', offset: 0.75 }),
         style({ transform: 'translate3d({{ d }}, 0, 0)', offset: 0.9 }),
-        style({ opacity: 1, transform: 'none', offset: 1 })
+        style({ opacity: 1, transform: 'none', offset: 1 }),
       ])
     ),
     {
       params: {
@@ -85,10 +85,10 @@
         delay: 0,
         a,
         b,
         c,
-        d
-      }
+        d,
+      },
     }
   );
 }
 
@@ -107,16 +107,16 @@
       style({ transform: 'scale3d(.9, .9, .9)', offset: 0.2 }),
       style({
         opacity: 1,
         transform: 'scale3d({{ scale }}, {{ scale }}, {{ scale }})',
-        offset: 0.5
+        offset: 0.5,
       }),
       style({
         opacity: 1,
         transform: 'scale3d({{ scale }}, {{ scale }}, {{ scale }})',
-        offset: 0.55
+        offset: 0.55,
       }),
-      style({ opacity: 0, transform: 'scale3d(.3, .3, .3)', offset: 1 })
+      style({ opacity: 0, transform: 'scale3d(.3, .3, .3)', offset: 1 }),
     ])
   ),
   { params: { timing: DEFAULT_TIMING, delay: 0, scale: 1.1 } }
 );
@@ -129,20 +129,20 @@
         style({ transform: 'translate3d(0, {{ a }}, 0)', offset: 0.2 }),
         style({
           opacity: 1,
           transform: 'translate3d(0, {{ b }}, 0)',
-          offset: 0.4
+          offset: 0.4,
         }),
         style({
           opacity: 1,
           transform: 'translate3d(0, {{ c }}, 0)',
-          offset: 0.45
+          offset: 0.45,
         }),
         style({
           opacity: 0,
           transform: 'translate3d(0, {{ d }}, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     {
       params: {
@@ -150,10 +150,10 @@
         delay: 0,
         a,
         b,
         c,
-        d
-      }
+        d,
+      },
     }
   );
 }
 
@@ -164,15 +164,15 @@
       keyframes([
         style({
           opacity: 1,
           transform: 'translate3d({{ a }}, 0, 0)',
-          offset: 0.2
+          offset: 0.2,
         }),
         style({
           opacity: 0,
           transform: 'translate3d({{ b }}, 0, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );

Index: /home/idnes/Projects/awe/src/lib/animations/lib/fading.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/animations/lib/fading.ts
+++ /home/idnes/Projects/awe/src/lib/animations/lib/fading.ts
@@ -2,9 +2,9 @@
   AnimationReferenceMetadata,
   animation,
   style,
   animate,
-  keyframes
+  keyframes,
 } from '@angular/animations';
 import { DEFAULT_TIMING } from './utils';
 
 export function fadeInX(a, b) {
@@ -14,15 +14,15 @@
       keyframes([
         style({
           opacity: 0,
           transform: 'translate3d({{ a }}, 0, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 1,
           transform: 'translate3d({{ b }}, 0, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -35,15 +35,15 @@
       keyframes([
         style({
           opacity: 0,
           transform: 'translate3d(0, {{ a }}, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 1,
           transform: 'translate3d(0, {{ b }}, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -62,15 +62,15 @@
       keyframes([
         style({
           opacity: 1,
           transform: 'translate3d({{ a }}, 0, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 0,
           transform: 'translate3d({{ b }}, 0, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -83,15 +83,15 @@
       keyframes([
         style({
           opacity: 1,
           transform: 'translate3d(0, {{ a }}, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 0,
           transform: 'translate3d(0, {{ b }}, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -109,14 +109,14 @@
       '{{ timing }}s {{ delay }}s',
       keyframes([
         style({
           transform: 'translate3d({{ a }}, 0, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           transform: 'translate3d({{ b }}, 0, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -128,14 +128,14 @@
       '{{ timing }}s {{ delay }}s',
       keyframes([
         style({
           transform: 'translate3d(0, {{ a }}, 0)',
-          offset: 0
+          offset: 0,
         }),
         style({
           transform: 'translate3d(0, {{ b }}, 0)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );

Index: /home/idnes/Projects/awe/src/lib/animations/lib/flippers.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/animations/lib/flippers.ts
+++ /home/idnes/Projects/awe/src/lib/animations/lib/flippers.ts
@@ -2,9 +2,9 @@
   AnimationReferenceMetadata,
   animation,
   style,
   animate,
-  keyframes
+  keyframes,
 } from '@angular/animations';
 import { DEFAULT_TIMING } from './utils';
 
 export const flip = animation(
@@ -14,33 +14,33 @@
       '{{ timing }}s {{ delay }}s ease-out',
       keyframes([
         style({
           transform: 'perspective(400px) rotate3d(0, 1, 0, -360deg)',
-          offset: 0
+          offset: 0,
         }),
         style({
           transform:
             'perspective(400px) scale3d(1.5, 1.5, 1.5) rotate3d(0, 1, 0, -190deg)',
-          offset: 0.4
+          offset: 0.4,
         }),
         style({
           transform:
             'perspective(400px) scale3d(1.5, 1.5, 1.5) rotate3d(0, 1, 0, -170deg)',
-          offset: 0.5
+          offset: 0.5,
         }),
         style({
           transform: 'perspective(400px) scale3d(.95, .95, .95)',
-          offset: 0.8
+          offset: 0.8,
         }),
         style({
           transform: 'perspective(400px)',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
-    )
+    ),
   ],
   {
-    params: { timing: DEFAULT_TIMING, delay: 0 }
+    params: { timing: DEFAULT_TIMING, delay: 0 },
   }
 );
 
 export function flipIn(rotateX, rotateY) {
@@ -53,32 +53,32 @@
           style({
             opacity: 0,
             transform:
               'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',
-            offset: 0
+            offset: 0,
           }),
           style({
             opacity: 1,
             transform:
               'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',
-            offset: 0.4
+            offset: 0.4,
           }),
           style({
             transform:
               'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',
-            offset: 0.6
+            offset: 0.6,
           }),
           style({
             transform:
               'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',
-            offset: 0.8
+            offset: 0.8,
           }),
           style({
             transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',
-            offset: 1
-          })
+            offset: 1,
+          }),
         ])
-      )
+      ),
     ],
     { params: { timing: DEFAULT_TIMING, delay: 0, rotateX, rotateY } }
   );
 }
@@ -94,24 +94,24 @@
         '{{ timing }}s {{ delay }}s',
         keyframes([
           style({
             transform: 'perspective(400px)',
-            offset: 0
+            offset: 0,
           }),
           style({
             opacity: 1,
             transform:
               'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',
-            offset: 0.3
+            offset: 0.3,
           }),
           style({
             opacity: 0,
             transform:
               'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',
-            offset: 1
-          })
+            offset: 1,
+          }),
         ])
-      )
+      ),
     ],
     { params: { timing: DEFAULT_TIMING, delay: 0, rotateX, rotateY } }
   );
 }

Index: /home/idnes/Projects/awe/src/lib/animations/lib/rotate.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/animations/lib/rotate.ts
+++ /home/idnes/Projects/awe/src/lib/animations/lib/rotate.ts
@@ -2,9 +2,9 @@
   AnimationReferenceMetadata,
   animation,
   style,
   animate,
-  keyframes
+  keyframes,
 } from '@angular/animations';
 import { DEFAULT_TIMING } from './utils';
 
 export function rotateInDirection(origin, degrees) {
@@ -15,20 +15,20 @@
         style({
           'transform-origin': '{{ origin }}',
           opacity: 0,
           transform: 'rotate3d(0, 0, 1, {{ degrees }})',
-          offset: 0
+          offset: 0,
         }),
         style({
           'transform-origin': '{{ origin }}',
           opacity: 1,
           transform: 'none',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     {
-      params: { timing: DEFAULT_TIMING, delay: 0, origin, degrees }
+      params: { timing: DEFAULT_TIMING, delay: 0, origin, degrees },
     }
   );
 }
 
@@ -46,20 +46,20 @@
         style({
           'transform-origin': '{{ origin }}',
           opacity: 1,
           transform: 'none',
-          offset: 0
+          offset: 0,
         }),
         style({
           'transform-origin': '{{ origin }}',
           opacity: 0,
           transform: 'rotate3d(0, 0, 1, {{ degrees }})',
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     {
-      params: { timing: DEFAULT_TIMING, delay: 0, origin, degrees }
+      params: { timing: DEFAULT_TIMING, delay: 0, origin, degrees },
     }
   );
 }
 

Index: /home/idnes/Projects/awe/src/lib/animations/lib/zooming.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/animations/lib/zooming.ts
+++ /home/idnes/Projects/awe/src/lib/animations/lib/zooming.ts
@@ -2,9 +2,9 @@
   AnimationReferenceMetadata,
   animation,
   style,
   animate,
-  keyframes
+  keyframes,
 } from '@angular/animations';
 import { DEFAULT_TIMING } from './utils';
 
 export const zoomIn = animation(
@@ -14,20 +14,20 @@
       keyframes([
         style({
           opacity: 0,
           transform: 'scale3d(.3, .3, .3)',
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 1,
           transform: 'scale3d(1, 1, 1)',
-          offset: 0.5
-        })
+          offset: 0.5,
+        }),
       ])
-    )
+    ),
   ],
   {
-    params: { timing: DEFAULT_TIMING, delay: 0 }
+    params: { timing: DEFAULT_TIMING, delay: 0 },
   }
 );
 
 export function zoomInY(a, b) {
@@ -37,15 +37,15 @@
       keyframes([
         style({
           opacity: 0,
           transform: `scale3d(.1, .1, .1) translate3d(0, {{ a }}, 0)`,
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 1,
           transform: `scale3d(.475, .475, .475) translate3d(0, {{ b }}, 0)`,
-          offset: 0.6
-        })
+          offset: 0.6,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -58,15 +58,15 @@
       keyframes([
         style({
           opacity: 0,
           transform: `scale3d(.1, .1, .1) translate3d({{ a }}, 0, 0)`,
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 1,
           transform: `scale3d(.475, .475, .475) translate3d({{ b }}, 0, 0)`,
-          offset: 0.6
-        })
+          offset: 0.6,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -83,24 +83,24 @@
       '{{ timing }}s {{ delay }}s',
       keyframes([
         style({
           opacity: 1,
-          offset: 0
+          offset: 0,
         }),
         style({
           opacity: 0,
           transform: 'scale3d(.3, .3, .3)',
-          offset: 0.5
+          offset: 0.5,
         }),
         style({
           opacity: 0,
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
-    )
+    ),
   ],
   {
-    params: { timing: DEFAULT_TIMING, delay: 0 }
+    params: { timing: DEFAULT_TIMING, delay: 0 },
   }
 );
 
 export function zoomOutY(a, b) {
@@ -110,15 +110,15 @@
       keyframes([
         style({
           opacity: 1,
           transform: `scale3d(.475, .475, .475) translate3d(0, {{ a }}, 0)`,
-          offset: 0.4
+          offset: 0.4,
         }),
         style({
           opacity: 0,
           transform: `scale3d(.1, .1, .1) translate3d(0, {{ b }}, 0)`,
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );
@@ -131,15 +131,15 @@
       keyframes([
         style({
           opacity: 1,
           transform: `scale3d(.475, .475, .475) translate3d({{ a }}, 0, 0)`,
-          offset: 0.4
+          offset: 0.4,
         }),
         style({
           opacity: 0,
           transform: `scale3d(.1, .1, .1) translate3d({{ b }}, 0, 0)`,
-          offset: 1
-        })
+          offset: 1,
+        }),
       ])
     ),
     { params: { timing: DEFAULT_TIMING, delay: 0, a, b } }
   );

Index: /home/idnes/Projects/awe/src/lib/barcode/lib/barcode.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/barcode/lib/barcode.component.ts
+++ /home/idnes/Projects/awe/src/lib/barcode/lib/barcode.component.ts
@@ -1,25 +1,53 @@
-import { Component, Input, OnChanges, ViewChild, Renderer2, ElementRef } from '@angular/core';
+import {
+  Component,
+  Input,
+  OnChanges,
+  ViewChild,
+  Renderer2,
+  ElementRef,
+} from '@angular/core';
 // import {api} from 'jsbarcode';
 // declare var JsBarcode: any;
 import JsBarcode from 'jsbarcode';
 
 @Component({
   selector: 'bar-code',
-  template: `<div #bcElement [class]="cssClass"></div>`,
+  template: `
+    <div #bcElement [class]="cssClass"></div>
+  `,
   styles: [
-    `:host {
-      display: inline-block;
-    }`
-  ]
+    `
+      :host {
+        display: inline-block;
+      }
+    `,
+  ],
 })
 export class BarcodeComponent implements OnChanges {
-
   @Input() elementType: 'svg' | 'img' | 'canvas' = 'svg';
   @Input() cssClass = 'barcode'; // this should be done more elegantly
 
-  @Input() format: '' | 'CODE128' | 'CODE128A' | 'CODE128B' | 'CODE128C' | 'EAN' | 'UPC' | 'EAN8' | 'EAN5' |
-  'EAN2' | 'CODE39' | 'ITF14' | 'MSI' | 'MSI10' | 'MSI11' | 'MSI1010' | 'MSI1110' | 'pharmacode' | 'codabar' = 'CODE128';
+  @Input() format:
+    | ''
+    | 'CODE128'
+    | 'CODE128A'
+    | 'CODE128B'
+    | 'CODE128C'
+    | 'EAN'
+    | 'UPC'
+    | 'EAN8'
+    | 'EAN5'
+    | 'EAN2'
+    | 'CODE39'
+    | 'ITF14'
+    | 'MSI'
+    | 'MSI10'
+    | 'MSI11'
+    | 'MSI1010'
+    | 'MSI1110'
+    | 'pharmacode'
+    | 'codabar' = 'CODE128';
   @Input() lineColor = '#000000';
   @Input() width = 2;
   @Input() height = 100;
   @Input() displayValue = false;
@@ -39,9 +67,8 @@
   @ViewChild('bcElement') bcElement: ElementRef;
 
   @Input() valid: () => boolean = () => true;
 
-
   get options() {
     return {
       format: this.format,
       lineColor: this.lineColor,
@@ -62,16 +89,18 @@
       marginRight: this.marginRight,
       valid: this.valid,
     };
   }
-  constructor(private renderer: Renderer2) { }
+  constructor(private renderer: Renderer2) {}
 
   ngOnChanges() {
     this.createBarcode();
   }
 
   createBarcode() {
-    if (!this.value) { return; }
+    if (!this.value) {
+      return;
+    }
     let element: Element;
     switch (this.elementType) {
       case 'img':
         element = this.renderer.createElement('img');
@@ -89,8 +118,6 @@
     for (const node of this.bcElement.nativeElement.childNodes) {
       this.renderer.removeChild(this.bcElement.nativeElement, node);
     }
     this.renderer.appendChild(this.bcElement.nativeElement, element);
-
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/barcode/lib/barcode.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/barcode/lib/barcode.module.ts
+++ /home/idnes/Projects/awe/src/lib/barcode/lib/barcode.module.ts
@@ -2,20 +2,15 @@
 import { BarcodeComponent } from './barcode.component';
 
 @NgModule({
   imports: [],
-  declarations: [
-    BarcodeComponent,
-
-  ],
-  exports: [
-    BarcodeComponent,
-  ]
+  declarations: [BarcodeComponent],
+  exports: [BarcodeComponent],
 })
 export class BarcodeModule {
   static forRoot(): ModuleWithProviders {
     return {
       ngModule: BarcodeModule,
-      providers: []
+      providers: [],
     };
   }
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/mat-calendar.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/mat-calendar.module.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/mat-calendar.module.ts
@@ -15,11 +15,9 @@
 import { MatCalendarService } from './services/mat-calendar.service';
 import { MatCalendarComponent } from './components/mat-calendar.component';
 import { MatCalendarMonthlyViewComponent } from './components/mat-calendar-monthly-view/mat-calendar-monthly-view.component';
 import { MatCalendarYearlyViewComponent } from './components/mat-calendar-yearly-view/mat-calendar-yearly-view.component';
-import {
-  MatCalendarMonthPerYearViewComponent
-} from './components/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component';
+import { MatCalendarMonthPerYearViewComponent } from './components/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component';
 import { FlexLayoutModule } from '@angular/flex-layout';
 import { NativeDateAdapter } from '@angular/material';
 import { MatCalendarWeeklyViewComponent } from './components/mat-calendar-weekly-view/mat-calendar-weekly-view.component';
 import { MatCalendarDailyViewComponent } from './components/mat-calendar-daily-view/mat-calendar-daily-view.component';
@@ -41,26 +39,25 @@
     MatDialogModule,
     MatButtonModule,
     MatIconModule,
     MatRippleModule,
-    MatDatepickerModule
+    MatDatepickerModule,
   ],
   exports: [MatCalendarComponent],
-  declarations:
-    [
-      // MatCalendarBody,
-      MatCalendarComponent,
-      MatCalendarYearlyViewComponent,
-      MatCalendarMonthPerYearViewComponent,
-      MatCalendarMonthlyViewComponent,
-      MatCalendarWeeklyViewComponent,
-      MatCalendarDailyViewComponent
-    ]
+  declarations: [
+    // MatCalendarBody,
+    MatCalendarComponent,
+    MatCalendarYearlyViewComponent,
+    MatCalendarMonthPerYearViewComponent,
+    MatCalendarMonthlyViewComponent,
+    MatCalendarWeeklyViewComponent,
+    MatCalendarDailyViewComponent,
+  ],
 })
 export class MatCalendarModule {
   static forRoot(): ModuleWithProviders {
     return {
       ngModule: MatCalendarModule,
-      providers: [MatCalendarService, CalendarDateHelper, NativeDateAdapter]
+      providers: [MatCalendarService, CalendarDateHelper, NativeDateAdapter],
     };
   }
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar.component.ts
@@ -1,18 +1,22 @@
-import {ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit} from '@angular/core';
-import {Subscription} from 'rxjs/internal/Subscription';
-import {MatCalendarService} from '../service/mat-calendar.service';
-import {MatCalendarView} from '../type/mat-calendar-view.type';
+import {
+  ChangeDetectionStrategy,
+  Component,
+  Input,
+  OnDestroy,
+  OnInit,
+} from '@angular/core';
+import { Subscription } from 'rxjs/internal/Subscription';
+import { MatCalendarService } from '../service/mat-calendar.service';
+import { MatCalendarView } from '../type/mat-calendar-view.type';
 
-
 @Component({
   selector: 'mat-calendar',
   templateUrl: './mat-calendar.component.html',
   styleUrls: ['./mat-calendar.component.scss'],
-  changeDetection: ChangeDetectionStrategy.Default
+  changeDetection: ChangeDetectionStrategy.Default,
 })
 export class MatCalendarComponent implements OnInit, OnDestroy {
-
   currentDate: Date;
 
   @Input()
   selectedDate: Date;
@@ -26,14 +30,15 @@
     this.currentDate = this.calendarService.currentDate;
   }
 
   ngOnInit(): void {
+    this.selectedDate
+      ? (this.calendarService.selectedDate = this.selectedDate)
+      : (this.selectedDate = this.calendarService.selectedDate);
 
-    this.selectedDate ? this.calendarService.selectedDate = this.selectedDate : this.selectedDate = this.calendarService.selectedDate;
-
-    this.$onViewChangedSubscription = this.calendarService
-      .onViewChanged
-      .subscribe((view: MatCalendarView) => this.view = view);
+    this.$onViewChangedSubscription = this.calendarService.onViewChanged.subscribe(
+      (view: MatCalendarView) => (this.view = view)
+    );
   }
 
   ngOnDestroy(): void {
     if (this.$onViewChangedSubscription) {
@@ -44,7 +49,5 @@
   reset() {
     this.calendarService.reset();
     this.selectedDate = this.calendarService.selectedDate;
   }
-
 }
-

Index: /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-monthly-view/mat-calendar-monthly-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-monthly-view/mat-calendar-monthly-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-monthly-view/mat-calendar-monthly-view.component.ts
@@ -1,16 +1,12 @@
-import {Component, OnInit} from '@angular/core';
+import { Component, OnInit } from '@angular/core';
 
 @Component({
   selector: 'mat-calendar-monthly-view',
   templateUrl: './mat-calendar-monthly-view.component.html',
-  styleUrls: ['./mat-calendar-monthly-view.component.scss']
+  styleUrls: ['./mat-calendar-monthly-view.component.scss'],
 })
 export class MatCalendarMonthlyViewComponent implements OnInit {
+  constructor() {}
 
-  constructor() {
-  }
-
-  ngOnInit() {
-  }
-
+  ngOnInit() {}
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-yearly-view/mat-calendar-yearly-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-yearly-view/mat-calendar-yearly-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-yearly-view/mat-calendar-yearly-view.component.ts
@@ -1,15 +1,14 @@
-import {Component, OnDestroy, OnInit} from '@angular/core';
-import {MatCalendarService} from '../../service/mat-calendar.service';
-import {Subscription} from 'rxjs/internal/Subscription';
+import { Component, OnDestroy, OnInit } from '@angular/core';
+import { MatCalendarService } from '../../service/mat-calendar.service';
+import { Subscription } from 'rxjs/internal/Subscription';
 
 @Component({
   selector: 'mat-calendar-yearly-view',
   templateUrl: './mat-calendar-yearly-view.component.html',
-  styleUrls: ['./mat-calendar-yearly-view.component.scss']
+  styleUrls: ['./mat-calendar-yearly-view.component.scss'],
 })
 export class MatCalendarYearlyViewComponent implements OnInit, OnDestroy {
-
   selectedDate: Date;
   year: number;
   $onDateResetSubscription: Subscription;
 
@@ -19,11 +18,11 @@
     this.year = this.selectedDate.getFullYear();
   }
 
   ngOnInit() {
-    this.$onDateResetSubscription = this.calendarService
-      .onDateReset
-      .subscribe((date: Date) => this.resetYear());
+    this.$onDateResetSubscription = this.calendarService.onDateReset.subscribe(
+      (date: Date) => this.resetYear()
+    );
 
     // setInterval(() => {
     //   console.log('round after 5s');
     // }, 5000);
@@ -38,9 +37,12 @@
   nextYear() {
     this.selectedDate.setFullYear(++this.year);
     console.log('next year: ', this.year);
     console.log('selectedDate: ', this.selectedDate);
-    console.log('calendarService.selectedDate: ', this.calendarService.selectedDate);
+    console.log(
+      'calendarService.selectedDate: ',
+      this.calendarService.selectedDate
+    );
     // this.ref.detectChanges();
   }
 
   previousYear() {
@@ -52,6 +54,5 @@
   resetYear() {
     this.selectedDate = this.calendarService.selectedDate;
     this.year = this.selectedDate.getFullYear();
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/component/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
@@ -1,7 +1,21 @@
-import {Component, Inject, Input, OnChanges, OnInit, Optional, SimpleChanges, ViewEncapsulation} from '@angular/core';
+import {
+  Component,
+  Inject,
+  Input,
+  OnChanges,
+  OnInit,
+  Optional,
+  SimpleChanges,
+  ViewEncapsulation,
+} from '@angular/core';
 import * as _moment from 'moment';
-import {MAT_DATE_FORMATS, MatCalendarCell, MatDateFormats, NativeDateAdapter} from '@angular/material';
+import {
+  MAT_DATE_FORMATS,
+  MatCalendarCell,
+  MatDateFormats,
+  NativeDateAdapter,
+} from '@angular/material';
 
 const moment = _moment;
 
 @Component({
@@ -10,9 +24,8 @@
   styleUrls: ['./mat-calendar-month-per-year-view.component.scss'],
   encapsulation: ViewEncapsulation.None,
 })
 export class MatCalendarMonthPerYearViewComponent implements OnInit, OnChanges {
-
   @Input()
   month: number;
 
   @Input()
@@ -26,34 +39,39 @@
   /** The date of the month that today falls on. Null if today is in another month. */
   _todayDate: number | null;
 
   /** The names of the weekdays. */
-  _weekdays: { long: string, narrow: string }[];
+  _weekdays: { long: string; narrow: string }[];
 
   /** Grid of calendar cells representing the dates of the month. */
   _weeks: MatCalendarCell[][];
 
   monthMatrix: [number, Array<number>] = [7, []];
 
   selectedDate: Date = new Date();
 
-  constructor(@Optional()
-              @Inject(MAT_DATE_FORMATS)
-              private _dateFormats: MatDateFormats,
-              public nativeDateAdapter: NativeDateAdapter) {
-
+  constructor(
+    @Optional()
+    @Inject(MAT_DATE_FORMATS)
+    private _dateFormats: MatDateFormats,
+    public nativeDateAdapter: NativeDateAdapter
+  ) {
     const firstDayOfWeek = this.nativeDateAdapter.getFirstDayOfWeek();
     const narrowWeekdays = this.nativeDateAdapter.getDayOfWeekNames('narrow');
     const longWeekdays = this.nativeDateAdapter.getDayOfWeekNames('long');
 
     // console.log('getDayOfWeekNames', this.nativeDateAdapter.getDayOfWeekNames('short'));
     // Rotate the labels for days of the week based on the configured first day of the week.
     const weekdays = longWeekdays.map((long, i) => {
-      return {long, narrow: narrowWeekdays[i]};
+      return { long, narrow: narrowWeekdays[i] };
     });
 
-    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));
-    this._todayDate = this._getDateInCurrentMonth(this.nativeDateAdapter.today());
+    this._weekdays = weekdays
+      .slice(firstDayOfWeek)
+      .concat(weekdays.slice(0, firstDayOfWeek));
+    this._todayDate = this._getDateInCurrentMonth(
+      this.nativeDateAdapter.today()
+    );
   }
 
   ngOnInit() {
     if (this.month && this.year) {
@@ -70,14 +88,21 @@
     }
   }
 
   init() {
-    this._todayDate = this._getDateInCurrentMonth(this.nativeDateAdapter.today());
-    const firstOfMonth = this.nativeDateAdapter.createDate(this.nativeDateAdapter.getYear(this.selectedDate),
-      this.nativeDateAdapter.getMonth(this.selectedDate), 1);
+    this._todayDate = this._getDateInCurrentMonth(
+      this.nativeDateAdapter.today()
+    );
+    const firstOfMonth = this.nativeDateAdapter.createDate(
+      this.nativeDateAdapter.getYear(this.selectedDate),
+      this.nativeDateAdapter.getMonth(this.selectedDate),
+      1
+    );
     this._firstWeekOffset =
-      (7 + this.nativeDateAdapter.getDayOfWeek(firstOfMonth) -
-        this.nativeDateAdapter.getFirstDayOfWeek()) % 7;
+      (7 +
+        this.nativeDateAdapter.getDayOfWeek(firstOfMonth) -
+        this.nativeDateAdapter.getFirstDayOfWeek()) %
+      7;
     this._createWeekCells();
     // console.log(this._weeks);
   }
 
@@ -85,34 +110,49 @@
    * Gets the date in this month that the given Date falls on.
    * Returns null if the given Date is in another month.
    */
   private _getDateInCurrentMonth(date: Date | null): number | null {
-    return date && this._hasSameMonthAndYear(date, this.selectedDate) ?
-      this.nativeDateAdapter.getDate(date) : null;
+    return date && this._hasSameMonthAndYear(date, this.selectedDate)
+      ? this.nativeDateAdapter.getDate(date)
+      : null;
   }
 
   /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */
   private _hasSameMonthAndYear(d1: Date | null, d2: Date | null): boolean {
-    return !!(d1 && d2 && this.nativeDateAdapter.getMonth(d1) === this.nativeDateAdapter.getMonth(d2) &&
-      this.nativeDateAdapter.getYear(d1) === this.nativeDateAdapter.getYear(d2));
+    return !!(
+      d1 &&
+      d2 &&
+      this.nativeDateAdapter.getMonth(d1) ===
+        this.nativeDateAdapter.getMonth(d2) &&
+      this.nativeDateAdapter.getYear(d1) === this.nativeDateAdapter.getYear(d2)
+    );
   }
 
   /** Creates MatCalendarCells for the dates in this month. */
   private _createWeekCells() {
-    const daysInMonth = this.nativeDateAdapter.getNumDaysInMonth(this.selectedDate);
+    const daysInMonth = this.nativeDateAdapter.getNumDaysInMonth(
+      this.selectedDate
+    );
     const dateNames = this.nativeDateAdapter.getDateNames();
     this._weeks = [[]];
-    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {
+    for (
+      let i = 0, cell = this._firstWeekOffset;
+      i < daysInMonth;
+      i++, cell++
+    ) {
       if (cell === 7) {
         this._weeks.push([]);
         cell = 0;
       }
       const date = this.nativeDateAdapter.createDate(
         this.nativeDateAdapter.getYear(this.selectedDate),
-        this.nativeDateAdapter.getMonth(this.selectedDate), i + 1);
+        this.nativeDateAdapter.getMonth(this.selectedDate),
+        i + 1
+      );
       // const enabled = this._shouldEnableDate(date);
       // const ariaLabel = this.nativeDateAdapter.format(date, this._dateFormats.display.dateA11yLabel);
-      this._weeks[this._weeks.length - 1]
-        .push(new MatCalendarCell(i + 1, dateNames[i], 'ariaLabel', false));
+      this._weeks[this._weeks.length - 1].push(
+        new MatCalendarCell(i + 1, dateNames[i], 'ariaLabel', false)
+      );
     }
   }
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar.component.ts
@@ -1,18 +1,22 @@
-import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit } from '@angular/core';
+import {
+  ChangeDetectionStrategy,
+  Component,
+  Input,
+  OnDestroy,
+  OnInit,
+} from '@angular/core';
 import { Subscription } from 'rxjs/internal/Subscription';
 import { MatCalendarService } from '../services/mat-calendar.service';
 import { MatCalendarView } from '../type/mat-calendar-view.type';
 
-
 @Component({
   selector: 'mat-calendar-2',
   templateUrl: './mat-calendar.component.html',
   styleUrls: ['./mat-calendar.component.scss'],
-  changeDetection: ChangeDetectionStrategy.Default
+  changeDetection: ChangeDetectionStrategy.Default,
 })
 export class MatCalendarComponent implements OnInit, OnDestroy {
-
   currentDate: Date;
 
   @Input()
   selectedDate: Date;
@@ -26,14 +30,15 @@
     this.currentDate = this.calendarService.currentDate;
   }
 
   ngOnInit(): void {
+    this.selectedDate
+      ? (this.calendarService.selectedDate = this.selectedDate)
+      : (this.selectedDate = this.calendarService.selectedDate);
 
-    this.selectedDate ? this.calendarService.selectedDate = this.selectedDate : this.selectedDate = this.calendarService.selectedDate;
-
-    this.$onViewChangedSubscription = this.calendarService
-      .onViewChanged
-      .subscribe((view: MatCalendarView) => this.view = view);
+    this.$onViewChangedSubscription = this.calendarService.onViewChanged.subscribe(
+      (view: MatCalendarView) => (this.view = view)
+    );
   }
 
   ngOnDestroy(): void {
     if (this.$onViewChangedSubscription) {
@@ -44,7 +49,5 @@
   reset() {
     this.calendarService.reset();
     this.selectedDate = this.calendarService.selectedDate;
   }
-
 }
-

Index: /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-daily-view/mat-calendar-daily-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-daily-view/mat-calendar-daily-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-daily-view/mat-calendar-daily-view.component.ts
@@ -1,16 +1,12 @@
-import {Component, OnInit} from '@angular/core';
+import { Component, OnInit } from '@angular/core';
 
 @Component({
   selector: 'mat-calendar-daily-view',
   templateUrl: './mat-calendar-daily-view.component.html',
-  styleUrls: ['./mat-calendar-daily-view.component.scss']
+  styleUrls: ['./mat-calendar-daily-view.component.scss'],
 })
 export class MatCalendarDailyViewComponent implements OnInit {
+  constructor() {}
 
-  constructor() {
-  }
-
-  ngOnInit() {
-  }
-
+  ngOnInit() {}
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-monthly-view/mat-calendar-monthly-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-monthly-view/mat-calendar-monthly-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-monthly-view/mat-calendar-monthly-view.component.ts
@@ -1,15 +1,14 @@
-import {Component, Input, OnInit} from '@angular/core';
-import {MatCalendarCell, NativeDateAdapter} from '@angular/material';
-import {CalendarDateHelper} from '../../services/helpers/calendar-date-helper.service';
+import { Component, Input, OnInit } from '@angular/core';
+import { MatCalendarCell, NativeDateAdapter } from '@angular/material';
+import { CalendarDateHelper } from '../../services/helpers/calendar-date-helper.service';
 
 @Component({
   selector: 'mat-calendar-monthly-view',
   templateUrl: './mat-calendar-monthly-view.component.html',
   styleUrls: ['./mat-calendar-monthly-view.component.scss'],
 })
 export class MatCalendarMonthlyViewComponent implements OnInit {
-
   /** The cells to display in the table. */
   @Input() rows: MatCalendarCell[][];
 
   /** The cell number of the active cell in the table. */
@@ -33,13 +32,14 @@
   /** The date of the month that today falls on. Null if today is in another month. */
   _todayDate: number | null;
 
   /** The names of the weekdays. */
-  _weekdays: { long: string, narrow: string }[];
+  _weekdays: { long: string; narrow: string }[];
 
-  constructor(public nativeDateAdapter: NativeDateAdapter,
-              public calendarDateHelper: CalendarDateHelper) {
-  }
+  constructor(
+    public nativeDateAdapter: NativeDateAdapter,
+    public calendarDateHelper: CalendarDateHelper
+  ) {}
 
   ngOnInit() {
     const firstDayOfWeek = this.nativeDateAdapter.getFirstDayOfWeek();
     const narrowWeekdays = this.nativeDateAdapter.getDayOfWeekNames('narrow');
@@ -47,12 +47,14 @@
 
     // console.log('getDayOfWeekNames', this.nativeDateAdapter.getDayOfWeekNames('short'));
     // Rotate the labels for days of the week based on the configured first day of the week.
     const weekdays = longWeekdays.map((long, i) => {
-      return {long, narrow: narrowWeekdays[i]};
+      return { long, narrow: narrowWeekdays[i] };
     });
 
-    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));
+    this._weekdays = weekdays
+      .slice(firstDayOfWeek)
+      .concat(weekdays.slice(0, firstDayOfWeek));
     // this._todayDate = this._getDateInCurrentMonth(this.nativeDateAdapter.today());
 
     this.rows = this.calendarDateHelper.createWeekCells();
 
@@ -60,10 +62,11 @@
   }
 
   /** The number of blank cells to put at the beginning for the first row. */
   get _firstRowOffset(): number {
-    return this.rows && this.rows.length && this.rows[0].length ?
-      this.numCols - this.rows[0].length : 0;
+    return this.rows && this.rows.length && this.rows[0].length
+      ? this.numCols - this.rows[0].length
+      : 0;
   }
 
   _isActiveCell(rowIndex: number, colIndex: number): boolean {
     let cellNumber = rowIndex * this.numCols + colIndex;

Index: /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-weekly-view/mat-calendar-weekly-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-weekly-view/mat-calendar-weekly-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-weekly-view/mat-calendar-weekly-view.component.ts
@@ -2,14 +2,11 @@
 
 @Component({
   selector: 'mat-calendar-weekly-view',
   templateUrl: './mat-calendar-weekly-view.component.html',
-  styleUrls: ['./mat-calendar-weekly-view.component.scss']
+  styleUrls: ['./mat-calendar-weekly-view.component.scss'],
 })
 export class MatCalendarWeeklyViewComponent implements OnInit {
+  constructor() {}
 
-  constructor() { }
-
-  ngOnInit() {
-  }
-
+  ngOnInit() {}
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-yearly-view/mat-calendar-yearly-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-yearly-view/mat-calendar-yearly-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-yearly-view/mat-calendar-yearly-view.component.ts
@@ -1,15 +1,14 @@
-import {Component, OnDestroy, OnInit} from '@angular/core';
-import {MatCalendarService} from '../../services/mat-calendar.service';
-import {Subscription} from 'rxjs/internal/Subscription';
+import { Component, OnDestroy, OnInit } from '@angular/core';
+import { MatCalendarService } from '../../services/mat-calendar.service';
+import { Subscription } from 'rxjs/internal/Subscription';
 
 @Component({
   selector: 'mat-calendar-yearly-view',
   templateUrl: './mat-calendar-yearly-view.component.html',
-  styleUrls: ['./mat-calendar-yearly-view.component.scss']
+  styleUrls: ['./mat-calendar-yearly-view.component.scss'],
 })
 export class MatCalendarYearlyViewComponent implements OnInit, OnDestroy {
-
   selectedDate: Date;
   year: number;
   $onDateResetSubscription: Subscription;
 
@@ -19,11 +18,11 @@
     this.year = this.selectedDate.getFullYear();
   }
 
   ngOnInit() {
-    this.$onDateResetSubscription = this.calendarService
-      .onDateReset
-      .subscribe((date: Date) => this.resetYear());
+    this.$onDateResetSubscription = this.calendarService.onDateReset.subscribe(
+      (date: Date) => this.resetYear()
+    );
 
     // setInterval(() => {
     //   console.log('round after 5s');
     // }, 5000);
@@ -38,9 +37,12 @@
   nextYear() {
     this.selectedDate.setFullYear(++this.year);
     console.log('next year: ', this.year);
     console.log('selectedDate: ', this.selectedDate);
-    console.log('calendarService.selectedDate: ', this.calendarService.selectedDate);
+    console.log(
+      'calendarService.selectedDate: ',
+      this.calendarService.selectedDate
+    );
     // this.ref.detectChanges();
   }
 
   previousYear() {
@@ -52,6 +54,5 @@
   resetYear() {
     this.selectedDate = this.calendarService.selectedDate;
     this.year = this.selectedDate.getFullYear();
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/components/mat-calendar-yearly-view/mat-calendar-month-per-year-view/mat-calendar-month-per-year-view.component.ts
@@ -1,7 +1,21 @@
-import {Component, Inject, Input, OnChanges, OnInit, Optional, SimpleChanges, ViewEncapsulation} from '@angular/core';
+import {
+  Component,
+  Inject,
+  Input,
+  OnChanges,
+  OnInit,
+  Optional,
+  SimpleChanges,
+  ViewEncapsulation,
+} from '@angular/core';
 import * as _moment from 'moment';
-import {MAT_DATE_FORMATS, MatCalendarCell, MatDateFormats, NativeDateAdapter} from '@angular/material';
+import {
+  MAT_DATE_FORMATS,
+  MatCalendarCell,
+  MatDateFormats,
+  NativeDateAdapter,
+} from '@angular/material';
 
 const moment = _moment;
 
 @Component({
@@ -10,9 +24,8 @@
   styleUrls: ['./mat-calendar-month-per-year-view.component.scss'],
   encapsulation: ViewEncapsulation.None,
 })
 export class MatCalendarMonthPerYearViewComponent implements OnInit, OnChanges {
-
   @Input()
   month: number;
 
   @Input()
@@ -26,33 +39,39 @@
   /** The date of the month that today falls on. Null if today is in another month. */
   _todayDate: number | null;
 
   /** The names of the weekdays. */
-  _weekdays: { long: string, narrow: string }[];
+  _weekdays: { long: string; narrow: string }[];
 
   /** Grid of calendar cells representing the dates of the month. */
   _weeks: MatCalendarCell[][];
 
   monthMatrix: [number, Array<number>] = [7, []];
 
   selectedDate: Date = new Date();
 
-  constructor(@Optional() @Inject(MAT_DATE_FORMATS)
-              private _dateFormats: MatDateFormats,
-              public nativeDateAdapter: NativeDateAdapter) {
-
+  constructor(
+    @Optional()
+    @Inject(MAT_DATE_FORMATS)
+    private _dateFormats: MatDateFormats,
+    public nativeDateAdapter: NativeDateAdapter
+  ) {
     const firstDayOfWeek = this.nativeDateAdapter.getFirstDayOfWeek();
     const narrowWeekdays = this.nativeDateAdapter.getDayOfWeekNames('narrow');
     const longWeekdays = this.nativeDateAdapter.getDayOfWeekNames('long');
 
     // console.log('getDayOfWeekNames', this.nativeDateAdapter.getDayOfWeekNames('short'));
     // Rotate the labels for days of the week based on the configured first day of the week.
     const weekdays = longWeekdays.map((long, i) => {
-      return {long, narrow: narrowWeekdays[i]};
+      return { long, narrow: narrowWeekdays[i] };
     });
 
-    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));
-    this._todayDate = this._getDateInCurrentMonth(this.nativeDateAdapter.today());
+    this._weekdays = weekdays
+      .slice(firstDayOfWeek)
+      .concat(weekdays.slice(0, firstDayOfWeek));
+    this._todayDate = this._getDateInCurrentMonth(
+      this.nativeDateAdapter.today()
+    );
   }
 
   ngOnInit() {
     console.log(`month = ${this.month} | year =  ${this.year}`);
@@ -68,14 +87,21 @@
     }
   }
 
   init() {
-    this._todayDate = this._getDateInCurrentMonth(this.nativeDateAdapter.today());
-    const firstOfMonth = this.nativeDateAdapter.createDate(this.nativeDateAdapter.getYear(this.selectedDate),
-      this.nativeDateAdapter.getMonth(this.selectedDate), 1);
+    this._todayDate = this._getDateInCurrentMonth(
+      this.nativeDateAdapter.today()
+    );
+    const firstOfMonth = this.nativeDateAdapter.createDate(
+      this.nativeDateAdapter.getYear(this.selectedDate),
+      this.nativeDateAdapter.getMonth(this.selectedDate),
+      1
+    );
     this._firstWeekOffset =
-      (7 + this.nativeDateAdapter.getDayOfWeek(firstOfMonth) -
-        this.nativeDateAdapter.getFirstDayOfWeek()) % 7;
+      (7 +
+        this.nativeDateAdapter.getDayOfWeek(firstOfMonth) -
+        this.nativeDateAdapter.getFirstDayOfWeek()) %
+      7;
     this._createWeekCells();
     // console.log(this._weeks);
   }
 
@@ -83,34 +109,49 @@
    * Gets the date in this month that the given Date falls on.
    * Returns null if the given Date is in another month.
    */
   private _getDateInCurrentMonth(date: Date | null): number | null {
-    return date && this._hasSameMonthAndYear(date, this.selectedDate) ?
-      this.nativeDateAdapter.getDate(date) : null;
+    return date && this._hasSameMonthAndYear(date, this.selectedDate)
+      ? this.nativeDateAdapter.getDate(date)
+      : null;
   }
 
   /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */
   private _hasSameMonthAndYear(d1: Date | null, d2: Date | null): boolean {
-    return !!(d1 && d2 && this.nativeDateAdapter.getMonth(d1) === this.nativeDateAdapter.getMonth(d2) &&
-      this.nativeDateAdapter.getYear(d1) === this.nativeDateAdapter.getYear(d2));
+    return !!(
+      d1 &&
+      d2 &&
+      this.nativeDateAdapter.getMonth(d1) ===
+        this.nativeDateAdapter.getMonth(d2) &&
+      this.nativeDateAdapter.getYear(d1) === this.nativeDateAdapter.getYear(d2)
+    );
   }
 
   /** Creates MatCalendarCells for the dates in this month. */
   private _createWeekCells() {
-    const daysInMonth = this.nativeDateAdapter.getNumDaysInMonth(this.selectedDate);
+    const daysInMonth = this.nativeDateAdapter.getNumDaysInMonth(
+      this.selectedDate
+    );
     const dateNames = this.nativeDateAdapter.getDateNames();
     this._weeks = [[]];
-    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {
+    for (
+      let i = 0, cell = this._firstWeekOffset;
+      i < daysInMonth;
+      i++, cell++
+    ) {
       if (cell === 7) {
         this._weeks.push([]);
         cell = 0;
       }
       const date = this.nativeDateAdapter.createDate(
         this.nativeDateAdapter.getYear(this.selectedDate),
-        this.nativeDateAdapter.getMonth(this.selectedDate), i + 1);
+        this.nativeDateAdapter.getMonth(this.selectedDate),
+        i + 1
+      );
       // const enabled = this._shouldEnableDate(date);
       // const ariaLabel = this.nativeDateAdapter.format(date, this._dateFormats.display.dateA11yLabel);
-      this._weeks[this._weeks.length - 1]
-        .push(new MatCalendarCell(i + 1, dateNames[i], 'ariaLabel', false));
+      this._weeks[this._weeks.length - 1].push(
+        new MatCalendarCell(i + 1, dateNames[i], 'ariaLabel', false)
+      );
     }
   }
 }

Index: /home/idnes/Projects/awe/src/lib/calendar/module/service/mat-calendar.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/service/mat-calendar.service.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/service/mat-calendar.service.ts
@@ -1,19 +1,20 @@
-import {EventEmitter, Injectable} from '@angular/core';
-import {MatCalendarView} from '../..';
+import { EventEmitter, Injectable } from '@angular/core';
+import { MatCalendarView } from '../..';
 import * as _moment from 'moment';
-import {NativeDateAdapter} from '@angular/material';
+import { NativeDateAdapter } from '@angular/material';
 
 const moment = _moment;
 
 @Injectable()
 export class MatCalendarService {
-
   currentDate: Date = new Date();
   selectedDate: Date;
 
   // events
-  onViewChanged: EventEmitter<MatCalendarView> = new EventEmitter<MatCalendarView>();
+  onViewChanged: EventEmitter<MatCalendarView> = new EventEmitter<
+    MatCalendarView
+  >();
   onDateReset: EventEmitter<Date> = new EventEmitter<Date>();
 
   constructor(private _nativeDateAdapter: NativeDateAdapter) {
     this.selectedDate = this._nativeDateAdapter.clone(this.currentDate);

Index: /home/idnes/Projects/awe/src/lib/calendar/module/services/mat-calendar.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/services/mat-calendar.service.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/services/mat-calendar.service.ts
@@ -1,19 +1,20 @@
-import {EventEmitter, Injectable} from '@angular/core';
-import {MatCalendarView} from '../..';
+import { EventEmitter, Injectable } from '@angular/core';
+import { MatCalendarView } from '../..';
 import * as _moment from 'moment';
-import {NativeDateAdapter} from '@angular/material';
+import { NativeDateAdapter } from '@angular/material';
 
 const moment = _moment;
 
 @Injectable()
 export class MatCalendarService {
-
   currentDate: Date = new Date();
   selectedDate: Date;
 
   // events
-  onViewChanged: EventEmitter<MatCalendarView> = new EventEmitter<MatCalendarView>();
+  onViewChanged: EventEmitter<MatCalendarView> = new EventEmitter<
+    MatCalendarView
+  >();
   onDateReset: EventEmitter<Date> = new EventEmitter<Date>();
 
   constructor(private _nativeDateAdapter: NativeDateAdapter) {
     this.selectedDate = this._nativeDateAdapter.clone(this.currentDate);

Index: /home/idnes/Projects/awe/src/lib/calendar/module/services/helpers/calendar-date-helper.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/calendar/module/services/helpers/calendar-date-helper.service.ts
+++ /home/idnes/Projects/awe/src/lib/calendar/module/services/helpers/calendar-date-helper.service.ts
@@ -1,14 +1,17 @@
-import {Injectable} from '@angular/core';
-import {DateAdapter, MatCalendarCell, NativeDateAdapter} from '@angular/material';
+import { Injectable } from '@angular/core';
+import {
+  DateAdapter,
+  MatCalendarCell,
+  NativeDateAdapter,
+} from '@angular/material';
 
 const DAYS_PER_WEEK = 7;
 
 @Injectable({
-  providedIn: 'root'
+  providedIn: 'root',
 })
 export class CalendarDateHelper {
-
   /** The number of blank cells in the first row before the 1st of the month. */
   firstWeekOffset: number;
 
   /**
@@ -27,20 +30,29 @@
     this.firstWeekOffset = this.getFirstWeekOffset();
   }
 
   getFirstOfMonth(): Date {
-    return this._nativeDateAdapter.createDate(this._nativeDateAdapter.getYear(this.activeDate),
-      this._nativeDateAdapter.getMonth(this.activeDate), 1);
+    return this._nativeDateAdapter.createDate(
+      this._nativeDateAdapter.getYear(this.activeDate),
+      this._nativeDateAdapter.getMonth(this.activeDate),
+      1
+    );
   }
 
   getFirstWeekOffset(date: Date = this.getFirstOfMonth()): number {
-    return (DAYS_PER_WEEK + this._nativeDateAdapter.getDayOfWeek(date) -
-      this._nativeDateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;
+    return (
+      (DAYS_PER_WEEK +
+        this._nativeDateAdapter.getDayOfWeek(date) -
+        this._nativeDateAdapter.getFirstDayOfWeek()) %
+      DAYS_PER_WEEK
+    );
   }
 
   /** Creates MatCalendarCells for the dates in this month. */
   createWeekCells(): MatCalendarCell[][] {
-    const daysInMonth = this._nativeDateAdapter.getNumDaysInMonth(this.activeDate);
+    const daysInMonth = this._nativeDateAdapter.getNumDaysInMonth(
+      this.activeDate
+    );
     const dateNames = this._nativeDateAdapter.getDateNames();
     this.weeks = [[]];
     for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {
       if (cell === DAYS_PER_WEEK) {
@@ -50,10 +62,11 @@
       // const date = this._nativeDateAdapter.createDate(
       //   this._nativeDateAdapter.getYear(this.activeDate),
       //   this._nativeDateAdapter.getMonth(this.activeDate), i + 1);
       // const ariaLabel = this._nativeDateAdapter.format(date, this._dateFormats.display.dateA11yLabel);
-      this.weeks[this.weeks.length - 1]
-        .push(new MatCalendarCell(i + 1, dateNames[i], undefined, true));
+      this.weeks[this.weeks.length - 1].push(
+        new MatCalendarCell(i + 1, dateNames[i], undefined, true)
+      );
 
       console.log('this.weeks = ', this.weeks);
     }
     return this.weeks;

Index: /home/idnes/Projects/awe/src/lib/click-outside/lib/click-outside.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/click-outside/lib/click-outside.directive.ts
+++ /home/idnes/Projects/awe/src/lib/click-outside/lib/click-outside.directive.ts
@@ -17,9 +17,8 @@
 
 @Injectable()
 @Directive({ selector: '[clickOutside]' })
 export class ClickOutsideDirective implements OnInit, OnChanges, OnDestroy {
-
   @Input() clickOutsideEnabled = true;
 
   @Input() attachOutsideOnClick = false;
   @Input() delayClickOutsideInit = false;
@@ -37,38 +36,49 @@
   // tslint:disable-next-line: variable-name
   private _events: Array<string> = ['click'];
 
   constructor(
-      // tslint:disable-next-line: variable-name
-      private _el: ElementRef,
-      // tslint:disable-next-line: variable-name
-      private _ngZone: NgZone,
-      // tslint:disable-next-line: ban-types
-      @Inject(PLATFORM_ID) private platformId: Object) {
+    // tslint:disable-next-line: variable-name
+    private _el: ElementRef,
+    // tslint:disable-next-line: variable-name
+    private _ngZone: NgZone,
+    // tslint:disable-next-line: ban-types
+    @Inject(PLATFORM_ID) private platformId: Object
+  ) {
     this._initOnClickBody = this._initOnClickBody.bind(this);
     this._onClickBody = this._onClickBody.bind(this);
     this._onWindowBlur = this._onWindowBlur.bind(this);
   }
 
   ngOnInit() {
-    if (!isPlatformBrowser(this.platformId)) { return; }
+    if (!isPlatformBrowser(this.platformId)) {
+      return;
+    }
 
     this._init();
   }
 
   ngOnDestroy() {
-    if (!isPlatformBrowser(this.platformId)) { return; }
+    if (!isPlatformBrowser(this.platformId)) {
+      return;
+    }
 
     this._removeClickOutsideListener();
     this._removeAttachOutsideOnClickListener();
     this._removeWindowBlurListener();
   }
 
   ngOnChanges(changes: SimpleChanges) {
-    if (!isPlatformBrowser(this.platformId)) { return; }
+    if (!isPlatformBrowser(this.platformId)) {
+      return;
+    }
 
     // tslint:disable-next-line: no-string-literal
-    if (changes['attachOutsideOnClick'] || changes['exclude'] || changes['emitOnBlur']) {
+    if (
+      changes['attachOutsideOnClick'] ||
+      changes['exclude'] ||
+      changes['emitOnBlur']
+    ) {
       this._init();
     }
   }
 
@@ -100,26 +110,36 @@
 
   private _excludeCheck() {
     if (this.exclude) {
       try {
-        const nodes = Array.from(document.querySelectorAll(this.exclude)) as Array<HTMLElement>;
+        const nodes = Array.from(
+          document.querySelectorAll(this.exclude)
+        ) as Array<HTMLElement>;
         if (nodes) {
           this._nodesExcluded = nodes;
         }
       } catch (err) {
-        console.error('[ng-click-outside] Check your exclude selector syntax.', err);
+        console.error(
+          '[ng-click-outside] Check your exclude selector syntax.',
+          err
+        );
       }
     }
   }
 
   private _onClickBody(ev: Event) {
-    if (!this.clickOutsideEnabled) { return; }
+    if (!this.clickOutsideEnabled) {
+      return;
+    }
 
     if (this.excludeBeforeClick) {
       this._excludeCheck();
     }
 
-    if (!this._el.nativeElement.contains(ev.target) && !this._shouldExclude(ev.target)) {
+    if (
+      !this._el.nativeElement.contains(ev.target) &&
+      !this._shouldExclude(ev.target)
+    ) {
       this._emit(ev);
 
       if (this.attachOutsideOnClick) {
         this._removeClickOutsideListener();
@@ -139,9 +159,11 @@
     });
   }
 
   private _emit(ev: Event) {
-    if (!this.clickOutsideEnabled) { return; }
+    if (!this.clickOutsideEnabled) {
+      return;
+    }
 
     this._ngZone.run(() => this.clickOutside.emit(ev));
   }
 
@@ -156,27 +178,35 @@
   }
 
   private _initClickOutsideListener() {
     this._ngZone.runOutsideAngular(() => {
-      this._events.forEach(e => document.body.addEventListener(e, this._onClickBody));
+      this._events.forEach(e =>
+        document.body.addEventListener(e, this._onClickBody)
+      );
     });
   }
 
   private _removeClickOutsideListener() {
     this._ngZone.runOutsideAngular(() => {
-      this._events.forEach(e => document.body.removeEventListener(e, this._onClickBody));
+      this._events.forEach(e =>
+        document.body.removeEventListener(e, this._onClickBody)
+      );
     });
   }
 
   private _initAttachOutsideOnClickListener() {
     this._ngZone.runOutsideAngular(() => {
-      this._events.forEach(e => this._el.nativeElement.addEventListener(e, this._initOnClickBody));
+      this._events.forEach(e =>
+        this._el.nativeElement.addEventListener(e, this._initOnClickBody)
+      );
     });
   }
 
   private _removeAttachOutsideOnClickListener() {
     this._ngZone.runOutsideAngular(() => {
-      this._events.forEach(e => this._el.nativeElement.removeEventListener(e, this._initOnClickBody));
+      this._events.forEach(e =>
+        this._el.nativeElement.removeEventListener(e, this._initOnClickBody)
+      );
     });
   }
 
   private _initWindowBlurListener() {
@@ -189,6 +219,5 @@
     this._ngZone.runOutsideAngular(() => {
       window.removeEventListener('blur', this._onWindowBlur);
     });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/click-outside/lib/click-outside.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/click-outside/lib/click-outside.module.ts
+++ /home/idnes/Projects/awe/src/lib/click-outside/lib/click-outside.module.ts
@@ -3,7 +3,7 @@
 import { ClickOutsideDirective } from './click-outside.directive';
 
 @NgModule({
   declarations: [ClickOutsideDirective],
-  exports: [ClickOutsideDirective]
+  exports: [ClickOutsideDirective],
 })
 export class ClickOutsideModule {}

Index: /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.component.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.component.ts
@@ -1,23 +1,36 @@
-import { Component, OnInit, OnDestroy, AfterViewInit,
-  ViewChild, HostListener, ViewEncapsulation,
-  ElementRef, ChangeDetectorRef } from '@angular/core';
+import {
+  Component,
+  OnInit,
+  OnDestroy,
+  AfterViewInit,
+  ViewChild,
+  HostListener,
+  ViewEncapsulation,
+  ElementRef,
+  ChangeDetectorRef,
+} from '@angular/core';
 
 import { detectIE } from './helpers';
 
 import { ColorFormats, Hsla, Hsva, Rgba } from './formats';
-import { AlphaChannel, OutputFormat, SliderDimension, SliderPosition } from './helpers';
+import {
+  AlphaChannel,
+  OutputFormat,
+  SliderDimension,
+  SliderPosition,
+} from './helpers';
 
 import { ColorPickerService } from './color-picker.service';
 
-import {Overlay} from '@angular/cdk/overlay'
+import { Overlay } from '@angular/cdk/overlay';
 
 @Component({
   selector: 'color-picker',
   templateUrl: 'color-picker.component.html',
-  styleUrls: [ 'color-picker.component.scss' ],
+  styleUrls: ['color-picker.component.scss'],
   preserveWhitespaces: false,
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class ColorPickerComponent implements OnInit, OnDestroy, AfterViewInit {
   private isIE10: boolean = false;
 
@@ -44,9 +57,9 @@
 
   private dialogInputFields: ColorFormats[] = [
     ColorFormats.HEX,
     ColorFormats.RGBA,
-    ColorFormats.HSLA
+    ColorFormats.HSLA,
   ];
 
   private useRootViewContainer: boolean = false;
 
@@ -119,23 +132,34 @@
       this.onCancelColor(event);
     }
   }
 
-  @HostListener('document:keyup.enter', ['$event']) handleEnter(event: any): void {
+  @HostListener('document:keyup.enter', ['$event']) handleEnter(
+    event: any
+  ): void {
     if (this.show && this.cpDialogDisplay === 'popup') {
       this.onAcceptColor(event);
     }
   }
 
-  constructor(private elRef: ElementRef, private cdRef: ChangeDetectorRef, private service: ColorPickerService) {}
+  constructor(
+    private elRef: ElementRef,
+    private cdRef: ChangeDetectorRef,
+    private service: ColorPickerService
+  ) {}
 
   ngOnInit(): void {
     this.slider = new SliderPosition(0, 0, 0, 0);
 
     const hueWidth = this.hueSlider.nativeElement.offsetWidth || 140;
     const alphaWidth = this.alphaSlider.nativeElement.offsetWidth || 140;
 
-    this.sliderDimMax = new SliderDimension(hueWidth, this.cpWidth, 130, alphaWidth);
+    this.sliderDimMax = new SliderDimension(
+      hueWidth,
+      this.cpWidth,
+      130,
+      alphaWidth
+    );
 
     if (this.cpOutputFormat === 'rgba') {
       this.format = ColorFormats.RGBA;
     } else if (this.cpOutputFormat === 'hsla') {
@@ -143,10 +167,14 @@
     } else {
       this.format = ColorFormats.HEX;
     }
 
-    this.listenerMouseDown = (event: any) => { this.onMouseDown(event); };
-    this.listenerResize = () => { this.onResize(); };
+    this.listenerMouseDown = (event: any) => {
+      this.onMouseDown(event);
+    };
+    this.listenerResize = () => {
+      this.onResize();
+    };
 
     this.openDialog(this.initialColor, false);
   }
 
@@ -154,13 +182,18 @@
     this.closeDialog();
   }
 
   ngAfterViewInit(): void {
-    if (this.cpWidth !== 230 || this.cpDialogDisplay === 'inline') {
+    if (this.cpWidth !== 230 || this.cpDialogDisplay === 'inline') {
       const hueWidth = this.hueSlider.nativeElement.offsetWidth || 140;
       const alphaWidth = this.alphaSlider.nativeElement.offsetWidth || 140;
 
-      this.sliderDimMax = new SliderDimension(hueWidth, this.cpWidth, 130, alphaWidth);
+      this.sliderDimMax = new SliderDimension(
+        hueWidth,
+        this.cpWidth,
+        130,
+        alphaWidth
+      );
 
       this.updateColorPicker(false);
 
       this.cdRef.detectChanges();
@@ -188,25 +221,47 @@
   public closeDialog(): void {
     this.closeColorPicker();
   }
 
-  public setupDialog(instance: any, elementRef: ElementRef, color: any,
-    cpWidth: string, cpHeight: string, cpDialogDisplay: string, cpFallbackColor: string,
-    cpColorMode: string, cpAlphaChannel: AlphaChannel, cpOutputFormat: OutputFormat,
-    cpDisableInput: boolean, cpIgnoredElements: any, cpSaveClickOutside: boolean,
-    cpUseRootViewContainer: boolean, cpPosition: string, cpPositionOffset: string,
-    cpPositionRelativeToArrow: boolean, cpPresetLabel: string, cpPresetColors: string[],
-    cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string, cpPresetEmptyMessageClass: string,
-    cpOKButton: boolean, cpOKButtonClass: string, cpOKButtonText: string,
-    cpCancelButton: boolean, cpCancelButtonClass: string, cpCancelButtonText: string,
-    cpAddColorButton: boolean, cpAddColorButtonClass: string, cpAddColorButtonText: string,
-    cpRemoveColorButtonClass: string): void
-  {
+  public setupDialog(
+    instance: any,
+    elementRef: ElementRef,
+    color: any,
+    cpWidth: string,
+    cpHeight: string,
+    cpDialogDisplay: string,
+    cpFallbackColor: string,
+    cpColorMode: string,
+    cpAlphaChannel: AlphaChannel,
+    cpOutputFormat: OutputFormat,
+    cpDisableInput: boolean,
+    cpIgnoredElements: any,
+    cpSaveClickOutside: boolean,
+    cpUseRootViewContainer: boolean,
+    cpPosition: string,
+    cpPositionOffset: string,
+    cpPositionRelativeToArrow: boolean,
+    cpPresetLabel: string,
+    cpPresetColors: string[],
+    cpMaxPresetColorsLength: number,
+    cpPresetEmptyMessage: string,
+    cpPresetEmptyMessageClass: string,
+    cpOKButton: boolean,
+    cpOKButtonClass: string,
+    cpOKButtonText: string,
+    cpCancelButton: boolean,
+    cpCancelButtonClass: string,
+    cpCancelButtonText: string,
+    cpAddColorButton: boolean,
+    cpAddColorButtonClass: string,
+    cpAddColorButtonText: string,
+    cpRemoveColorButtonClass: string
+  ): void {
     this.setInitialColor(color);
 
     this.setColorMode(cpColorMode);
 
-    this.isIE10 = (detectIE() === 10);
+    this.isIE10 = detectIE() === 10;
 
     this.directiveInstance = instance;
     this.directiveElementRef = elementRef;
 
@@ -256,11 +311,13 @@
       this.dialogArrowSize = 0;
       this.dialogArrowOffset = 0;
     }
 
-    if (cpOutputFormat === 'hex' &&
-        cpAlphaChannel !== 'always' && cpAlphaChannel !== 'forced')
-    {
+    if (
+      cpOutputFormat === 'hex' &&
+      cpAlphaChannel !== 'always' &&
+      cpAlphaChannel !== 'forced'
+    ) {
       this.cpAlphaChannel = 'disabled';
     }
   }
 
@@ -289,14 +346,21 @@
   public setInitialColor(color: any): void {
     this.initialColor = color;
   }
 
-  public setPresetConfig(cpPresetLabel: string, cpPresetColors: string[]): void {
+  public setPresetConfig(
+    cpPresetLabel: string,
+    cpPresetColors: string[]
+  ): void {
     this.cpPresetLabel = cpPresetLabel;
     this.cpPresetColors = cpPresetColors;
   }
 
-  public setColorFromString(value: string, emit: boolean = true, update: boolean = true): void {
+  public setColorFromString(
+    value: string,
+    emit: boolean = true,
+    update: boolean = true
+  ): void {
     let hsva: Hsva | null;
 
     if (this.cpAlphaChannel === 'always' || this.cpAlphaChannel === 'forced') {
       hsva = this.service.stringToHsva(value, true);
@@ -329,22 +393,34 @@
     }
   }
 
   public onDragEnd(slider: string): void {
-    this.directiveInstance.sliderDragEnd({ slider: slider, color: this.outputColor });
+    this.directiveInstance.sliderDragEnd({
+      slider: slider,
+      color: this.outputColor,
+    });
   }
 
   public onDragStart(slider: string): void {
-    this.directiveInstance.sliderDragStart({ slider: slider, color: this.outputColor });
+    this.directiveInstance.sliderDragStart({
+      slider: slider,
+      color: this.outputColor,
+    });
   }
 
   public onMouseDown(event: MouseEvent): void {
-    if (!this.isIE10 && this.cpDialogDisplay === 'popup' &&
-        event.target !== this.directiveElementRef.nativeElement &&
-        !this.isDescendant(this.elRef.nativeElement, event.target) &&
-        !this.isDescendant(this.directiveElementRef.nativeElement, event.target) &&
-        this.cpIgnoredElements.filter((item: any) => item === event.target).length === 0)
-    {
+    if (
+      !this.isIE10 &&
+      this.cpDialogDisplay === 'popup' &&
+      event.target !== this.directiveElementRef.nativeElement &&
+      !this.isDescendant(this.elRef.nativeElement, event.target) &&
+      !this.isDescendant(
+        this.directiveElementRef.nativeElement,
+        event.target
+      ) &&
+      this.cpIgnoredElements.filter((item: any) => item === event.target)
+        .length === 0
+    ) {
       if (!this.cpSaveClickOutside) {
         this.setColorFromString(this.initialColor, false);
 
         this.directiveInstance.colorChanged(this.initialColor);
@@ -382,67 +458,75 @@
 
   public onFormatToggle(change: number): void {
     const availableFormats = this.dialogInputFields.length;
 
-    const nextFormat = (((this.dialogInputFields.indexOf(this.format) + change) %
-      availableFormats) + availableFormats) % availableFormats;
+    const nextFormat =
+      (((this.dialogInputFields.indexOf(this.format) + change) %
+        availableFormats) +
+        availableFormats) %
+      availableFormats;
 
     this.format = this.dialogInputFields[nextFormat];
   }
 
-  public onColorChange(value: { s: number, v: number, rgX: number, rgY: number }): void {
+  public onColorChange(value: {
+    s: number;
+    v: number;
+    rgX: number;
+    rgY: number;
+  }): void {
     this.hsva.s = value.s / value.rgX;
     this.hsva.v = value.v / value.rgY;
 
     this.updateColorPicker();
 
     this.directiveInstance.sliderChanged({
       slider: 'lightness',
       value: this.hsva.v,
-      color: this.outputColor
+      color: this.outputColor,
     });
 
     this.directiveInstance.sliderChanged({
       slider: 'saturation',
       value: this.hsva.s,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onHueChange(value: { v: number, rgX: number }): void {
+  public onHueChange(value: { v: number; rgX: number }): void {
     this.hsva.h = value.v / value.rgX;
     this.sliderH = this.hsva.h;
 
     this.updateColorPicker();
 
     this.directiveInstance.sliderChanged({
       slider: 'hue',
       value: this.hsva.h,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onValueChange(value: { v: number, rgX: number }): void {
+  public onValueChange(value: { v: number; rgX: number }): void {
     this.hsva.v = value.v / value.rgX;
 
     this.updateColorPicker();
 
     this.directiveInstance.sliderChanged({
       slider: 'value',
       value: this.hsva.v,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onAlphaChange(value: { v: number, rgX: number }): void {
+  public onAlphaChange(value: { v: number; rgX: number }): void {
     this.hsva.a = value.v / value.rgX;
 
     this.updateColorPicker();
 
     this.directiveInstance.sliderChanged({
       slider: 'alpha',
       value: this.hsva.a,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
   public onHexInput(value: string | null): void {
@@ -462,12 +546,15 @@
       const valid = validHex.test(value);
 
       if (valid) {
         if (value.length < 5) {
-          value = '#' + value.substring(1)
-            .split('')
-            .map(c => c + c)
-            .join('');
+          value =
+            '#' +
+            value
+              .substring(1)
+              .split('')
+              .map(c => c + c)
+              .join('');
         }
 
         if (this.cpAlphaChannel === 'forced') {
           value += Math.round(this.hsva.a * 255).toString(16);
@@ -479,14 +566,14 @@
       this.directiveInstance.inputChanged({
         input: 'hex',
         valid: valid,
         value: value,
-        color: this.outputColor
+        color: this.outputColor,
       });
     }
   }
 
-  public onRedInput(value: { v: number, rg: number }): void {
+  public onRedInput(value: { v: number; rg: number }): void {
     const rgba = this.service.hsvaToRgba(this.hsva);
 
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
@@ -503,13 +590,13 @@
     this.directiveInstance.inputChanged({
       input: 'red',
       valid: valid,
       value: rgba.r,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onBlueInput(value: { v: number, rg: number }): void {
+  public onBlueInput(value: { v: number; rg: number }): void {
     const rgba = this.service.hsvaToRgba(this.hsva);
 
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
@@ -526,13 +613,13 @@
     this.directiveInstance.inputChanged({
       input: 'blue',
       valid: valid,
       value: rgba.b,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onGreenInput(value: { v: number, rg: number }): void {
+  public onGreenInput(value: { v: number; rg: number }): void {
     const rgba = this.service.hsvaToRgba(this.hsva);
 
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
@@ -549,13 +636,13 @@
     this.directiveInstance.inputChanged({
       input: 'green',
       valid: valid,
       value: rgba.g,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onHueInput(value: { v: number, rg: number }) {
+  public onHueInput(value: { v: number; rg: number }) {
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
     if (valid) {
       this.hsva.h = value.v / value.rg;
@@ -568,13 +655,13 @@
     this.directiveInstance.inputChanged({
       input: 'hue',
       valid: valid,
       value: this.hsva.h,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onValueInput(value: { v: number, rg: number }): void {
+  public onValueInput(value: { v: number; rg: number }): void {
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
     if (valid) {
       this.hsva.v = value.v / value.rg;
@@ -585,13 +672,13 @@
     this.directiveInstance.inputChanged({
       input: 'value',
       valid: valid,
       value: this.hsva.v,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onAlphaInput(value: { v: number, rg: number }): void {
+  public onAlphaInput(value: { v: number; rg: number }): void {
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
     if (valid) {
       this.hsva.a = value.v / value.rg;
@@ -602,13 +689,13 @@
     this.directiveInstance.inputChanged({
       input: 'alpha',
       valid: valid,
       value: this.hsva.a,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onLightnessInput(value: { v: number, rg: number }): void {
+  public onLightnessInput(value: { v: number; rg: number }): void {
     const hsla = this.service.hsva2hsla(this.hsva);
 
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
@@ -625,13 +712,13 @@
     this.directiveInstance.inputChanged({
       input: 'lightness',
       valid: valid,
       value: hsla.l,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
-  public onSaturationInput(value: { v: number, rg: number }): void {
+  public onSaturationInput(value: { v: number; rg: number }): void {
     const hsla = this.service.hsva2hsla(this.hsva);
 
     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;
 
@@ -648,16 +735,16 @@
     this.directiveInstance.inputChanged({
       input: 'saturation',
       valid: valid,
       value: hsla.s,
-      color: this.outputColor
+      color: this.outputColor,
     });
   }
 
   public onAddPresetColor(event: any, value: string): void {
     event.stopPropagation();
 
-    if (!this.cpPresetColors.filter((color) => (color === value)).length) {
+    if (!this.cpPresetColors.filter(color => color === value).length) {
       this.cpPresetColors = this.cpPresetColors.concat(value);
 
       this.directiveInstance.presetColorsChanged(this.cpPresetColors);
     }
@@ -665,9 +752,9 @@
 
   public onRemovePresetColor(event: any, value: string): void {
     event.stopPropagation();
 
-    this.cpPresetColors = this.cpPresetColors.filter((color) => (color !== value));
+    this.cpPresetColors = this.cpPresetColors.filter(color => color !== value);
 
     this.directiveInstance.presetColorsChanged(this.cpPresetColors);
   }
 
@@ -713,26 +800,42 @@
       }
     }
   }
 
-  private updateColorPicker(emit: boolean = true, update: boolean = true): void {
+  private updateColorPicker(
+    emit: boolean = true,
+    update: boolean = true
+  ): void {
     if (this.sliderDimMax) {
       if (this.cpColorMode === 2) {
         this.hsva.s = 0;
       }
 
       const lastOutput = this.outputColor;
 
       const hsla = this.service.hsva2hsla(this.hsva);
-      const rgba = this.service.denormalizeRGBA(this.service.hsvaToRgba(this.hsva));
+      const rgba = this.service.denormalizeRGBA(
+        this.service.hsvaToRgba(this.hsva)
+      );
 
-      const hue = this.service.denormalizeRGBA(this.service.hsvaToRgba(new Hsva(this.sliderH || this.hsva.h, 1, 1, 1)));
+      const hue = this.service.denormalizeRGBA(
+        this.service.hsvaToRgba(new Hsva(this.sliderH || this.hsva.h, 1, 1, 1))
+      );
 
       if (update) {
-        this.hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100), Math.round(hsla.l * 100),
-          Math.round(hsla.a * 100) / 100);
+        this.hslaText = new Hsla(
+          Math.round(hsla.h * 360),
+          Math.round(hsla.s * 100),
+          Math.round(hsla.l * 100),
+          Math.round(hsla.a * 100) / 100
+        );
 
-        this.rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100);
+        this.rgbaText = new Rgba(
+          rgba.r,
+          rgba.g,
+          rgba.b,
+          Math.round(rgba.a * 100) / 100
+        );
 
         const allowHex8 = this.cpAlphaChannel === 'always';
 
         this.hexText = this.service.rgbaToHex(rgba, allowHex8);
@@ -745,11 +848,16 @@
         }
       }
 
       this.hueSliderColor = 'rgb(' + hue.r + ',' + hue.g + ',' + hue.b + ')';
-      this.alphaSliderColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';
+      this.alphaSliderColor =
+        'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';
 
-      this.outputColor = this.service.outputFormat(this.hsva, this.cpOutputFormat, this.cpAlphaChannel);
+      this.outputColor = this.service.outputFormat(
+        this.hsva,
+        this.cpOutputFormat,
+        this.cpAlphaChannel
+      );
       this.selectedColor = this.service.outputFormat(this.hsva, 'rgba', null);
 
       this.slider = new SliderPosition(
         (this.sliderH || this.hsva.h) * this.sliderDimMax.h - 8,
@@ -769,11 +877,14 @@
   private setDialogPosition(): void {
     if (this.cpDialogDisplay === 'inline') {
       this.position = 'relative';
     } else {
-      let position = 'static', transform = '', style;
+      let position = 'static',
+        transform = '',
+        style;
 
-      let parentNode: any = null, transformNode: any = null;
+      let parentNode: any = null,
+        transformNode: any = null;
 
       let node = this.directiveElementRef.nativeElement.parentNode;
 
       const dialogHeight = this.dialogElement.nativeElement.offsetHeight;
@@ -799,21 +910,29 @@
 
         node = node.parentNode;
       }
 
-      const boxDirective = this.createDialogBox(this.directiveElementRef.nativeElement, (position !== 'fixed'));
+      const boxDirective = this.createDialogBox(
+        this.directiveElementRef.nativeElement,
+        position !== 'fixed'
+      );
 
-      if (this.useRootViewContainer || (position === 'fixed' &&
-         (!parentNode || parentNode instanceof HTMLUnknownElement)))
-      {
+      if (
+        this.useRootViewContainer ||
+        (position === 'fixed' &&
+          (!parentNode || parentNode instanceof HTMLUnknownElement))
+      ) {
         this.top = boxDirective.top;
         this.left = boxDirective.left;
       } else {
         if (parentNode === null) {
           parentNode = node;
         }
 
-        const boxParent = this.createDialogBox(parentNode, (position !== 'fixed'));
+        const boxParent = this.createDialogBox(
+          parentNode,
+          position !== 'fixed'
+        );
 
         this.top = boxDirective.top - boxParent.top;
         this.left = boxDirective.left - boxParent.left;
       }
@@ -822,20 +941,28 @@
         this.position = 'fixed';
       }
 
       if (this.cpPosition === 'left') {
-        this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset;
+        this.top +=
+          (boxDirective.height * this.cpPositionOffset) / 100 -
+          this.dialogArrowOffset;
         this.left -= this.cpWidth + this.dialogArrowSize - 2;
       } else if (this.cpPosition === 'top') {
         this.arrowTop = dialogHeight - 1;
 
         this.top -= dialogHeight + this.dialogArrowSize;
-        this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;
+        this.left +=
+          (this.cpPositionOffset / 100) * boxDirective.width -
+          this.dialogArrowOffset;
       } else if (this.cpPosition === 'bottom') {
         this.top += boxDirective.height + this.dialogArrowSize;
-        this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;
+        this.left +=
+          (this.cpPositionOffset / 100) * boxDirective.width -
+          this.dialogArrowOffset;
       } else {
-        this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset;
+        this.top +=
+          (boxDirective.height * this.cpPositionOffset) / 100 -
+          this.dialogArrowOffset;
         this.left += boxDirective.width + this.dialogArrowSize - 2;
       }
     }
   }
@@ -857,11 +984,14 @@
   }
 
   private createDialogBox(element: any, offset: boolean): any {
     return {
-      top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),
-      left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),
+      top:
+        element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),
+      left:
+        element.getBoundingClientRect().left +
+        (offset ? window.pageXOffset : 0),
       width: element.offsetWidth,
-      height: element.offsetHeight
+      height: element.offsetHeight,
     };
   }
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.directive.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.directive.ts
@@ -1,16 +1,29 @@
-import { Directive, OnChanges, OnDestroy, Input, Output, EventEmitter,
-  HostListener, ApplicationRef, ComponentRef, ElementRef, ViewContainerRef,
-  Injector, ReflectiveInjector, ComponentFactoryResolver } from '@angular/core';
+import {
+  Directive,
+  OnChanges,
+  OnDestroy,
+  Input,
+  Output,
+  EventEmitter,
+  HostListener,
+  ApplicationRef,
+  ComponentRef,
+  ElementRef,
+  ViewContainerRef,
+  Injector,
+  ReflectiveInjector,
+  ComponentFactoryResolver,
+} from '@angular/core';
 
 import { ColorPickerService } from './color-picker.service';
 import { ColorPickerComponent } from './color-picker.component';
 
 import { AlphaChannel, ColorMode, OutputFormat } from './helpers';
 
 @Directive({
   selector: '[colorPicker]',
-  exportAs: 'ngxColorPicker'
+  exportAs: 'ngxColorPicker',
 })
 export class ColorPickerDirective implements OnChanges, OnDestroy {
   private dialog: any;
 
@@ -97,11 +110,16 @@
   @HostListener('input', ['$event']) handleInput(event: any): void {
     this.inputChange(event);
   }
 
-  constructor(private injector: Injector, private cfr: ComponentFactoryResolver,
-    private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,
-    private _service: ColorPickerService) {}
+  constructor(
+    private injector: Injector,
+    private cfr: ComponentFactoryResolver,
+    private appRef: ApplicationRef,
+    private vcRef: ViewContainerRef,
+    private elRef: ElementRef,
+    private _service: ColorPickerService
+  ) {}
 
   ngOnDestroy(): void {
     if (this.cmpRef !== undefined) {
       this.cmpRef.destroy();
@@ -152,30 +170,60 @@
 
         vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef;
 
         if (vcRef === this.vcRef) {
-          console.warn('You are using cpUseRootViewContainer, ' +
-            'but the root component is not exposing viewContainerRef!' +
-            'Please expose it by adding \'public vcRef: ViewContainerRef\' to the constructor.');
+          console.warn(
+            'You are using cpUseRootViewContainer, ' +
+              'but the root component is not exposing viewContainerRef!' +
+              "Please expose it by adding 'public vcRef: ViewContainerRef' to the constructor."
+          );
         }
       }
 
-      const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);
-      const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);
+      const compFactory = this.cfr.resolveComponentFactory(
+        ColorPickerComponent
+      );
+      const injector = ReflectiveInjector.fromResolvedProviders(
+        [],
+        vcRef.parentInjector
+      );
 
       this.cmpRef = vcRef.createComponent(compFactory, 0, injector, []);
 
-      this.cmpRef.instance.setupDialog(this, this.elRef, this.colorPicker,
-        this.cpWidth, this.cpHeight, this.cpDialogDisplay, this.cpFallbackColor,
-        this.cpColorMode, this.cpAlphaChannel, this.cpOutputFormat, this.cpDisableInput,
-        this.cpIgnoredElements, this.cpSaveClickOutside, this.cpUseRootViewContainer,
-        this.cpPosition, this.cpPositionOffset, this.cpPositionRelativeToArrow,
-        this.cpPresetLabel, this.cpPresetColors, this.cpMaxPresetColorsLength,
-        this.cpPresetEmptyMessage, this.cpPresetEmptyMessageClass,
-        this.cpOKButton, this.cpOKButtonClass, this.cpOKButtonText,
-        this.cpCancelButton, this.cpCancelButtonClass, this.cpCancelButtonText,
-        this.cpAddColorButton, this.cpAddColorButtonClass, this.cpAddColorButtonText,
-        this.cpRemoveColorButtonClass);
+      this.cmpRef.instance.setupDialog(
+        this,
+        this.elRef,
+        this.colorPicker,
+        this.cpWidth,
+        this.cpHeight,
+        this.cpDialogDisplay,
+        this.cpFallbackColor,
+        this.cpColorMode,
+        this.cpAlphaChannel,
+        this.cpOutputFormat,
+        this.cpDisableInput,
+        this.cpIgnoredElements,
+        this.cpSaveClickOutside,
+        this.cpUseRootViewContainer,
+        this.cpPosition,
+        this.cpPositionOffset,
+        this.cpPositionRelativeToArrow,
+        this.cpPresetLabel,
+        this.cpPresetColors,
+        this.cpMaxPresetColorsLength,
+        this.cpPresetEmptyMessage,
+        this.cpPresetEmptyMessageClass,
+        this.cpOKButton,
+        this.cpOKButtonClass,
+        this.cpOKButtonText,
+        this.cpCancelButton,
+        this.cpCancelButtonClass,
+        this.cpCancelButtonText,
+        this.cpAddColorButton,
+        this.cpAddColorButtonClass,
+        this.cpAddColorButtonText,
+        this.cpRemoveColorButtonClass
+      );
 
       this.dialog = this.cmpRef.instance;
 
       if (this.vcRef !== vcRef) {
@@ -218,12 +266,17 @@
 
   public inputFocus(): void {
     const element = this.elRef.nativeElement;
 
-    const ignored = this.cpIgnoredElements.filter((item: any) => item === element);
+    const ignored = this.cpIgnoredElements.filter(
+      (item: any) => item === element
+    );
 
     if (!this.cpDisabled && !ignored.length) {
-      if (typeof document !== 'undefined' && element === document.activeElement) {
+      if (
+        typeof document !== 'undefined' &&
+        element === document.activeElement
+      ) {
         this.openDialog();
       } else if (!this.dialog || !this.dialog.show) {
         this.openDialog();
       } else {

Index: /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.module.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.module.ts
@@ -5,14 +5,19 @@
 
 import { ColorPickerService } from './color-picker.service';
 import { ColorPickerComponent } from './color-picker.component';
 import { ColorPickerDirective } from './color-picker.directive';
-import {OverlayModule} from '@angular/cdk/overlay'
+import { OverlayModule } from '@angular/cdk/overlay';
 
 @NgModule({
-  imports: [ CommonModule, OverlayModule ],
-  exports: [ ColorPickerDirective ],
-  providers: [ ColorPickerService ],
-  declarations: [ ColorPickerComponent, ColorPickerDirective, TextDirective, SliderDirective ],
-  entryComponents: [ ColorPickerComponent ]
+  imports: [CommonModule, OverlayModule],
+  exports: [ColorPickerDirective],
+  providers: [ColorPickerService],
+  declarations: [
+    ColorPickerComponent,
+    ColorPickerDirective,
+    TextDirective,
+    SliderDirective,
+  ],
+  entryComponents: [ColorPickerComponent],
 })
 export class ColorPickerModule {}

Index: /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.service.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker/lib/color-picker.service.ts
@@ -10,46 +10,58 @@
 
   constructor() {}
 
   public setActive(active: ColorPickerComponent | null): void {
-    if (this.active && this.active !== active && this.active.cpDialogDisplay !== 'inline') {
+    if (
+      this.active &&
+      this.active !== active &&
+      this.active.cpDialogDisplay !== 'inline'
+    ) {
       this.active.closeDialog();
     }
 
     this.active = active;
   }
 
   public hsva2hsla(hsva: Hsva): Hsla {
-    const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;
+    const h = hsva.h,
+      s = hsva.s,
+      v = hsva.v,
+      a = hsva.a;
 
     if (v === 0) {
       return new Hsla(h, 0, 0, a);
     } else if (s === 0 && v === 1) {
       return new Hsla(h, 1, 1, a);
     } else {
-      const l = v * (2 - s) / 2;
+      const l = (v * (2 - s)) / 2;
 
-      return new Hsla(h, v * s / (1 - Math.abs(2 * l - 1)), l, a);
+      return new Hsla(h, (v * s) / (1 - Math.abs(2 * l - 1)), l, a);
     }
   }
 
   public hsla2hsva(hsla: Hsla): Hsva {
-    const h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1);
-    const l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);
+    const h = Math.min(hsla.h, 1),
+      s = Math.min(hsla.s, 1);
+    const l = Math.min(hsla.l, 1),
+      a = Math.min(hsla.a, 1);
 
     if (l === 0) {
       return new Hsva(h, 0, 0, a);
     } else {
-      const v = l + s * (1 - Math.abs(2 * l - 1)) / 2;
+      const v = l + (s * (1 - Math.abs(2 * l - 1))) / 2;
 
-      return new Hsva(h, 2 * (v - l) / v, v, a);
+      return new Hsva(h, (2 * (v - l)) / v, v, a);
     }
   }
 
   public hsvaToRgba(hsva: Hsva): Rgba {
     let r: number, g: number, b: number;
 
-    const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;
+    const h = hsva.h,
+      s = hsva.s,
+      v = hsva.v,
+      a = hsva.a;
 
     const i = Math.floor(h * 6);
     const f = h * 6 - i;
     const p = v * (1 - s);
@@ -57,27 +69,27 @@
     const t = v * (1 - (1 - f) * s);
 
     switch (i % 6) {
       case 0:
-        r = v, g = t, b = p;
+        (r = v), (g = t), (b = p);
         break;
       case 1:
-        r = q, g = v, b = p;
+        (r = q), (g = v), (b = p);
         break;
       case 2:
-        r = p, g = v, b = t;
+        (r = p), (g = v), (b = t);
         break;
       case 3:
-        r = p, g = q, b = v;
+        (r = p), (g = q), (b = v);
         break;
       case 4:
-        r = t, g = p, b = v;
+        (r = t), (g = p), (b = v);
         break;
       case 5:
-        r = v, g = p, b = q;
+        (r = v), (g = p), (b = q);
         break;
       default:
-        r = 0, g = 0, b = 0;
+        (r = 0), (g = 0), (b = 0);
     }
 
     return new Rgba(r, g, b, a);
   }
@@ -98,16 +110,20 @@
 
   public rgbaToHsva(rgba: Rgba): Hsva {
     let h: number, s: number;
 
-    const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1);
-    const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);
+    const r = Math.min(rgba.r, 1),
+      g = Math.min(rgba.g, 1);
+    const b = Math.min(rgba.b, 1),
+      a = Math.min(rgba.a, 1);
 
-    const max = Math.max(r, g, b), min = Math.min(r, g, b);
+    const max = Math.max(r, g, b),
+      min = Math.min(r, g, b);
 
-    const v: number = max, d = max - min;
+    const v: number = max,
+      d = max - min;
 
-    s = (max === 0) ? 0 : d / max;
+    s = max === 0 ? 0 : d / max;
 
     if (max === min) {
       h = 0;
     } else {
@@ -132,9 +148,13 @@
   }
 
   public rgbaToHex(rgba: Rgba, allowHex8?: boolean): string {
     /* tslint:disable:no-bitwise */
-    let hex = '#' + ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b).toString(16).substr(1);
+    let hex =
+      '#' +
+      ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b)
+        .toString(16)
+        .substr(1);
 
     if (allowHex8) {
       hex += ((1 << 8) | Math.round(rgba.a * 255)).toString(16).substr(1);
     }
@@ -143,73 +163,93 @@
     return hex;
   }
 
   public denormalizeRGBA(rgba: Rgba): Rgba {
-    return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255), Math.round(rgba.b * 255), rgba.a);
+    return new Rgba(
+      Math.round(rgba.r * 255),
+      Math.round(rgba.g * 255),
+      Math.round(rgba.b * 255),
+      rgba.a
+    );
   }
 
-  public stringToHsva(colorString: string = '', allowHex8: boolean = false): Hsva | null {
+  public stringToHsva(
+    colorString: string = '',
+    allowHex8: boolean = false
+  ): Hsva | null {
     let hsva: Hsva | null = null;
 
     colorString = (colorString || '').toLowerCase();
 
     const stringParsers = [
       {
         re: /(rgb)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*%?,\s*(\d{1,3})\s*%?(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
         parse: function(execResult: any) {
-          return new Rgba(parseInt(execResult[2], 10) / 255,
+          return new Rgba(
+            parseInt(execResult[2], 10) / 255,
             parseInt(execResult[3], 10) / 255,
             parseInt(execResult[4], 10) / 255,
-            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));
-        }
-      }, {
+            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])
+          );
+        },
+      },
+      {
         re: /(hsl)a?\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
         parse: function(execResult: any) {
-          return new Hsla(parseInt(execResult[2], 10) / 360,
+          return new Hsla(
+            parseInt(execResult[2], 10) / 360,
             parseInt(execResult[3], 10) / 100,
             parseInt(execResult[4], 10) / 100,
-            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));
-        }
-      }
+            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])
+          );
+        },
+      },
     ];
 
     if (allowHex8) {
       stringParsers.push({
         re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,
         parse: function(execResult: any) {
-          return new Rgba(parseInt(execResult[1], 16) / 255,
+          return new Rgba(
+            parseInt(execResult[1], 16) / 255,
             parseInt(execResult[2], 16) / 255,
             parseInt(execResult[3], 16) / 255,
-            parseInt(execResult[4] || 'FF', 16) / 255);
-        }
+            parseInt(execResult[4] || 'FF', 16) / 255
+          );
+        },
       });
     } else {
       stringParsers.push({
         re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,
         parse: function(execResult: any) {
-          return new Rgba(parseInt(execResult[1], 16) / 255,
+          return new Rgba(
+            parseInt(execResult[1], 16) / 255,
             parseInt(execResult[2], 16) / 255,
             parseInt(execResult[3], 16) / 255,
-            1);
-        }
+            1
+          );
+        },
       });
     }
 
     stringParsers.push({
       re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,
       parse: function(execResult: any) {
-        return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,
+        return new Rgba(
+          parseInt(execResult[1] + execResult[1], 16) / 255,
           parseInt(execResult[2] + execResult[2], 16) / 255,
           parseInt(execResult[3] + execResult[3], 16) / 255,
-          1);
-      }
+          1
+        );
+      },
     });
 
     for (const key in stringParsers) {
       if (stringParsers.hasOwnProperty(key)) {
         const parser = stringParsers[key];
 
-        const match = parser.re.exec(colorString), color: any = match && parser.parse(match);
+        const match = parser.re.exec(colorString),
+          color: any = match && parser.parse(match);
 
         if (color) {
           if (color instanceof Rgba) {
             hsva = this.rgbaToHsva(color);
@@ -224,40 +264,72 @@
 
     return hsva;
   }
 
-  public outputFormat(hsva: Hsva, outputFormat: string, alphaChannel: string | null): string {
+  public outputFormat(
+    hsva: Hsva,
+    outputFormat: string,
+    alphaChannel: string | null
+  ): string {
     if (outputFormat === 'auto') {
       outputFormat = hsva.a < 1 ? 'rgba' : 'hex';
     }
 
     switch (outputFormat) {
       case 'hsla':
         const hsla = this.hsva2hsla(hsva);
 
-        const hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),
-          Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);
+        const hslaText = new Hsla(
+          Math.round(hsla.h * 360),
+          Math.round(hsla.s * 100),
+          Math.round(hsla.l * 100),
+          Math.round(hsla.a * 100) / 100
+        );
 
         if (hsva.a < 1 || alphaChannel === 'always') {
-          return 'hsla(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%,' +
-            hslaText.a + ')';
+          return (
+            'hsla(' +
+            hslaText.h +
+            ',' +
+            hslaText.s +
+            '%,' +
+            hslaText.l +
+            '%,' +
+            hslaText.a +
+            ')'
+          );
         } else {
-          return 'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)';
+          return (
+            'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)'
+          );
         }
 
       case 'rgba':
         const rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));
 
         if (hsva.a < 1 || alphaChannel === 'always') {
-          return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' +
-            Math.round(rgba.a * 100) / 100 + ')';
+          return (
+            'rgba(' +
+            rgba.r +
+            ',' +
+            rgba.g +
+            ',' +
+            rgba.b +
+            ',' +
+            Math.round(rgba.a * 100) / 100 +
+            ')'
+          );
         } else {
           return 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';
         }
 
       default:
-        const allowHex8 = (alphaChannel === 'always' || alphaChannel === 'forced');
+        const allowHex8 =
+          alphaChannel === 'always' || alphaChannel === 'forced';
 
-        return this.rgbaToHex(this.denormalizeRGBA(this.hsvaToRgba(hsva)), allowHex8);
+        return this.rgbaToHex(
+          this.denormalizeRGBA(this.hsvaToRgba(hsva)),
+          allowHex8
+        );
     }
   }
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker/lib/formats.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker/lib/formats.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker/lib/formats.ts
@@ -1,21 +1,41 @@
 export enum ColorFormats {
   HEX,
   RGBA,
-  HSLA
+  HSLA,
 }
 
 export class Cmyk {
-  constructor(public c: number, public m: number, public y: number, public k: number) {}
+  constructor(
+    public c: number,
+    public m: number,
+    public y: number,
+    public k: number
+  ) {}
 }
 
 export class Hsla {
-  constructor(public h: number, public s: number, public l: number, public a: number) {}
+  constructor(
+    public h: number,
+    public s: number,
+    public l: number,
+    public a: number
+  ) {}
 }
 
 export class Hsva {
-  constructor(public h: number, public s: number, public v: number, public a: number) {}
+  constructor(
+    public h: number,
+    public s: number,
+    public v: number,
+    public a: number
+  ) {}
 }
 
 export class Rgba {
-  constructor(public r: number, public g: number, public b: number, public a: number) {}
+  constructor(
+    public r: number,
+    public g: number,
+    public b: number,
+    public a: number
+  ) {}
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker/lib/helpers.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker/lib/helpers.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker/lib/helpers.ts
@@ -1,8 +1,23 @@
-import { Directive, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';
+import {
+  Directive,
+  Input,
+  Output,
+  EventEmitter,
+  HostListener,
+  ElementRef,
+} from '@angular/core';
 
-export type ColorMode = 'color' | 'c' | '1' |
-  'grayscale' | 'g' | '2' | 'presets' | 'p' | '3';
+export type ColorMode =
+  | 'color'
+  | 'c'
+  | '1'
+  | 'grayscale'
+  | 'g'
+  | '2'
+  | 'presets'
+  | 'p'
+  | '3';
 
 export type AlphaChannel = 'enabled' | 'disabled' | 'always' | 'forced';
 
 export type OutputFormat = 'auto' | 'hex' | 'rgba' | 'hsla';
@@ -25,9 +40,9 @@
   return false;
 }
 
 @Directive({
-  selector: '[text]'
+  selector: '[text]',
 })
 export class TextDirective {
   @Input() rg: number;
   @Input() text: any;
@@ -47,9 +62,9 @@
   }
 }
 
 @Directive({
-  selector: '[slider]'
+  selector: '[slider]',
 })
 export class SliderDirective {
   private listenerMove: any;
   private listenerStop: any;
@@ -108,17 +123,19 @@
 
   private getX(event: any): number {
     const position = this.elRef.nativeElement.getBoundingClientRect();
 
-    const pageX = (event.pageX !== undefined) ? event.pageX : event.touches[0].pageX;
+    const pageX =
+      event.pageX !== undefined ? event.pageX : event.touches[0].pageX;
 
     return pageX - position.left - window.pageXOffset;
   }
 
   private getY(event: any): number {
     const position = this.elRef.nativeElement.getBoundingClientRect();
 
-    const pageY = (event.pageY !== undefined) ? event.pageY : event.touches[0].pageY;
+    const pageY =
+      event.pageY !== undefined ? event.pageY : event.touches[0].pageY;
 
     return pageY - position.top - window.pageYOffset;
   }
 
@@ -129,9 +146,14 @@
     const x = Math.max(0, Math.min(this.getX(event), width));
     const y = Math.max(0, Math.min(this.getY(event), height));
 
     if (this.rgX !== undefined && this.rgY !== undefined) {
-      this.newValue.emit({ s: x / width, v: (1 - y / height), rgX: this.rgX, rgY: this.rgY });
+      this.newValue.emit({
+        s: x / width,
+        v: 1 - y / height,
+        rgX: this.rgX,
+        rgY: this.rgY,
+      });
     } else if (this.rgX === undefined && this.rgY !== undefined) {
       this.newValue.emit({ v: y / height, rgY: this.rgY });
     } else if (this.rgX !== undefined && this.rgY === undefined) {
       this.newValue.emit({ v: x / width, rgX: this.rgX });
@@ -139,10 +161,20 @@
   }
 }
 
 export class SliderPosition {
-  constructor(public h: number, public s: number, public v: number, public a: number) {}
+  constructor(
+    public h: number,
+    public s: number,
+    public v: number,
+    public a: number
+  ) {}
 }
 
 export class SliderDimension {
-  constructor(public h: number, public s: number, public v: number, public a: number) {}
+  constructor(
+    public h: number,
+    public s: number,
+    public v: number,
+    public a: number
+  ) {}
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker2/lib/color-picker.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker2/lib/color-picker.component.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker2/lib/color-picker.component.ts
@@ -1,6 +1,11 @@
 import { Component, TemplateRef, ViewContainerRef } from '@angular/core';
-import { Overlay, ConnectionPositionPair, PositionStrategy, OverlayConfig } from '@angular/cdk/overlay';
+import {
+  Overlay,
+  ConnectionPositionPair,
+  PositionStrategy,
+  OverlayConfig,
+} from '@angular/cdk/overlay';
 import { TemplatePortal, PortalInjector } from '@angular/cdk/portal';
 import { Popover } from './popover/popover.service';
 import { InsidePopoverComponent } from './inside-popover/inside-popover.component';
 
@@ -8,9 +13,9 @@
   selector: 'context-menu2',
   templateUrl: 'context-menu.component.html',
 })
 export class ColorPickerComponent {
-  constructor(private popper: Popover) { }
+  constructor(private popper: Popover) {}
 
   show(content: TemplateRef<any>, origin) {
     const ref = this.popper.open<{ skills: number[] }>({
       content,
@@ -18,14 +23,13 @@
       // content: InsidePopoverComponent,
       origin,
       width: '200px',
       data: {
-        skills: [1, 2, 3]
-      }
+        skills: [1, 2, 3],
+      },
     });
 
     ref.afterClosed$.subscribe(res => {
-        console.log(res);
+      console.log(res);
     });
-
   }
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker2/lib/color-picker.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker2/lib/color-picker.module.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker2/lib/color-picker.module.ts
@@ -14,11 +14,15 @@
     CommonModule,
     FormsModule,
     OverlayModule,
     MatIconModule,
-    MatButtonModule
+    MatButtonModule,
   ],
-  declarations: [ColorPickerComponent, PopoverComponent, InsidePopoverComponent],
+  declarations: [
+    ColorPickerComponent,
+    PopoverComponent,
+    InsidePopoverComponent,
+  ],
   exports: [ColorPickerComponent],
-  entryComponents: [PopoverComponent, InsidePopoverComponent]
+  entryComponents: [PopoverComponent, InsidePopoverComponent],
 })
-export class ColorPickerModule { }
+export class ColorPickerModule {}

Index: /home/idnes/Projects/awe/src/lib/color-picker2/lib/inside-popover/inside-popover.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker2/lib/inside-popover/inside-popover.component.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker2/lib/inside-popover/inside-popover.component.ts
@@ -8,10 +8,10 @@
       :host {
         display: block;
         width: 200px;
       }
-    `
-  ]
+    `,
+  ],
 })
 export class InsidePopoverComponent {
   skills;
   constructor(private popoverRef: PopoverRef) {
@@ -20,6 +20,5 @@
 
   close() {
     this.popoverRef.close({ id: 1 });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover-ref.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover-ref.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover-ref.ts
@@ -31,9 +31,9 @@
   private _close(type: PopoverCloseEvent['type'], data?: T) {
     this.overlay.dispose();
     this.afterClosed.next({
       type,
-      data
+      data,
     });
     this.afterClosed.complete();
   }
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover.component.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover.component.ts
@@ -10,18 +10,17 @@
         padding: 1rem;
         font-size: 14px;
         box-shadow: 0 2px 14px 0 rgba(0, 0, 0, 0.2);
       }
-    `
-  ]
+    `,
+  ],
 })
 export class PopoverComponent implements OnInit {
   renderMethod: 'template' | 'component' | 'text' = 'component';
   content: PopoverContent;
   context;
 
-  constructor(private popoverRef: PopoverRef) {
-  }
+  constructor(private popoverRef: PopoverRef) {}
 
   ngOnInit() {
     this.content = this.popoverRef.content;
 
@@ -31,10 +30,9 @@
 
     if (this.content instanceof TemplateRef) {
       this.renderMethod = 'template';
       this.context = {
-        close: this.popoverRef.close.bind(this.popoverRef)
+        close: this.popoverRef.close.bind(this.popoverRef),
       };
     }
-
   }
 }

Index: /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover.service.ts
+++ /home/idnes/Projects/awe/src/lib/color-picker2/lib/popover/popover.service.ts
@@ -1,6 +1,11 @@
 import { Injectable, Injector } from '@angular/core';
-import { Overlay, ConnectionPositionPair, PositionStrategy, OverlayConfig } from '@angular/cdk/overlay';
+import {
+  Overlay,
+  ConnectionPositionPair,
+  PositionStrategy,
+  OverlayConfig,
+} from '@angular/cdk/overlay';
 import { PortalInjector, ComponentPortal } from '@angular/cdk/portal';
 import { PopoverRef, PopoverContent } from './popover-ref';
 import { PopoverComponent } from './popover.component';
 
@@ -12,15 +17,23 @@
   data?: T;
 }
 
 @Injectable({
-  providedIn: 'root'
+  providedIn: 'root',
 })
 export class Popover {
-  constructor(private overlay: Overlay, private injector: Injector) { }
+  constructor(private overlay: Overlay, private injector: Injector) {}
 
-  open<T>({ origin, content, data, width, height }: PopoverParams<T>): PopoverRef<T> {
-    const overlayRef = this.overlay.create(this.getOverlayConfig({ origin, width, height }));
+  open<T>({
+    origin,
+    content,
+    data,
+    width,
+    height,
+  }: PopoverParams<T>): PopoverRef<T> {
+    const overlayRef = this.overlay.create(
+      this.getOverlayConfig({ origin, width, height })
+    );
     const popoverRef = new PopoverRef<T>(overlayRef, content, data);
 
     const injector = this.createInjector(popoverRef, this.injector);
     overlayRef.attach(new ComponentPortal(PopoverComponent, null, injector));
@@ -34,14 +47,15 @@
       width,
       height,
       backdropClass: 'popover-backdrop',
       positionStrategy: this.getOverlayPosition(origin),
-      scrollStrategy: this.overlay.scrollStrategies.reposition()
+      scrollStrategy: this.overlay.scrollStrategies.reposition(),
     });
   }
 
   private getOverlayPosition(origin: HTMLElement): PositionStrategy {
-    const positionStrategy = this.overlay.position()
+    const positionStrategy = this.overlay
+      .position()
       .flexibleConnectedTo(origin)
       .withPositions(this.getPositions())
       .withFlexibleDimensions(false)
       .withPush(false);
@@ -59,9 +73,9 @@
       {
         originX: 'center',
         originY: 'top',
         overlayX: 'center',
-        overlayY: 'bottom'
+        overlayY: 'bottom',
       },
       {
         originX: 'center',
         originY: 'bottom',
@@ -69,6 +83,5 @@
         overlayY: 'top',
       },
     ];
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.attach.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.attach.directive.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.attach.directive.ts
@@ -8,9 +8,9 @@
 export class ContextMenuAttachDirective {
   @Input() public contextMenuSubject: any;
   @Input() public contextMenu: ContextMenuComponent;
 
-  constructor(private contextMenuService: ContextMenuService) { }
+  constructor(private contextMenuService: ContextMenuService) {}
 
   @HostListener('contextmenu', ['$event'])
   public onContextMenu(event: MouseEvent): void {
     if (!this.contextMenu.disabled) {

Index: /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.component.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.component.ts
@@ -1,26 +1,30 @@
 import {
-    ChangeDetectorRef,
-    Component,
-    ContentChildren,
-    ElementRef,
-    EventEmitter,
-    HostListener,
-    Inject,
-    Input,
-    OnDestroy,
-    Optional,
-    Output,
-    QueryList,
-    ViewChild,
-    ViewEncapsulation,
+  ChangeDetectorRef,
+  Component,
+  ContentChildren,
+  ElementRef,
+  EventEmitter,
+  HostListener,
+  Inject,
+  Input,
+  OnDestroy,
+  Optional,
+  Output,
+  QueryList,
+  ViewChild,
+  ViewEncapsulation,
 } from '@angular/core';
 import { Subscription } from 'rxjs';
 import { first } from 'rxjs/operators';
 
 import { ContextMenuItemDirective } from './context-menu.item.directive';
 import { IContextMenuOptions } from './options';
-import { ContextMenuService, IContextMenuClickEvent, CloseContextMenuEvent } from './context-menu.service';
+import {
+  ContextMenuService,
+  IContextMenuClickEvent,
+  CloseContextMenuEvent,
+} from './context-menu.service';
 import { CONTEXT_MENU_OPTIONS } from './tokens';
 
 export interface ILinkConfig {
   click: (item: any, $event?: MouseEvent) => void;
@@ -36,34 +40,42 @@
 
 @Component({
   encapsulation: ViewEncapsulation.None,
   selector: 'context-menu',
-  styles: [`
-    .cdk-overlay-container {
-      position: fixed;
-      z-index: 1000;
-      pointer-events: none;
-      top: 0;
-      left: 0;
-      width: 100%;
-      height: 100%;
-    }
-    .ngx-contextmenu.cdk-overlay-pane {
-      position: absolute;
-      pointer-events: auto;
-      box-sizing: border-box;
-    }
-  `],
-  template: ` `,
+  styles: [
+    `
+      .cdk-overlay-container {
+        position: fixed;
+        z-index: 1000;
+        pointer-events: none;
+        top: 0;
+        left: 0;
+        width: 100%;
+        height: 100%;
+      }
+      .ngx-contextmenu.cdk-overlay-pane {
+        position: absolute;
+        pointer-events: auto;
+        box-sizing: border-box;
+      }
+    `,
+  ],
+  template: ``,
 })
 export class ContextMenuComponent implements OnDestroy {
   @Input() public menuClass = '';
   @Input() public autoFocus = false;
   @Input() public useBootstrap4 = false;
   @Input() public disabled = false;
-  @Output() public close: EventEmitter<CloseContextMenuEvent> = new EventEmitter();
-  @Output() public open: EventEmitter<IContextMenuClickEvent> = new EventEmitter();
-  @ContentChildren(ContextMenuItemDirective) public menuItems: QueryList<ContextMenuItemDirective>;
+  @Output() public close: EventEmitter<
+    CloseContextMenuEvent
+  > = new EventEmitter();
+  @Output() public open: EventEmitter<
+    IContextMenuClickEvent
+  > = new EventEmitter();
+  @ContentChildren(ContextMenuItemDirective) public menuItems: QueryList<
+    ContextMenuItemDirective
+  >;
   @ViewChild('menu') public menuElement: ElementRef;
   public visibleMenuItems: ContextMenuItemDirective[] = [];
 
   public links: ILinkConfig[] = [];
@@ -76,17 +88,20 @@
     private _contextMenuService: ContextMenuService,
     private changeDetector: ChangeDetectorRef,
     private elementRef: ElementRef,
     @Optional()
-    @Inject(CONTEXT_MENU_OPTIONS) private options: IContextMenuOptions,
+    @Inject(CONTEXT_MENU_OPTIONS)
+    private options: IContextMenuOptions
   ) {
     if (options) {
       this.autoFocus = options.autoFocus;
       this.useBootstrap4 = options.useBootstrap4;
     }
-    this.subscription.add(_contextMenuService.show.subscribe(menuEvent => {
-      this.onMenuEvent(menuEvent);
-    }));
+    this.subscription.add(
+      _contextMenuService.show.subscribe(menuEvent => {
+        this.onMenuEvent(menuEvent);
+      })
+    );
   }
 
   public ngOnDestroy(): void {
     this.subscription.unsubscribe();
@@ -102,19 +117,28 @@
     }
     this.event = event;
     this.item = item;
     this.setVisibleMenuItems();
-    this._contextMenuService.openContextMenu({ ...menuEvent, menuItems: this.visibleMenuItems, menuClass: this.menuClass });
-    this._contextMenuService.close.asObservable().pipe(first()).subscribe(closeEvent => this.close.emit(closeEvent));
+    this._contextMenuService.openContextMenu({
+      ...menuEvent,
+      menuItems: this.visibleMenuItems,
+      menuClass: this.menuClass,
+    });
+    this._contextMenuService.close
+      .asObservable()
+      .pipe(first())
+      .subscribe(closeEvent => this.close.emit(closeEvent));
     this.open.next(menuEvent);
   }
 
   public isMenuItemVisible(menuItem: ContextMenuItemDirective): boolean {
     return this.evaluateIfFunction(menuItem.visible);
   }
 
   public setVisibleMenuItems(): void {
-    this.visibleMenuItems = this.menuItems.filter(menuItem => this.isMenuItemVisible(menuItem));
+    this.visibleMenuItems = this.menuItems.filter(menuItem =>
+      this.isMenuItemVisible(menuItem)
+    );
   }
 
   public evaluateIfFunction(value: any): any {
     if (value instanceof Function) {

Index: /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.content.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.content.component.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.content.component.ts
@@ -1,19 +1,29 @@
-import { CloseLeafMenuEvent, IContextMenuClickEvent } from './context-menu.service';
+import {
+  CloseLeafMenuEvent,
+  IContextMenuClickEvent,
+} from './context-menu.service';
 import { OverlayRef } from '@angular/cdk/overlay';
 import {
-    AfterViewInit,
-    ChangeDetectorRef,
-    Component,
-    ElementRef,
-    Inject,
-    Input,
-    Optional,
-    Renderer2,
-    ViewChild,
-    ViewChildren,
+  AfterViewInit,
+  ChangeDetectorRef,
+  Component,
+  ElementRef,
+  Inject,
+  Input,
+  Optional,
+  Renderer2,
+  ViewChild,
+  ViewChildren,
 } from '@angular/core';
-import { EventEmitter, OnDestroy, OnInit, Output, QueryList, HostListener } from '@angular/core';
+import {
+  EventEmitter,
+  OnDestroy,
+  OnInit,
+  Output,
+  QueryList,
+  HostListener,
+} from '@angular/core';
 import { Subscription } from 'rxjs';
 
 import { ContextMenuItemDirective } from './context-menu.item.directive';
 import { IContextMenuOptions } from './options';
@@ -31,37 +41,47 @@
 @Component({
   selector: 'context-menu-content',
   styles: [
     `
-    .passive {
+      .passive {
         display: block;
         padding: 3px 20px;
         clear: both;
         font-weight: normal;
         line-height: @line-height-base;
         white-space: nowrap;
-    }
-    .hasSubMenu:before {
-      content: "\u25B6";
-      float: right;
-    }
+      }
+      .hasSubMenu:before {
+        content: '\u25B6';
+        float: right;
+      }
     `,
   ],
-  templateUrl: 'template.html'
+  templateUrl: 'template.html',
 })
-export class ContextMenuContentComponent implements OnInit, OnDestroy, AfterViewInit {
+export class ContextMenuContentComponent
+  implements OnInit, OnDestroy, AfterViewInit {
   @Input() public menuItems: ContextMenuItemDirective[] = [];
   @Input() public item: any;
   @Input() public event: MouseEvent | KeyboardEvent;
   @Input() public parentContextMenu: ContextMenuContentComponent;
   @Input() public menuClass: string;
   @Input() public overlay: OverlayRef;
   @Input() public isLeaf = false;
-  @Output() public execute: EventEmitter<{ event: MouseEvent | KeyboardEvent, item: any, menuItem: ContextMenuItemDirective }>
-    = new EventEmitter();
-  @Output() public openSubMenu: EventEmitter<IContextMenuClickEvent> = new EventEmitter();
-  @Output() public closeLeafMenu: EventEmitter<CloseLeafMenuEvent> = new EventEmitter();
-  @Output() public closeAllMenus: EventEmitter<{ event: MouseEvent }> = new EventEmitter();
+  @Output() public execute: EventEmitter<{
+    event: MouseEvent | KeyboardEvent;
+    item: any;
+    menuItem: ContextMenuItemDirective;
+  }> = new EventEmitter();
+  @Output() public openSubMenu: EventEmitter<
+    IContextMenuClickEvent
+  > = new EventEmitter();
+  @Output() public closeLeafMenu: EventEmitter<
+    CloseLeafMenuEvent
+  > = new EventEmitter();
+  @Output() public closeAllMenus: EventEmitter<{
+    event: MouseEvent;
+  }> = new EventEmitter();
   @ViewChild('menu') public menuElement: ElementRef;
   @ViewChildren('li') public menuItemElements: QueryList<ElementRef>;
 
   public autoFocus = false;
@@ -72,10 +92,11 @@
   constructor(
     private changeDetector: ChangeDetectorRef,
     private elementRef: ElementRef,
     @Optional()
-    @Inject(CONTEXT_MENU_OPTIONS) private options: IContextMenuOptions,
-    public renderer: Renderer2,
+    @Inject(CONTEXT_MENU_OPTIONS)
+    private options: IContextMenuOptions,
+    public renderer: Renderer2
   ) {
     if (options) {
       this.autoFocus = options.autoFocus;
       this.useBootstrap4 = options.useBootstrap4;
@@ -84,13 +105,19 @@
 
   ngOnInit(): void {
     this.menuItems.forEach(menuItem => {
       menuItem.currentItem = this.item;
-      this.subscription.add(menuItem.execute.subscribe(event => this.execute.emit({ ...event, menuItem })));
+      this.subscription.add(
+        menuItem.execute.subscribe(event =>
+          this.execute.emit({ ...event, menuItem })
+        )
+      );
     });
     const queryList = new QueryList<ContextMenuItemDirective>();
     queryList.reset(this.menuItems);
-    this._keyManager = new ActiveDescendantKeyManager<ContextMenuItemDirective>(queryList).withWrap();
+    this._keyManager = new ActiveDescendantKeyManager<ContextMenuItemDirective>(
+      queryList
+    ).withWrap();
   }
 
   ngAfterViewInit() {
     if (this.autoFocus) {
@@ -173,22 +200,30 @@
       return;
     }
     this.cancelEvent(event);
     // tslint:disable-next-line: deprecation
-    this.closeLeafMenu.emit({ exceptRootMenu: event.keyCode === ARROW_LEFT_KEYCODE, event });
+    this.closeLeafMenu.emit({
+      exceptRootMenu: event.keyCode === ARROW_LEFT_KEYCODE,
+      event,
+    });
   }
 
   @HostListener('document:click', ['$event'])
   @HostListener('document:contextmenu', ['$event'])
   public closeMenu(event: MouseEvent): void {
     if (event.type === 'click' && event.button === 2) {
       return;
     }
-    this.closeAllMenus.emit({event});
+    this.closeAllMenus.emit({ event });
   }
 
-  public onOpenSubMenu(menuItem: ContextMenuItemDirective, event?: MouseEvent | KeyboardEvent): void {
-    const anchorElementRef = this.menuItemElements.toArray()[this._keyManager.activeItemIndex];
+  public onOpenSubMenu(
+    menuItem: ContextMenuItemDirective,
+    event?: MouseEvent | KeyboardEvent
+  ): void {
+    const anchorElementRef = this.menuItemElements.toArray()[
+      this._keyManager.activeItemIndex
+    ];
     const anchorElement = anchorElementRef && anchorElementRef.nativeElement;
     this.openSubMenu.emit({
       anchorElement,
       contextMenu: menuItem.subMenu,
@@ -197,9 +232,12 @@
       parentContextMenu: this,
     });
   }
 
-  public onMenuItemSelect(menuItem: ContextMenuItemDirective, event: MouseEvent | KeyboardEvent): void {
+  public onMenuItemSelect(
+    menuItem: ContextMenuItemDirective,
+    event: MouseEvent | KeyboardEvent
+  ): void {
     event.preventDefault();
     event.stopPropagation();
     this.onOpenSubMenu(menuItem, event);
     if (!menuItem.subMenu) {
@@ -212,9 +250,12 @@
       return;
     }
 
     const target: HTMLElement = event.target;
-    if (['INPUT', 'TEXTAREA', 'SELECT'].indexOf(target.tagName) > -1 || target.isContentEditable) {
+    if (
+      ['INPUT', 'TEXTAREA', 'SELECT'].indexOf(target.tagName) > -1 ||
+      target.isContentEditable
+    ) {
       return;
     }
 
     event.preventDefault();

Index: /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.item.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.item.directive.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.item.directive.ts
@@ -1,6 +1,13 @@
 import { Highlightable } from '@angular/cdk/a11y';
-import { Directive, ElementRef, EventEmitter, Input, Output, TemplateRef } from '@angular/core';
+import {
+  Directive,
+  ElementRef,
+  EventEmitter,
+  Input,
+  Output,
+  TemplateRef,
+} from '@angular/core';
 
 @Directive({
   /* tslint:disable:directive-selector-type */
   selector: '[contextMenuItem]',
@@ -11,19 +18,27 @@
   @Input() public divider = false;
   @Input() public enabled: boolean | ((item: any) => boolean) = true;
   @Input() public passive = false;
   @Input() public visible: boolean | ((item: any) => boolean) = true;
-  @Output() public execute: EventEmitter<{ event: Event, item: any }> = new EventEmitter();
+  @Output() public execute: EventEmitter<{
+    event: Event;
+    item: any;
+  }> = new EventEmitter();
 
   public currentItem: any;
   public isActive = false;
   public get disabled() {
-    return this.passive ||
+    return (
+      this.passive ||
       this.divider ||
-      !this.evaluateIfFunction(this.enabled, this.currentItem);
+      !this.evaluateIfFunction(this.enabled, this.currentItem)
+    );
   }
 
-  constructor(public template: TemplateRef<{ item: any }>, public elementRef: ElementRef) { }
+  constructor(
+    public template: TemplateRef<{ item: any }>,
+    public elementRef: ElementRef
+  ) {}
 
   public evaluateIfFunction(value: any, item: any): any {
     if (value instanceof Function) {
       return value(item);

Index: /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.module.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.module.ts
@@ -16,20 +16,15 @@
     ContextMenuComponent,
     ContextMenuContentComponent,
     ContextMenuItemDirective,
   ],
-  entryComponents: [
-    ContextMenuContentComponent,
-  ],
+  entryComponents: [ContextMenuContentComponent],
   exports: [
     ContextMenuAttachDirective,
     ContextMenuComponent,
     ContextMenuItemDirective,
   ],
-  imports: [
-    CommonModule,
-    OverlayModule,
-  ],
+  imports: [CommonModule, OverlayModule],
 })
 export class ContextMenuModule {
   public static forRoot(options?: IContextMenuOptions): ModuleWithProviders {
     return {

Index: /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.service.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu/lib/context-menu.service.ts
@@ -1,5 +1,10 @@
-import { Overlay, OverlayRef, ScrollStrategyOptions, ConnectedPositionStrategy } from '@angular/cdk/overlay';
+import {
+  Overlay,
+  OverlayRef,
+  ScrollStrategyOptions,
+  ConnectedPositionStrategy,
+} from '@angular/cdk/overlay';
 import { ComponentPortal } from '@angular/cdk/portal';
 import { ComponentRef, Injectable, ElementRef } from '@angular/core';
 import { Subject, Subscription } from 'rxjs';
 
@@ -36,15 +41,19 @@
   event?: MouseEvent | KeyboardEvent;
   item: any;
   menuItem: ContextMenuItemDirective;
 }
-export type CloseContextMenuEvent = ExecuteContextMenuEvent | CancelContextMenuEvent;
+export type CloseContextMenuEvent =
+  | ExecuteContextMenuEvent
+  | CancelContextMenuEvent;
 
 @Injectable()
 export class ContextMenuService {
   public isDestroyingLeafMenu = false;
 
-  public show: Subject<IContextMenuClickEvent> = new Subject<IContextMenuClickEvent>();
+  public show: Subject<IContextMenuClickEvent> = new Subject<
+    IContextMenuClickEvent
+  >();
   public triggerClose: Subject<ContextMenuContentComponent> = new Subject();
   public close: Subject<CloseContextMenuEvent> = new Subject();
 
   private contextMenuContent: ComponentRef<ContextMenuContentComponent>;
@@ -56,15 +65,15 @@
       left: 0,
       right: 0,
       top: 0,
       width: 0,
-    })
+    }),
   };
 
   constructor(
     private overlay: Overlay,
-    private scrollStrategy: ScrollStrategyOptions,
-  ) { }
+    private scrollStrategy: ScrollStrategyOptions
+  ) {}
 
   public openContextMenu(context: IContextMenuContext) {
     const { anchorElement, event, parentContextMenu } = context;
     let positionStrategy: ConnectedPositionStrategy;
@@ -80,50 +89,64 @@
         width: 0,
       });
       this.closeAllContextMenus({ eventType: 'cancel', event });
       // tslint:disable-next-line: deprecation
-      positionStrategy = this.overlay.position().connectedTo(
-        new ElementRef(anchorElement || this.fakeElement),
-        { originX: 'start', originY: 'bottom' },
-        { overlayX: 'start', overlayY: 'top' })
+      positionStrategy = this.overlay
+        .position()
+        .connectedTo(
+          new ElementRef(anchorElement || this.fakeElement),
+          { originX: 'start', originY: 'bottom' },
+          { overlayX: 'start', overlayY: 'top' }
+        )
         .withFallbackPosition(
           { originX: 'start', originY: 'top' },
-          { overlayX: 'start', overlayY: 'bottom' })
+          { overlayX: 'start', overlayY: 'bottom' }
+        )
         .withFallbackPosition(
           { originX: 'end', originY: 'top' },
-          { overlayX: 'start', overlayY: 'top' })
+          { overlayX: 'start', overlayY: 'top' }
+        )
         .withFallbackPosition(
           { originX: 'start', originY: 'top' },
-          { overlayX: 'end', overlayY: 'top' })
+          { overlayX: 'end', overlayY: 'top' }
+        )
         .withFallbackPosition(
           { originX: 'end', originY: 'center' },
-          { overlayX: 'start', overlayY: 'center' })
+          { overlayX: 'start', overlayY: 'center' }
+        )
         .withFallbackPosition(
           { originX: 'start', originY: 'center' },
-          { overlayX: 'end', overlayY: 'center' })
-        ;
-      this.overlays = [this.overlay.create({
-        positionStrategy,
-        panelClass: 'ngx-contextmenu',
-        scrollStrategy: this.scrollStrategy.close(),
-      })];
+          { overlayX: 'end', overlayY: 'center' }
+        );
+      this.overlays = [
+        this.overlay.create({
+          positionStrategy,
+          panelClass: 'ngx-contextmenu',
+          scrollStrategy: this.scrollStrategy.close(),
+        }),
+      ];
       this.attachContextMenu(this.overlays[0], context);
     } else {
       // tslint:disable-next-line: deprecation
-      positionStrategy = this.overlay.position().connectedTo(
-        new ElementRef(event ? event.target : anchorElement),
-        { originX: 'end', originY: 'top' },
-        { overlayX: 'start', overlayY: 'top' })
+      positionStrategy = this.overlay
+        .position()
+        .connectedTo(
+          new ElementRef(event ? event.target : anchorElement),
+          { originX: 'end', originY: 'top' },
+          { overlayX: 'start', overlayY: 'top' }
+        )
         .withFallbackPosition(
           { originX: 'start', originY: 'top' },
-          { overlayX: 'end', overlayY: 'top' })
+          { overlayX: 'end', overlayY: 'top' }
+        )
         .withFallbackPosition(
           { originX: 'end', originY: 'bottom' },
-          { overlayX: 'start', overlayY: 'bottom' })
+          { overlayX: 'start', overlayY: 'bottom' }
+        )
         .withFallbackPosition(
           { originX: 'start', originY: 'bottom' },
-          { overlayX: 'end', overlayY: 'bottom' })
-        ;
+          { overlayX: 'end', overlayY: 'bottom' }
+        );
       const newOverlay = this.overlay.create({
         positionStrategy,
         panelClass: 'ngx-contextmenu',
         scrollStrategy: this.scrollStrategy.close(),
@@ -133,40 +156,64 @@
       this.attachContextMenu(newOverlay, context);
     }
   }
 
-  public attachContextMenu(overlay: OverlayRef, context: IContextMenuContext): void {
+  public attachContextMenu(
+    overlay: OverlayRef,
+    context: IContextMenuContext
+  ): void {
     const { event, item, menuItems, menuClass } = context;
 
-    const contextMenuContent: ComponentRef<ContextMenuContentComponent> = overlay.attach(new ComponentPortal(ContextMenuContentComponent));
+    const contextMenuContent: ComponentRef<
+      ContextMenuContentComponent
+    > = overlay.attach(new ComponentPortal(ContextMenuContentComponent));
     contextMenuContent.instance.event = event;
     contextMenuContent.instance.item = item;
     contextMenuContent.instance.menuItems = menuItems;
     contextMenuContent.instance.overlay = overlay;
     contextMenuContent.instance.isLeaf = true;
     contextMenuContent.instance.menuClass = menuClass;
     // tslint:disable-next-line: no-angle-bracket-type-assertion
-    (<OverlayRefWithContextMenu>overlay).contextMenu = contextMenuContent.instance;
+    (<OverlayRefWithContextMenu>overlay).contextMenu =
+      contextMenuContent.instance;
 
     const subscriptions: Subscription = new Subscription();
-    subscriptions.add(contextMenuContent.instance.execute.asObservable()
-      .subscribe((executeEvent) => this.closeAllContextMenus({ eventType: 'execute', ...executeEvent })));
-    subscriptions.add(contextMenuContent.instance.closeAllMenus.asObservable()
-      .subscribe((closeAllEvent) => this.closeAllContextMenus({ eventType: 'cancel', ...closeAllEvent })));
-    subscriptions.add(contextMenuContent.instance.closeLeafMenu.asObservable()
-      .subscribe(closeLeafMenuEvent => this.destroyLeafMenu(closeLeafMenuEvent)));
-    subscriptions.add(contextMenuContent.instance.openSubMenu.asObservable()
-      .subscribe((subMenuEvent: IContextMenuContext) => {
-        this.destroySubMenus(contextMenuContent.instance);
-        if (!subMenuEvent.contextMenu) {
-          contextMenuContent.instance.isLeaf = true;
-          return;
-        }
-        contextMenuContent.instance.isLeaf = false;
-        this.show.next(subMenuEvent);
-      }));
+    subscriptions.add(
+      contextMenuContent.instance.execute
+        .asObservable()
+        .subscribe(executeEvent =>
+          this.closeAllContextMenus({ eventType: 'execute', ...executeEvent })
+        )
+    );
+    subscriptions.add(
+      contextMenuContent.instance.closeAllMenus
+        .asObservable()
+        .subscribe(closeAllEvent =>
+          this.closeAllContextMenus({ eventType: 'cancel', ...closeAllEvent })
+        )
+    );
+    subscriptions.add(
+      contextMenuContent.instance.closeLeafMenu
+        .asObservable()
+        .subscribe(closeLeafMenuEvent =>
+          this.destroyLeafMenu(closeLeafMenuEvent)
+        )
+    );
+    subscriptions.add(
+      contextMenuContent.instance.openSubMenu
+        .asObservable()
+        .subscribe((subMenuEvent: IContextMenuContext) => {
+          this.destroySubMenus(contextMenuContent.instance);
+          if (!subMenuEvent.contextMenu) {
+            contextMenuContent.instance.isLeaf = true;
+            return;
+          }
+          contextMenuContent.instance.isLeaf = false;
+          this.show.next(subMenuEvent);
+        })
+    );
     contextMenuContent.onDestroy(() => {
-      menuItems.forEach(menuItem => menuItem.isActive = false);
+      menuItems.forEach(menuItem => (menuItem.isActive = false));
       subscriptions.unsubscribe();
     });
     contextMenuContent.changeDetectorRef.detectChanges();
   }
@@ -192,9 +239,12 @@
     }
     return overlay;
   }
 
-  public destroyLeafMenu({ exceptRootMenu, event }: CloseLeafMenuEvent = {}): void {
+  public destroyLeafMenu({
+    exceptRootMenu,
+    event,
+  }: CloseLeafMenuEvent = {}): void {
     if (this.isDestroyingLeafMenu) {
       return;
     }
     this.isDestroyingLeafMenu = true;

Index: /home/idnes/Projects/awe/src/lib/context-menu2/lib/context-menu.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu2/lib/context-menu.component.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu2/lib/context-menu.component.ts
@@ -1,6 +1,11 @@
 import { Component, TemplateRef, ViewContainerRef } from '@angular/core';
-import { Overlay, ConnectionPositionPair, PositionStrategy, OverlayConfig } from '@angular/cdk/overlay';
+import {
+  Overlay,
+  ConnectionPositionPair,
+  PositionStrategy,
+  OverlayConfig,
+} from '@angular/cdk/overlay';
 import { TemplatePortal, PortalInjector } from '@angular/cdk/portal';
 import { Popover } from './popover/popover.service';
 import { InsidePopoverComponent } from './inside-popover/inside-popover.component';
 
@@ -8,9 +13,9 @@
   selector: 'context-menu2',
   templateUrl: 'context-menu.component.html',
 })
 export class ContextMenuComponent {
-  constructor(private popper: Popover) { }
+  constructor(private popper: Popover) {}
 
   show(content: TemplateRef<any>, origin) {
     const ref = this.popper.open<{ skills: number[] }>({
       content,
@@ -18,14 +23,13 @@
       // content: InsidePopoverComponent,
       origin,
       width: '200px',
       data: {
-        skills: [1, 2, 3]
-      }
+        skills: [1, 2, 3],
+      },
     });
 
     ref.afterClosed$.subscribe(res => {
-        console.log(res);
+      console.log(res);
     });
-
   }
 }

Index: /home/idnes/Projects/awe/src/lib/context-menu2/lib/context-menu.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu2/lib/context-menu.module.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu2/lib/context-menu.module.ts
@@ -14,11 +14,15 @@
     CommonModule,
     FormsModule,
     OverlayModule,
     MatIconModule,
-    MatButtonModule
+    MatButtonModule,
   ],
-  declarations: [ContextMenuComponent, PopoverComponent, InsidePopoverComponent],
+  declarations: [
+    ContextMenuComponent,
+    PopoverComponent,
+    InsidePopoverComponent,
+  ],
   exports: [ContextMenuComponent],
-  entryComponents: [PopoverComponent, InsidePopoverComponent]
+  entryComponents: [PopoverComponent, InsidePopoverComponent],
 })
-export class ContextMenuModule { }
+export class ContextMenuModule {}

Index: /home/idnes/Projects/awe/src/lib/context-menu2/lib/inside-popover/inside-popover.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu2/lib/inside-popover/inside-popover.component.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu2/lib/inside-popover/inside-popover.component.ts
@@ -8,10 +8,10 @@
       :host {
         display: block;
         width: 200px;
       }
-    `
-  ]
+    `,
+  ],
 })
 export class InsidePopoverComponent {
   skills;
   constructor(private popoverRef: PopoverRef) {
@@ -20,6 +20,5 @@
 
   close() {
     this.popoverRef.close({ id: 1 });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover-ref.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover-ref.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover-ref.ts
@@ -31,9 +31,9 @@
   private _close(type: PopoverCloseEvent['type'], data?: T) {
     this.overlay.dispose();
     this.afterClosed.next({
       type,
-      data
+      data,
     });
     this.afterClosed.complete();
   }
 }

Index: /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover.component.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover.component.ts
@@ -10,18 +10,17 @@
         padding: 1rem;
         font-size: 14px;
         box-shadow: 0 2px 14px 0 rgba(0, 0, 0, 0.2);
       }
-    `
-  ]
+    `,
+  ],
 })
 export class PopoverComponent implements OnInit {
   renderMethod: 'template' | 'component' | 'text' = 'component';
   content: PopoverContent;
   context;
 
-  constructor(private popoverRef: PopoverRef) {
-  }
+  constructor(private popoverRef: PopoverRef) {}
 
   ngOnInit() {
     this.content = this.popoverRef.content;
 
@@ -31,10 +30,9 @@
 
     if (this.content instanceof TemplateRef) {
       this.renderMethod = 'template';
       this.context = {
-        close: this.popoverRef.close.bind(this.popoverRef)
+        close: this.popoverRef.close.bind(this.popoverRef),
       };
     }
-
   }
 }

Index: /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover.service.ts
+++ /home/idnes/Projects/awe/src/lib/context-menu2/lib/popover/popover.service.ts
@@ -1,6 +1,11 @@
 import { Injectable, Injector } from '@angular/core';
-import { Overlay, ConnectionPositionPair, PositionStrategy, OverlayConfig } from '@angular/cdk/overlay';
+import {
+  Overlay,
+  ConnectionPositionPair,
+  PositionStrategy,
+  OverlayConfig,
+} from '@angular/cdk/overlay';
 import { PortalInjector, ComponentPortal } from '@angular/cdk/portal';
 import { PopoverRef, PopoverContent } from './popover-ref';
 import { PopoverComponent } from './popover.component';
 
@@ -12,15 +17,23 @@
   data?: T;
 }
 
 @Injectable({
-  providedIn: 'root'
+  providedIn: 'root',
 })
 export class Popover {
-  constructor(private overlay: Overlay, private injector: Injector) { }
+  constructor(private overlay: Overlay, private injector: Injector) {}
 
-  open<T>({ origin, content, data, width, height }: PopoverParams<T>): PopoverRef<T> {
-    const overlayRef = this.overlay.create(this.getOverlayConfig({ origin, width, height }));
+  open<T>({
+    origin,
+    content,
+    data,
+    width,
+    height,
+  }: PopoverParams<T>): PopoverRef<T> {
+    const overlayRef = this.overlay.create(
+      this.getOverlayConfig({ origin, width, height })
+    );
     const popoverRef = new PopoverRef<T>(overlayRef, content, data);
 
     const injector = this.createInjector(popoverRef, this.injector);
     overlayRef.attach(new ComponentPortal(PopoverComponent, null, injector));
@@ -34,14 +47,15 @@
       width,
       height,
       backdropClass: 'popover-backdrop',
       positionStrategy: this.getOverlayPosition(origin),
-      scrollStrategy: this.overlay.scrollStrategies.reposition()
+      scrollStrategy: this.overlay.scrollStrategies.reposition(),
     });
   }
 
   private getOverlayPosition(origin: HTMLElement): PositionStrategy {
-    const positionStrategy = this.overlay.position()
+    const positionStrategy = this.overlay
+      .position()
       .flexibleConnectedTo(origin)
       .withPositions(this.getPositions())
       .withFlexibleDimensions(false)
       .withPush(true);
@@ -59,9 +73,9 @@
       {
         originX: 'center',
         originY: 'top',
         overlayX: 'center',
-        overlayY: 'bottom'
+        overlayY: 'bottom',
       },
       {
         originX: 'center',
         originY: 'bottom',
@@ -69,6 +83,5 @@
         overlayY: 'top',
       },
     ];
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/currency-mask/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/currency-mask/index.ts
+++ /home/idnes/Projects/awe/src/lib/currency-mask/index.ts
@@ -1,1 +1,1 @@
-export * from './lib/currency-mask.module'
+export * from './lib/currency-mask.module';

Index: /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.config.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.config.ts
+++ /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.config.ts
@@ -1,5 +1,5 @@
-import {InjectionToken} from "@angular/core";
+import { InjectionToken } from '@angular/core';
 
 export interface CurrencyMaskConfig {
   align: string;
   allowNegative: boolean;
@@ -11,5 +11,7 @@
   thousands: string;
   nullable: boolean;
 }
 
-export let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>("currency.mask.config");
+export let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(
+  'currency.mask.config'
+);

Index: /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.directive.ts
+++ /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.directive.ts
@@ -9,112 +9,130 @@
   KeyValueDiffer,
   KeyValueDiffers,
   Input,
   OnInit,
-  Optional
-} from "@angular/core";
+  Optional,
+} from '@angular/core';
 
-import {ControlValueAccessor, NG_VALUE_ACCESSOR} from "@angular/forms";
-import {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from "./currency-mask.config";
-import {InputHandler} from "./input.handler";
+import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';
+import {
+  CurrencyMaskConfig,
+  CURRENCY_MASK_CONFIG,
+} from './currency-mask.config';
+import { InputHandler } from './input.handler';
 
 export const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {
   provide: NG_VALUE_ACCESSOR,
   useExisting: forwardRef(() => CurrencyMaskDirective),
   multi: true,
 };
 
 @Directive({
-    selector: "[currencyMask]",
-    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]
+  selector: '[currencyMask]',
+  providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR],
 })
-export class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {
-
+export class CurrencyMaskDirective
+  implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {
   @Input() options: any = {};
 
   public inputHandler: InputHandler;
   public keyValueDiffer: KeyValueDiffer<any, any>;
 
   public optionsTemplate = {
-      align: "right",
-      allowNegative: true,
-      allowZero: true,
-      decimal: ".",
-      precision: 2,
-      prefix: "$ ",
-      suffix: "",
-      thousands: ",",
-      nullable: false
+    align: 'right',
+    allowNegative: true,
+    allowZero: true,
+    decimal: '.',
+    precision: 2,
+    prefix: '$ ',
+    suffix: '',
+    thousands: ',',
+    nullable: false,
   };
 
   constructor(
-    @Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig,
+    @Optional()
+    @Inject(CURRENCY_MASK_CONFIG)
+    private currencyMaskConfig: CurrencyMaskConfig,
     private elementRef: ElementRef,
-    private keyValueDiffers: KeyValueDiffers) {
+    private keyValueDiffers: KeyValueDiffers
+  ) {
     if (currencyMaskConfig) {
       this.optionsTemplate = currencyMaskConfig;
     }
 
     this.keyValueDiffer = keyValueDiffers.find({}).create();
   }
 
   ngAfterViewInit() {
-    this.elementRef.nativeElement.style.textAlign = this.options ? this.options.align : this.optionsTemplate.align;
+    this.elementRef.nativeElement.style.textAlign = this.options
+      ? this.options.align
+      : this.optionsTemplate.align;
   }
 
   ngDoCheck() {
     if (this.keyValueDiffer.diff(this.options)) {
-      this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;
-      this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));
+      this.elementRef.nativeElement.style.textAlign = this.options.align
+        ? this.options.align
+        : this.optionsTemplate.align;
+      this.inputHandler.updateOptions(
+        (<any>Object).assign({}, this.optionsTemplate, this.options)
+      );
     }
   }
 
   ngOnInit() {
-    this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));
+    this.inputHandler = new InputHandler(
+      this.elementRef.nativeElement,
+      (<any>Object).assign({}, this.optionsTemplate, this.options)
+    );
   }
 
-  @HostListener("blur", ["$event"])
+  @HostListener('blur', ['$event'])
   handleBlur(event: any) {
     this.inputHandler.getOnModelTouched().apply(event);
   }
 
-  @HostListener("cut", ["$event"])
+  @HostListener('cut', ['$event'])
   handleCut(event: any) {
     if (!this.isChromeAndroid()) {
       this.inputHandler.handleCut(event);
     }
   }
 
-  @HostListener("input", ["$event"])
+  @HostListener('input', ['$event'])
   handleInput(event: any) {
     if (this.isChromeAndroid()) {
       this.inputHandler.handleInput(event);
     }
   }
 
-  @HostListener("keydown", ["$event"])
+  @HostListener('keydown', ['$event'])
   handleKeydown(event: any) {
     if (!this.isChromeAndroid()) {
       this.inputHandler.handleKeydown(event);
     }
   }
 
-  @HostListener("keypress", ["$event"])
+  @HostListener('keypress', ['$event'])
   handleKeypress(event: any) {
     if (!this.isChromeAndroid()) {
       this.inputHandler.handleKeypress(event);
     }
   }
 
-  @HostListener("paste", ["$event"])
+  @HostListener('paste', ['$event'])
   handlePaste(event: any) {
     if (!this.isChromeAndroid()) {
       this.inputHandler.handlePaste(event);
     }
   }
 
   isChromeAndroid(): boolean {
-    return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);
+    return (
+      /chrome/i.test(navigator.userAgent) &&
+      /android/i.test(navigator.userAgent)
+    );
   }
 
   registerOnChange(callbackFunction: Function): void {
     this.inputHandler.setOnModelChange(callbackFunction);

Index: /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.module.ts
+++ /home/idnes/Projects/awe/src/lib/currency-mask/lib/currency-mask.module.ts
@@ -1,22 +1,27 @@
-import {ModuleWithProviders, NgModule} from '@angular/core';
-import {CommonModule} from '@angular/common';
-import {FormsModule} from '@angular/forms';
-import {CurrencyMaskDirective} from "./currency-mask.directive";
-import {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from "./currency-mask.config";
+import { ModuleWithProviders, NgModule } from '@angular/core';
+import { CommonModule } from '@angular/common';
+import { FormsModule } from '@angular/forms';
+import { CurrencyMaskDirective } from './currency-mask.directive';
+import {
+  CURRENCY_MASK_CONFIG,
+  CurrencyMaskConfig,
+} from './currency-mask.config';
 
 @NgModule({
-  imports: [ CommonModule, FormsModule ],
-  declarations: [ CurrencyMaskDirective ],
-  exports: [ CurrencyMaskDirective ]
+  imports: [CommonModule, FormsModule],
+  declarations: [CurrencyMaskDirective],
+  exports: [CurrencyMaskDirective],
 })
 export class NgxCurrencyModule {
   static forRoot(config: CurrencyMaskConfig): ModuleWithProviders {
     return {
       ngModule: NgxCurrencyModule,
-      providers: [{
-        provide: CURRENCY_MASK_CONFIG,
-        useValue: config,
-      }]
-    }
+      providers: [
+        {
+          provide: CURRENCY_MASK_CONFIG,
+          useValue: config,
+        },
+      ],
+    };
   }
 }

Index: /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.handler.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.handler.ts
+++ /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.handler.ts
@@ -1,154 +1,170 @@
-import {InputService} from "./input.service";
+import { InputService } from './input.service';
 
 export class InputHandler {
+  private inputService: InputService;
+  private onModelChange: Function;
+  private onModelTouched: Function;
 
-    private inputService: InputService;
-    private onModelChange: Function;
-    private onModelTouched: Function;
+  constructor(htmlInputElement: HTMLInputElement, options: any) {
+    this.inputService = new InputService(htmlInputElement, options);
+  }
 
-    constructor(htmlInputElement: HTMLInputElement, options: any) {
-        this.inputService = new InputService(htmlInputElement, options);
+  handleCut(event: any): void {
+    setTimeout(() => {
+      this.inputService.updateFieldValue();
+      this.setValue(this.inputService.value);
+      this.onModelChange(this.inputService.value);
+    }, 0);
+  }
+
+  handleInput(event: any): void {
+    let keyCode = this.inputService.rawValue.charCodeAt(
+      this.inputService.rawValue.length - 1
+    );
+    let rawValueLength = this.inputService.rawValue.length;
+    let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;
+    let storedRawValueLength = this.inputService.storedRawValue.length;
+    this.inputService.rawValue = this.inputService.storedRawValue;
+
+    if (
+      rawValueLength != rawValueSelectionEnd ||
+      Math.abs(rawValueLength - storedRawValueLength) != 1
+    ) {
+      this.setCursorPosition(event);
+      return;
     }
 
-    handleCut(event: any): void {
-        setTimeout(() => {
-            this.inputService.updateFieldValue();
-            this.setValue(this.inputService.value);
-            this.onModelChange(this.inputService.value);
-        }, 0);
+    if (rawValueLength < storedRawValueLength) {
+      this.inputService.removeNumber(8);
     }
 
-    handleInput(event: any): void {
-        let keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);
-        let rawValueLength = this.inputService.rawValue.length;
-        let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;
-        let storedRawValueLength = this.inputService.storedRawValue.length;
-        this.inputService.rawValue = this.inputService.storedRawValue;
-
-        if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {
-            this.setCursorPosition(event);
+    if (rawValueLength > storedRawValueLength) {
+      switch (keyCode) {
+        case 43:
+          this.inputService.changeToPositive();
+          break;
+        case 45:
+          this.inputService.changeToNegative();
+          break;
+        default:
+          if (!this.inputService.canInputMoreNumbers) {
             return;
-        }
+          }
 
-        if (rawValueLength < storedRawValueLength) {
-            this.inputService.removeNumber(8);
-        }
+          this.inputService.addNumber(keyCode);
+      }
+    }
 
-        if (rawValueLength > storedRawValueLength) {
-            switch (keyCode) {
-                case 43:
-                    this.inputService.changeToPositive();
-                    break;
-                case 45:
-                    this.inputService.changeToNegative();
-                    break;
-                default:
-                    if (!this.inputService.canInputMoreNumbers) {
-                        return;
-                    }
+    this.setCursorPosition(event);
+    this.onModelChange(this.inputService.value);
+  }
 
-                    this.inputService.addNumber(keyCode);
-            }
-        }
+  handleKeydown(event: any): void {
+    let keyCode = event.which || event.charCode || event.keyCode;
 
-        this.setCursorPosition(event);
+    if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
+      event.preventDefault();
+      let selectionRangeLength = Math.abs(
+        this.inputService.inputSelection.selectionEnd -
+          this.inputService.inputSelection.selectionStart
+      );
+
+      if (selectionRangeLength == 0) {
+        this.inputService.removeNumber(keyCode);
         this.onModelChange(this.inputService.value);
+      }
+
+      if (
+        selectionRangeLength >=
+        this.inputService.rawValue.length - this.inputService.prefixLength()
+      ) {
+        this.clearValue();
+      }
     }
+  }
 
-    handleKeydown(event: any): void {
-        let keyCode = event.which || event.charCode || event.keyCode;
+  clearValue() {
+    this.setValue(this.inputService.isNullable() ? null : 0);
+    this.onModelChange(this.inputService.value);
+  }
 
-        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {
-            event.preventDefault();
-            let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
+  handleKeypress(event: any): void {
+    let keyCode = event.which || event.charCode || event.keyCode;
 
-            if (selectionRangeLength == 0) {
-                this.inputService.removeNumber(keyCode);
-                this.onModelChange(this.inputService.value);
-            }
-
-            if (selectionRangeLength >= (this.inputService.rawValue.length - this.inputService.prefixLength())) {
-                this.clearValue();
-            }
-        }
+    if (keyCode === 97 && event.ctrlKey) {
+      return;
     }
 
-    clearValue() {
-        this.setValue(this.inputService.isNullable() ? null : 0);
-        this.onModelChange(this.inputService.value);
-    }
+    switch (keyCode) {
+      case undefined:
+      case 9:
+      case 13:
+      case 37:
+      case 39:
+        return;
+      case 43:
+        this.inputService.changeToPositive();
+        break;
+      case 45:
+        this.inputService.changeToNegative();
+        break;
+      default:
+        if (this.inputService.canInputMoreNumbers) {
+          let selectionRangeLength = Math.abs(
+            this.inputService.inputSelection.selectionEnd -
+              this.inputService.inputSelection.selectionStart
+          );
 
-    handleKeypress(event: any): void {
-        let keyCode = event.which || event.charCode || event.keyCode;
+          if (selectionRangeLength == this.inputService.rawValue.length) {
+            this.setValue(0);
+          }
 
-        if (keyCode === 97 && event.ctrlKey) {
-            return;
+          this.inputService.addNumber(keyCode);
         }
+    }
 
-        switch (keyCode) {
-            case undefined:
-            case 9:
-            case 13:
-            case 37:
-            case 39:
-                return;
-            case 43:
-                this.inputService.changeToPositive();
-                break;
-            case 45:
-                this.inputService.changeToNegative();
-                break;
-            default:
-                if (this.inputService.canInputMoreNumbers) {
-                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);
+    event.preventDefault();
+    this.onModelChange(this.inputService.value);
+  }
 
-                    if (selectionRangeLength == this.inputService.rawValue.length) {
-                        this.setValue(0);
-                    }
+  handlePaste(event: any): void {
+    setTimeout(() => {
+      this.inputService.updateFieldValue();
+      this.setValue(this.inputService.value);
+      this.onModelChange(this.inputService.value);
+    }, 1);
+  }
 
-                    this.inputService.addNumber(keyCode);
-                }
-        }
+  updateOptions(options: any): void {
+    this.inputService.updateOptions(options);
+  }
 
-        event.preventDefault();
-        this.onModelChange(this.inputService.value);
-    }
+  getOnModelChange(): Function {
+    return this.onModelChange;
+  }
 
-    handlePaste(event: any): void {
-        setTimeout(() => {
-            this.inputService.updateFieldValue();
-            this.setValue(this.inputService.value);
-            this.onModelChange(this.inputService.value);
-        }, 1);
-    }
+  setOnModelChange(callbackFunction: Function): void {
+    this.onModelChange = callbackFunction;
+  }
 
-    updateOptions(options: any): void {
-        this.inputService.updateOptions(options);
-    }
+  getOnModelTouched(): Function {
+    return this.onModelTouched;
+  }
 
-    getOnModelChange(): Function {
-        return this.onModelChange;
-    }
+  setOnModelTouched(callbackFunction: Function) {
+    this.onModelTouched = callbackFunction;
+  }
 
-    setOnModelChange(callbackFunction: Function): void {
-        this.onModelChange = callbackFunction;
-    }
+  setValue(value: number): void {
+    this.inputService.value = value;
+  }
 
-    getOnModelTouched(): Function {
-        return this.onModelTouched;
-    }
-
-    setOnModelTouched(callbackFunction: Function) {
-        this.onModelTouched = callbackFunction;
-    }
-
-    setValue(value: number): void {
-        this.inputService.value = value;
-    }
-
-    private setCursorPosition(event: any): void {
-        setTimeout(function () {
-            event.target.setSelectionRange(event.target.value.length, event.target.value.length);
-        }, 0);
-    }
+  private setCursorPosition(event: any): void {
+    setTimeout(function() {
+      event.target.setSelectionRange(
+        event.target.value.length,
+        event.target.value.length
+      );
+    }, 0);
+  }
 }

Index: /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.manager.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.manager.ts
+++ /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.manager.ts
@@ -1,93 +1,110 @@
 export class InputManager {
+  private _storedRawValue: string;
 
-    private _storedRawValue: string;
+  constructor(private htmlInputElement: any) {}
 
-    constructor(private htmlInputElement: any) {
+  setCursorAt(position: number): void {
+    if (this.htmlInputElement.setSelectionRange) {
+      this.htmlInputElement.focus();
+      this.htmlInputElement.setSelectionRange(position, position);
+    } else if (this.htmlInputElement.createTextRange) {
+      let textRange = this.htmlInputElement.createTextRange();
+      textRange.collapse(true);
+      textRange.moveEnd('character', position);
+      textRange.moveStart('character', position);
+      textRange.select();
     }
+  }
 
-    setCursorAt(position: number): void {
-        if (this.htmlInputElement.setSelectionRange) {
-            this.htmlInputElement.focus();
-            this.htmlInputElement.setSelectionRange(position, position);
-        } else if (this.htmlInputElement.createTextRange) {
-            let textRange = this.htmlInputElement.createTextRange();
-            textRange.collapse(true);
-            textRange.moveEnd("character", position);
-            textRange.moveStart("character", position);
-            textRange.select();
-        }
-    }
+  updateValueAndCursor(
+    newRawValue: string,
+    oldLength: number,
+    selectionStart: number
+  ): void {
+    this.rawValue = newRawValue;
+    let newLength = newRawValue.length;
+    selectionStart = selectionStart - (oldLength - newLength);
+    this.setCursorAt(selectionStart);
+  }
 
-    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {
-        this.rawValue = newRawValue;
-        let newLength = newRawValue.length;
-        selectionStart = selectionStart - (oldLength - newLength);
-        this.setCursorAt(selectionStart);
-    }
+  get canInputMoreNumbers(): boolean {
+    let haventReachedMaxLength = !(
+      this.rawValue.length >= this.htmlInputElement.maxLength &&
+      this.htmlInputElement.maxLength >= 0
+    );
+    let selectionStart = this.inputSelection.selectionStart;
+    let selectionEnd = this.inputSelection.selectionEnd;
+    let haveNumberSelected = !!(
+      selectionStart != selectionEnd &&
+      this.htmlInputElement.value
+        .substring(selectionStart, selectionEnd)
+        .match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/)
+    );
+    let startWithZero = this.htmlInputElement.value.substring(0, 1) == '0';
+    return haventReachedMaxLength || haveNumberSelected || startWithZero;
+  }
 
-    get canInputMoreNumbers(): boolean {
-        let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);
-        let selectionStart = this.inputSelection.selectionStart;
-        let selectionEnd = this.inputSelection.selectionEnd;
-        let haveNumberSelected = !!(selectionStart != selectionEnd &&
-                                    this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\u0660-\u0669\u06F0-\u06F9]/));
-        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == "0");
-        return haventReachedMaxLength || haveNumberSelected || startWithZero;
-    }
+  get inputSelection(): any {
+    let selectionStart = 0;
+    let selectionEnd = 0;
 
-    get inputSelection(): any {
-        let selectionStart = 0;
-        let selectionEnd = 0;
+    if (
+      typeof this.htmlInputElement.selectionStart == 'number' &&
+      typeof this.htmlInputElement.selectionEnd == 'number'
+    ) {
+      selectionStart = this.htmlInputElement.selectionStart;
+      selectionEnd = this.htmlInputElement.selectionEnd;
+    } else {
+      let range = (<any>document).selection.createRange();
 
-        if (typeof this.htmlInputElement.selectionStart == "number" && typeof this.htmlInputElement.selectionEnd == "number") {
-            selectionStart = this.htmlInputElement.selectionStart;
-            selectionEnd = this.htmlInputElement.selectionEnd;
+      if (range && range.parentElement() == this.htmlInputElement) {
+        let lenght = this.htmlInputElement.value.length;
+        let normalizedValue = this.htmlInputElement.value.replace(
+          /\r\n/g,
+          '\n'
+        );
+        let startRange = this.htmlInputElement.createTextRange();
+        startRange.moveToBookmark(range.getBookmark());
+        let endRange = this.htmlInputElement.createTextRange();
+        endRange.collapse(false);
+
+        if (startRange.compareEndPoints('StartToEnd', endRange) > -1) {
+          selectionStart = selectionEnd = lenght;
         } else {
-            let range = (<any>document).selection.createRange();
+          selectionStart = -startRange.moveStart('character', -lenght);
+          selectionStart +=
+            normalizedValue.slice(0, selectionStart).split('\n').length - 1;
 
-            if (range && range.parentElement() == this.htmlInputElement) {
-                let lenght = this.htmlInputElement.value.length;
-                let normalizedValue = this.htmlInputElement.value.replace(/\r\n/g, "\n");
-                let startRange = this.htmlInputElement.createTextRange();
-                startRange.moveToBookmark(range.getBookmark());
-                let endRange = this.htmlInputElement.createTextRange();
-                endRange.collapse(false);
-
-                if (startRange.compareEndPoints("StartToEnd", endRange) > -1) {
-                    selectionStart = selectionEnd = lenght;
-                } else {
-                    selectionStart = -startRange.moveStart("character", -lenght);
-                    selectionStart += normalizedValue.slice(0, selectionStart).split("\n").length - 1;
-
-                    if (startRange.compareEndPoints("EndToEnd", endRange) > -1) {
-                        selectionEnd = lenght;
-                    } else {
-                        selectionEnd = -startRange.moveEnd("character", -lenght);
-                        selectionEnd += normalizedValue.slice(0, selectionEnd).split("\n").length - 1;
-                    }
-                }
-            }
+          if (startRange.compareEndPoints('EndToEnd', endRange) > -1) {
+            selectionEnd = lenght;
+          } else {
+            selectionEnd = -startRange.moveEnd('character', -lenght);
+            selectionEnd +=
+              normalizedValue.slice(0, selectionEnd).split('\n').length - 1;
+          }
         }
-
-        return {
-            selectionStart: selectionStart,
-            selectionEnd: selectionEnd
-        };
+      }
     }
 
-    get rawValue(): string {
-        return this.htmlInputElement && this.htmlInputElement.value;
-    }
+    return {
+      selectionStart: selectionStart,
+      selectionEnd: selectionEnd,
+    };
+  }
 
-    set rawValue(value: string) {
-        this._storedRawValue = value;
+  get rawValue(): string {
+    return this.htmlInputElement && this.htmlInputElement.value;
+  }
 
-        if (this.htmlInputElement) {
-            this.htmlInputElement.value = value;
-        }
+  set rawValue(value: string) {
+    this._storedRawValue = value;
+
+    if (this.htmlInputElement) {
+      this.htmlInputElement.value = value;
     }
+  }
 
-    get storedRawValue(): string {
-        return this._storedRawValue;
-    }
+  get storedRawValue(): string {
+    return this._storedRawValue;
+  }
 }

Index: /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.service.ts
+++ /home/idnes/Projects/awe/src/lib/currency-mask/lib/input.service.ts
@@ -1,199 +1,229 @@
-import {InputManager} from "./input.manager";
-import {CurrencyMaskConfig} from "./currency-mask.config";
+import { InputManager } from './input.manager';
+import { CurrencyMaskConfig } from './currency-mask.config';
 
-
 export class InputService {
-    PER_AR_NUMBER: Map<string, string> = new Map<string, string>();
+  PER_AR_NUMBER: Map<string, string> = new Map<string, string>();
 
-    initialize() {
-        this.PER_AR_NUMBER.set("\u06F0", "0");
-        this.PER_AR_NUMBER.set("\u06F1", "1");
-        this.PER_AR_NUMBER.set("\u06F2", "2");
-        this.PER_AR_NUMBER.set("\u06F3", "3");
-        this.PER_AR_NUMBER.set("\u06F4", "4");
-        this.PER_AR_NUMBER.set("\u06F5", "5");
-        this.PER_AR_NUMBER.set("\u06F6", "6");
-        this.PER_AR_NUMBER.set("\u06F7", "7");
-        this.PER_AR_NUMBER.set("\u06F8", "8");
-        this.PER_AR_NUMBER.set("\u06F9", "9");
+  initialize() {
+    this.PER_AR_NUMBER.set('\u06F0', '0');
+    this.PER_AR_NUMBER.set('\u06F1', '1');
+    this.PER_AR_NUMBER.set('\u06F2', '2');
+    this.PER_AR_NUMBER.set('\u06F3', '3');
+    this.PER_AR_NUMBER.set('\u06F4', '4');
+    this.PER_AR_NUMBER.set('\u06F5', '5');
+    this.PER_AR_NUMBER.set('\u06F6', '6');
+    this.PER_AR_NUMBER.set('\u06F7', '7');
+    this.PER_AR_NUMBER.set('\u06F8', '8');
+    this.PER_AR_NUMBER.set('\u06F9', '9');
 
-        this.PER_AR_NUMBER.set("\u0660", "0");
-        this.PER_AR_NUMBER.set("\u0661", "1");
-        this.PER_AR_NUMBER.set("\u0662", "2");
-        this.PER_AR_NUMBER.set("\u0663", "3");
-        this.PER_AR_NUMBER.set("\u0664", "4");
-        this.PER_AR_NUMBER.set("\u0665", "5");
-        this.PER_AR_NUMBER.set("\u0666", "6");
-        this.PER_AR_NUMBER.set("\u0667", "7");
-        this.PER_AR_NUMBER.set("\u0668", "8");
-        this.PER_AR_NUMBER.set("\u0669", "9");
-    }
+    this.PER_AR_NUMBER.set('\u0660', '0');
+    this.PER_AR_NUMBER.set('\u0661', '1');
+    this.PER_AR_NUMBER.set('\u0662', '2');
+    this.PER_AR_NUMBER.set('\u0663', '3');
+    this.PER_AR_NUMBER.set('\u0664', '4');
+    this.PER_AR_NUMBER.set('\u0665', '5');
+    this.PER_AR_NUMBER.set('\u0666', '6');
+    this.PER_AR_NUMBER.set('\u0667', '7');
+    this.PER_AR_NUMBER.set('\u0668', '8');
+    this.PER_AR_NUMBER.set('\u0669', '9');
+  }
 
-    inputManager: InputManager;
+  inputManager: InputManager;
 
-    constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {
-        this.inputManager = new InputManager(htmlInputElement);
-        this.initialize()
+  constructor(
+    private htmlInputElement: any,
+    private options: CurrencyMaskConfig
+  ) {
+    this.inputManager = new InputManager(htmlInputElement);
+    this.initialize();
+  }
+
+  addNumber(keyCode: number): void {
+    if (!this.rawValue) {
+      this.rawValue = this.applyMask(false, '0');
     }
 
-    addNumber(keyCode: number): void {
-        if (!this.rawValue) {
-            this.rawValue = this.applyMask(false, "0");
-        }
+    let keyChar = String.fromCharCode(keyCode);
+    let selectionStart = this.inputSelection.selectionStart;
+    let selectionEnd = this.inputSelection.selectionEnd;
+    this.rawValue =
+      this.rawValue.substring(0, selectionStart) +
+      keyChar +
+      this.rawValue.substring(selectionEnd, this.rawValue.length);
+    this.updateFieldValue(selectionStart + 1);
+  }
 
-        let keyChar = String.fromCharCode(keyCode);
-        let selectionStart = this.inputSelection.selectionStart;
-        let selectionEnd = this.inputSelection.selectionEnd;
-        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);
-        this.updateFieldValue(selectionStart + 1);
+  applyMask(isNumber: boolean, rawValue: string): string {
+    let {
+      allowNegative,
+      decimal,
+      precision,
+      prefix,
+      suffix,
+      thousands,
+      nullable,
+    } = this.options;
+    rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
+    let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, '');
+
+    if (!onlyNumbers) {
+      return '';
     }
 
-    applyMask(isNumber: boolean, rawValue: string): string {
-        let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;
-        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;
-        let onlyNumbers = rawValue.replace(/[^0-9\u0660-\u0669\u06F0-\u06F9]/g, "");
+    let integerPart = onlyNumbers
+      .slice(0, onlyNumbers.length - precision)
+      .replace(/^\u0660*/g, '')
+      .replace(/^\u06F0*/g, '')
+      .replace(/^0*/g, '')
+      .replace(
+        /\B(?=([0-9\u0660-\u0669\u06F0-\u06F9]{3})+(?![0-9\u0660-\u0669\u06F0-\u06F9]))/g,
+        thousands
+      );
 
-        if (!onlyNumbers) {
-            return "";
-        }
+    if (integerPart.startsWith(thousands)) {
+      integerPart = integerPart.substring(1);
+    }
 
-        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)
-          .replace(/^\u0660*/g, "")
-          .replace(/^\u06F0*/g, "")
-          .replace(/^0*/g, "")
-          .replace(/\B(?=([0-9\u0660-\u0669\u06F0-\u06F9]{3})+(?![0-9\u0660-\u0669\u06F0-\u06F9]))/g, thousands);
+    if (integerPart == '') {
+      integerPart = '0';
+    }
 
-        if (integerPart.startsWith(thousands)) {
-            integerPart = integerPart.substring(1);
-        }
+    let newRawValue = integerPart;
+    let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);
 
+    if (precision > 0) {
+      newRawValue += decimal + decimalPart;
+    }
 
-        if (integerPart == "") {
-            integerPart = "0";
-        }
+    let isZero =
+      parseInt(integerPart) == 0 &&
+      (parseInt(decimalPart) == 0 || decimalPart == '');
+    let operator =
+      rawValue.indexOf('-') > -1 && allowNegative && !isZero ? '-' : '';
+    return operator + prefix + newRawValue + suffix;
+  }
 
-        let newRawValue = integerPart;
-        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);
+  clearMask(rawValue: string): number {
+    if (this.isNullable() && rawValue === '') return null;
 
-        if (precision > 0) {
-            newRawValue += decimal + decimalPart;
-        }
+    let value = (rawValue || '0')
+      .replace(this.options.prefix, '')
+      .replace(this.options.suffix, '');
 
-        let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == "");
-        let operator = (rawValue.indexOf("-") > -1 && allowNegative && !isZero) ? "-" : "";
-        return operator + prefix + newRawValue + suffix;
+    if (this.options.thousands) {
+      value = value.replace(new RegExp('\\' + this.options.thousands, 'g'), '');
     }
 
-    clearMask(rawValue: string): number {
-        if (this.isNullable() && rawValue === "")
-            return null;
+    if (this.options.decimal) {
+      value = value.replace(this.options.decimal, '.');
+    }
 
-        let value = (rawValue || "0").replace(this.options.prefix, "").replace(this.options.suffix, "");
+    this.PER_AR_NUMBER.forEach((val: string, key: string) => {
+      const re = new RegExp(key, 'g');
+      value = value.replace(re, val);
+    });
+    return parseFloat(value);
+  }
 
-        if (this.options.thousands) {
-            value = value.replace(new RegExp("\\" + this.options.thousands, "g"), "");
-        }
+  changeToNegative(): void {
+    if (
+      this.options.allowNegative &&
+      this.rawValue != '' &&
+      this.rawValue.charAt(0) != '-' &&
+      this.value != 0
+    ) {
+      this.rawValue = '-' + this.rawValue;
+    }
+  }
 
-        if (this.options.decimal) {
-            value = value.replace(this.options.decimal, ".");
-        }
+  changeToPositive(): void {
+    this.rawValue = this.rawValue.replace('-', '');
+  }
 
-        this.PER_AR_NUMBER.forEach((val: string, key: string) => {
-            const re = new RegExp(key, "g");
-            value = value.replace(re, val);
-        });
-        return parseFloat(value);
+  removeNumber(keyCode: number): void {
+    if (this.isNullable() && this.value == 0) {
+      this.rawValue = null;
+      return;
     }
 
-    changeToNegative(): void {
-        if (this.options.allowNegative && this.rawValue != "" && this.rawValue.charAt(0) != "-" && this.value != 0) {
-            this.rawValue = "-" + this.rawValue;
-        }
-    }
+    let selectionEnd = this.inputSelection.selectionEnd;
+    let selectionStart = this.inputSelection.selectionStart;
 
-    changeToPositive(): void {
-        this.rawValue = this.rawValue.replace("-", "");
+    if (selectionStart > this.rawValue.length - this.options.suffix.length) {
+      selectionEnd = this.rawValue.length - this.options.suffix.length;
+      selectionStart = this.rawValue.length - this.options.suffix.length;
     }
 
-    removeNumber(keyCode: number): void {
-        if (this.isNullable() && this.value == 0) {
-            this.rawValue = null;
-            return;
-        }
-
-        let selectionEnd = this.inputSelection.selectionEnd;
-        let selectionStart = this.inputSelection.selectionStart;
-
-        if (selectionStart > this.rawValue.length - this.options.suffix.length) {
-            selectionEnd = this.rawValue.length - this.options.suffix.length;
-            selectionStart = this.rawValue.length - this.options.suffix.length;
-        }
-
     let move = this.rawValue.substr(selectionStart - 1, 1).match(/\d/) ? 0 : -1;
-    if ((
-          keyCode == 8 &&
-          selectionStart - 1 === 0 &&
-          !(this.rawValue.substr(selectionStart, 1).match(/\d/))
-        ) ||
-        (
-          (keyCode == 46 || keyCode == 63272) &&
-          selectionStart === 0 &&
-          !(this.rawValue.substr(selectionStart + 1, 1).match(/\d/))
-        )
+    if (
+      (keyCode == 8 &&
+        selectionStart - 1 === 0 &&
+        !this.rawValue.substr(selectionStart, 1).match(/\d/)) ||
+      ((keyCode == 46 || keyCode == 63272) &&
+        selectionStart === 0 &&
+        !this.rawValue.substr(selectionStart + 1, 1).match(/\d/))
     ) {
       move = 1;
-    };
-    selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
+    }
+    selectionEnd =
+      keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;
     selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;
-    this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);
+    this.rawValue =
+      this.rawValue.substring(0, selectionStart) +
+      this.rawValue.substring(selectionEnd, this.rawValue.length);
     this.updateFieldValue(selectionStart + move);
   }
 
-    updateFieldValue(selectionStart?: number): void {
-        let newRawValue = this.applyMask(false, this.rawValue || "");
-        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;
-        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);
-    }
+  updateFieldValue(selectionStart?: number): void {
+    let newRawValue = this.applyMask(false, this.rawValue || '');
+    selectionStart =
+      selectionStart == undefined ? this.rawValue.length : selectionStart;
+    this.inputManager.updateValueAndCursor(
+      newRawValue,
+      this.rawValue.length,
+      selectionStart
+    );
+  }
 
-    updateOptions(options: any): void {
-        let value: number = this.value;
-        this.options = options;
-        this.value = value;
-    }
+  updateOptions(options: any): void {
+    let value: number = this.value;
+    this.options = options;
+    this.value = value;
+  }
 
-    prefixLength(): any {
-        return this.options.prefix.length;
-    }
+  prefixLength(): any {
+    return this.options.prefix.length;
+  }
 
-    isNullable() {
-        return this.options.nullable;
-    }
+  isNullable() {
+    return this.options.nullable;
+  }
 
-    get canInputMoreNumbers(): boolean {
-        return this.inputManager.canInputMoreNumbers;
-    }
+  get canInputMoreNumbers(): boolean {
+    return this.inputManager.canInputMoreNumbers;
+  }
 
-    get inputSelection(): any {
-        return this.inputManager.inputSelection;
-    }
+  get inputSelection(): any {
+    return this.inputManager.inputSelection;
+  }
 
-    get rawValue(): string {
-        return this.inputManager.rawValue;
-    }
+  get rawValue(): string {
+    return this.inputManager.rawValue;
+  }
 
-    set rawValue(value: string) {
-        this.inputManager.rawValue = value;
-    }
+  set rawValue(value: string) {
+    this.inputManager.rawValue = value;
+  }
 
-    get storedRawValue(): string {
-        return this.inputManager.storedRawValue;
-    }
+  get storedRawValue(): string {
+    return this.inputManager.storedRawValue;
+  }
 
-    get value(): number {
-        return this.clearMask(this.rawValue);
-    }
+  get value(): number {
+    return this.clearMask(this.rawValue);
+  }
 
-    set value(value: number) {
-        this.rawValue = this.applyMask(true, "" + value);
-    }
+  set value(value: number) {
+    this.rawValue = this.applyMask(true, '' + value);
+  }
 }

Index: /home/idnes/Projects/awe/src/lib/digit-only/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/digit-only/index.ts
+++ /home/idnes/Projects/awe/src/lib/digit-only/index.ts
@@ -1,2 +1,1 @@
 export { DigitOnlyModule } from './lib/digit-only.module';
-

Index: /home/idnes/Projects/awe/src/lib/digit-only/lib/digit-only.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/digit-only/lib/digit-only.directive.ts
+++ /home/idnes/Projects/awe/src/lib/digit-only/lib/digit-only.directive.ts
@@ -1,8 +1,8 @@
 import { Directive, ElementRef, HostListener } from '@angular/core';
 
 @Directive({
-  selector: '[digitOnly]'
+  selector: '[digitOnly]',
 })
 export class DigitOnlyDirective {
   private navigationKeys = [
     'Backspace',
@@ -15,9 +15,9 @@
     'ArrowLeft',
     'ArrowRight',
     'Clear',
     'Copy',
-    'Paste'
+    'Paste',
   ];
   inputElement: HTMLElement;
   constructor(public el: ElementRef) {
     this.inputElement = el.nativeElement;
@@ -41,9 +41,10 @@
     }
     // Ensure that it is a number and stop the keypress
     if (
       // tslint:disable-next-line: deprecation
-      (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)
+      (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&
+      (e.keyCode < 96 || e.keyCode > 105)
     ) {
       e.preventDefault();
     }
   }

Index: /home/idnes/Projects/awe/src/lib/digit-only/lib/digit-only.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/digit-only/lib/digit-only.module.ts
+++ /home/idnes/Projects/awe/src/lib/digit-only/lib/digit-only.module.ts
@@ -3,7 +3,7 @@
 
 @NgModule({
   imports: [],
   declarations: [DigitOnlyDirective],
-  exports: [DigitOnlyDirective]
+  exports: [DigitOnlyDirective],
 })
 export class DigitOnlyModule {}

Index: /home/idnes/Projects/awe/src/lib/input-mask/lib/config.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/input-mask/lib/config.ts
+++ /home/idnes/Projects/awe/src/lib/input-mask/lib/config.ts
@@ -1,64 +1,83 @@
 import { InjectionToken } from '@angular/core';
 
 export interface IConfig {
-    sufix: string;
-    prefix: string;
-    clearIfNotMatch: boolean;
-    showTemplate: boolean;
-    showMaskTyped: boolean;
-    shownMaskExpression: string;
-    dropSpecialCharacters: boolean | string[];
-    specialCharacters: string[];
-    patterns: {
-        [character: string]: {
-            pattern: RegExp,
-            optional?: boolean
-        }
+  sufix: string;
+  prefix: string;
+  clearIfNotMatch: boolean;
+  showTemplate: boolean;
+  showMaskTyped: boolean;
+  shownMaskExpression: string;
+  dropSpecialCharacters: boolean | string[];
+  specialCharacters: string[];
+  patterns: {
+    [character: string]: {
+      pattern: RegExp;
+      optional?: boolean;
     };
+  };
 }
 
 export type optionsConfig = Partial<IConfig>;
 export const config: InjectionToken<string> = new InjectionToken('config');
-export const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');
-export const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');
+export const NEW_CONFIG: InjectionToken<string> = new InjectionToken(
+  'NEW_CONFIG'
+);
+export const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken(
+  'INITIAL_CONFIG'
+);
 
 export const initialConfig: IConfig = {
-    sufix: '',
-    prefix: '',
-    clearIfNotMatch: false,
-    showTemplate: false,
-    showMaskTyped: false,
-    dropSpecialCharacters: true,
-    shownMaskExpression: '',
-    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', '\''],
-    patterns: {
-        '0': {
-            pattern: new RegExp('\\d'),
-        },
-        '9': {
-            pattern: new RegExp('\\d'),
-            optional: true
-        },
-        'A': {
-            pattern: new RegExp('\[a-zA-Z0-9\]')
-        },
-        'S': {
-            pattern: new RegExp('\[a-zA-Z\]')
-        },
-        'd': {
-            pattern: new RegExp('\\d'),
-        },
-        'm': {
-            pattern: new RegExp('\\d'),
-        },
-        'H': {
-            pattern: new RegExp('\\d'),
-        },
-        'h': {
-            pattern: new RegExp('\\d'),
-        },
-        's': {
-            pattern: new RegExp('\\d'),
-        }
-    }
+  sufix: '',
+  prefix: '',
+  clearIfNotMatch: false,
+  showTemplate: false,
+  showMaskTyped: false,
+  dropSpecialCharacters: true,
+  shownMaskExpression: '',
+  specialCharacters: [
+    '-',
+    '/',
+    '(',
+    ')',
+    '.',
+    ':',
+    ' ',
+    '+',
+    ',',
+    '@',
+    '[',
+    ']',
+    '"',
+    "'",
+  ],
+  patterns: {
+    '0': {
+      pattern: new RegExp('\\d'),
+    },
+    '9': {
+      pattern: new RegExp('\\d'),
+      optional: true,
+    },
+    A: {
+      pattern: new RegExp('[a-zA-Z0-9]'),
+    },
+    S: {
+      pattern: new RegExp('[a-zA-Z]'),
+    },
+    d: {
+      pattern: new RegExp('\\d'),
+    },
+    m: {
+      pattern: new RegExp('\\d'),
+    },
+    H: {
+      pattern: new RegExp('\\d'),
+    },
+    h: {
+      pattern: new RegExp('\\d'),
+    },
+    s: {
+      pattern: new RegExp('\\d'),
+    },
+  },
 };

Index: /home/idnes/Projects/awe/src/lib/input-mask/lib/mask-applier.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/input-mask/lib/mask-applier.service.ts
+++ /home/idnes/Projects/awe/src/lib/input-mask/lib/mask-applier.service.ts
@@ -2,9 +2,8 @@
 import { config, IConfig } from './config';
 
 @Injectable()
 export class MaskApplierService {
-
   public dropSpecialCharacters: IConfig['dropSpecialCharacters'];
   public showTemplate: IConfig['showTemplate'];
   public clearIfNotMatch: IConfig['clearIfNotMatch'];
   public maskExpression: string = '';
@@ -16,11 +15,9 @@
   public customPattern: IConfig['patterns'];
 
   private _shift: Set<number>;
 
-  public constructor(
-    @Inject(config) protected _config: IConfig
-  ) {
+  public constructor(@Inject(config) protected _config: IConfig) {
     this._shift = new Set();
     this.maskSpecialCharacters = this._config!.specialCharacters;
     this.maskAvailablePatterns = this._config.patterns;
     this.clearIfNotMatch = this._config.clearIfNotMatch;
@@ -28,24 +25,29 @@
     this.maskSpecialCharacters = this._config!.specialCharacters;
     this.maskAvailablePatterns = this._config.patterns;
     this.prefix = this._config.prefix;
     this.sufix = this._config.sufix;
-
-
   }
   // tslint:disable-next-line:no-any
-  public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {
+  public applyMaskWithPattern(
+    inputValue: string,
+    maskAndPattern: [string, IConfig['patterns']]
+  ): string {
     const [mask, customPattern] = maskAndPattern;
     this.customPattern = customPattern;
     return this.applyMask(inputValue, mask);
   }
   public applyMask(
     inputValue: string,
     maskExpression: string,
     position: number = 0,
-    cb: Function = () => { }
+    cb: Function = () => {}
   ): string {
-    if (inputValue === undefined || inputValue === null || maskExpression === undefined) {
+    if (
+      inputValue === undefined ||
+      inputValue === null ||
+      maskExpression === undefined
+    ) {
       return '';
     }
     let cursor: number = 0;
     let result: string = ``;
@@ -55,45 +57,69 @@
     if (inputValue.slice(0, this.prefix.length) === this.prefix) {
       inputValue = inputValue.slice(this.prefix.length, inputValue.length);
     }
 
-    const inputArray: string[] = inputValue.toString()
-      .split('');
+    const inputArray: string[] = inputValue.toString().split('');
     if (maskExpression === 'percent') {
-      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\[\]:";'<>?,\/]/)) {
+      if (
+        inputValue.match('[a-z]|[A-Z]') ||
+        inputValue.match(/[-!$%^&*()_+|~=`{}\[\]:";'<>?,\/]/)
+      ) {
         inputValue = inputValue.substring(0, inputValue.length - 1);
       }
       if (this.percentage(inputValue)) {
         result = inputValue;
       } else {
         result = inputValue.substring(0, inputValue.length - 1);
       }
-    } else if (maskExpression === 'separator'
-      || maskExpression === 'dot_separator' || maskExpression.startsWith('dot_separator')
-      || maskExpression === 'coma_separator' || maskExpression.startsWith('coma_separator')) {
-      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\[\]:";<>?\/]/)) {
+    } else if (
+      maskExpression === 'separator' ||
+      maskExpression === 'dot_separator' ||
+      maskExpression.startsWith('dot_separator') ||
+      maskExpression === 'coma_separator' ||
+      maskExpression.startsWith('coma_separator')
+    ) {
+      if (
+        inputValue.match('[a-z]|[A-Z]') ||
+        inputValue.match(/[@#!$%^&*()_+|~=`{}\[\]:";<>?\/]/)
+      ) {
         inputValue = inputValue.substring(0, inputValue.length - 1);
       }
       const precision: number = this.getPrecision(maskExpression);
       let strForSep: string;
       if (maskExpression === 'separator') {
-        if (inputValue.includes(',')
-          && inputValue.endsWith(',') && inputValue.indexOf(',') !== inputValue.lastIndexOf(',')) {
+        if (
+          inputValue.includes(',') &&
+          inputValue.endsWith(',') &&
+          inputValue.indexOf(',') !== inputValue.lastIndexOf(',')
+        ) {
           inputValue = inputValue.substring(0, inputValue.length - 1);
         }
-        if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\[\]:.";<>?\/]/)) {
+        if (
+          inputValue.match('[a-z]|[A-Z]') ||
+          inputValue.match(/[@#!$%^&*()_+|~=`{}\[\]:.";<>?\/]/)
+        ) {
           inputValue = inputValue.substring(0, inputValue.length - 1);
         }
         strForSep = inputValue.replace(/\s/g, '');
         result = this.separator(strForSep, ' ', '.', precision);
-      } else if (maskExpression === 'dot_separator' || maskExpression.startsWith('dot_separator')) {
-        if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\[\]:\s";<>?\/]/)) {
+      } else if (
+        maskExpression === 'dot_separator' ||
+        maskExpression.startsWith('dot_separator')
+      ) {
+        if (
+          inputValue.match('[a-z]|[A-Z]') ||
+          inputValue.match(/[@#!$%^&*()_+|~=`{}\[\]:\s";<>?\/]/)
+        ) {
           inputValue = inputValue.substring(0, inputValue.length - 1);
         }
         inputValue = this.checkInputPrecision(inputValue, precision, ',');
         strForSep = inputValue.replace(/\./g, '');
         result = this.separator(strForSep, '.', ',', precision);
-      } else if (maskExpression === 'coma_separator' || maskExpression.startsWith('coma_separator')) {
+      } else if (
+        maskExpression === 'coma_separator' ||
+        maskExpression.startsWith('coma_separator')
+      ) {
         inputValue = this.checkInputPrecision(inputValue, precision, '.');
         strForSep = inputValue.replace(/\,/g, '');
         result = this.separator(strForSep, ',', '.', precision);
       }
@@ -104,32 +130,40 @@
         : cursor;
       this._shift.add(shiftStep + this.prefix.length || 0);
     } else {
       // tslint:disable-next-line
-      for (let i: number = 0, inputSymbol: string = inputArray[0]; i
-        < inputArray.length; i++ , inputSymbol = inputArray[i]) {
+      for (
+        let i: number = 0, inputSymbol: string = inputArray[0];
+        i < inputArray.length;
+        i++, inputSymbol = inputArray[i]
+      ) {
         if (cursor === maskExpression.length) {
           break;
         }
-        if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {
+        if (
+          this._checkSymbolMask(inputSymbol, maskExpression[cursor]) &&
+          maskExpression[cursor + 1] === '?'
+        ) {
           result += inputSymbol;
           cursor += 2;
         } else if (
-          maskExpression[cursor + 1] === '*' && multi
-          && this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])
+          maskExpression[cursor + 1] === '*' &&
+          multi &&
+          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])
         ) {
           result += inputSymbol;
           cursor += 3;
           multi = false;
-        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])
-          && maskExpression[cursor + 1]
-          === '*') {
+        } else if (
+          this._checkSymbolMask(inputSymbol, maskExpression[cursor]) &&
+          maskExpression[cursor + 1] === '*'
+        ) {
           result += inputSymbol;
           multi = true;
-        } else if (maskExpression[cursor + 1] === '?' && this._checkSymbolMask(
-          inputSymbol,
-          maskExpression[cursor + 2]
-        )) {
+        } else if (
+          maskExpression[cursor + 1] === '?' &&
+          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])
+        ) {
           result += inputSymbol;
           cursor += 3;
         } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {
           if (maskExpression[cursor] === 'H') {
@@ -142,9 +176,10 @@
               this._shift.add(shiftStep + this.prefix.length || 0);
               i--;
               continue;
             }
-          } if (maskExpression[cursor] === 'h') {
+          }
+          if (maskExpression[cursor] === 'h') {
             if (result === '2' && Number(inputSymbol) > 3) {
               continue;
             }
           }
@@ -207,35 +242,46 @@
             }
           }
           result += inputSymbol;
           cursor++;
-        } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {
+        } else if (
+          this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1
+        ) {
           result += maskExpression[cursor];
           cursor++;
           shiftStep = /\*|\?/g.test(maskExpression.slice(0, cursor))
             ? inputArray.length
             : cursor;
           this._shift.add(shiftStep + this.prefix.length || 0);
           i--;
-        } else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1
-          && this.maskAvailablePatterns[maskExpression[cursor]]
-          && this.maskAvailablePatterns[maskExpression[cursor]].optional) {
+        } else if (
+          this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&
+          this.maskAvailablePatterns[maskExpression[cursor]] &&
+          this.maskAvailablePatterns[maskExpression[cursor]].optional
+        ) {
           cursor++;
           i--;
-        } else if ((this.maskExpression[cursor + 1] === '*')
-          && (this._findSpecialChar(this.maskExpression[cursor + 2]))
-          && (this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2]) && multi) {
+        } else if (
+          this.maskExpression[cursor + 1] === '*' &&
+          this._findSpecialChar(this.maskExpression[cursor + 2]) &&
+          this._findSpecialChar(inputSymbol) ===
+            this.maskExpression[cursor + 2] &&
+          multi
+        ) {
           cursor += 3;
           result += inputSymbol;
         }
       }
     }
-    if (result.length + 1 === maskExpression.length
-      && this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {
+    if (
+      result.length + 1 === maskExpression.length &&
+      this.maskSpecialCharacters.indexOf(
+        maskExpression[maskExpression.length - 1]
+      ) !== -1
+    ) {
       result += maskExpression[maskExpression.length - 1];
     }
 
-
     let shift: number = 1;
     let newPosition: number = position + 1;
 
     while (this._shift.has(newPosition)) {
@@ -244,30 +290,40 @@
     }
 
     cb(this._shift.has(position) ? shift : 0);
     let res: string = `${this.prefix}${result}`;
-    res = this.sufix ? `${this.prefix}${result}${this.sufix}` : `${this.prefix}${result}`;
+    res = this.sufix
+      ? `${this.prefix}${result}${this.sufix}`
+      : `${this.prefix}${result}`;
     if (result.length === 0) {
       res = `${this.prefix}${result}`;
     }
     return res;
   }
   public _findSpecialChar(inputSymbol: string): undefined | string {
-    const symbol: string | undefined = this.maskSpecialCharacters
-      .find((val: string) => val === inputSymbol);
+    const symbol: string | undefined = this.maskSpecialCharacters.find(
+      (val: string) => val === inputSymbol
+    );
     return symbol;
   }
 
   private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {
     this.maskAvailablePatterns = this.customPattern
       ? this.customPattern
       : this.maskAvailablePatterns;
-    return this.maskAvailablePatterns[maskSymbol]
-      && this.maskAvailablePatterns[maskSymbol].pattern
-      && this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol);
+    return (
+      this.maskAvailablePatterns[maskSymbol] &&
+      this.maskAvailablePatterns[maskSymbol].pattern &&
+      this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol)
+    );
   }
 
-  private separator = (str: string, char: string, decimalChar: string, precision: number) => {
+  private separator = (
+    str: string,
+    char: string,
+    decimalChar: string,
+    precision: number
+  ) => {
     str += '';
     const x: string[] = str.split(decimalChar);
     const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';
     let res: string = x[0];
@@ -280,23 +336,27 @@
     } else if (precision === 0) {
       return res;
     }
     return res + decimals.substr(0, precision + 1);
-  }
+  };
 
   private percentage = (str: string): boolean => {
     return Number(str) >= 0 && Number(str) <= 100;
-  }
+  };
 
   private getPrecision = (maskExpression: string): number => {
     const x: string[] = maskExpression.split('.');
     if (x.length > 1) {
       return Number(x[x.length - 1]);
     }
     return Infinity;
-  }
+  };
 
-  private checkInputPrecision = (inputValue: string, precision: number, decimalMarker: string): string => {
+  private checkInputPrecision = (
+    inputValue: string,
+    precision: number,
+    decimalMarker: string
+  ): string => {
     if (precision < Infinity) {
       let precisionRegEx: RegExp;
 
       if (decimalMarker === '.') {
@@ -304,14 +364,16 @@
       } else {
         precisionRegEx = new RegExp(`,\\d{${precision}}.*$`);
       }
 
-      const precisionMatch: RegExpMatchArray | null = inputValue.match(precisionRegEx);
+      const precisionMatch: RegExpMatchArray | null = inputValue.match(
+        precisionRegEx
+      );
       if (precisionMatch && precisionMatch[0].length - 1 > precision) {
         inputValue = inputValue.substring(0, inputValue.length - 1);
       } else if (precision === 0 && inputValue.endsWith(decimalMarker)) {
         inputValue = inputValue.substring(0, inputValue.length - 1);
       }
     }
     return inputValue;
-  }
+  };
 }

Index: /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.directive.ts
+++ /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.directive.ts
@@ -2,9 +2,9 @@
   Directive,
   forwardRef,
   HostListener,
   Inject,
-  Input
+  Input,
 } from '@angular/core';
 import { DOCUMENT } from '@angular/common';
 import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';
 import { MaskService } from './mask.service';
@@ -15,12 +15,12 @@
   providers: [
     {
       provide: NG_VALUE_ACCESSOR,
       useExisting: forwardRef(() => MaskDirective),
-      multi: true
+      multi: true,
     },
-    MaskService
-  ]
+    MaskService,
+  ],
 })
 export class MaskDirective implements ControlValueAccessor {
   private _maskValue: string;
   private _inputValue: string;
@@ -28,30 +28,31 @@
   // tslint:disable-next-line
   private _start: number;
   private _end: number;
   // tslint:disable-next-line
-  public onChange = (_: any) => { };
-  public onTouch = () => { };
+  public onChange = (_: any) => {};
+  public onTouch = () => {};
   public constructor(
     // tslint:disable-next-line
     @Inject(DOCUMENT) private document: any,
     private _maskService: MaskService
-  ) { }
+  ) {}
 
-
   @Input('mask')
   public set maskExpression(value: string) {
     this._maskValue = value || '';
     if (!this._maskValue) {
       return;
     }
-    this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue);
+    this._maskService.maskExpression = this._repeatPatternSymbols(
+      this._maskValue
+    );
     this._maskService.formElementProperty = [
       'value',
       this._maskService.applyMask(
         this._inputValue,
         this._maskService.maskExpression
-      )
+      ),
     ];
   }
 
   @Input()
@@ -128,11 +129,12 @@
     if (!this._maskValue) {
       this.onChange(el.value);
       return;
     }
-    const position: number = (el.selectionStart as number) === 1
-      ? (el.selectionStart as number) + this._maskService.prefix.length
-      : el.selectionStart as number;
+    const position: number =
+      (el.selectionStart as number) === 1
+        ? (el.selectionStart as number) + this._maskService.prefix.length
+        : (el.selectionStart as number);
     let caretShift = 0;
     this._maskService.applyValueChanges(
       position,
       (shift: number) => (caretShift = shift)
@@ -144,10 +146,10 @@
     el.selectionStart = el.selectionEnd =
       this._position !== null
         ? this._position
         : position +
-        // tslint:disable-next-line
-        ((e as any).inputType === 'deleteContentBackward' ? 0 : caretShift);
+          // tslint:disable-next-line
+          ((e as any).inputType === 'deleteContentBackward' ? 0 : caretShift);
     this._position = null;
   }
 
   @HostListener('blur')
@@ -159,9 +161,10 @@
   @HostListener('click', ['$event'])
   public onFocus(e: MouseEvent | KeyboardEvent): void {
     const el: HTMLInputElement = e.target as HTMLInputElement;
     if (
-      el !== null && el.selectionStart !== null &&
+      el !== null &&
+      el.selectionStart !== null &&
       el.selectionStart === el.selectionEnd &&
       el.selectionStart > this._maskService.prefix.length &&
       // tslint:disable-next-line
       (e as any).keyCode !== 38
@@ -170,13 +173,17 @@
     }
     if (this._maskService.showMaskTyped) {
       this._maskService.maskIsShown = this._maskService.showMaskInInput();
     }
-    el.value = !el.value || el.value === this._maskService.prefix
-      ? this._maskService.prefix + this._maskService.maskIsShown
-      : el.value;
+    el.value =
+      !el.value || el.value === this._maskService.prefix
+        ? this._maskService.prefix + this._maskService.maskIsShown
+        : el.value;
     /** fix of cursor position with prefix when mouse click occur */
-    if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {
+    if (
+      ((el.selectionStart as number) || (el.selectionEnd as number)) <=
+      this._maskService.prefix.length
+    ) {
       el.selectionStart = this._maskService.prefix.length;
       return;
     }
   }
@@ -187,18 +194,24 @@
     if (e.keyCode === 38) {
       e.preventDefault();
     }
     if (e.keyCode === 37 || e.keyCode === 8) {
-      if ((el.selectionStart as number) <= this._maskService.prefix.length
-        && (el.selectionEnd as number) <= this._maskService.prefix.length) {
+      if (
+        (el.selectionStart as number) <= this._maskService.prefix.length &&
+        (el.selectionEnd as number) <= this._maskService.prefix.length
+      ) {
         e.preventDefault();
       }
       this.onFocus(e);
-      if (e.keyCode === 8
-        && el.selectionStart === 0
-        && el.selectionEnd === el.value.length) {
+      if (
+        e.keyCode === 8 &&
+        el.selectionStart === 0 &&
+        el.selectionEnd === el.value.length
+      ) {
         el.value = this._maskService.prefix;
-        this._position = this._maskService.prefix ? this._maskService.prefix.length : 1;
+        this._position = this._maskService.prefix
+          ? this._maskService.prefix.length
+          : 1;
         this.onInput(e);
       }
     }
   }
@@ -216,17 +229,18 @@
     if (typeof inputValue === 'number') {
       inputValue = String(inputValue);
       this._maskService.isNumberValue = true;
     }
-    inputValue && this._maskService.maskExpression ||
-      this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped)
+    (inputValue && this._maskService.maskExpression) ||
+    (this._maskService.maskExpression &&
+      (this._maskService.prefix || this._maskService.showMaskTyped))
       ? (this._maskService.formElementProperty = [
-        'value',
-        this._maskService.applyMask(
-          inputValue,
-          this._maskService.maskExpression
-        )
-      ])
+          'value',
+          this._maskService.applyMask(
+            inputValue,
+            this._maskService.maskExpression
+          ),
+        ])
       : (this._maskService.formElementProperty = ['value', inputValue]);
     this._inputValue = inputValue;
   }
 
@@ -245,22 +259,29 @@
   public setDisabledState(isDisabled: boolean): void {
     this._maskService.formElementProperty = ['disabled', isDisabled];
   }
   private _repeatPatternSymbols(maskExp: string): string {
-    return maskExp.match(/{[0-9]+}/)
-      && maskExp.split('')
-        .reduce((accum: string, currval: string, index: number): string => {
-          this._start = (currval === '{') ? index : this._start;
+    return (
+      (maskExp.match(/{[0-9]+}/) &&
+        maskExp
+          .split('')
+          .reduce((accum: string, currval: string, index: number): string => {
+            this._start = currval === '{' ? index : this._start;
 
-          if (currval !== '}') {
-            return this._maskService._findSpecialChar(currval) ? accum + currval : accum;
-          }
-          this._end = index;
-          const repeatNumber: number = Number(maskExp
-            .slice(this._start + 1, this._end));
-          const repaceWith: string = new Array(repeatNumber + 1)
-            .join(maskExp[this._start - 1]);
-          return accum + repaceWith;
-        }, '') || maskExp;
+            if (currval !== '}') {
+              return this._maskService._findSpecialChar(currval)
+                ? accum + currval
+                : accum;
+            }
+            this._end = index;
+            const repeatNumber: number = Number(
+              maskExp.slice(this._start + 1, this._end)
+            );
+            const repaceWith: string = new Array(repeatNumber + 1).join(
+              maskExp[this._start - 1]
+            );
+            return accum + repaceWith;
+          }, '')) ||
+      maskExp
+    );
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.module.ts
+++ /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.module.ts
@@ -1,36 +1,41 @@
 import { ModuleWithProviders, NgModule } from '@angular/core';
 
-import { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';
+import {
+  config,
+  INITIAL_CONFIG,
+  initialConfig,
+  NEW_CONFIG,
+  optionsConfig,
+} from './config';
 import { MaskApplierService } from './mask-applier.service';
 import { MaskDirective } from './mask.directive';
 import { MaskPipe } from './mask.pipe';
 
 @NgModule({
   providers: [MaskApplierService],
   exports: [MaskDirective, MaskPipe],
-  declarations: [MaskDirective, MaskPipe]
+  declarations: [MaskDirective, MaskPipe],
 })
 export class MaskModule {
-
   public static forRoot(configValue?: optionsConfig): ModuleWithProviders {
     return {
       ngModule: MaskModule,
       providers: [
         {
           provide: NEW_CONFIG,
-          useValue: configValue
+          useValue: configValue,
         },
         {
           provide: INITIAL_CONFIG,
-          useValue: initialConfig
+          useValue: initialConfig,
         },
         {
           provide: config,
           useFactory: _configFactory,
-          deps: [INITIAL_CONFIG, NEW_CONFIG]
+          deps: [INITIAL_CONFIG, NEW_CONFIG],
         },
-      ]
+      ],
     };
   }
   public static forChild(configValue?: optionsConfig): ModuleWithProviders {
     return {
@@ -41,8 +46,12 @@
 
 /**
  * @internal
  */
-export function _configFactory
-  (initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {
-  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };
+export function _configFactory(
+  initConfig: optionsConfig,
+  configValue: optionsConfig | (() => optionsConfig)
+): Function | optionsConfig {
+  return typeof configValue === 'function'
+    ? configValue()
+    : { ...initConfig, ...configValue };
 }

Index: /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.pipe.ts
+++ /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.pipe.ts
@@ -3,15 +3,17 @@
 import { IConfig } from './config';
 
 @Pipe({
   name: 'mask',
-  pure: true
+  pure: true,
 })
 export class MaskPipe implements PipeTransform {
+  public constructor(private _maskService: MaskApplierService) {}
 
-  public constructor(private _maskService: MaskApplierService) { }
-
-  public transform(value: string|number, mask: string | [string, IConfig['patterns']]): string {
+  public transform(
+    value: string | number,
+    mask: string | [string, IConfig['patterns']]
+  ): string {
     if (!value) {
       return '';
     }
     if (typeof mask === 'string') {

Index: /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.service.ts
+++ /home/idnes/Projects/awe/src/lib/input-mask/lib/mask.service.ts
@@ -10,10 +10,10 @@
   public showMaskTyped: boolean = false;
   public maskIsShown: string = '';
   private _formElement: HTMLInputElement;
   // tslint:disable-next-line
-  public onChange = (_: any) => { };
-  public onTouch = () => { };
+  public onChange = (_: any) => {};
+  public onTouch = () => {};
   public constructor(
     // tslint:disable-next-line
     @Inject(DOCUMENT) private document: any,
     @Inject(config) protected _config: IConfig,
@@ -27,11 +27,10 @@
   public applyMask(
     inputValue: string,
     maskExpression: string,
     position: number = 0,
-    cb: Function = () => { }
+    cb: Function = () => {}
   ): string {
-
     this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';
     if (!inputValue && this.showMaskTyped) {
       return this.prefix + this.maskIsShown;
     }
@@ -40,24 +39,46 @@
       maskExpression,
       position,
       cb
     );
-    if (this.maskExpression === 'dot_separator.2' && this.dropSpecialCharacters === true) {
-      this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== ',');
+    if (
+      this.maskExpression === 'dot_separator.2' &&
+      this.dropSpecialCharacters === true
+    ) {
+      this.maskSpecialCharacters = this.maskSpecialCharacters.filter(
+        (item: string) => item !== ','
+      );
     }
-    if ((this.maskExpression === 'coma_separator.2' && this.dropSpecialCharacters === true)) {
-      this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== '.');
-
+    if (
+      this.maskExpression === 'coma_separator.2' &&
+      this.dropSpecialCharacters === true
+    ) {
+      this.maskSpecialCharacters = this.maskSpecialCharacters.filter(
+        (item: string) => item !== '.'
+      );
     }
     Array.isArray(this.dropSpecialCharacters)
-      ? this.onChange(this._removeMask(this._removeSufix(this._removePrefix(result)), this.dropSpecialCharacters))
+      ? this.onChange(
+          this._removeMask(
+            this._removeSufix(this._removePrefix(result)),
+            this.dropSpecialCharacters
+          )
+        )
       : this.dropSpecialCharacters === true
-        ? this.onChange(
+      ? this.onChange(
           this.isNumberValue
-            ? Number(this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters))
-            : this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters)
+            ? Number(
+                this._removeMask(
+                  this._removeSufix(this._removePrefix(result)),
+                  this.maskSpecialCharacters
+                )
+              )
+            : this._removeMask(
+                this._removeSufix(this._removePrefix(result)),
+                this.maskSpecialCharacters
+              )
         )
-        : this.onChange(this._removeSufix(this._removePrefix(result)));
+      : this.onChange(this._removeSufix(this._removePrefix(result)));
     let ifMaskIsShown: string = '';
     if (!this.showMaskTyped) {
       return result;
     }
@@ -68,9 +89,9 @@
   }
 
   public applyValueChanges(
     position: number = 0,
-    cb: Function = () => { }
+    cb: Function = () => {}
   ): void {
     const maskedInput: string | number = this.applyMask(
       this._formElement.value,
       this.maskExpression,
@@ -123,20 +144,16 @@
   private _removePrefix(value: string): string {
     if (!this.prefix) {
       return value;
     }
-    return value
-      ? value.replace(this.prefix, '')
-      : value;
+    return value ? value.replace(this.prefix, '') : value;
   }
 
   private _removeSufix(value: string): string {
     if (!this.sufix) {
       return value;
     }
-    return value
-      ? value.replace(this.sufix, '')
-      : value;
+    return value ? value.replace(this.sufix, '') : value;
   }
 
   private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {
     return new RegExp(

Index: /home/idnes/Projects/awe/src/lib/mark-down/lib/language.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/mark-down/lib/language.pipe.ts
+++ /home/idnes/Projects/awe/src/lib/mark-down/lib/language.pipe.ts
@@ -3,17 +3,20 @@
 @Pipe({
   name: 'language',
 })
 export class LanguagePipe implements PipeTransform {
-
   transform(value: string, language: string): string {
     if (typeof value !== 'string') {
-      console.error(`LanguagePipe has been invoked with an invalid value type [${value}]`);
+      console.error(
+        `LanguagePipe has been invoked with an invalid value type [${value}]`
+      );
       return value;
     }
     if (typeof language !== 'string') {
-      console.error(`LanguagePipe has been invoked with an invalid parameter [${language}]`);
+      console.error(
+        `LanguagePipe has been invoked with an invalid parameter [${language}]`
+      );
       return value;
     }
-    return '```' + language + '\n' +  value + '\n```';
+    return '```' + language + '\n' + value + '\n```';
   }
 }

Index: /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.component.ts
+++ /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.component.ts
@@ -1,5 +1,13 @@
-import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output } from '@angular/core';
+import {
+  AfterViewInit,
+  Component,
+  ElementRef,
+  EventEmitter,
+  Input,
+  OnChanges,
+  Output,
+} from '@angular/core';
 
 import { MarkdownService } from './markdown.service';
 import { PrismPlugin } from './prism-plugin';
 
@@ -13,16 +21,24 @@
   @Input() src: string;
 
   // Plugin - lineNumbers
   @Input()
-  get lineNumbers(): boolean { return this._lineNumbers; }
-  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }
+  get lineNumbers(): boolean {
+    return this._lineNumbers;
+  }
+  set lineNumbers(value: boolean) {
+    this._lineNumbers = this.coerceBooleanProperty(value);
+  }
   @Input() start: number;
 
   // Plugin - lineHighlight
   @Input()
-  get lineHighlight(): boolean { return this._lineHighlight; }
-  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }
+  get lineHighlight(): boolean {
+    return this._lineHighlight;
+  }
+  set lineHighlight(value: boolean) {
+    this._lineHighlight = this.coerceBooleanProperty(value);
+  }
   @Input() line: string | string[];
   @Input() lineOffset: number;
 
   @Output() error = new EventEmitter<string>();
@@ -32,10 +48,10 @@
   private _lineNumbers = false;
 
   constructor(
     public element: ElementRef<HTMLElement>,
-    public markdownService: MarkdownService,
-  ) { }
+    public markdownService: MarkdownService
+  ) {}
 
   ngOnChanges() {
     if (this.data) {
       this.handleData();
@@ -53,9 +69,12 @@
     }
   }
 
   render(markdown: string, decodeHtml = false) {
-    this.element.nativeElement.innerHTML = this.markdownService.compile(markdown, decodeHtml);
+    this.element.nativeElement.innerHTML = this.markdownService.compile(
+      markdown,
+      decodeHtml
+    );
     this.handlePlugins();
     this.markdownService.highlight(this.element.nativeElement);
   }
 
@@ -67,31 +86,37 @@
     this.render(this.data);
   }
 
   private handleSrc() {
-    this.markdownService
-      .getSource(this.src)
-      .subscribe(
-        markdown => {
-          this.render(markdown);
-          this.load.emit(markdown);
-        },
-        error => this.error.emit(error),
-      );
+    this.markdownService.getSource(this.src).subscribe(
+      markdown => {
+        this.render(markdown);
+        this.load.emit(markdown);
+      },
+      error => this.error.emit(error)
+    );
   }
 
   private handleTransclusion() {
     this.render(this.element.nativeElement.innerHTML, true);
   }
 
   private handlePlugins() {
     if (this.lineHighlight) {
-      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineHighlight);
-      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });
+      this.setPluginClass(
+        this.element.nativeElement,
+        PrismPlugin.LineHighlight
+      );
+      this.setPluginOptions(this.element.nativeElement, {
+        dataLine: this.line,
+        dataLineOffset: this.lineOffset,
+      });
     }
     if (this.lineNumbers) {
       this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);
-      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });
+      this.setPluginOptions(this.element.nativeElement, {
+        dataStart: this.start,
+      });
     }
   }
 
   private setPluginClass(element: HTMLElement, plugin: string | string[]) {
@@ -108,9 +133,11 @@
       Object.keys(options).forEach(option => {
         const attributeValue = options[option];
         if (!!attributeValue) {
           const attributeName = this.toLispCase(option);
-          preElements.item(i).setAttribute(attributeName, attributeValue.toString());
+          preElements
+            .item(i)
+            .setAttribute(attributeName, attributeValue.toString());
         }
       });
     }
   }
@@ -121,9 +148,12 @@
       return value;
     }
     let str = value.toString();
     for (let i = 0, n = upperChars.length; i < n; i++) {
-      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());
+      str = str.replace(
+        new RegExp(upperChars[i]),
+        '-' + upperChars[i].toLowerCase()
+      );
     }
     if (str.slice(0, 1) === '-') {
       str = str.slice(1);
     }

Index: /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.module.ts
+++ /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.module.ts
@@ -27,24 +27,18 @@
     smartypants: false,
   },
 };
 
-const sharedDeclarations = [
-  LanguagePipe,
-  MarkdownComponent,
-  MarkdownPipe,
-];
+const sharedDeclarations = [LanguagePipe, MarkdownComponent, MarkdownPipe];
 
 @NgModule({
-  exports: [
-    ...sharedDeclarations,
-  ],
-  declarations: [
-    ...sharedDeclarations,
-  ],
+  exports: [...sharedDeclarations],
+  declarations: [...sharedDeclarations],
 })
 export class MarkdownModule {
-  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders {
+  static forRoot(
+    markdownModuleConfig?: MarkdownModuleConfig
+  ): ModuleWithProviders {
     return {
       ngModule: MarkdownModule,
       providers: [
         MarkdownService,

Index: /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.pipe.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.pipe.ts
+++ /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.pipe.ts
@@ -6,30 +6,33 @@
 @Pipe({
   name: 'markdown',
 })
 export class MarkdownPipe implements PipeTransform {
-
   constructor(
     private elementRef: ElementRef<HTMLElement>,
     private markdownService: MarkdownService,
-    private zone: NgZone,
-  ) { }
+    private zone: NgZone
+  ) {}
 
   transform(value: string): string {
     if (value == null) {
       return '';
     }
 
     if (typeof value !== 'string') {
-      console.error(`MarkdownPipe has been invoked with an invalid value type [${value}]`);
+      console.error(
+        `MarkdownPipe has been invoked with an invalid value type [${value}]`
+      );
       return value;
     }
 
     const markdown = this.markdownService.compile(value);
 
     this.zone.onStable
       .pipe(first())
-      .subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));
+      .subscribe(() =>
+        this.markdownService.highlight(this.elementRef.nativeElement)
+      );
 
     return markdown;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.service.ts
+++ /home/idnes/Projects/awe/src/lib/mark-down/lib/markdown.service.ts
@@ -1,7 +1,13 @@
 import { isPlatformBrowser } from '@angular/common';
 import { HttpClient } from '@angular/common/http';
-import { Inject, Injectable, Optional, PLATFORM_ID, SecurityContext } from '@angular/core';
+import {
+  Inject,
+  Injectable,
+  Optional,
+  PLATFORM_ID,
+  SecurityContext,
+} from '@angular/core';
 import { DomSanitizer } from '@angular/platform-browser';
 import { parse } from 'marked';
 import { Observable } from 'rxjs';
 import { map } from 'rxjs/operators';
@@ -14,25 +20,31 @@
   highlightAllUnder: (element: Element) => void;
 };
 
 // tslint:disable-next-line:max-line-length
-export const errorSrcWithoutHttpClient = '[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';
+export const errorSrcWithoutHttpClient =
+  '[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';
 
 @Injectable()
 export class MarkdownService {
   // tslint:disable-next-line: variable-name
   private _options: MarkedOptions;
 
-  get options(): MarkedOptions { return this._options; }
+  get options(): MarkedOptions {
+    return this._options;
+  }
   set options(value: MarkedOptions) {
-    this._options = Object.assign({},
+    this._options = Object.assign(
+      {},
       { renderer: new MarkedRenderer() },
       this._options,
-      value,
+      value
     );
   }
 
-  get renderer(): MarkedRenderer { return this.options.renderer; }
+  get renderer(): MarkedRenderer {
+    return this.options.renderer;
+  }
   set renderer(value: MarkedRenderer) {
     this.options.renderer = value;
   }
 
@@ -40,18 +52,23 @@
     // tslint:disable-next-line: ban-types
     @Inject(PLATFORM_ID) private platform: Object,
     @Optional() private http: HttpClient,
     private domSanitizer: DomSanitizer,
-    options: MarkedOptions,
+    options: MarkedOptions
   ) {
     this.options = options;
   }
 
-  compile(markdown: string, decodeHtml = false, markedOptions = this.options): string {
+  compile(
+    markdown: string,
+    decodeHtml = false,
+    markedOptions = this.options
+  ): string {
     const precompiled = this.precompile(markdown);
     const compiled = parse(
       decodeHtml ? this.decodeHtml(precompiled) : precompiled,
-      markedOptions);
+      markedOptions
+    );
     return markedOptions.sanitize && !markedOptions.sanitizer
       ? this.domSanitizer.sanitize(SecurityContext.HTML, compiled)
       : compiled;
   }
@@ -85,9 +102,13 @@
   }
 
   private handleExtension(src: string, markdown: string): string {
     const extension = src
-      ? src.split('?')[0].split('.').splice(-1).join()
+      ? src
+          .split('?')[0]
+          .split('.')
+          .splice(-1)
+          .join()
       : null;
     return extension !== 'md'
       ? '```' + extension + '\n' + markdown + '\n```'
       : markdown;
@@ -115,10 +136,9 @@
         if (isNaN(indentStart)) {
           indentStart = lineIdentStart;
         }
         // remove whitespaces before current line indentation
-        return !!lineIdentStart
-          ? line.substring(lineIdentStart)
-          : line;
-      }).join('\n');
+        return !!lineIdentStart ? line.substring(lineIdentStart) : line;
+      })
+      .join('\n');
   }
 }

Index: /home/idnes/Projects/awe/src/lib/mark-down/lib/marked-options.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/mark-down/lib/marked-options.ts
+++ /home/idnes/Projects/awe/src/lib/mark-down/lib/marked-options.ts
@@ -80,9 +80,13 @@
 
   /**
    * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.
    */
-  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;
+  highlight?(
+    code: string,
+    lang: string,
+    callback?: (error: any | undefined, code: string) => void
+  ): string;
 
   /**
    * Optionally sanitize found HTML with a sanitizer function.
    */

Index: /home/idnes/Projects/awe/src/lib/mark-down/lib/marked-renderer.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/mark-down/lib/marked-renderer.ts
+++ /home/idnes/Projects/awe/src/lib/mark-down/lib/marked-renderer.ts
@@ -1,3 +1,3 @@
 import { Renderer } from 'marked';
 
-export class MarkedRenderer extends Renderer { }
+export class MarkedRenderer extends Renderer {}

Index: /home/idnes/Projects/awe/src/lib/optimize-resize-event/lib/optimize-resized-event.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/optimize-resize-event/lib/optimize-resized-event.module.ts
+++ /home/idnes/Projects/awe/src/lib/optimize-resize-event/lib/optimize-resized-event.module.ts
@@ -4,7 +4,7 @@
 
 @NgModule({
   declarations: [ResizedDirective],
   imports: [CommonModule],
-  exports: [ResizedDirective]
+  exports: [ResizedDirective],
 })
-export class AngularResizedEventModule { }
+export class AngularResizedEventModule {}

Index: /home/idnes/Projects/awe/src/lib/optimize-resize-event/lib/resized.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/optimize-resize-event/lib/resized.directive.ts
+++ /home/idnes/Projects/awe/src/lib/optimize-resize-event/lib/resized.directive.ts
@@ -1,21 +1,25 @@
-import { Directive, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';
+import {
+  Directive,
+  ElementRef,
+  EventEmitter,
+  OnInit,
+  Output,
+} from '@angular/core';
 import { ResizeSensor } from 'css-element-queries';
 import { ResizedEvent } from './resized-event';
 
 @Directive({
-  selector: '[resized]'
+  selector: '[resized]',
 })
 export class ResizedDirective implements OnInit {
-
   @Output()
   readonly resized = new EventEmitter<ResizedEvent>();
 
   private oldWidth: number;
   private oldHeight: number;
 
-  constructor(private readonly element: ElementRef) {
-  }
+  constructor(private readonly element: ElementRef) {}
 
   ngOnInit() {
     // tslint:disable-next-line:no-unused-expression
     new ResizeSensor(this.element.nativeElement, _ => this.onResized());
@@ -42,6 +46,5 @@
     this.oldHeight = this.element.nativeElement.clientHeight;
 
     this.resized.emit(event);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/password-strength/module/mat-password-strength.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/password-strength/module/mat-password-strength.module.ts
+++ /home/idnes/Projects/awe/src/lib/password-strength/module/mat-password-strength.module.ts
@@ -1,43 +1,52 @@
-import {CommonModule} from '@angular/common';
-import {ModuleWithProviders, NgModule} from '@angular/core';
-import {MatCardModule, MatIconModule, MatProgressBarModule, MatRippleModule} from '@angular/material';
+import { CommonModule } from '@angular/common';
+import { ModuleWithProviders, NgModule } from '@angular/core';
+import {
+  MatCardModule,
+  MatIconModule,
+  MatProgressBarModule,
+  MatRippleModule,
+} from '@angular/material';
 
-import {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';
-import {MatPasswordStrengthInfoComponent} from './component/mat-password-strength-info/mat-password-strength-info.component';
-import {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';
+import { MatPasswordStrengthComponent } from './component/mat-password-strength/mat-password-strength.component';
+import { MatPasswordStrengthInfoComponent } from './component/mat-password-strength-info/mat-password-strength-info.component';
+import { MatPassToggleVisibilityComponent } from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';
 
 // Export module's public API
-export {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';
 export {
-  MatPasswordStrengthInfoComponent
+  MatPasswordStrengthComponent,
+} from './component/mat-password-strength/mat-password-strength.component';
+export {
+  MatPasswordStrengthInfoComponent,
 } from './component/mat-password-strength-info/mat-password-strength-info.component';
-export {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';
+export {
+  MatPassToggleVisibilityComponent,
+} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';
 
 @NgModule({
   imports: [
     CommonModule,
     MatProgressBarModule,
     MatCardModule,
     MatIconModule,
-    MatRippleModule
+    MatRippleModule,
   ],
   exports: [
     MatPasswordStrengthComponent,
     MatPasswordStrengthInfoComponent,
-    MatPassToggleVisibilityComponent
+    MatPassToggleVisibilityComponent,
   ],
   declarations: [
     MatPasswordStrengthComponent,
     MatPasswordStrengthInfoComponent,
-    MatPassToggleVisibilityComponent
+    MatPassToggleVisibilityComponent,
   ],
-  entryComponents: [MatPassToggleVisibilityComponent]
+  entryComponents: [MatPassToggleVisibilityComponent],
 })
 export class MatPasswordStrengthModule {
   static forRoot(): ModuleWithProviders {
     return {
       ngModule: MatPasswordStrengthModule,
-      providers: []
+      providers: [],
     };
   }
 }

Index: /home/idnes/Projects/awe/src/lib/password-strength/module/animations/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/password-strength/module/animations/index.ts
+++ /home/idnes/Projects/awe/src/lib/password-strength/module/animations/index.ts
@@ -1,12 +1,22 @@
-import {animate, animation, AnimationReferenceMetadata, keyframes, style} from '@angular/animations';
+import {
+  animate,
+  animation,
+  AnimationReferenceMetadata,
+  keyframes,
+  style,
+} from '@angular/animations';
 
-export function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {
-  const params = {timing: timing, delay: 0, rotateX, rotateY};
+export function flipIn(
+  timing: number,
+  rotateX: number,
+  rotateY: number
+): AnimationReferenceMetadata {
+  const params = { timing: timing, delay: 0, rotateX, rotateY };
 
   return animation(
     [
-      style({'backface-visibility': 'visible'}),
+      style({ 'backface-visibility': 'visible' }),
       animate(
         '{{ timing }}s {{ delay }}s ease-in',
         keyframes([
           style({
@@ -37,9 +47,9 @@
           }),
         ])
       ),
     ],
-    {params}
+    { params }
   );
 }
 
 // export const flipInX = flipIn(1, 1, 0);
@@ -48,19 +58,19 @@
 export const shake = animation(
   animate(
     '{{ timing }}s {{ delay }}s',
     keyframes([
-      style({transform: 'translate3d(0, 0, 0)', offset: 0}),
-      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.1}),
-      style({transform: 'translate3d(10px, 0, 0)', offset: 0.2}),
-      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.3}),
-      style({transform: 'translate3d(10px, 0, 0)', offset: 0.4}),
-      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.5}),
-      style({transform: 'translate3d(10px, 0, 0)', offset: 0.6}),
-      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.7}),
-      style({transform: 'translate3d(10px, 0, 0)', offset: 0.8}),
-      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.9}),
-      style({transform: 'translate3d(0, 0, 0)', offset: 1}),
+      style({ transform: 'translate3d(0, 0, 0)', offset: 0 }),
+      style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.1 }),
+      style({ transform: 'translate3d(10px, 0, 0)', offset: 0.2 }),
+      style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.3 }),
+      style({ transform: 'translate3d(10px, 0, 0)', offset: 0.4 }),
+      style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.5 }),
+      style({ transform: 'translate3d(10px, 0, 0)', offset: 0.6 }),
+      style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.7 }),
+      style({ transform: 'translate3d(10px, 0, 0)', offset: 0.8 }),
+      style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.9 }),
+      style({ transform: 'translate3d(0, 0, 0)', offset: 1 }),
     ])
   ),
-  {params: {timing: 1, delay: 0}}
+  { params: { timing: 1, delay: 0 } }
 );

Index: /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts
+++ /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts
@@ -1,22 +1,20 @@
-import {Component, Input, ViewEncapsulation} from '@angular/core';
+import { Component, Input, ViewEncapsulation } from '@angular/core';
 
-type Type = 'text' | 'password' ;
+type Type = 'text' | 'password';
 
 @Component({
   selector: 'mat-pass-toggle-visibility',
   templateUrl: './mat-pass-toggle-visibility.component.html',
   styleUrls: ['./mat-pass-toggle-visibility.component.scss'],
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class MatPassToggleVisibilityComponent {
-
   @Input()
   isVisible: boolean;
 
   _type: Type = 'text';
 
   get type() {
     return this.isVisible ? 'text' : 'password';
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength/mat-password-strength.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength/mat-password-strength.component.ts
+++ /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength/mat-password-strength.component.ts
@@ -1,11 +1,20 @@
-import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';
-import {AbstractControl, FormControl, Validators} from '@angular/forms';
+import {
+  ChangeDetectionStrategy,
+  Component,
+  EventEmitter,
+  Input,
+  OnChanges,
+  OnInit,
+  Output,
+  SimpleChanges,
+} from '@angular/core';
+import { AbstractControl, FormControl, Validators } from '@angular/forms';
 
 export enum Colors {
   primary = 'primary',
   accent = 'accent',
-  warn = 'warn'
+  warn = 'warn',
 }
 
 export enum Criteria {
   at_least_eight_chars,
@@ -19,14 +28,15 @@
   selector: 'mat-password-strength',
   exportAs: 'matPasswordStrength',
   templateUrl: './mat-password-strength.component.html',
   styleUrls: ['./mat-password-strength.component.scss'],
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class MatPasswordStrengthComponent implements OnInit, OnChanges {
-
   @Input() password: string;
-  @Input() validators: Criteria[] = Object.keys(Criteria).map(key => Criteria[key]);
+  @Input() validators: Criteria[] = Object.keys(Criteria).map(
+    key => Criteria[key]
+  );
   @Input() externalError: boolean;
 
   @Input() enableLengthRule = true;
   @Input() enableLowerCaseLetterRule = true;
@@ -61,27 +71,33 @@
     }
   }
 
   ngOnChanges(changes: SimpleChanges): void {
-    if ((changes.externalError && changes.externalError.firstChange) || changes.password.isFirstChange()) {
+    if (
+      (changes.externalError && changes.externalError.firstChange) ||
+      changes.password.isFirstChange()
+    ) {
       return;
     } else if (changes.externalError && changes.externalError.currentValue) {
       this._color = Colors.warn;
       return;
-    } else if (changes.password.previousValue === changes.password.currentValue && !changes.password.firstChange) {
+    } else if (
+      changes.password.previousValue === changes.password.currentValue &&
+      !changes.password.firstChange
+    ) {
       this.calculatePasswordStrength();
     } else {
-      this.password && this.password.length > 0 ?
-        this.calculatePasswordStrength() : this.reset();
+      this.password && this.password.length > 0
+        ? this.calculatePasswordStrength()
+        : this.reset();
     }
   }
 
   get strength(): number {
     return this._strength ? this._strength : 0;
   }
 
   get color(): string {
-
     if (this._strength <= 20) {
       return Colors.warn;
     } else if (this._strength <= 80) {
       return Colors.accent;
@@ -95,62 +111,76 @@
     return this.containAtLeastMinChars;
   }
 
   private _containAtLeastOneLowerCaseLetter(): boolean {
-    this.containAtLeastOneLowerCaseLetter =
-      this.criteriaMap
-        .get(Criteria.at_least_one_lower_case_char)
-        .test(this.password);
+    this.containAtLeastOneLowerCaseLetter = this.criteriaMap
+      .get(Criteria.at_least_one_lower_case_char)
+      .test(this.password);
     return this.containAtLeastOneLowerCaseLetter;
   }
 
   private _containAtLeastOneUpperCaseLetter(): boolean {
-    this.containAtLeastOneUpperCaseLetter =
-      this.criteriaMap
-        .get(Criteria.at_least_one_upper_case_char)
-        .test(this.password);
+    this.containAtLeastOneUpperCaseLetter = this.criteriaMap
+      .get(Criteria.at_least_one_upper_case_char)
+      .test(this.password);
     return this.containAtLeastOneUpperCaseLetter;
   }
 
   private _containAtLeastOneDigit(): boolean {
-    this.containAtLeastOneDigit =
-      this.criteriaMap
-        .get(Criteria.at_least_one_digit_char)
-        .test(this.password);
+    this.containAtLeastOneDigit = this.criteriaMap
+      .get(Criteria.at_least_one_digit_char)
+      .test(this.password);
     return this.containAtLeastOneDigit;
   }
 
   private _containAtLeastOneSpecialChar(): boolean {
-    this.containAtLeastOneSpecialChar =
-      this.criteriaMap
-        .get(Criteria.at_least_one_special_char)
-        .test(this.password);
+    this.containAtLeastOneSpecialChar = this.criteriaMap
+      .get(Criteria.at_least_one_special_char)
+      .test(this.password);
     return this.containAtLeastOneSpecialChar;
   }
 
   setRulesAndValidators(): void {
     if (this.enableLengthRule) {
-      this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(`^.{${this.min},${this.max}$`));
+      this.criteriaMap.set(
+        Criteria.at_least_eight_chars,
+        RegExp(`^.{${this.min},${this.max}$`)
+      );
     }
     if (this.enableLowerCaseLetterRule) {
-      this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExp(/^(?=.*?[a-z])/));
+      this.criteriaMap.set(
+        Criteria.at_least_one_lower_case_char,
+        RegExp(/^(?=.*?[a-z])/)
+      );
     }
     if (this.enableUpperCaseLetterRule) {
-      this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExp(/^(?=.*?[A-Z])/));
+      this.criteriaMap.set(
+        Criteria.at_least_one_upper_case_char,
+        RegExp(/^(?=.*?[A-Z])/)
+      );
     }
     if (this.enableDigitRule) {
-      this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExp(/^(?=.*?[0-9])/));
+      this.criteriaMap.set(
+        Criteria.at_least_one_digit_char,
+        RegExp(/^(?=.*?[0-9])/)
+      );
     }
     if (this.enableSpecialCharRule) {
-      this.criteriaMap.set(Criteria.at_least_one_special_char, RegExp(/^(?=.*?[" !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"])/));
+      this.criteriaMap.set(
+        Criteria.at_least_one_special_char,
+        RegExp(/^(?=.*?[" !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"])/)
+      );
     }
 
-    this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(Criteria.at_least_eight_chars)));
+    this.passwordFormControl.setValidators(
+      Validators.pattern(this.criteriaMap.get(Criteria.at_least_eight_chars))
+    );
 
     this.validators.map(criteria => {
-      this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(criteria)));
-    })
-
+      this.passwordFormControl.setValidators(
+        Validators.pattern(this.criteriaMap.get(criteria))
+      );
+    });
   }
 
   calculatePasswordStrength(): void {
     const requirements: Array<boolean> = [];
@@ -160,23 +190,24 @@
     // console.log('unit = ', unit);
 
     requirements.push(
       this.enableLengthRule ? this._containAtLeastMinChars() : false,
-      this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false,
-      this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false,
+      this.enableLowerCaseLetterRule
+        ? this._containAtLeastOneLowerCaseLetter()
+        : false,
+      this.enableUpperCaseLetterRule
+        ? this._containAtLeastOneUpperCaseLetter()
+        : false,
       this.enableDigitRule ? this._containAtLeastOneDigit() : false,
-      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false);
+      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false
+    );
 
     this._strength = requirements.filter(v => v).length * unit;
     // console.log('length = ', this._strength / unit);
     this.onStrengthChanged.emit(this.strength);
   }
 
   reset() {
     this._strength = 0;
-    this.containAtLeastMinChars =
-      this.containAtLeastOneLowerCaseLetter =
-        this.containAtLeastOneUpperCaseLetter =
-          this.containAtLeastOneDigit =
-            this.containAtLeastOneSpecialChar = false;
+    this.containAtLeastMinChars = this.containAtLeastOneLowerCaseLetter = this.containAtLeastOneUpperCaseLetter = this.containAtLeastOneDigit = this.containAtLeastOneSpecialChar = false;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength-info/mat-password-strength-info.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength-info/mat-password-strength-info.component.ts
+++ /home/idnes/Projects/awe/src/lib/password-strength/module/component/mat-password-strength-info/mat-password-strength-info.component.ts
@@ -1,8 +1,18 @@
-import {Component, Input, OnInit} from '@angular/core';
-import {MatPasswordStrengthComponent} from '../mat-password-strength/mat-password-strength.component';
-import {animate, animateChild, keyframes, query, stagger, style, transition, trigger, useAnimation} from '@angular/animations';
-import {shake} from '../../animations/index';
+import { Component, Input, OnInit } from '@angular/core';
+import { MatPasswordStrengthComponent } from '../mat-password-strength/mat-password-strength.component';
+import {
+  animate,
+  animateChild,
+  keyframes,
+  query,
+  stagger,
+  style,
+  transition,
+  trigger,
+  useAnimation,
+} from '@angular/animations';
+import { shake } from '../../animations/index';
 
 @Component({
   selector: 'mat-password-strength-info',
   exportAs: 'matPasswordStrengthInfo',
@@ -12,69 +22,77 @@
     // nice stagger effect when showing existing elements
     trigger('list', [
       transition(':enter', [
         // child animation selector + stagger
-        query('@items',
-          stagger(300, animateChild())
-        )
+        query('@items', stagger(300, animateChild())),
       ]),
     ]),
     trigger('items', [
       // cubic-bezier for a tiny bouncing feel
       transition(':enter', [
-        style({transform: 'scale(0.5)', opacity: 0}),
-        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',
-          style({transform: 'scale(1)', opacity: 1}))
+        style({ transform: 'scale(0.5)', opacity: 0 }),
+        animate(
+          '1s cubic-bezier(.8,-0.6,0.2,1.5)',
+          style({ transform: 'scale(1)', opacity: 1 })
+        ),
       ]),
       transition(':leave', [
-        style({transform: 'scale(1)', opacity: 1, height: '*'}),
-        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',
-          style({transform: 'scale(0.5)', opacity: 0, height: '0px', margin: '0px'}))
+        style({ transform: 'scale(1)', opacity: 1, height: '*' }),
+        animate(
+          '1s cubic-bezier(.8,-0.6,0.2,1.5)',
+          style({
+            transform: 'scale(0.5)',
+            opacity: 0,
+            height: '0px',
+            margin: '0px',
+          })
+        ),
       ]),
     ]),
     trigger('positiveState', [
-      transition(':enter', [
-        style({'backface-visibility': 'visible'}),
-        animate(
-          '{{ timing }}s {{ delay }}s ease-in',
-          keyframes([
-            style({
-              opacity: 0,
-              transform:
-                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',
-              offset: 0,
-            }),
-            style({
-              opacity: 1,
-              transform:
-                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',
-              offset: 0.4,
-            }),
-            style({
-              transform:
-                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',
-              offset: 0.6,
-            }),
-            style({
-              transform:
-                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',
-              offset: 0.8,
-            }),
-            style({
-              transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',
-              offset: 1,
-            }),
-          ])
-        ),
-      ], {params: {timing: 1, delay: 0, rotateX: 1, rotateY: 0}}),
+      transition(
+        ':enter',
+        [
+          style({ 'backface-visibility': 'visible' }),
+          animate(
+            '{{ timing }}s {{ delay }}s ease-in',
+            keyframes([
+              style({
+                opacity: 0,
+                transform:
+                  'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',
+                offset: 0,
+              }),
+              style({
+                opacity: 1,
+                transform:
+                  'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',
+                offset: 0.4,
+              }),
+              style({
+                transform:
+                  'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',
+                offset: 0.6,
+              }),
+              style({
+                transform:
+                  'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',
+                offset: 0.8,
+              }),
+              style({
+                transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',
+                offset: 1,
+              }),
+            ])
+          ),
+        ],
+        { params: { timing: 1, delay: 0, rotateX: 1, rotateY: 0 } }
+      ),
     ]),
-    trigger('negativeState', [
-      transition(':enter', useAnimation(shake)),
-    ]),
+    trigger('negativeState', [transition(':enter', useAnimation(shake))]),
   ],
 })
 export class MatPasswordStrengthInfoComponent implements OnInit {
-
   @Input()
   passwordComponent: MatPasswordStrengthComponent;
 
   @Input()
@@ -96,9 +114,10 @@
   minCharsCriteriaMsg: string;
 
   ngOnInit(): void {
     if (!this.minCharsCriteriaMsg) {
-      this.minCharsCriteriaMsg = `contains at least ${this.passwordComponent.min} characters`
+      this.minCharsCriteriaMsg = `contains at least ${
+        this.passwordComponent.min
+      } characters`;
     }
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/index.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/index.ts
@@ -13,9 +13,9 @@
     // NgObjectPipesModule
     // NgStringPipesModule,
   ],
 })
-export class NgPipesModule { }
+export class NgPipesModule {}
 
 // export * from './array/index';
 // export * from './boolean/index';
 // export * from './math/index';

Index: /home/idnes/Projects/awe/src/lib/pipes/array/every.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/every.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/every.ts
@@ -1,8 +1,11 @@
 import { Pipe, PipeTransform } from '@angular/core';
 
 @Pipe({ name: 'every' })
 export class EveryPipe implements PipeTransform {
-  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): boolean | any[] {
+  transform(
+    input: any,
+    predicate: (value: any, index: number, array: any[]) => boolean
+  ): boolean | any[] {
     return Array.isArray(input) ? input.every(predicate) : false;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/array/filter-by.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/filter-by.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/filter-by.ts
@@ -10,14 +10,32 @@
 
 // tslint:disable no-bitwise
 @Pipe({ name: 'filterBy' })
 export class FilterByPipe implements PipeTransform {
-  transform(input: any[], props: Array<string>, search?: any, strict?: boolean): any[];
-  transform<T>(input: T, props: Array<string>, search?: any, strict?: boolean): T;
-  transform(input: any, props: Array<string>, search: any = '', strict: boolean = false): any {
+  transform(
+    input: any[],
+    props: Array<string>,
+    search?: any,
+    strict?: boolean
+  ): any[];
+  transform<T>(
+    input: T,
+    props: Array<string>,
+    search?: any,
+    strict?: boolean
+  ): T;
+  transform(
+    input: any,
+    props: Array<string>,
+    search: any = '',
+    strict: boolean = false
+  ): any {
     if (
       !Array.isArray(input) ||
-      (!Array.isArray(search) && !isString(search) && !isNumberFinite(search) && !isBoolean(search))
+      (!Array.isArray(search) &&
+        !isString(search) &&
+        !isNumberFinite(search) &&
+        !isBoolean(search))
     ) {
       return input;
     }
 
@@ -30,9 +48,13 @@
         return terms.some(term => {
           const value = extractDeepPropertyByMapKey(obj, prop);
           const { props, tail } = extractDeepPropertyByParentMapKey(obj, prop);
 
-          if (isUndefined(value) && !isUndefined(props) && Array.isArray(props)) {
+          if (
+            isUndefined(value) &&
+            !isUndefined(props) &&
+            Array.isArray(props)
+          ) {
             return props.some(parent => {
               const str = String(parent[tail]).toLowerCase();
 
               return strict ? str === term : !!~str.indexOf(term);

Index: /home/idnes/Projects/awe/src/lib/pipes/array/group-by.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/group-by.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/group-by.ts
@@ -12,24 +12,36 @@
   }
 
   private groupBy(list: any[], discriminator: any, delimiter: string) {
     return list.reduce((acc: any, payload: string) => {
-      const key = this.extractKeyByDiscriminator(discriminator, payload, delimiter);
+      const key = this.extractKeyByDiscriminator(
+        discriminator,
+        payload,
+        delimiter
+      );
 
-      acc[key] = Array.isArray(acc[key]) ? acc[key].concat([payload]) : [payload];
+      acc[key] = Array.isArray(acc[key])
+        ? acc[key].concat([payload])
+        : [payload];
 
       return acc;
     }, {});
   }
 
-  private extractKeyByDiscriminator(discriminator: any, payload: string, delimiter: string) {
+  private extractKeyByDiscriminator(
+    discriminator: any,
+    payload: string,
+    delimiter: string
+  ) {
     if (isFunction(discriminator)) {
       // tslint:disable-next-line: ban-types
       return (discriminator as Function)(payload);
     }
 
     if (Array.isArray(discriminator)) {
-      return discriminator.map(k => extractDeepPropertyByMapKey(payload, k)).join(delimiter);
+      return discriminator
+        .map(k => extractDeepPropertyByMapKey(payload, k))
+        .join(delimiter);
     }
 
     return extractDeepPropertyByMapKey(payload, discriminator as string);
   }

Index: /home/idnes/Projects/awe/src/lib/pipes/array/order-by.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/order-by.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/order-by.ts
@@ -1,12 +1,17 @@
 import { Pipe, PipeTransform } from '@angular/core';
-import { extractDeepPropertyByMapKey, isString, isUndefined } from '../helpers/helpers';
+import {
+  extractDeepPropertyByMapKey,
+  isString,
+  isUndefined,
+} from '../helpers/helpers';
 
 @Pipe({ name: 'orderBy' })
 export class OrderByPipe implements PipeTransform {
-
   private static simpleSort(a: any, b: any) {
-    return isString(a) && isString(b) ? a.toLowerCase().localeCompare(b.toLowerCase()) : a - b;
+    return isString(a) && isString(b)
+      ? a.toLowerCase().localeCompare(b.toLowerCase())
+      : a - b;
   }
 
   private static orderCompare(prop: string, asc: boolean, a: any, b: any) {
     const first = extractDeepPropertyByMapKey(a, prop);

Index: /home/idnes/Projects/awe/src/lib/pipes/array/sample.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/sample.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/sample.ts
@@ -13,9 +13,11 @@
     let sample: any[] = [];
     const tmp = [...input];
     const l = len < tmp.length ? len : tmp.length;
     for (let i = 0; i < l; ++i) {
-      sample = sample.concat(tmp.splice(Math.floor(Math.random() * tmp.length), 1));
+      sample = sample.concat(
+        tmp.splice(Math.floor(Math.random() * tmp.length), 1)
+      );
     }
 
     return sample;
   }

Index: /home/idnes/Projects/awe/src/lib/pipes/array/some.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/some.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/some.ts
@@ -1,11 +1,20 @@
 import { Pipe, PipeTransform } from '@angular/core';
 
 @Pipe({ name: 'some' })
 export class SomePipe implements PipeTransform {
-  transform(input: any[], predicate: (value: any, index: number, array: any[]) => boolean): boolean;
-  transform<T>(input: T, predicate: (value: any, index: number, array: any[]) => boolean): T;
+  transform(
+    input: any[],
+    predicate: (value: any, index: number, array: any[]) => boolean
+  ): boolean;
+  transform<T>(
+    input: T,
+    predicate: (value: any, index: number, array: any[]) => boolean
+  ): T;
 
-  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): any {
+  transform(
+    input: any,
+    predicate: (value: any, index: number, array: any[]) => boolean
+  ): any {
     return Array.isArray(input) ? input.some(predicate) : input;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/array/union.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/union.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/union.ts
@@ -13,9 +13,11 @@
     return args.reduce((newArr, currArr) => {
       return newArr.concat(
         currArr.reduce((noDupArr: any[], curr: any) => {
           // tslint:disable-next-line:no-bitwise
-          return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr) ? noDupArr.concat([curr]) : noDupArr;
+          return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr)
+            ? noDupArr.concat([curr])
+            : noDupArr;
         }, [])
       );
     }, input);
   }

Index: /home/idnes/Projects/awe/src/lib/pipes/array/unique.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/array/unique.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/array/unique.ts
@@ -1,6 +1,10 @@
 import { Pipe, PipeTransform } from '@angular/core';
-import { extractDeepPropertyByMapKey, isObject, isUndefined } from '../helpers/helpers';
+import {
+  extractDeepPropertyByMapKey,
+  isObject,
+  isUndefined,
+} from '../helpers/helpers';
 
 @Pipe({ name: 'unique' })
 export class UniquePipe implements PipeTransform {
   transform(input: any[], args?: string | undefined): any[];
@@ -12,18 +16,18 @@
     return Array.isArray(input)
       ? isUndefined(propertyName)
         ? input.filter((e, i) => input.indexOf(e) === i)
         : input.filter((e, i) => {
-          let value = extractDeepPropertyByMapKey(e, propertyName);
-          value = isObject(value) ? JSON.stringify(value) : value;
+            let value = extractDeepPropertyByMapKey(e, propertyName);
+            value = isObject(value) ? JSON.stringify(value) : value;
 
-          if (isUndefined(value) || uniques[value]) {
-            return false;
-          }
+            if (isUndefined(value) || uniques[value]) {
+              return false;
+            }
 
-          uniques[value] = true;
+            uniques[value] = true;
 
-          return true;
-        })
+            return true;
+          })
       : input;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/helpers/helpers.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/helpers/helpers.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/helpers/helpers.ts
@@ -46,9 +46,11 @@
   const keys = map.split('.');
   const head = keys.shift();
 
   return keys.reduce((prop: any, key: string) => {
-    return !isUndefined(prop) && !isUndefined(prop[key]) ? prop[key] : undefined;
+    return !isUndefined(prop) && !isUndefined(prop[key])
+      ? prop[key]
+      : undefined;
   }, obj[head || '']);
 }
 
 export function extractDeepPropertyByParentMapKey(obj: any, map: string): any {
@@ -59,9 +61,11 @@
   return { props, tail };
 }
 
 export function getKeysTwoObjects(obj: any, other: any): any {
-  return [...Object.keys(obj), ...Object.keys(other)].filter((key, index, array) => array.indexOf(key) === index);
+  return [...Object.keys(obj), ...Object.keys(other)].filter(
+    (key, index, array) => array.indexOf(key) === index
+  );
 }
 
 export function isDeepEqual(obj: any, other: any): any {
   if (!isObject(obj) || !isObject(other)) {

Index: /home/idnes/Projects/awe/src/lib/pipes/math/bytes.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/math/bytes.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/math/bytes.ts
@@ -1,6 +1,10 @@
 import { Pipe, PipeTransform } from '@angular/core';
-import { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';
+import {
+  applyPrecision,
+  isNumberFinite,
+  isUndefined,
+} from '../helpers/helpers';
 
 @Pipe({ name: 'bytes' })
 export class BytesPipe implements PipeTransform {
   private dictionary: Array<{ max: number; type: string }> = [
@@ -14,9 +18,11 @@
     if (!isNumberFinite(value)) {
       return NaN;
     }
 
-    const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];
+    const format =
+      this.dictionary.find(d => value < d.max) ||
+      this.dictionary[this.dictionary.length - 1];
     const calc = value / (format.max / 1024);
     const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
 
     return `${num} ${format.type}`;

Index: /home/idnes/Projects/awe/src/lib/pipes/object/diff-obj.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/object/diff-obj.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/object/diff-obj.ts
@@ -3,9 +3,14 @@
 
 @Pipe({ name: 'diffObj' })
 export class DiffObjPipe implements PipeTransform {
   transform(obj: any, original: any = {}): any {
-    if (Array.isArray(obj) || Array.isArray(original) || !isObject(obj) || !isObject(original)) {
+    if (
+      Array.isArray(obj) ||
+      Array.isArray(original) ||
+      !isObject(obj) ||
+      !isObject(original)
+    ) {
       return {};
     }
 
     return getKeysTwoObjects(obj, original).reduce((diff: any, key: any) => {

Index: /home/idnes/Projects/awe/src/lib/pipes/object/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/object/index.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/object/index.ts
@@ -7,9 +7,18 @@
 import { InvertByPipe } from './invert-by';
 import { DiffObjPipe } from './diff-obj';
 import { NgModule } from '@angular/core';
 
-const OBJECT_PIPES = [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe];
+const OBJECT_PIPES = [
+  KeysPipe,
+  ValuesPipe,
+  PairsPipe,
+  PickPipe,
+  InvertPipe,
+  InvertByPipe,
+  OmitPipe,
+  DiffObjPipe,
+];
 
 @NgModule({
   declarations: OBJECT_PIPES,
   imports: [],

Index: /home/idnes/Projects/awe/src/lib/pipes/object/invert-by.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/object/invert-by.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/object/invert-by.ts
@@ -11,8 +11,10 @@
 
     return Object.keys(obj).reduce((o: any, k: string) => {
       const key = cb ? cb(obj[k]) : obj[k];
 
-      return Array.isArray(o[key]) ? (o[key].push(k), o) : Object.assign(o, { [key]: [k] });
+      return Array.isArray(o[key])
+        ? (o[key].push(k), o)
+        : Object.assign(o, { [key]: [k] });
     }, {});
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/string/a-or-an.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/a-or-an.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/a-or-an.ts
@@ -25,11 +25,15 @@
       return '';
     } else {
       const firstWord = stringEntity.trim().split(' ')[0];
       if (this.irregularMap[firstWord.toLocaleLowerCase()]) {
-        return `${this.irregularMap[firstWord.toLocaleLowerCase()]} ${stringEntity}`;
+        return `${
+          this.irregularMap[firstWord.toLocaleLowerCase()]
+        } ${stringEntity}`;
       } else {
-        return isVowel(stringEntity[0]) ? `an ${stringEntity}` : `a ${stringEntity}`;
+        return isVowel(stringEntity[0])
+          ? `an ${stringEntity}`
+          : `a ${stringEntity}`;
       }
     }
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/string/match.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/match.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/match.ts
@@ -2,9 +2,13 @@
 import { isString } from '../helpers/helpers';
 
 @Pipe({ name: 'match' })
 export class MatchPipe implements PipeTransform {
-  transform(text: string, pattern: string, flags?: string): RegExpMatchArray | null;
+  transform(
+    text: string,
+    pattern: string,
+    flags?: string
+  ): RegExpMatchArray | null;
   transform<T>(text: T, pattern: string, flags?: string): T;
 
   transform(text: any, pattern: string, flags?: string): any {
     if (!isString(text)) {

Index: /home/idnes/Projects/awe/src/lib/pipes/string/pluralize.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/pluralize.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/pluralize.ts
@@ -167,21 +167,28 @@
 
     if (quantity === 1) {
       return singularEntity;
     } else {
-      const lastWord = singularEntity.trim().split(' ')[singularEntity.trim().split(' ').length - 1];
+      const lastWord = singularEntity.trim().split(' ')[
+        singularEntity.trim().split(' ').length - 1
+      ];
       if (this.irregularMap[lastWord.toLocaleLowerCase()]) {
         if (lastWord[0] === lastWord[0].toLocaleUpperCase()) {
           return singularEntity.replace(
             lastWord,
             this.irregularMap[lastWord.toLocaleLowerCase()].replace(
               this.irregularMap[lastWord.toLocaleLowerCase()][0],
-              this.irregularMap[lastWord.toLocaleLowerCase()][0].toLocaleUpperCase()
+              this.irregularMap[
+                lastWord.toLocaleLowerCase()
+              ][0].toLocaleUpperCase()
             )
           );
         }
 
-        return singularEntity.replace(lastWord, this.irregularMap[lastWord.toLocaleLowerCase()]);
+        return singularEntity.replace(
+          lastWord,
+          this.irregularMap[lastWord.toLocaleLowerCase()]
+        );
       } else if (lastWord[lastWord.length - 1] === 'y') {
         // Naive approach:
         // consonant+y = word - 'y' +'ies'
         // vowel+y = word + 's'

Index: /home/idnes/Projects/awe/src/lib/pipes/string/repeat.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/repeat.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/repeat.ts
@@ -11,7 +11,11 @@
     return n === 1 ? str : this.repeat(str, n - 1, separator);
   }
 
   private repeat(str: string, n: number, separator: string): string {
-    return isString(str) ? (n === 0 ? str : str + separator + this.repeat(str, n - 1, separator)) : str;
+    return isString(str)
+      ? n === 0
+        ? str
+        : str + separator + this.repeat(str, n - 1, separator)
+      : str;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/string/rpad.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/rpad.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/rpad.ts
@@ -2,9 +2,13 @@
 import { isString } from '../helpers/helpers';
 
 @Pipe({ name: 'rpad' })
 export class RightPadPipe implements PipeTransform {
-  transform(str: string, length: number = 1, padCharacter: string = ' '): string {
+  transform(
+    str: string,
+    length: number = 1,
+    padCharacter: string = ' '
+  ): string {
     if (!isString(str) || str.length >= length) {
       return str;
     }
     while (str.length < length) {

Index: /home/idnes/Projects/awe/src/lib/pipes/string/scan.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/scan.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/scan.ts
@@ -4,8 +4,10 @@
 @Pipe({ name: 'scan' })
 export class ScanPipe implements PipeTransform {
   transform(text: string, args: string[] = []): string {
     return isString(text)
-      ? text.replace(/\{(\d+)}/g, (match, index) => (!isUndefined(args[index]) ? args[index] : match))
+      ? text.replace(/\{(\d+)}/g, (match, index) =>
+          !isUndefined(args[index]) ? args[index] : match
+        )
       : text;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/string/shorten.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/shorten.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/shorten.ts
@@ -2,12 +2,27 @@
 import { isString } from '../helpers/helpers';
 
 @Pipe({ name: 'shorten' })
 export class ShortenPipe implements PipeTransform {
-  transform(input: string, length?: number, suffix?: string, wordBreak?: boolean): string;
-  transform(input: any, length?: number, suffix?: string, wordBreak?: boolean): any;
+  transform(
+    input: string,
+    length?: number,
+    suffix?: string,
+    wordBreak?: boolean
+  ): string;
+  transform(
+    input: any,
+    length?: number,
+    suffix?: string,
+    wordBreak?: boolean
+  ): any;
 
-  transform(text: any, length: number = 0, suffix: string = '', wordBreak: boolean = true): string {
+  transform(
+    text: any,
+    length: number = 0,
+    suffix: string = '',
+    wordBreak: boolean = true
+  ): string {
     if (!isString(text)) {
       return text;
     }
 

Index: /home/idnes/Projects/awe/src/lib/pipes/string/strip-tags.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/strip-tags.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/strip-tags.ts
@@ -3,8 +3,11 @@
 @Pipe({ name: 'stripTags' })
 export class StripTagsPipe implements PipeTransform {
   transform(text: string, ...allowedTags: any[]): string {
     return allowedTags.length > 0
-      ? text.replace(new RegExp(`<(?!\/?(${allowedTags.join('|')})\s*\/?)[^>]+>`, 'g'), '')
+      ? text.replace(
+          new RegExp(`<(?!\/?(${allowedTags.join('|')})\s*\/?)[^>]+>`, 'g'),
+          ''
+        )
       : text.replace(/<(?:.|\s)*?>/g, '');
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/string/trim.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/trim.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/trim.ts
@@ -3,7 +3,9 @@
 
 @Pipe({ name: 'trim' })
 export class TrimPipe implements PipeTransform {
   transform(text: string, chars: string = '\\s'): string {
-    return isString(text) ? text.replace(new RegExp(`^[${chars}]+|[${chars}]+$`, 'g'), '') : text;
+    return isString(text)
+      ? text.replace(new RegExp(`^[${chars}]+|[${chars}]+$`, 'g'), '')
+      : text;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/string/ucfirst.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/ucfirst.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/ucfirst.ts
@@ -6,7 +6,9 @@
   transform(input: string): string;
   transform(input: any): any;
 
   transform(text: any): string {
-    return isString(text) ? text.slice(0, 1).toUpperCase() + text.slice(1) : text;
+    return isString(text)
+      ? text.slice(0, 1).toUpperCase() + text.slice(1)
+      : text;
   }
 }

Index: /home/idnes/Projects/awe/src/lib/pipes/string/wrap.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/pipes/string/wrap.ts
+++ /home/idnes/Projects/awe/src/lib/pipes/string/wrap.ts
@@ -7,7 +7,11 @@
     if (!isString(str)) {
       return str;
     }
 
-    return (!!prefix && isString(prefix) ? prefix : '') + str + (!!suffix && isString(suffix) ? suffix : '');
+    return (
+      (!!prefix && isString(prefix) ? prefix : '') +
+      str +
+      (!!suffix && isString(suffix) ? suffix : '')
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/lib/qrcode/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/qrcode/index.ts
+++ /home/idnes/Projects/awe/src/lib/qrcode/index.ts
@@ -1,1 +1,1 @@
-export * from './lib/qrcode.module'
+export * from './lib/qrcode.module';

Index: /home/idnes/Projects/awe/src/lib/qrcode/lib/qrcode.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/qrcode/lib/qrcode.component.ts
+++ /home/idnes/Projects/awe/src/lib/qrcode/lib/qrcode.component.ts
@@ -1,5 +1,12 @@
-import { Component, Input, OnChanges, ViewChild, Renderer2, ElementRef } from '@angular/core';
+import {
+  Component,
+  Input,
+  OnChanges,
+  ViewChild,
+  Renderer2,
+  ElementRef,
+} from '@angular/core';
 // import {toCanvas, toDataURL, toFile, toString, QRCodeRenderersOptions, QRCodeToDataURLOptions, QRCodeOptions} from 'qrcode';
 // declare var require: any;
 // declare var QRCode: any;
 
@@ -8,23 +15,61 @@
 @Component({
   selector: 'qr-code',
   templateUrl: 'template.html',
   styles: [
-    `:host {
-      display: inline-block;
-    }`
-  ]
+    `
+      :host {
+        display: inline-block;
+      }
+    `,
+  ],
 })
 export class QRCodeComponent implements OnChanges {
-
   @Input() elementType: 'svg' | 'url' | 'img' | 'canvas' = 'url';
   @Input() cssClass = 'qrcode';
   @Input() value = 'autodrive';
   @Input() version:
-    '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' |
-    '11' | '12' | '13' | '14' | '15' | '16' | '17' | '18' | '19' | '20' |
-    '21' | '22' | '23' | '24' | '25' | '26' | '27' | '28' | '29' | '30' |
-    '31' | '32' | '33' | '34' | '35' | '36' | '37' | '38' | '39' | '40' | '' = '';
+    | '1'
+    | '2'
+    | '3'
+    | '4'
+    | '5'
+    | '6'
+    | '7'
+    | '8'
+    | '9'
+    | '10'
+    | '11'
+    | '12'
+    | '13'
+    | '14'
+    | '15'
+    | '16'
+    | '17'
+    | '18'
+    | '19'
+    | '20'
+    | '21'
+    | '22'
+    | '23'
+    | '24'
+    | '25'
+    | '26'
+    | '27'
+    | '28'
+    | '29'
+    | '30'
+    | '31'
+    | '32'
+    | '33'
+    | '34'
+    | '35'
+    | '36'
+    | '37'
+    | '38'
+    | '39'
+    | '40'
+    | '' = '';
 
   @Input() errorCorrectionLevel: 'L' | 'M' | 'Q' | 'H' = 'M';
   @Input() margin = 4;
   @Input() scale = 4;
@@ -33,88 +78,86 @@
   @Input() colorLight = '#ffffff';
 
   @ViewChild('qrcElement') qrcElement: ElementRef;
 
+  constructor(private renderer: Renderer2) {}
 
-  constructor(private renderer: Renderer2) {
-
-  }
-
   ngOnChanges() {
     this.createQRCode();
   }
   toDataURL() {
-    return new Promise(
-      (resolve, reject) => {
-        QRCode.toDataURL(this.value,
-          {
-            version: parseInt(this.version, 2),
-            errorCorrectionLevel: this.errorCorrectionLevel,
-            margin: this.margin,
-            scale: this.scale,
-            width: this.width,
-            color: {
-              dark: this.colorDark,
-              light: this.colorLight
-            }
-
+    return new Promise((resolve, reject) => {
+      QRCode.toDataURL(
+        this.value,
+        {
+          version: parseInt(this.version, 2),
+          errorCorrectionLevel: this.errorCorrectionLevel,
+          margin: this.margin,
+          scale: this.scale,
+          width: this.width,
+          color: {
+            dark: this.colorDark,
+            light: this.colorLight,
           },
-          (err, url) => {
-            if (err) {
-              console.error(err);
-              reject(err);
-            } else {
-              // console.log(url);
-              resolve(url);
-            }
+        },
+        (err, url) => {
+          if (err) {
+            console.error(err);
+            reject(err);
+          } else {
+            // console.log(url);
+            resolve(url);
           }
-        );
-      }
-    );
+        }
+      );
+    });
   }
   toCanvas(canvas) {
     return new Promise((resolve, reject) => {
-      QRCode.toCanvas(canvas, this.value, {
-        version: parseInt(this.version, 2),
-        errorCorrectionLevel: this.errorCorrectionLevel,
-        /* margin: this.margin,
+      QRCode.toCanvas(
+        canvas,
+        this.value,
+        {
+          version: parseInt(this.version, 2),
+          errorCorrectionLevel: this.errorCorrectionLevel,
+          /* margin: this.margin,
         scale: this.scale,
         width: this.width,
         color: {
           dark: this.colorDark,
           light: this.colorLight
         } */
-      }, (error) => {
-        if (error) {
-          // console.error(error);
-          reject(error);
-        } else {
-          // console.log('success!');
-          resolve('success');
+        },
+        error => {
+          if (error) {
+            // console.error(error);
+            reject(error);
+          } else {
+            // console.log('success!');
+            resolve('success');
+          }
         }
-      });
+      );
     });
   }
   toString() {
-    return new Promise(
-      (resolve, reject) => {
-        QRCode.toString(
-          this.value,
-          {
-            margin: 1,
-            width: 150,
-            height: 150
-          },
-          (error, str) => {
-            if (error) {
-              reject(error);
-            } else {
-              resolve(str);
-            }
+    return new Promise((resolve, reject) => {
+      QRCode.toString(
+        this.value,
+        {
+          margin: 1,
+          width: 150,
+          height: 150,
+        },
+        (error, str) => {
+          if (error) {
+            reject(error);
+          } else {
+            resolve(str);
           }
-        );
-      }
-    );
+        }
+      );
+    });
   }
   renderElement(element) {
     for (const node of this.qrcElement.nativeElement.childNodes) {
       this.renderer.removeChild(this.qrcElement.nativeElement, node);
@@ -129,42 +172,39 @@
     let element: Element;
     // console.log("QR Encoding " + this.value);
 
     switch (this.elementType) {
-
       case 'svg':
         element = this.renderer.createElement('svg');
-        this.toString().then(
-          v => {
-            this.qrcElement.nativeElement.innerHTML = v;
-            // console.log(v)
-            // this.renderElement(this.renderer.);
-          }
-        );
+        this.toString().then(v => {
+          this.qrcElement.nativeElement.innerHTML = v;
+          // console.log(v)
+          // this.renderElement(this.renderer.);
+        });
         break;
       case 'canvas':
         element = this.renderer.createElement('canvas');
-        this.toCanvas(element).then((v) => {
-          // console.log(v);
-          this.renderElement(element);
-        }).catch((e) => {
-          console.error(e);
-        });
+        this.toCanvas(element)
+          .then(v => {
+            // console.log(v);
+            this.renderElement(element);
+          })
+          .catch(e => {
+            console.error(e);
+          });
         break;
       case 'url':
       case 'img':
       default:
         element = this.renderer.createElement('img');
-        this.toDataURL().then((v: string) => {
-          // console.log(v);
-          element.setAttribute('src', v);
-          this.renderElement(element);
-        }).catch((e) => {
-          console.error(e);
-        });
-
+        this.toDataURL()
+          .then((v: string) => {
+            // console.log(v);
+            element.setAttribute('src', v);
+            this.renderElement(element);
+          })
+          .catch(e => {
+            console.error(e);
+          });
     }
-
-
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/qrcode/lib/qrcode.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/qrcode/lib/qrcode.module.ts
+++ /home/idnes/Projects/awe/src/lib/qrcode/lib/qrcode.module.ts
@@ -4,22 +4,16 @@
 
 export * from './qrcode.component';
 
 @NgModule({
-  imports: [
-    CommonModule
-  ],
-  declarations: [
-    QRCodeComponent
-  ],
-  exports: [
-    QRCodeComponent
-  ]
+  imports: [CommonModule],
+  declarations: [QRCodeComponent],
+  exports: [QRCodeComponent],
 })
 export class QRCodeModule {
   static forRoot(): ModuleWithProviders {
     return {
       ngModule: QRCodeModule,
-      providers: []
+      providers: [],
     };
   }
 }

Index: /home/idnes/Projects/awe/src/lib/resize-event/lib/angular-resized-event.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/resize-event/lib/angular-resized-event.module.ts
+++ /home/idnes/Projects/awe/src/lib/resize-event/lib/angular-resized-event.module.ts
@@ -4,7 +4,7 @@
 
 @NgModule({
   declarations: [ResizedDirective],
   imports: [CommonModule],
-  exports: [ResizedDirective]
+  exports: [ResizedDirective],
 })
-export class AngularResizedEventModule { }
+export class AngularResizedEventModule {}

Index: /home/idnes/Projects/awe/src/lib/resize-event/lib/resized.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/resize-event/lib/resized.directive.ts
+++ /home/idnes/Projects/awe/src/lib/resize-event/lib/resized.directive.ts
@@ -1,21 +1,25 @@
-import { Directive, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';
+import {
+  Directive,
+  ElementRef,
+  EventEmitter,
+  OnInit,
+  Output,
+} from '@angular/core';
 import { ResizeSensor } from 'css-element-queries';
 import { ResizedEvent } from './resized-event';
 
 @Directive({
-  selector: '[resized]'
+  selector: '[resized]',
 })
 export class ResizedDirective implements OnInit {
-
   @Output()
   readonly resized = new EventEmitter<ResizedEvent>();
 
   private oldWidth: number;
   private oldHeight: number;
 
-  constructor(private readonly element: ElementRef) {
-  }
+  constructor(private readonly element: ElementRef) {}
 
   ngOnInit() {
     // tslint:disable-next-line:no-unused-expression
     new ResizeSensor(this.element.nativeElement, _ => this.onResized());
@@ -42,6 +46,5 @@
     this.oldHeight = this.element.nativeElement.clientHeight;
 
     this.resized.emit(event);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-animation.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-animation.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-animation.ts
@@ -2,14 +2,13 @@
 
 import { EASING } from './scroll-to-helpers';
 import {
   ScrollToConfigOptions,
-  ScrollToListenerTarget
+  ScrollToListenerTarget,
 } from './scroll-to-config.interface';
 
 /** Scroll To Animation */
 export class ScrollToAnimation {
-
   /** Number of milliseconds for each Tick */
   private _tick: number;
 
   /** Interval */
@@ -65,32 +64,45 @@
     this._interval = null;
     this._lastPosition = null;
     this._timeLapsed = 0;
 
-    this._windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
+    this._windowScrollTop =
+      window.pageYOffset ||
+      document.documentElement.scrollTop ||
+      document.body.scrollTop ||
+      0;
 
     if (!this._container) {
       this._startPosition = this._windowScrollTop;
     } else {
-      this._startPosition = this._isWindow ? this._windowScrollTop : this._container.scrollTop;
+      this._startPosition = this._isWindow
+        ? this._windowScrollTop
+        : this._container.scrollTop;
     }
 
     // Correction for Starting Position of nested HTML Elements
     if (this._container && !this._isWindow) {
-      this._to = this._to - this._container.getBoundingClientRect().top + this._startPosition;
+      this._to =
+        this._to -
+        this._container.getBoundingClientRect().top +
+        this._startPosition;
     }
 
     // Set Distance
     const directionalDistance = this._startPosition - this._to;
-    this._distance = this._container ? Math.abs(this._startPosition - this._to) : this._to;
+    this._distance = this._container
+      ? Math.abs(this._startPosition - this._to)
+      : this._to;
 
     this._mappedOffset = this._options.offset;
 
     // Set offset from Offset Map
     if (this._isBrowser) {
-      this._options
-        .offsetMap
-        .forEach((value, key) => this._mappedOffset = window.innerWidth > key ? value : this._mappedOffset);
+      this._options.offsetMap.forEach(
+        (value, key) =>
+          (this._mappedOffset =
+            window.innerWidth > key ? value : this._mappedOffset)
+      );
     }
 
     this._distance += this._mappedOffset * (directionalDistance <= 0 ? 1 : -1);
     this._source$ = new ReplaySubject();
@@ -108,29 +120,29 @@
   }
 
   /** Recursively loop over the Scroll Animation */
   private _loop = (): void => {
-
     this._timeLapsed += this._tick;
-    this._percentage = (this._timeLapsed / this._options.duration);
-    this._percentage = (this._percentage > 1) ? 1 : this._percentage;
+    this._percentage = this._timeLapsed / this._options.duration;
+    this._percentage = this._percentage > 1 ? 1 : this._percentage;
 
     // Position Update
-    this._position = this._startPosition +
-      ((this._startPosition - this._to <= 0 ? 1 : -1) *
+    this._position =
+      this._startPosition +
+      (this._startPosition - this._to <= 0 ? 1 : -1) *
         this._distance *
-        EASING[this._options.easing](this._percentage));
+        EASING[this._options.easing](this._percentage);
 
     if (this._lastPosition !== null && this._position === this._lastPosition) {
       this.stop();
     } else {
       this._source$.next(this._position);
       this._isWindow
         ? this._listenerTarget.scrollTo(0, Math.floor(this._position))
-        : this._container.scrollTop = Math.floor(this._position);
+        : (this._container.scrollTop = Math.floor(this._position));
       this._lastPosition = this._position;
     }
-  }
+  };
 
   /**
    * Stop the current Scroll Animation Loop.
    *

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-config.interface.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-config.interface.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-config.interface.ts
@@ -43,17 +43,20 @@
   offset?: number;
 }
 
 /** Configuration Options Offset Only */
-export interface ScrollToConfigOptionsOffsetOnly extends ScrollToConfigOptionsBase {
+export interface ScrollToConfigOptionsOffsetOnly
+  extends ScrollToConfigOptionsBase {
   /** The offset from the top of the Element in pixels */
   offset: number;
 }
 
 /** The Configuration Object */
-export type ScrollToConfigOptions = ScrollToConfigOptionsTarget | ScrollToConfigOptionsOffsetOnly;
+export type ScrollToConfigOptions =
+  | ScrollToConfigOptionsTarget
+  | ScrollToConfigOptionsOffsetOnly;
 
 /** The Default Configuration Object */
-export interface ScrollToDefaultConfigOptions extends ScrollToConfigOptionsTarget {
+export interface ScrollToDefaultConfigOptions
+  extends ScrollToConfigOptionsTarget {
   action: ScrollToEvent;
 }
-

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-easing.interface.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-easing.interface.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-easing.interface.ts
@@ -1,6 +1,7 @@
 /** Named Easing Function */
-export type ScrollToAnimationEasing = 'easeInQuad'
+export type ScrollToAnimationEasing =
+  | 'easeInQuad'
   | 'easeOutQuad'
   | 'easeInOutQuad'
   | 'easeInCubic'
   | 'easeOutCubic'

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-event.interface.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-event.interface.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-event.interface.ts
@@ -1,6 +1,7 @@
 /** Supported Events to trigger the scroll animation */
-export type ScrollToEvent = 'click'
+export type ScrollToEvent =
+  | 'click'
   | 'mouseenter'
   | 'mouseover'
   | 'mousedown'
   | 'mouseup'

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-helpers.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-helpers.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to-helpers.ts
@@ -9,9 +9,9 @@
   action: 'click',
   duration: 650,
   easing: 'easeInOutQuad',
   offset: 0,
-  offsetMap: new Map()
+  offsetMap: new Map(),
 };
 
 /** Easing Colleciton */
 export const EASING: ScrollToAnimationEasingCollection = {
@@ -27,34 +27,43 @@
   easeInCubic: (time: number) => {
     return time * time * time;
   },
   easeOutCubic: (time: number) => {
-    return (--time) * time * time + 1;
+    return --time * time * time + 1;
   },
   easeInOutCubic: (time: number) => {
-    return time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;
+    return time < 0.5
+      ? 4 * time * time * time
+      : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;
   },
   easeInQuart: (time: number) => {
     return time * time * time * time;
   },
   easeOutQuart: (time: number) => {
-    return 1 - (--time) * time * time * time;
+    return 1 - --time * time * time * time;
   },
   easeInOutQuart: (time: number) => {
-    return time < 0.5 ? 8 * time * time * time * time : 1 - 8 * (--time) * time * time * time;
+    return time < 0.5
+      ? 8 * time * time * time * time
+      : 1 - 8 * --time * time * time * time;
   },
   easeInQuint: (time: number) => {
     return time * time * time * time * time;
   },
   easeOutQuint: (time: number) => {
-    return 1 + (--time) * time * time * time * time;
+    return 1 + --time * time * time * time * time;
   },
   easeInOutQuint: (time: number) => {
-    return time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * (--time) * time * time * time * time;
+    return time < 0.5
+      ? 16 * time * time * time * time * time
+      : 1 + 16 * --time * time * time * time * time;
   },
   easeOutElastic: (time: number) => {
-    return Math.pow(2, -10 * time) * Math.sin((time - 1 / 4) * (2 * Math.PI) / 1) + 1;
-  }
+    return (
+      Math.pow(2, -10 * time) * Math.sin(((time - 1 / 4) * (2 * Math.PI)) / 1) +
+      1
+    );
+  },
 };
 
 /**
  * Set of allowed events as triggers
@@ -69,9 +78,9 @@
   'dblclick',
   'contextmenu',
   'wheel',
   'mouseleave',
-  'mouseout'
+  'mouseout',
 ];
 
 /**
  * Strip hash (#) from value.

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.directive.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.directive.ts
@@ -2,32 +2,26 @@
   Directive,
   Input,
   ElementRef,
   Renderer2,
-  AfterViewInit
+  AfterViewInit,
 } from '@angular/core';
 
+import { DEFAULTS, EVENTS } from './scroll-to-helpers';
 import {
-  DEFAULTS,
-  EVENTS
-} from './scroll-to-helpers';
-import {
   ScrollToConfigOptions,
   ScrollToOffsetMap,
-  ScrollToTarget
+  ScrollToTarget,
 } from './scroll-to-config.interface';
-import {
-  ScrollToAnimationEasing
-} from './scroll-to-easing.interface';
+import { ScrollToAnimationEasing } from './scroll-to-easing.interface';
 import { ScrollToEvent } from './scroll-to-event.interface';
 import { ScrollToService } from './scroll-to.service';
 
 /* tslint:disable */
 @Directive({
-  selector: '[ngx-scroll-to]'
+  selector: '[ngx-scroll-to]',
 })
 export class ScrollToDirective implements AfterViewInit {
-
   @Input('ngx-scroll-to')
   public ngxScrollTo: ScrollToTarget = DEFAULTS.target;
 
   @Input('ngx-scroll-to-event')
@@ -49,9 +43,10 @@
 
   constructor(
     private _elementRef: ElementRef,
     private _scrollToService: ScrollToService,
-    private _renderer2: Renderer2) { }
+    private _renderer2: Renderer2
+  ) {}
 
   /**
    * Angular Lifecycle Hook - After View Init
    *
@@ -59,24 +54,26 @@
    *
    * @returns void
    */
   public ngAfterViewInit(): void {
-
     // Test Event Support
-    if (EVENTS.indexOf(this.ngxScrollToEvent) === -1) throw new Error(`Unsupported Event '${this.ngxScrollToEvent}'`);
+    if (EVENTS.indexOf(this.ngxScrollToEvent) === -1)
+      throw new Error(`Unsupported Event '${this.ngxScrollToEvent}'`);
 
     // Listen for the trigger...
-    this._renderer2.listen(this._elementRef.nativeElement, this.ngxScrollToEvent,
+    this._renderer2.listen(
+      this._elementRef.nativeElement,
+      this.ngxScrollToEvent,
       (event: Event) => {
-
         this._options = {
           target: this.ngxScrollTo,
           duration: this.ngxScrollToDuration,
           easing: this.ngxScrollToEasing,
           offset: this.ngxScrollToOffset,
-          offsetMap: this.ngxScrollToOffsetMap
+          offsetMap: this.ngxScrollToOffsetMap,
         };
 
         this._scrollToService.scrollTo(this._options);
-      });
+      }
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.module.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.module.ts
@@ -3,27 +3,20 @@
 import { ScrollToService } from './scroll-to.service';
 
 /** Scroll To Module */
 @NgModule({
-  declarations: [
-    ScrollToDirective
-  ],
-  exports: [
-    ScrollToDirective
-  ]
+  declarations: [ScrollToDirective],
+  exports: [ScrollToDirective],
 })
 export class ScrollToModule {
-
   /**
    * Guaranteed singletons for provided Services across App.
    *
    * @return          An Angular Module with Providers
    */
   static forRoot(): ModuleWithProviders {
     return {
       ngModule: ScrollToModule,
-      providers: [
-        ScrollToService
-      ]
+      providers: [ScrollToService],
     };
   }
 }

Index: /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.service.ts
+++ /home/idnes/Projects/awe/src/lib/scroll-to/lib/scroll-to.service.ts
@@ -5,9 +5,9 @@
 import {
   ScrollToConfigOptions,
   ScrollToTarget,
   ScrollToListenerTarget,
-  ScrollToConfigOptionsTarget
+  ScrollToConfigOptionsTarget,
 } from './scroll-to-config.interface';
 import { ScrollToAnimation } from './scroll-to-animation';
 import {
   stripHash,
@@ -15,9 +15,9 @@
   isNumber,
   isElementRef,
   isWindow,
   DEFAULTS,
-  isNativeElement
+  isNativeElement,
 } from './scroll-to-helpers';
 import { Observable, ReplaySubject, throwError } from 'rxjs/index';
 
 /**
@@ -28,9 +28,8 @@
  * distances for the Animation.
  */
 @Injectable()
 export class ScrollToService {
-
   /**
    * The animation that provides the scrolling
    * to happen smoothly over time. Defining it here
    * allows for usage of e.g. `start` and `stop`
@@ -74,11 +73,12 @@
    * @param options         Configuration Object
    * @returns               Observable
    */
   public scrollTo(options: ScrollToConfigOptions): Observable<any> {
+    if (!isPlatformBrowser(this._platformId)) {
+      return new ReplaySubject().asObservable();
+    }
 
-    if (!isPlatformBrowser(this._platformId)) { return new ReplaySubject().asObservable(); }
-
     return this._start(options);
   }
 
   /**
@@ -89,29 +89,39 @@
    * @param options         Configuration Object
    * @returns               Observable
    */
   private _start(options: ScrollToConfigOptions): Observable<number> {
-
     // Merge config with default values
     const mergedConfigOptions = {
-      ...DEFAULTS as ScrollToConfigOptions,
-      ...options
+      ...(DEFAULTS as ScrollToConfigOptions),
+      ...options,
     } as ScrollToConfigOptionsTarget;
 
-    if (this._animation) { this._animation.stop(); }
+    if (this._animation) {
+      this._animation.stop();
+    }
 
     const targetNode = this._getNode(mergedConfigOptions.target);
-    if (mergedConfigOptions.target && !targetNode) { return throwError('Unable to find Target Element'); }
+    if (mergedConfigOptions.target && !targetNode) {
+      return throwError('Unable to find Target Element');
+    }
 
-    const container: HTMLElement = this._getContainer(mergedConfigOptions, targetNode);
-    if (mergedConfigOptions.container && !container) { return throwError('Unable to find Container Element'); }
+    const container: HTMLElement = this._getContainer(
+      mergedConfigOptions,
+      targetNode
+    );
+    if (mergedConfigOptions.container && !container) {
+      return throwError('Unable to find Container Element');
+    }
 
     const listenerTarget = this._getListenerTarget(container) || window;
 
     let to = container ? container.getBoundingClientRect().top : 0;
 
     if (targetNode) {
-      to = isWindow(listenerTarget) ? targetNode.offsetTop : targetNode.getBoundingClientRect().top;
+      to = isWindow(listenerTarget)
+        ? targetNode.offsetTop
+        : targetNode.getBoundingClientRect().top;
     }
 
     // Create Animation
     this._animation = new ScrollToAnimation(
@@ -146,17 +156,20 @@
     animation$: Observable<any>,
     listenerTarget: ScrollToListenerTarget,
     onInterrupt: EventListenerOrEventListenerObject
   ) {
-    const subscription = animation$
-      .subscribe(
-        () => { },
-        () => { },
-        () => {
-          this._removeInterruptiveEventListeners(this._interruptiveEvents, listenerTarget, onInterrupt);
-          subscription.unsubscribe();
-        }
-      );
+    const subscription = animation$.subscribe(
+      () => {},
+      () => {},
+      () => {
+        this._removeInterruptiveEventListeners(
+          this._interruptiveEvents,
+          listenerTarget,
+          onInterrupt
+        );
+        subscription.unsubscribe();
+      }
+    );
   }
 
   /**
    * Get the container HTML Element in which
@@ -165,10 +178,12 @@
    * @param options         The Merged Configuration Object
    * @param targetNode    the targeted HTMLElement
    * @returns
    */
-  private _getContainer(options: ScrollToConfigOptions, targetNode: HTMLElement): HTMLElement | null {
-
+  private _getContainer(
+    options: ScrollToConfigOptions,
+    targetNode: HTMLElement
+  ): HTMLElement | null {
     let container: HTMLElement | null = null;
 
     if (options.container) {
       container = this._getNode(options.container, true);
@@ -189,35 +204,40 @@
    * @returns                 Void
    */
   private _addInterruptiveEventListeners(
     listenerTarget: ScrollToListenerTarget,
-    handler: EventListenerOrEventListenerObject): void {
+    handler: EventListenerOrEventListenerObject
+  ): void {
+    if (!listenerTarget) {
+      listenerTarget = window;
+    }
 
-    if (!listenerTarget) { listenerTarget = window; }
-
-    this._interruptiveEvents
-      .forEach(event => listenerTarget
-        .addEventListener(event, handler, this._supportPassive() ? { passive: true } : false));
+    this._interruptiveEvents.forEach(event =>
+      listenerTarget.addEventListener(
+        event,
+        handler,
+        this._supportPassive() ? { passive: true } : false
+      )
+    );
   }
 
   /**
    * Feature-detect support for passive event listeners.
    *
    * @returns       Whether or not passive event listeners are supported
    */
   private _supportPassive(): boolean {
-
     let supportsPassive = false;
 
     try {
       const opts = Object.defineProperty({}, 'passive', {
-        get: function () {
+        get: function() {
           supportsPassive = true;
-        }
+        },
       });
       window.addEventListener('testPassive', null, opts);
       window.removeEventListener('testPassive', null, opts);
-    } catch (e) { }
+    } catch (e) {}
 
     return supportsPassive;
   }
 
@@ -234,10 +254,10 @@
    */
   private _removeInterruptiveEventListeners(
     events: string[],
     listenerTarget: ScrollToListenerTarget,
-    handler: EventListenerOrEventListenerObject): void {
-
+    handler: EventListenerOrEventListenerObject
+  ): void {
     if (!listenerTarget) listenerTarget = window;
     events.forEach(event => listenerTarget.removeEventListener(event, handler));
   }
 
@@ -250,25 +270,29 @@
    * @param nativeElement     The Element to search the DOM Tree upwards from
    * @returns                 The first scrollable parent HTML Element
    */
   private _getFirstScrollableParent(nativeElement: HTMLElement): HTMLElement {
-
     let style: CSSStyleDeclaration = window.getComputedStyle(nativeElement);
 
     const overflowRegex: RegExp = /(auto|scroll|overlay)/;
 
     if (style.position === 'fixed') return null;
 
-    for (let parent = nativeElement; parent = parent.parentElement; null) {
-
+    for (let parent = nativeElement; (parent = parent.parentElement); null) {
       style = window.getComputedStyle(parent);
 
-      if (style.position === 'absolute'
-        || style.overflow === 'hidden'
-        || style.overflowY === 'hidden') continue;
+      if (
+        style.position === 'absolute' ||
+        style.overflow === 'hidden' ||
+        style.overflowY === 'hidden'
+      )
+        continue;
 
-      if (overflowRegex.test(style.overflow + style.overflowY)
-        || parent.tagName === 'BODY') return parent;
+      if (
+        overflowRegex.test(style.overflow + style.overflowY) ||
+        parent.tagName === 'BODY'
+      )
+        return parent;
     }
 
     return null;
   }
@@ -281,10 +305,12 @@
    * @param allowBodyTag    Indicate whether or not the Document Body is
    *                        considered a valid Target Node
    * @returns               The Target Node to scroll to
    */
-  private _getNode(id: ScrollToTarget, allowBodyTag: boolean = false): HTMLElement {
-
+  private _getNode(
+    id: ScrollToTarget,
+    allowBodyTag: boolean = false
+  ): HTMLElement {
     let targetNode: HTMLElement;
 
     if (isString(id)) {
       if (allowBodyTag && (id === 'body' || id === 'BODY')) {

Index: /home/idnes/Projects/awe/src/lib/split-pane/lib/module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/split-pane/lib/module.ts
+++ /home/idnes/Projects/awe/src/lib/split-pane/lib/module.ts
@@ -3,40 +3,32 @@
 import { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';
 
 import { SplitComponent } from './component/split.component';
 import { SplitAreaDirective } from './directive/splitArea.directive';
-import { UndetectedEventPlugin } from "./service/UndetectedEventPlugin";
+import { UndetectedEventPlugin } from './service/UndetectedEventPlugin';
 
 @NgModule({
-    imports: [
-        CommonModule
-    ],
-    declarations: [
-        SplitComponent,
-        SplitAreaDirective,
-    ],
-    exports: [
-        SplitComponent,
-        SplitAreaDirective,
-    ]
+  imports: [CommonModule],
+  declarations: [SplitComponent, SplitAreaDirective],
+  exports: [SplitComponent, SplitAreaDirective],
 })
 export class AngularSplitModule {
+  public static forRoot(): ModuleWithProviders {
+    return {
+      ngModule: AngularSplitModule,
+      providers: [
+        {
+          provide: EVENT_MANAGER_PLUGINS,
+          useClass: UndetectedEventPlugin,
+          multi: true,
+        },
+      ],
+    };
+  }
 
-    public static forRoot(): ModuleWithProviders {
-        return {
-            ngModule: AngularSplitModule,
-            providers: [{
-                provide: EVENT_MANAGER_PLUGINS,
-                useClass: UndetectedEventPlugin,
-                multi: true
-            }]
-        };
-    }
-
-    public static forChild(): ModuleWithProviders {
-        return {
-            ngModule: AngularSplitModule,
-            providers: []
-        };
-    }
-
+  public static forChild(): ModuleWithProviders {
+    return {
+      ngModule: AngularSplitModule,
+      providers: [],
+    };
+  }
 }

Index: /home/idnes/Projects/awe/src/lib/split-pane/lib/utils.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/split-pane/lib/utils.ts
+++ /home/idnes/Projects/awe/src/lib/split-pane/lib/utils.ts
@@ -1,35 +1,44 @@
 import { ElementRef } from '@angular/core';
 
 import { IPoint } from './interface/IPoint';
 
-
 export function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {
-    // TouchEvent
-    if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {
-        return {
-            x: (<TouchEvent> event).touches[0].clientX,
-            y: (<TouchEvent> event).touches[0].clientY,
-        };
-    }
-    // MouseEvent
-    else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {
-        return {
-            x: (<MouseEvent> event).clientX,
-            y: (<MouseEvent> event).clientY,
-        };
-    }
-    return null;
+  // TouchEvent
+  if (
+    (<TouchEvent>event).touches !== undefined &&
+    (<TouchEvent>event).touches.length > 0
+  ) {
+    return {
+      x: (<TouchEvent>event).touches[0].clientX,
+      y: (<TouchEvent>event).touches[0].clientY,
+    };
+  }
+  // MouseEvent
+  else if (
+    (<MouseEvent>event).clientX !== undefined &&
+    (<MouseEvent>event).clientY !== undefined
+  ) {
+    return {
+      x: (<MouseEvent>event).clientX,
+      y: (<MouseEvent>event).clientY,
+    };
+  }
+  return null;
 }
 
-export function getPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {
-    return elRef.nativeElement[(direction === 'horizontal') ? 'offsetWidth' : 'offsetHeight'];
-
+export function getPixelSize(
+  elRef: ElementRef,
+  direction: 'horizontal' | 'vertical'
+): number {
+  return elRef.nativeElement[
+    direction === 'horizontal' ? 'offsetWidth' : 'offsetHeight'
+  ];
 }
 
 export function getInputBoolean(v: any) {
-    return (typeof(v) === 'boolean') ? v : (v === 'false' ? false : true);
+  return typeof v === 'boolean' ? v : v === 'false' ? false : true;
 }
 
 export function isValidTotalSize(total: number): boolean {
-    return total > .999 && total < 1.001;
+  return total > 0.999 && total < 1.001;
 }

Index: /home/idnes/Projects/awe/src/lib/split-pane/lib/component/split.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/split-pane/lib/component/split.component.ts
+++ /home/idnes/Projects/awe/src/lib/split-pane/lib/component/split.component.ts
@@ -1,12 +1,30 @@
-import { Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, AfterViewInit, OnDestroy, ElementRef, NgZone, ViewChildren, QueryList } from '@angular/core';
+import {
+  Component,
+  Input,
+  Output,
+  ChangeDetectionStrategy,
+  ChangeDetectorRef,
+  Renderer2,
+  AfterViewInit,
+  OnDestroy,
+  ElementRef,
+  NgZone,
+  ViewChildren,
+  QueryList,
+} from '@angular/core';
 import { Observable, Subscriber, Subject } from 'rxjs';
 import { debounceTime } from 'rxjs/operators';
 
 import { IArea } from '../interface/IArea';
 import { IPoint } from '../interface/IPoint';
 import { SplitAreaDirective } from '../directive/splitArea.directive';
-import { getPointFromEvent, getPixelSize, getInputBoolean, isValidTotalSize } from '../utils';
+import {
+  getPointFromEvent,
+  getPixelSize,
+  getInputBoolean,
+  isValidTotalSize,
+} from '../utils';
 
 /**
  * angular-split
  *
@@ -45,16 +63,18 @@
   styleUrls: [`./split.component.scss`],
   templateUrl: './split.component.html',
 })
 export class SplitComponent implements AfterViewInit, OnDestroy {
-
   private _direction: 'horizontal' | 'vertical' = 'horizontal';
 
   @Input() set direction(v: 'horizontal' | 'vertical') {
-    this._direction = (v === 'vertical') ? 'vertical' : 'horizontal';
+    this._direction = v === 'vertical' ? 'vertical' : 'horizontal';
 
     this.renderer.addClass(this.elRef.nativeElement, `is-${this._direction}`);
-    this.renderer.removeClass(this.elRef.nativeElement, `is-${(this._direction === 'vertical') ? 'horizontal' : 'vertical'}`);
+    this.renderer.removeClass(
+      this.elRef.nativeElement,
+      `is-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`
+    );
 
     this.build(false, false);
   }
 
@@ -67,9 +87,9 @@
   private _gutterSize: number = 11;
 
   @Input() set gutterSize(v: number) {
     v = Number(v);
-    this._gutterSize = (!isNaN(v) && v > 0) ? v : 11;
+    this._gutterSize = !isNaN(v) && v > 0 ? v : 11;
 
     this.build(false, false);
   }
 
@@ -83,9 +103,10 @@
 
   @Input() set useTransition(v: boolean) {
     this._useTransition = getInputBoolean(v);
 
-    if (this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'is-transition');
+    if (this._useTransition)
+      this.renderer.addClass(this.elRef.nativeElement, 'is-transition');
     else this.renderer.removeClass(this.elRef.nativeElement, 'is-transition');
   }
 
   get useTransition(): boolean {
@@ -98,9 +119,10 @@
 
   @Input() set disabled(v: boolean) {
     this._disabled = getInputBoolean(v);
 
-    if (this._disabled) this.renderer.addClass(this.elRef.nativeElement, 'is-disabled');
+    if (this._disabled)
+      this.renderer.addClass(this.elRef.nativeElement, 'is-disabled');
     else this.renderer.removeClass(this.elRef.nativeElement, 'is-disabled');
   }
 
   get disabled(): boolean {
@@ -111,9 +133,9 @@
 
   private _dir: 'ltr' | 'rtl' = 'ltr';
 
   @Input() set dir(v: 'ltr' | 'rtl') {
-    v = (v === 'rtl') ? 'rtl' : 'ltr';
+    v = v === 'rtl' ? 'rtl' : 'ltr';
     this._dir = v;
 
     this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);
   }
@@ -123,32 +145,60 @@
   }
 
   ////
 
-  private dragStartSubscriber: Subscriber<{ gutterNum: number, sizes: Array<number> }>
-  @Output() get dragStart(): Observable<{ gutterNum: number, sizes: Array<number> }> {
-    return new Observable(subscriber => this.dragStartSubscriber = subscriber);
+  private dragStartSubscriber: Subscriber<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }>;
+  @Output() get dragStart(): Observable<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }> {
+    return new Observable(
+      subscriber => (this.dragStartSubscriber = subscriber)
+    );
   }
 
-  private dragEndSubscriber: Subscriber<{ gutterNum: number, sizes: Array<number> }>
-  @Output() get dragEnd(): Observable<{ gutterNum: number, sizes: Array<number> }> {
-    return new Observable(subscriber => this.dragEndSubscriber = subscriber);
+  private dragEndSubscriber: Subscriber<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }>;
+  @Output() get dragEnd(): Observable<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }> {
+    return new Observable(subscriber => (this.dragEndSubscriber = subscriber));
   }
 
-  private gutterClickSubscriber: Subscriber<{ gutterNum: number, sizes: Array<number> }>
-  @Output() get gutterClick(): Observable<{ gutterNum: number, sizes: Array<number> }> {
-    return new Observable(subscriber => this.gutterClickSubscriber = subscriber);
+  private gutterClickSubscriber: Subscriber<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }>;
+  @Output() get gutterClick(): Observable<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }> {
+    return new Observable(
+      subscriber => (this.gutterClickSubscriber = subscriber)
+    );
   }
 
-  private transitionEndSubscriber: Subscriber<Array<number>>
+  private transitionEndSubscriber: Subscriber<Array<number>>;
   @Output() get transitionEnd(): Observable<Array<number>> {
-    return new Observable(subscriber => this.transitionEndSubscriber = subscriber).pipe(
-      debounceTime<Array<number>>(20)
-    );
+    return new Observable(
+      subscriber => (this.transitionEndSubscriber = subscriber)
+    ).pipe(debounceTime<Array<number>>(20));
   }
 
-  private dragProgressSubject: Subject<{ gutterNum: number, sizes: Array<number> }> = new Subject();
-  dragProgress$: Observable<{ gutterNum: number, sizes: Array<number> }> = this.dragProgressSubject.asObservable();
+  private dragProgressSubject: Subject<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }> = new Subject();
+  dragProgress$: Observable<{
+    gutterNum: number;
+    sizes: Array<number>;
+  }> = this.dragProgressSubject.asObservable();
 
   ////
 
   private isDragging: boolean = false;
@@ -169,25 +219,31 @@
   };
 
   @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;
 
-  constructor(private ngZone: NgZone,
+  constructor(
+    private ngZone: NgZone,
     private elRef: ElementRef,
     private cdRef: ChangeDetectorRef,
-    private renderer: Renderer2) {
+    private renderer: Renderer2
+  ) {
     // To force adding default class, could be override by user @Input() or not
     this.direction = this._direction;
   }
 
   public ngAfterViewInit() {
     this.ngZone.runOutsideAngular(() => {
       // To avoid transition at first rendering
-      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'is-init'));
+      setTimeout(() =>
+        this.renderer.addClass(this.elRef.nativeElement, 'is-init')
+      );
     });
   }
 
   private getNbGutters(): number {
-    return (this.displayedAreas.length === 0) ? 0 : this.displayedAreas.length - 1;
+    return this.displayedAreas.length === 0
+      ? 0
+      : this.displayedAreas.length - 1;
   }
 
   public addArea(component: SplitAreaDirective): void {
     const newArea: IArea = {
@@ -199,10 +255,9 @@
     if (component.visible === true) {
       this.displayedAreas.push(newArea);
 
       this.build(true, true);
-    }
-    else {
+    } else {
       this.hidedAreas.push(newArea);
     }
   }
 
@@ -212,16 +267,19 @@
       area = this.displayedAreas.find(a => a.component === component);
       this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);
 
       this.build(true, true);
-    }
-    else if (this.hidedAreas.some(a => a.component === component)) {
+    } else if (this.hidedAreas.some(a => a.component === component)) {
       area = this.hidedAreas.find(a => a.component === component);
       this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);
     }
   }
 
-  public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {
+  public updateArea(
+    component: SplitAreaDirective,
+    resetOrders: boolean,
+    resetSizes: boolean
+  ): void {
     // Only refresh if area is displayed (No need to check inside 'hidedAreas')
     const area = this.displayedAreas.find(a => a.component === component);
     if (!area) {
       return;
@@ -247,13 +305,16 @@
     if (!area) {
       return;
     }
 
-    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);
+    const areas = this.displayedAreas.splice(
+      this.displayedAreas.indexOf(area),
+      1
+    );
     areas.forEach(area => {
       area.order = 0;
       area.size = 0;
-    })
+    });
     this.hidedAreas.push(...areas);
 
     this.build(true, true);
   }
@@ -276,9 +337,9 @@
 
     this.displayedAreas.forEach((area, i) => {
       // @ts-ignore
       area.component._size = sizes[i];
-    })
+    });
 
     this.build(false, true);
     return true;
   }
@@ -288,31 +349,38 @@
 
     // ¤ AREAS ORDER
 
     if (resetOrders === true) {
-
       // If user provided 'order' for each area, use it to sort them.
       if (this.displayedAreas.every(a => a.component.order !== null)) {
-        this.displayedAreas.sort((a, b) => (<number>a.component.order) - (<number>b.component.order));
+        this.displayedAreas.sort(
+          (a, b) => <number>a.component.order - <number>b.component.order
+        );
       }
 
       // Then set real order with multiples of 2, numbers between will be used by gutters.
       this.displayedAreas.forEach((area, i) => {
         area.order = i * 2;
         area.component.setStyleOrder(area.order);
       });
-
     }
 
     // ¤ AREAS SIZE PERCENT
 
     if (resetSizes === true) {
+      const totalUserSize = <number>(
+        this.displayedAreas.reduce(
+          (total: number, s: IArea) =>
+            s.component.size ? total + s.component.size : total,
+          0
+        )
+      );
 
-      const totalUserSize = <number>this.displayedAreas.reduce((total: number, s: IArea) => s.component.size ? total + s.component.size : total, 0);
-
       // If user provided 'size' for each area and total == 1, use it.
-      if (this.displayedAreas.every(a => a.component.size !== null) && isValidTotalSize(totalUserSize)) {
-
+      if (
+        this.displayedAreas.every(a => a.component.size !== null) &&
+        isValidTotalSize(totalUserSize)
+      ) {
         this.displayedAreas.forEach(area => {
           area.size = <number>area.component.size;
         });
       }
@@ -342,16 +410,19 @@
       }
     });
 
     if (percentToDispatch > 0 && this.displayedAreas.length > 0) {
-      const nbAreasNotZero = this.displayedAreas.filter(a => a.size !== 0).length;
+      const nbAreasNotZero = this.displayedAreas.filter(a => a.size !== 0)
+        .length;
 
       if (nbAreasNotZero > 0) {
         const percentToAdd = percentToDispatch / nbAreasNotZero;
 
-        this.displayedAreas.filter(a => a.size !== 0).forEach(area => {
-          area.size += percentToAdd;
-        });
+        this.displayedAreas
+          .filter(a => a.size !== 0)
+          .forEach(area => {
+            area.size += percentToAdd;
+          });
       }
       // All area sizes (container percentage) are less than guterSize,
       // It means containerSize < ngGutters * gutterSize
       else {
@@ -366,24 +437,34 @@
   private refreshStyleSizes(): void {
     const sumGutterSize = this.getNbGutters() * this.gutterSize;
 
     this.displayedAreas.forEach(area => {
-      area.component.setStyleFlexbasis(`calc( ${area.size * 100}% - ${area.size * sumGutterSize}px )`);
+      area.component.setStyleFlexbasis(
+        `calc( ${area.size * 100}% - ${area.size * sumGutterSize}px )`
+      );
     });
   }
 
   public clickGutter(event: MouseEvent, gutterNum: number): void {
     event.preventDefault();
     event.stopPropagation();
 
-    if (this.startPoint && this.startPoint.x === event.clientX && this.startPoint.y === event.clientY) {
+    if (
+      this.startPoint &&
+      this.startPoint.x === event.clientX &&
+      this.startPoint.y === event.clientY
+    ) {
       this.currentGutterNum = gutterNum;
 
       this.notify('click');
     }
   }
 
-  public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {
+  public startDragging(
+    event: MouseEvent | TouchEvent,
+    gutterOrder: number,
+    gutterNum: number
+  ): void {
     event.preventDefault();
     event.stopPropagation();
 
     this.startPoint = getPointFromEvent(event);
@@ -397,35 +478,77 @@
     if (!areaA || !areaB) {
       return;
     }
 
-    this.dragStartValues.sizePixelContainer = getPixelSize(this.elRef, this.direction);
-    this.dragStartValues.sizePixelA = getPixelSize(areaA.component.elRef, this.direction);
-    this.dragStartValues.sizePixelB = getPixelSize(areaB.component.elRef, this.direction);
+    this.dragStartValues.sizePixelContainer = getPixelSize(
+      this.elRef,
+      this.direction
+    );
+    this.dragStartValues.sizePixelA = getPixelSize(
+      areaA.component.elRef,
+      this.direction
+    );
+    this.dragStartValues.sizePixelB = getPixelSize(
+      areaB.component.elRef,
+      this.direction
+    );
     this.dragStartValues.sizePercentA = areaA.size;
     this.dragStartValues.sizePercentB = areaB.size;
     this.currentGutterNum = gutterNum;
 
     this.ngZone.runOutsideAngular(() => {
-      this.dragListeners.push(this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)));
-      this.dragListeners.push(this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)));
-      this.dragListeners.push(this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)));
+      this.dragListeners.push(
+        this.renderer.listen(
+          'document',
+          'mouseup',
+          this.stopDragging.bind(this)
+        )
+      );
+      this.dragListeners.push(
+        this.renderer.listen(
+          'document',
+          'touchend',
+          this.stopDragging.bind(this)
+        )
+      );
+      this.dragListeners.push(
+        this.renderer.listen(
+          'document',
+          'touchcancel',
+          this.stopDragging.bind(this)
+        )
+      );
 
-      this.dragListeners.push(this.renderer.listen('document', 'mousemove', (e: MouseEvent) => this.dragEvent(e, areaA, areaB)));
-      this.dragListeners.push(this.renderer.listen('document', 'touchmove', (e: TouchEvent) => this.dragEvent(e, areaA, areaB)));
+      this.dragListeners.push(
+        this.renderer.listen('document', 'mousemove', (e: MouseEvent) =>
+          this.dragEvent(e, areaA, areaB)
+        )
+      );
+      this.dragListeners.push(
+        this.renderer.listen('document', 'touchmove', (e: TouchEvent) =>
+          this.dragEvent(e, areaA, areaB)
+        )
+      );
     });
 
     areaA.component.lockEvents();
     areaB.component.lockEvents();
 
     this.isDragging = true;
     this.renderer.addClass(this.elRef.nativeElement, 'is-dragging');
-    this.renderer.addClass(this.gutterEls.toArray()[this.currentGutterNum - 1].nativeElement, 'is-dragged');
+    this.renderer.addClass(
+      this.gutterEls.toArray()[this.currentGutterNum - 1].nativeElement,
+      'is-dragged'
+    );
 
     this.notify('start');
   }
 
-  private dragEvent(event: MouseEvent | TouchEvent, areaA: IArea, areaB: IArea): void {
+  private dragEvent(
+    event: MouseEvent | TouchEvent,
+    areaA: IArea,
+    areaB: IArea
+  ): void {
     event.preventDefault();
     event.stopPropagation();
 
     if (!this.isDragging) {
@@ -438,9 +561,12 @@
     }
 
     // ¤ AREAS SIZE PIXEL
 
-    let offsetPixel = (this.direction === 'horizontal') ? (this.startPoint.x - this.endPoint.x) : (this.startPoint.y - this.endPoint.y);
+    let offsetPixel =
+      this.direction === 'horizontal'
+        ? this.startPoint.x - this.endPoint.x
+        : this.startPoint.y - this.endPoint.y;
     if (this.dir === 'rtl') {
       offsetPixel = -offsetPixel;
     }
 
@@ -449,14 +575,12 @@
 
     if (newSizePixelA < this.gutterSize && newSizePixelB < this.gutterSize) {
       // WTF.. get out of here!
       return;
-    }
-    else if (newSizePixelA < this.gutterSize) {
+    } else if (newSizePixelA < this.gutterSize) {
       newSizePixelB += newSizePixelA;
       newSizePixelA = 0;
-    }
-    else if (newSizePixelB < this.gutterSize) {
+    } else if (newSizePixelB < this.gutterSize) {
       newSizePixelA += newSizePixelB;
       newSizePixelB = 0;
     }
 
@@ -464,33 +588,44 @@
 
     if (newSizePixelA === 0) {
       areaB.size += areaA.size;
       areaA.size = 0;
-    }
-    else if (newSizePixelB === 0) {
+    } else if (newSizePixelB === 0) {
       areaA.size += areaB.size;
       areaB.size = 0;
-    }
-    else {
+    } else {
       // NEW_PERCENT = START_PERCENT / START_PIXEL * NEW_PIXEL;
       if (this.dragStartValues.sizePercentA === 0) {
-        areaB.size = this.dragStartValues.sizePercentB / this.dragStartValues.sizePixelB * newSizePixelB;
+        areaB.size =
+          (this.dragStartValues.sizePercentB /
+            this.dragStartValues.sizePixelB) *
+          newSizePixelB;
         areaA.size = this.dragStartValues.sizePercentB - areaB.size;
-      }
-      else if (this.dragStartValues.sizePercentB === 0) {
-        areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;
+      } else if (this.dragStartValues.sizePercentB === 0) {
+        areaA.size =
+          (this.dragStartValues.sizePercentA /
+            this.dragStartValues.sizePixelA) *
+          newSizePixelA;
         areaB.size = this.dragStartValues.sizePercentA - areaA.size;
+      } else {
+        areaA.size =
+          (this.dragStartValues.sizePercentA /
+            this.dragStartValues.sizePixelA) *
+          newSizePixelA;
+        areaB.size =
+          this.dragStartValues.sizePercentA +
+          this.dragStartValues.sizePercentB -
+          areaA.size;
       }
-      else {
-        areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;
-        areaB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - areaA.size;
-      }
     }
 
     this.refreshStyleSizes();
 
     // If moved from starting point, notify progress
-    if (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y) {
+    if (
+      this.startPoint.x !== this.endPoint.x ||
+      this.startPoint.y !== this.endPoint.y
+    ) {
       this.notify('progress');
     }
   }
 
@@ -515,51 +650,75 @@
       }
     }
 
     // If moved from starting point, notify end
-    if (event && this.endPoint && (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)) {
+    if (
+      event &&
+      this.endPoint &&
+      (this.startPoint.x !== this.endPoint.x ||
+        this.startPoint.y !== this.endPoint.y)
+    ) {
       this.notify('end');
     }
 
     this.isDragging = false;
     this.renderer.removeClass(this.elRef.nativeElement, 'is-dragging');
-    this.renderer.removeClass(this.gutterEls.toArray()[this.currentGutterNum - 1].nativeElement, 'is-dragged');
+    this.renderer.removeClass(
+      this.gutterEls.toArray()[this.currentGutterNum - 1].nativeElement,
+      'is-dragged'
+    );
 
     // Needed to let (click)="clickGutter(...)" event run and verify if mouse moved or not
     this.ngZone.runOutsideAngular(() => {
       setTimeout(() => {
         this.startPoint = null;
         this.endPoint = null;
-      })
+      });
     });
   }
 
-  public notify(type: 'start' | 'progress' | 'end' | 'click' | 'transitionEnd'): void {
+  public notify(
+    type: 'start' | 'progress' | 'end' | 'click' | 'transitionEnd'
+  ): void {
     const sizes: Array<number> = this.displayedAreas.map(a => a.size * 100);
 
     if (type === 'start') {
       if (this.dragStartSubscriber) {
-        this.ngZone.run(() => this.dragStartSubscriber.next({ gutterNum: this.currentGutterNum, sizes }));
+        this.ngZone.run(() =>
+          this.dragStartSubscriber.next({
+            gutterNum: this.currentGutterNum,
+            sizes,
+          })
+        );
       }
-    }
-    else if (type === 'end') {
+    } else if (type === 'end') {
       if (this.dragEndSubscriber) {
-        this.ngZone.run(() => this.dragEndSubscriber.next({ gutterNum: this.currentGutterNum, sizes }));
+        this.ngZone.run(() =>
+          this.dragEndSubscriber.next({
+            gutterNum: this.currentGutterNum,
+            sizes,
+          })
+        );
       }
-    }
-    else if (type === 'click') {
+    } else if (type === 'click') {
       if (this.gutterClickSubscriber) {
-        this.ngZone.run(() => this.gutterClickSubscriber.next({ gutterNum: this.currentGutterNum, sizes }));
+        this.ngZone.run(() =>
+          this.gutterClickSubscriber.next({
+            gutterNum: this.currentGutterNum,
+            sizes,
+          })
+        );
       }
-    }
-    else if (type === 'transitionEnd') {
+    } else if (type === 'transitionEnd') {
       if (this.transitionEndSubscriber) {
         this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));
       }
-    }
-    else if (type === 'progress') {
+    } else if (type === 'progress') {
       // Stay outside zone to allow users do what they want about change detection mechanism.
-      this.dragProgressSubject.next({ gutterNum: this.currentGutterNum, sizes });
+      this.dragProgressSubject.next({
+        gutterNum: this.currentGutterNum,
+        sizes,
+      });
     }
   }
 
   public ngOnDestroy(): void {

Index: /home/idnes/Projects/awe/src/lib/split-pane/lib/directive/splitArea.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/split-pane/lib/directive/splitArea.directive.ts
+++ /home/idnes/Projects/awe/src/lib/split-pane/lib/directive/splitArea.directive.ts
@@ -1,118 +1,142 @@
-import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';
+import {
+  Directive,
+  Input,
+  ElementRef,
+  Renderer2,
+  OnInit,
+  OnDestroy,
+  NgZone,
+} from '@angular/core';
 
 import { SplitComponent } from '../component/split.component';
 import { getInputBoolean } from '../utils';
 
 @Directive({
-    selector: 'as-split-area, [as-split-area]'
+  selector: 'as-split-area, [as-split-area]',
 })
 export class SplitAreaDirective implements OnInit, OnDestroy {
+  private _order: number | null = null;
 
-    private _order: number | null = null;
+  @Input() set order(v: number | null) {
+    v = Number(v);
+    this._order = !isNaN(v) ? v : null;
 
-    @Input() set order(v: number | null) {
-        v = Number(v);
-        this._order = !isNaN(v) ? v : null;
+    this.split.updateArea(this, true, false);
+  }
 
-        this.split.updateArea(this, true, false);
-    }
+  get order(): number | null {
+    return this._order;
+  }
 
-    get order(): number | null {
-        return this._order;
-    }
+  ////
 
-    ////
+  private _size: number | null = null;
 
-    private _size: number | null = null;
+  @Input() set size(v: number | null) {
+    v = Number(v);
+    this._size = !isNaN(v) && v >= 0 && v <= 100 ? v / 100 : null;
 
-    @Input() set size(v: number | null) {
-        v = Number(v);
-        this._size = (!isNaN(v) && v >= 0 && v <= 100) ? (v/100) : null;
+    this.split.updateArea(this, false, true);
+  }
 
-        this.split.updateArea(this, false, true);
-    }
+  get size(): number | null {
+    return this._size;
+  }
 
-    get size(): number | null {
-        return this._size;
-    }
+  ////
 
-    ////
+  private _visible: boolean = true;
 
-    private _visible: boolean = true;
+  @Input() set visible(v: boolean) {
+    this._visible = getInputBoolean(v);
 
-    @Input() set visible(v: boolean) {
-        this._visible = getInputBoolean(v);
-
-        if(this._visible) {
-            this.split.showArea(this);
-            this.renderer.removeClass(this.elRef.nativeElement, 'is-hided');
-        }
-        else {
-            this.split.hideArea(this);
-            this.renderer.addClass(this.elRef.nativeElement, 'is-hided');
-        }
+    if (this._visible) {
+      this.split.showArea(this);
+      this.renderer.removeClass(this.elRef.nativeElement, 'is-hided');
+    } else {
+      this.split.hideArea(this);
+      this.renderer.addClass(this.elRef.nativeElement, 'is-hided');
     }
+  }
 
-    get visible(): boolean {
-        return this._visible;
-    }
+  get visible(): boolean {
+    return this._visible;
+  }
 
-    ////
+  ////
 
-    private transitionListener: Function;
-    private readonly lockListeners: Array<Function> = [];
+  private transitionListener: Function;
+  private readonly lockListeners: Array<Function> = [];
 
-    constructor(private ngZone: NgZone,
-                public elRef: ElementRef,
-                private renderer: Renderer2,
-                private split: SplitComponent) {
-        this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');
-    }
+  constructor(
+    private ngZone: NgZone,
+    public elRef: ElementRef,
+    private renderer: Renderer2,
+    private split: SplitComponent
+  ) {
+    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');
+  }
 
-    public ngOnInit(): void {
-        this.split.addArea(this);
+  public ngOnInit(): void {
+    this.split.addArea(this);
 
-        this.ngZone.runOutsideAngular(() => {
-            this.transitionListener = this.renderer.listen(this.elRef.nativeElement, 'transitionend', (event: TransitionEvent) => {
-                // Limit only flex-basis transition to trigger the event
-                if(event.propertyName === 'flex-basis') {
-                    this.split.notify('transitionEnd');
-                }
-            });
-        });
-    }
+    this.ngZone.runOutsideAngular(() => {
+      this.transitionListener = this.renderer.listen(
+        this.elRef.nativeElement,
+        'transitionend',
+        (event: TransitionEvent) => {
+          // Limit only flex-basis transition to trigger the event
+          if (event.propertyName === 'flex-basis') {
+            this.split.notify('transitionEnd');
+          }
+        }
+      );
+    });
+  }
 
-    public setStyleOrder(value: number): void {
-        this.renderer.setStyle(this.elRef.nativeElement, 'order', value);
-    }
+  public setStyleOrder(value: number): void {
+    this.renderer.setStyle(this.elRef.nativeElement, 'order', value);
+  }
 
-    public setStyleFlexbasis(value: string): void {
-        this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', value);
-    }
+  public setStyleFlexbasis(value: string): void {
+    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', value);
+  }
 
-    public lockEvents(): void {
-        this.ngZone.runOutsideAngular(() => {
-            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false) );
-            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false) );
-        });
-    }
+  public lockEvents(): void {
+    this.ngZone.runOutsideAngular(() => {
+      this.lockListeners.push(
+        this.renderer.listen(
+          this.elRef.nativeElement,
+          'selectstart',
+          (e: Event) => false
+        )
+      );
+      this.lockListeners.push(
+        this.renderer.listen(
+          this.elRef.nativeElement,
+          'dragstart',
+          (e: Event) => false
+        )
+      );
+    });
+  }
 
-    public unlockEvents(): void {
-        while(this.lockListeners.length > 0) {
-            const fct = this.lockListeners.pop();
-            if(fct) {
-                fct();
-            }
-        }
+  public unlockEvents(): void {
+    while (this.lockListeners.length > 0) {
+      const fct = this.lockListeners.pop();
+      if (fct) {
+        fct();
+      }
     }
+  }
 
-    public ngOnDestroy(): void {
-        this.unlockEvents();
+  public ngOnDestroy(): void {
+    this.unlockEvents();
 
-        if(this.transitionListener) {
-            this.transitionListener();
-        }
+    if (this.transitionListener) {
+      this.transitionListener();
+    }
 
-        this.split.removeArea(this);
-    }
+    this.split.removeArea(this);
+  }
 }

Index: /home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IArea.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IArea.ts
+++ /home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IArea.ts
@@ -1,7 +1,7 @@
-import { SplitAreaDirective } from "../directive/splitArea.directive";
+import { SplitAreaDirective } from '../directive/splitArea.directive';
 
 export interface IArea {
-    component: SplitAreaDirective;
-    size: number;
-    order: number;
\ No newline at end of file
-}
+  component: SplitAreaDirective;
+  size: number;
+  order: number;
+}

Index: /home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IPoint.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IPoint.ts
+++ /home/idnes/Projects/awe/src/lib/split-pane/lib/interface/IPoint.ts
@@ -1,5 +1,4 @@
-
 export interface IPoint {
-    x: number;
-    y: number;
-}
\ No newline at end of file
+  x: number;
+  y: number;
+}

Index: /home/idnes/Projects/awe/src/lib/split-pane/lib/service/UndetectedEventPlugin.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/split-pane/lib/service/UndetectedEventPlugin.ts
+++ /home/idnes/Projects/awe/src/lib/split-pane/lib/service/UndetectedEventPlugin.ts
@@ -6,16 +6,24 @@
  * https://github.com/kryops/ng2-events
  */
 @Injectable()
 export class UndetectedEventPlugin {
-    manager: EventManager;
+  manager: EventManager;
 
-    supports(eventName: string): boolean {
-        return eventName.indexOf('as-split-undetected.') === 0;
-    }
+  supports(eventName: string): boolean {
+    return eventName.indexOf('as-split-undetected.') === 0;
+  }
 
-    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {
-        const realEventName = eventName.slice(20);
+  addEventListener(
+    element: HTMLElement,
+    eventName: string,
+    handler: Function
+  ): Function {
+    const realEventName = eventName.slice(20);
 
-        return this.manager.getZone().runOutsideAngular(() => this.manager.addEventListener(element, realEventName, handler));
-    }
+    return this.manager
+      .getZone()
+      .runOutsideAngular(() =>
+        this.manager.addEventListener(element, realEventName, handler)
+      );
+  }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/index.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/index.ts
@@ -8,9 +8,8 @@
 export * from './lib/common/legend/scale-legend.component';
 export * from './lib/common/legend/legend-entry.component';
 export * from './lib/common/legend/advanced-legend.component';
 
-
 export * from './lib/common/tooltip/tooltip.module';
 export * from './lib/common/tooltip/tooltip.service';
 export * from './lib/common/tooltip/tooltip.component';
 export * from './lib/common/tooltip/tooltip.directive';
@@ -18,10 +17,8 @@
 export * from './lib/common/tooltip/style.type';
 export * from './lib/common/tooltip/alignment.type';
 export * from './lib/common/tooltip/show.type';
 
-
-
 export * from './lib/common/axes/axes.module';
 export * from './lib/common/axes/axis-label.component';
 export * from './lib/common/axes/x-axis.component';
 export * from './lib/common/axes/x-axis-ticks.component';
@@ -51,9 +48,8 @@
 export * from './lib/common/view-dimensions.helper';
 export * from './lib/common/label.helper';
 export * from './lib/common/domain.helper';
 
-
 // area chart
 
 export * from './lib/area-chart/area-chart.module';
 export * from './lib/area-chart/area-chart.component';

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/polyfills.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/polyfills.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/polyfills.ts
@@ -1,9 +1,12 @@
 // The export is needed here to generate a valid polyfills.metadata.json file
 export function ngxChartsPolyfills() {
   // IE11 fix
   // Ref: https://github.com/swimlane/ng-svg-charts/issues/386
-  if (typeof(SVGElement) !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {
+  if (
+    typeof SVGElement !== 'undefined' &&
+    typeof SVGElement.prototype.contains === 'undefined'
+  ) {
     SVGElement.prototype.contains = HTMLDivElement.prototype.contains;
   }
 }
 

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/svg-chart.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/svg-chart.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/svg-chart.module.ts
@@ -25,7 +25,7 @@
     // NumberCardModule,
     PieChartModule,
     // TreeMapModule,
     // GaugeModule
-  ]
+  ],
 })
-export class SvgChartsModule { }
+export class SvgChartsModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/area/area.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/area/area.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/area/area.component.ts
@@ -13,12 +13,11 @@
 
 @Component({
   selector: 'g[ng-svg-charts-area]',
   template: 'area.template.html',
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class AreaComponent implements OnChanges {
-
   @Input() data;
   @Input() path;
   @Input() startingPath;
   @Input() fill;
@@ -75,9 +74,11 @@
   updatePathEl(): void {
     const node: any = select(this.element).select('.area');
 
     if (this.animations) {
-      node.transition().duration(750)
+      node
+        .transition()
+        .duration(750)
         .attr('d', this.path);
     } else {
       node.attr('d', this.path);
     }
@@ -91,13 +92,14 @@
     return [
       {
         offset: 0,
         color: this.fill,
-        opacity: this.startOpacity
+        opacity: this.startOpacity,
       },
       {
         offset: 100,
         color: this.fill,
-        opacity: this.endOpacity
-    }];
+        opacity: this.endOpacity,
+      },
+    ];
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart-normalized.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart-normalized.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart-normalized.component.ts
@@ -6,14 +6,17 @@
   HostListener,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';
 import { curveLinear } from 'd3-shape';
 
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
 import { id } from '../utils/id';
 import { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';
@@ -22,12 +25,11 @@
   selector: 'ng-svg-charts-area-chart-normalized',
   templateUrl: 'area-chart-normalized.template.html',
   changeDetection: ChangeDetectionStrategy.OnPush,
   styleUrls: ['../common/base-chart/base-chart.component.scss'],
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class AreaChartNormalizedComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -56,9 +58,11 @@
   @Output() activate: EventEmitter<any> = new EventEmitter();
   @Output() deactivate: EventEmitter<any> = new EventEmitter();
 
   @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;
-  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;
+  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<
+    any
+  >;
 
   dims: ViewDimensions;
   scaleType: string;
   xDomain: any[];
@@ -101,13 +105,14 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.timeline) {
-      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);
+      this.dims.height -=
+        this.timelineHeight + this.margin[2] + this.timelinePadding;
     }
 
     this.xDomain = this.getXDomain();
     if (this.filteredDomain) {
@@ -161,9 +166,9 @@
           d = {
             name: val,
             value: 0,
             d0,
-            d1: d0
+            d1: d0,
           };
           group.series.push(d);
         }
 
@@ -191,11 +196,15 @@
   updateTimeline(): void {
     if (this.timeline) {
       this.timelineWidth = this.dims.width;
       this.timelineXDomain = this.getXDomain();
-      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);
+      this.timelineXScale = this.getXScale(
+        this.timelineXDomain,
+        this.timelineWidth
+      );
       this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);
-      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;
+      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this
+        .margin[2]})`;
     }
   }
 
   getXDomain(): any[] {
@@ -212,19 +221,23 @@
       domain = [new Date(min), new Date(max)];
       this.xSet = [...values].sort((a, b) => {
         const aDate = a.getTime();
         const bDate = b.getTime();
-        if (aDate > bDate) { return 1; }
-        if (bDate > aDate) { return -1; }
+        if (aDate > bDate) {
+          return 1;
+        }
+        if (bDate > aDate) {
+          return -1;
+        }
         return 0;
       });
     } else if (this.scaleType === 'linear') {
       values = values.map(v => Number(v));
       min = Math.min(...values);
       max = Math.max(...values);
       domain = [min, max];
       // Use compare function to sort numbers numerically
-      this.xSet = [...values].sort((a, b) => (a - b));
+      this.xSet = [...values].sort((a, b) => a - b);
     } else {
       domain = values;
       this.xSet = values;
     }
@@ -247,15 +260,12 @@
       scale = scaleTime();
     } else if (this.scaleType === 'linear') {
       scale = scaleLinear();
     } else if (this.scaleType === 'ordinal') {
-      scale = scalePoint()
-        .padding(0.1);
+      scale = scalePoint().padding(0.1);
     }
 
-    scale
-      .range([0, width])
-      .domain(domain);
+    scale.range([0, width]).domain(domain);
 
     return this.roundDomains ? scale.nice() : scale;
   }
 
@@ -302,18 +312,23 @@
     } else {
       domain = this.yDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.seriesDomain;
       opts.colors = this.colors;
@@ -364,6 +379,5 @@
       this.deactivate.emit({ value: entry, entries: [] });
     }
     this.activeEntries = [];
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart-stacked.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart-stacked.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart-stacked.component.ts
@@ -6,14 +6,17 @@
   ViewEncapsulation,
   HostListener,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';
 import { curveLinear } from 'd3-shape';
 
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
 import { id } from '../utils/id';
 import { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';
@@ -22,12 +25,11 @@
   selector: 'ng-svg-charts-area-chart-stacked',
   templateUrl: 'area-chart-stacked.template.html',
   changeDetection: ChangeDetectionStrategy.OnPush,
   styleUrls: ['../common/base-chart/base-chart.component.scss'],
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class AreaChartStackedComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -60,9 +62,11 @@
   @Output() activate: EventEmitter<any> = new EventEmitter();
   @Output() deactivate: EventEmitter<any> = new EventEmitter();
 
   @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;
-  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;
+  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<
+    any
+  >;
 
   dims: ViewDimensions;
   scaleType: string;
   xDomain: any[];
@@ -104,13 +108,14 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.timeline) {
-      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);
+      this.dims.height -=
+        this.timelineHeight + this.margin[2] + this.timelinePadding;
     }
 
     this.xDomain = this.getXDomain();
     if (this.filteredDomain) {
@@ -122,15 +127,13 @@
 
     this.xScale = this.getXScale(this.xDomain, this.dims.width);
     this.yScale = this.getYScale(this.yDomain, this.dims.height);
 
-
     // tslint:disable-next-line: prefer-for-of
     for (let i = 0; i < this.xSet.length; i++) {
       const val = this.xSet[i];
       let d0 = 0;
       for (const group of this.results) {
-
         let d = group.series.find(item => {
           let a = item.name;
           let b = val;
           if (this.scaleType === 'time') {
@@ -148,9 +151,9 @@
           d = {
             name: val,
             value: 0,
             d0,
-            d1: d0
+            d1: d0,
           };
           group.series.push(d);
         }
       }
@@ -160,9 +163,9 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
 
     this.clipPathId = 'clip' + id().toString();
     this.clipPath = `url(#${this.clipPathId})`;
   }
@@ -170,11 +173,15 @@
   updateTimeline(): void {
     if (this.timeline) {
       this.timelineWidth = this.dims.width;
       this.timelineXDomain = this.getXDomain();
-      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);
+      this.timelineXScale = this.getXScale(
+        this.timelineXDomain,
+        this.timelineWidth
+      );
       this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);
-      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;
+      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this
+        .margin[2]})`;
     }
   }
 
   getXDomain(): any[] {
@@ -189,30 +196,30 @@
 
     let min;
     let max;
     if (this.scaleType === 'time' || this.scaleType === 'linear') {
-      min = this.xScaleMin
-        ? this.xScaleMin
-        : Math.min(...values);
+      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);
 
-      max = this.xScaleMax
-        ? this.xScaleMax
-        : Math.max(...values);
+      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);
     }
 
     if (this.scaleType === 'time') {
       domain = [new Date(min), new Date(max)];
       this.xSet = [...values].sort((a, b) => {
         const aDate = a.getTime();
         const bDate = b.getTime();
-        if (aDate > bDate) { return 1; }
-        if (bDate > aDate) { return -1; }
+        if (aDate > bDate) {
+          return 1;
+        }
+        if (bDate > aDate) {
+          return -1;
+        }
         return 0;
       });
     } else if (this.scaleType === 'linear') {
       domain = [min, max];
       // Use compare function to sort numbers numerically
-      this.xSet = [...values].sort((a, b) => (a - b));
+      this.xSet = [...values].sort((a, b) => a - b);
     } else {
       domain = values;
       this.xSet = values;
     }
@@ -245,15 +252,11 @@
 
       domain.push(sum);
     }
 
-    const min = this.yScaleMin
-      ? this.yScaleMin
-      : Math.min(0, ...domain);
+    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);
 
-    const max = this.yScaleMax
-      ? this.yScaleMax
-      : Math.max(...domain);
+    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);
     return [min, max];
   }
 
   getSeriesDomain(): any[] {
@@ -267,15 +270,12 @@
       scale = scaleTime();
     } else if (this.scaleType === 'linear') {
       scale = scaleLinear();
     } else if (this.scaleType === 'ordinal') {
-      scale = scalePoint()
-        .padding(0.1);
+      scale = scalePoint().padding(0.1);
     }
 
-    scale
-      .range([0, width])
-      .domain(domain);
+    scale.range([0, width]).domain(domain);
 
     return this.roundDomains ? scale.nice() : scale;
   }
 
@@ -322,18 +322,23 @@
     } else {
       domain = this.yDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.seriesDomain;
       opts.colors = this.colors;
@@ -362,9 +367,9 @@
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(item) {
@@ -384,6 +389,5 @@
       this.deactivate.emit({ value: entry, entries: [] });
     }
     this.activeEntries = [];
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart.component.ts
@@ -6,14 +6,17 @@
   ViewEncapsulation,
   HostListener,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';
 import { curveLinear } from 'd3-shape';
 
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
 import { id } from '../utils/id';
 import { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';
@@ -22,12 +25,11 @@
   selector: 'ng-svg-charts-area-chart',
   template: 'area-chart.template.html',
   changeDetection: ChangeDetectionStrategy.OnPush,
   styleUrls: ['../common/base-chart/base-chart.component.scss'],
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class AreaChartComponent extends BaseChartComponent {
-
   @Input() legend;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() state;
@@ -63,9 +65,11 @@
   @Output() activate: EventEmitter<any> = new EventEmitter();
   @Output() deactivate: EventEmitter<any> = new EventEmitter();
 
   @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;
-  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;
+  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<
+    any
+  >;
 
   dims: ViewDimensions;
   xSet: any;
   xDomain: any;
@@ -108,13 +112,14 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.timeline) {
-      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);
+      this.dims.height -=
+        this.timelineHeight + this.margin[2] + this.timelinePadding;
     }
 
     this.xDomain = this.getXDomain();
     if (this.filteredDomain) {
@@ -131,9 +136,9 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;
 
     this.clipPathId = 'clip' + id().toString();
     this.clipPath = `url(#${this.clipPathId})`;
   }
@@ -141,11 +146,15 @@
   updateTimeline(): void {
     if (this.timeline) {
       this.timelineWidth = this.dims.width;
       this.timelineXDomain = this.getXDomain();
-      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);
+      this.timelineXScale = this.getXScale(
+        this.timelineXDomain,
+        this.timelineWidth
+      );
       this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);
-      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;
+      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this
+        .margin[2]})`;
     }
   }
 
   getXDomain(): any[] {
@@ -160,30 +169,30 @@
 
     let min;
     let max;
     if (this.scaleType === 'time' || this.scaleType === 'linear') {
-      min = this.xScaleMin
-        ? this.xScaleMin
-        : Math.min(...values);
+      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);
 
-      max = this.xScaleMax
-        ? this.xScaleMax
-        : Math.max(...values);
+      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);
     }
 
     if (this.scaleType === 'time') {
       domain = [new Date(min), new Date(max)];
       this.xSet = [...values].sort((a, b) => {
         const aDate = a.getTime();
         const bDate = b.getTime();
-        if (aDate > bDate) { return 1; }
-        if (bDate > aDate) { return -1; }
+        if (aDate > bDate) {
+          return 1;
+        }
+        if (bDate > aDate) {
+          return -1;
+        }
         return 0;
       });
     } else if (this.scaleType === 'linear') {
       domain = [min, max];
       // Use compare function to sort numbers numerically
-      this.xSet = [...values].sort((a, b) => (a - b));
+      this.xSet = [...values].sort((a, b) => a - b);
     } else {
       domain = values;
       this.xSet = values;
     }
@@ -209,15 +218,11 @@
     if (this.baseValue !== 'auto') {
       values.push(this.baseValue);
     }
 
-    const min = this.yScaleMin
-      ? this.yScaleMin
-      : Math.min(...values);
+    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);
 
-    const max = this.yScaleMax
-      ? this.yScaleMax
-      : Math.max(...values);
+    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);
 
     return [min, max];
   }
 
@@ -232,14 +237,12 @@
       scale = scaleTime();
     } else if (this.scaleType === 'linear') {
       scale = scaleLinear();
     } else if (this.scaleType === 'ordinal') {
-      scale = scalePoint()
-        .padding(0.1);
+      scale = scalePoint().padding(0.1);
     }
 
-    scale.range([0, width])
-        .domain(domain);
+    scale.range([0, width]).domain(domain);
 
     return this.roundDomains ? scale.nice() : scale;
   }
 
@@ -317,18 +320,23 @@
     } else {
       domain = this.yDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.seriesDomain;
       opts.colors = this.colors;
@@ -357,9 +365,9 @@
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(item) {

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-chart.module.ts
@@ -10,14 +10,14 @@
   declarations: [
     AreaChartComponent,
     AreaChartNormalizedComponent,
     AreaChartStackedComponent,
-    AreaSeriesComponent
+    AreaSeriesComponent,
   ],
   exports: [
     AreaChartComponent,
     AreaChartNormalizedComponent,
     AreaChartStackedComponent,
-    AreaSeriesComponent
-  ]
+    AreaSeriesComponent,
+  ],
 })
 export class AreaChartModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/area-chart/area-series.component.ts
@@ -4,21 +4,20 @@
   Output,
   EventEmitter,
   OnChanges,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { area } from 'd3-shape';
 
 import { sortLinear, sortByTime, sortByDomain } from '../utils/sort';
 
 @Component({
   selector: 'g[ng-svg-charts-area-series]',
   template: 'area-series.template.html',
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class AreaSeriesComponent implements OnChanges {
-
   @Input() data;
   @Input() xScale;
   @Input() yScale;
   @Input() baseValue: any = 'auto';
@@ -49,9 +48,9 @@
 
     let currentArea;
     let startingArea;
 
-    const xProperty = (d) => {
+    const xProperty = d => {
       const label = d.name;
       return this.xScale(label);
     };
 
@@ -67,21 +66,33 @@
         .y1(d => this.yScale.range()[0]);
     } else {
       currentArea = area<any>()
         .x(xProperty)
-        .y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))
+        .y0(() =>
+          this.baseValue === 'auto'
+            ? this.yScale.range()[0]
+            : this.yScale(this.baseValue)
+        )
         .y1(d => this.yScale(d.value));
 
       startingArea = area<any>()
         .x(xProperty)
-        .y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))
-        .y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));
+        .y0(d =>
+          this.baseValue === 'auto'
+            ? this.yScale.range()[0]
+            : this.yScale(this.baseValue)
+        )
+        .y1(d =>
+          this.baseValue === 'auto'
+            ? this.yScale.range()[0]
+            : this.yScale(this.baseValue)
+        );
     }
 
     currentArea.curve(this.curve);
     startingArea.curve(this.curve);
 
-    this.opacity = .8;
+    this.opacity = 0.8;
 
     let data = this.data.series;
     if (this.scaleType === 'linear') {
       data = sortLinear(data, 'name');
@@ -117,20 +128,23 @@
     }
   }
 
   isActive(entry): boolean {
-    if (!this.activeEntries) { return false; }
+    if (!this.activeEntries) {
+      return false;
+    }
     const item = this.activeEntries.find(d => {
       return entry.name === d.name;
     });
     return item !== undefined;
   }
 
   isInactive(entry): boolean {
-    if (!this.activeEntries || this.activeEntries.length === 0) { return false; }
+    if (!this.activeEntries || this.activeEntries.length === 0) {
+      return false;
+    }
     const item = this.activeEntries.find(d => {
       return entry.name === d.name;
     });
     return item === undefined;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-chart.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-chart.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-chart.module.ts
@@ -26,9 +26,9 @@
     BarVerticalNormalizedComponent,
     BarVerticalStackedComponent,
     BarLabelComponent,
     SeriesHorizontalComponent,
-    SeriesVerticalComponent
+    SeriesVerticalComponent,
   ],
   exports: [
     BarComponent,
     BarHorizontalComponent,
@@ -40,8 +40,8 @@
     BarVerticalNormalizedComponent,
     BarVerticalStackedComponent,
     BarLabelComponent,
     SeriesHorizontalComponent,
-    SeriesVerticalComponent
-  ]
+    SeriesVerticalComponent,
+  ],
 })
 export class BarChartModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar/bar.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar/bar.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar/bar.component.ts
@@ -6,21 +6,20 @@
   HostListener,
   ElementRef,
   SimpleChanges,
   OnChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { select } from 'd3-selection';
 import { roundedRect } from '../../common/shape.helper';
 import { id } from '../../utils/id';
 
 @Component({
   selector: 'g[ng-svg-charts-bar]',
   templateUrl: 'bar.template.html',
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class BarComponent implements OnChanges {
-
   @Input() fill;
   @Input() data;
   @Input() width;
   @Input() height;
@@ -83,9 +82,11 @@
   updatePathEl(): void {
     const node: any = select(this.element).select('.bar');
     const path = this.getPath();
     if (this.animations) {
-    node.transition().duration(500)
+      node
+        .transition()
+        .duration(500)
         .attr('d', path);
     } else {
       node.attr('d', path);
     }
@@ -99,15 +100,16 @@
     return [
       {
         offset: 0,
         color: this.fill,
-        opacity: this.getStartOpacity()
+        opacity: this.getStartOpacity(),
       },
       {
         offset: 100,
         color: this.fill,
-        opacity: 1
-    }];
+        opacity: 1,
+      },
+    ];
   }
 
   getStartingPath() {
     if (!this.animations) {
@@ -119,16 +121,30 @@
 
     if (this.roundEdges) {
       if (this.orientation === 'vertical') {
         radius = Math.min(this.height, radius);
-        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);
+        path = roundedRect(
+          this.x,
+          this.y + this.height,
+          this.width,
+          1,
+          0,
+          this.edges
+        );
       } else if (this.orientation === 'horizontal') {
         radius = Math.min(this.width, radius);
         path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);
       }
     } else {
       if (this.orientation === 'vertical') {
-        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);
+        path = roundedRect(
+          this.x,
+          this.y + this.height,
+          this.width,
+          1,
+          0,
+          this.edges
+        );
       } else if (this.orientation === 'horizontal') {
         path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);
       }
     }
@@ -142,15 +158,36 @@
 
     if (this.roundEdges) {
       if (this.orientation === 'vertical') {
         radius = Math.min(this.height, radius);
-        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);
+        path = roundedRect(
+          this.x,
+          this.y,
+          this.width,
+          this.height,
+          radius,
+          this.edges
+        );
       } else if (this.orientation === 'horizontal') {
         radius = Math.min(this.width, radius);
-        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);
+        path = roundedRect(
+          this.x,
+          this.y,
+          this.width,
+          this.height,
+          radius,
+          this.edges
+        );
       }
     } else {
-      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);
+      path = roundedRect(
+        this.x,
+        this.y,
+        this.width,
+        this.height,
+        radius,
+        this.edges
+      );
     }
 
     return path;
   }
@@ -177,17 +214,17 @@
     let edges = [false, false, false, false];
     if (this.roundEdges) {
       if (this.orientation === 'vertical') {
         if (this.data.value > 0) {
-          edges =  [true, true, false, false];
+          edges = [true, true, false, false];
         } else {
-          edges =  [false, false, true, true];
+          edges = [false, false, true, true];
         }
       } else if (this.orientation === 'horizontal') {
         if (this.data.value > 0) {
-          edges =  [false, true, false, true];
+          edges = [false, true, false, true];
         } else {
-          edges =  [true, false, true, false];
+          edges = [true, false, true, false];
         }
       }
     }
     return edges;
@@ -201,6 +238,5 @@
   @HostListener('mouseleave')
   onMouseLeave(): void {
     this.deactivate.emit(this.data);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal/bar-horizontal.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal/bar-horizontal.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal/bar-horizontal.component.ts
@@ -5,25 +5,27 @@
   EventEmitter,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
   selector: 'ng-svg-charts-bar-horizontal',
   templateUrl: 'bar-horizontal.template.html',
   changeDetection: ChangeDetectionStrategy.OnPush,
   styleUrls: ['../../common/base-chart/base-chart.component.scss'],
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class BarHorizontalComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -68,18 +70,23 @@
   margin = [10, 20, 10, 20];
   xAxisHeight = 0;
   yAxisWidth = 0;
   legendOptions: any;
-  dataLabelMaxWidth: any = {negative: 0, positive: 0};
+  dataLabelMaxWidth: any = { negative: 0, positive: 0 };
 
   update(): void {
     super.update();
 
     if (!this.showDataLabel) {
-      this.dataLabelMaxWidth = {negative: 0, positive: 0};
+      this.dataLabelMaxWidth = { negative: 0, positive: 0 };
     }
 
-    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];
+    this.margin = [
+      10,
+      20 + this.dataLabelMaxWidth.positive,
+      10,
+      20 + this.dataLabelMaxWidth.negative,
+    ];
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
@@ -91,18 +98,18 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     this.xScale = this.getXScale();
     this.yScale = this.getYScale();
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0]})`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
   }
 
   getXScale(): any {
     this.xDomain = this.getXDomain();
@@ -115,9 +122,10 @@
   }
 
   getYScale(): any {
     this.yDomain = this.getYDomain();
-    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);
+    const spacing =
+      this.yDomain.length / (this.dims.height / this.barPadding + 1);
 
     return scaleBand()
       .rangeRound([0, this.dims.height])
       .paddingInner(spacing)
@@ -151,18 +159,23 @@
     } else {
       domain = this.xDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.yDomain;
       opts.colors = this.colors;
@@ -185,38 +198,51 @@
     this.update();
   }
 
   onDataLabelMaxWidthChanged(event) {
-    if (event.size.negative)  {
-      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);
+    if (event.size.negative) {
+      this.dataLabelMaxWidth.negative = Math.max(
+        this.dataLabelMaxWidth.negative,
+        event.size.width
+      );
     } else {
-      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);
+      this.dataLabelMaxWidth.positive = Math.max(
+        this.dataLabelMaxWidth.positive,
+        event.size.width
+      );
     }
-    if (event.index === (this.results.length - 1)) {
+    if (event.index === this.results.length - 1) {
       setTimeout(() => this.update());
     }
   }
 
   onActivate(item) {
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(item) {
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-2d/bar-horizontal-2d.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-2d/bar-horizontal-2d.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-2d/bar-horizontal-2d.component.ts
@@ -5,20 +5,18 @@
   Output,
   EventEmitter,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
@@ -33,15 +31,14 @@
         style({
           opacity: 1,
           transform: '*',
         }),
-        animate(500, style({opacity: 0, transform: 'scale(0)'}))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0, transform: 'scale(0)' })),
+      ]),
+    ]),
+  ],
 })
 export class BarHorizontal2DComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -88,18 +85,23 @@
   margin = [10, 20, 10, 20];
   xAxisHeight = 0;
   yAxisWidth = 0;
   legendOptions: any;
-  dataLabelMaxWidth: any = {negative: 0, positive: 0};
+  dataLabelMaxWidth: any = { negative: 0, positive: 0 };
 
   update(): void {
     super.update();
 
     if (!this.showDataLabel) {
-      this.dataLabelMaxWidth = {negative: 0, positive: 0};
+      this.dataLabelMaxWidth = { negative: 0, positive: 0 };
     }
 
-    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];
+    this.margin = [
+      10,
+      20 + this.dataLabelMaxWidth.positive,
+      10,
+      20 + this.dataLabelMaxWidth.negative,
+    ];
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
@@ -111,9 +113,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     this.formatDates();
 
@@ -127,13 +129,14 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
   }
 
   getGroupScale(): any {
-    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);
+    const spacing =
+      this.groupDomain.length / (this.dims.height / this.groupPadding + 1);
 
     return scaleBand()
       .rangeRound([0, this.dims.height])
       .paddingInner(spacing)
@@ -226,18 +229,23 @@
     } else {
       domain = this.valuesDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.innerDomain;
       opts.colors = this.colors;
@@ -260,14 +268,20 @@
     this.update();
   }
 
   onDataLabelMaxWidthChanged(event, groupIndex) {
-    if (event.size.negative)  {
-      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);
+    if (event.size.negative) {
+      this.dataLabelMaxWidth.negative = Math.max(
+        this.dataLabelMaxWidth.negative,
+        event.size.width
+      );
     } else {
-      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);
+      this.dataLabelMaxWidth.positive = Math.max(
+        this.dataLabelMaxWidth.positive,
+        event.size.width
+      );
     }
-    if (groupIndex === (this.results.length - 1)) {
+    if (groupIndex === this.results.length - 1) {
       setTimeout(() => this.update());
     }
   }
   onActivate(event, group?) {
@@ -276,15 +290,19 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(event, group?) {
@@ -293,9 +311,13 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-normalized/bar-horizontal-normalized.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-normalized/bar-horizontal-normalized.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-normalized/bar-horizontal-normalized.component.ts
@@ -5,20 +5,18 @@
   ViewEncapsulation,
   EventEmitter,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
@@ -33,15 +31,14 @@
         style({
           opacity: 1,
           transform: '*',
         }),
-        animate(500, style({opacity: 0, transform: 'scale(0)'}))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0, transform: 'scale(0)' })),
+      ]),
+    ]),
+  ],
 })
 export class BarHorizontalNormalizedComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -98,9 +95,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     this.formatDates();
 
@@ -113,9 +110,9 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
   }
 
   getGroupDomain(): any[] {
     const domain = [];
@@ -147,9 +144,10 @@
     return [0, 100];
   }
 
   getYScale(): any {
-    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);
+    const spacing =
+      this.groupDomain.length / (this.dims.height / this.barPadding + 1);
 
     return scaleBand()
       .rangeRound([0, this.dims.height])
       .paddingInner(spacing)
@@ -186,18 +184,23 @@
     } else {
       domain = this.valueDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.innerDomain;
       opts.colors = this.colors;
@@ -226,15 +229,19 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(event, group?) {
@@ -243,14 +250,17 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-stacked/bar-horizontal-stacked.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-stacked/bar-horizontal-stacked.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-horizontal-stacked/bar-horizontal-stacked.component.ts
@@ -5,20 +5,18 @@
   EventEmitter,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
@@ -33,15 +31,14 @@
         style({
           opacity: 1,
           transform: '*',
         }),
-        animate(500, style({opacity: 0, transform: 'scale(0)'}))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0, transform: 'scale(0)' })),
+      ]),
+    ]),
+  ],
 })
 export class BarHorizontalStackedComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -54,20 +51,20 @@
   @Input() gradient: boolean;
   @Input() showGridLines = true;
   @Input() activeEntries: any[] = [];
   @Input() schemeType: string;
-  @Input() trimXAxisTicks  = true;
+  @Input() trimXAxisTicks = true;
   @Input() trimYAxisTicks = true;
   @Input() maxXAxisTickLength = 16;
   @Input() maxYAxisTickLength = 16;
   @Input() xAxisTickFormatting: any;
   @Input() yAxisTickFormatting: any;
   @Input() xAxisTicks: any[];
   @Input() yAxisTicks: any[];
   @Input() barPadding = 8;
-  @Input() roundDomains = false
+  @Input() roundDomains = false;
   @Input() xScaleMax: number;
-  @Input() showDataLabel = false
+  @Input() showDataLabel = false;
   @Input() dataLabelFormatting: any;
 
   @Output() activate: EventEmitter<any> = new EventEmitter();
   @Output() deactivate: EventEmitter<any> = new EventEmitter();
@@ -85,18 +82,23 @@
   margin = [10, 20, 10, 20];
   xAxisHeight = 0;
   yAxisWidth = 0;
   legendOptions: any;
-  dataLabelMaxWidth: any = {negative: 0, positive: 0};
+  dataLabelMaxWidth: any = { negative: 0, positive: 0 };
 
   update(): void {
     super.update();
 
     if (!this.showDataLabel) {
-      this.dataLabelMaxWidth = {negative: 0, positive: 0};
+      this.dataLabelMaxWidth = { negative: 0, positive: 0 };
     }
 
-    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];
+    this.margin = [
+      10,
+      20 + this.dataLabelMaxWidth.positive,
+      10,
+      20 + this.dataLabelMaxWidth.negative,
+    ];
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
@@ -108,9 +110,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     this.formatDates();
 
@@ -123,9 +125,9 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
   }
 
   getGroupDomain(): any[] {
     const domain = [];
@@ -182,9 +184,10 @@
     return [min, max];
   }
 
   getYScale(): any {
-    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);
+    const spacing =
+      this.groupDomain.length / (this.dims.height / this.barPadding + 1);
 
     return scaleBand()
       .rangeRound([0, this.dims.height])
       .paddingInner(spacing)
@@ -221,18 +224,23 @@
     } else {
       domain = this.valueDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.innerDomain;
       opts.colors = this.colors;
@@ -255,14 +263,20 @@
     this.update();
   }
 
   onDataLabelMaxWidthChanged(event, groupIndex) {
-    if (event.size.negative)  {
-      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);
+    if (event.size.negative) {
+      this.dataLabelMaxWidth.negative = Math.max(
+        this.dataLabelMaxWidth.negative,
+        event.size.width
+      );
     } else {
-      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);
+      this.dataLabelMaxWidth.positive = Math.max(
+        this.dataLabelMaxWidth.positive,
+        event.size.width
+      );
     }
-    if (groupIndex === (this.results.length - 1)) {
+    if (groupIndex === this.results.length - 1) {
       setTimeout(() => this.update());
     }
   }
 
@@ -272,15 +286,19 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(event, group?) {
@@ -289,14 +307,17 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-label/bar-label.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-label/bar-label.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-label/bar-label.component.ts
@@ -1,14 +1,14 @@
 import {
-    Component,
-    Input,
-    OnChanges,
-    SimpleChanges,
-    ChangeDetectionStrategy,
-    ElementRef,
-    Output,
-    EventEmitter
-  } from '@angular/core';
+  Component,
+  Input,
+  OnChanges,
+  SimpleChanges,
+  ChangeDetectionStrategy,
+  ElementRef,
+  Output,
+  EventEmitter,
+} from '@angular/core';
 import { formatLabel } from '../../common/label.helper';
 
 @Component({
   selector: 'g[ng-svg-charts-bar-label]',
@@ -18,89 +18,85 @@
       alignment-baseline="middle"
       [attr.text-anchor]="textAnchor"
       [attr.transform]="transform"
       [attr.x]="x"
-      [attr.y]="y">
-      {{formatedValue}}
+      [attr.y]="y"
+    >
+      {{ formatedValue }}
     </svg:text>
-
   `,
   styleUrls: ['bar-label.component.scss'],
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
+export class BarLabelComponent implements OnChanges {
+  @Input() value;
+  @Input() valueFormatting: any;
+  @Input() barX;
+  @Input() barY;
+  @Input() barWidth;
+  @Input() barHeight;
+  @Input() orientation;
 
-  export class BarLabelComponent implements OnChanges {
+  @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();
 
-    @Input() value;
-    @Input() valueFormatting: any;
-    @Input() barX;
-    @Input() barY;
-    @Input() barWidth;
-    @Input() barHeight;
-    @Input() orientation;
+  element: any;
+  x: number;
+  y: number;
+  horizontalPadding = 2;
+  verticalPadding = 5;
+  formatedValue: string;
+  transform: string;
+  textAnchor: string;
 
-    @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();
+  constructor(element: ElementRef) {
+    this.element = element.nativeElement;
+  }
 
-    element: any;
-    x: number;
-    y: number;
-    horizontalPadding = 2;
-    verticalPadding = 5;
-    formatedValue: string;
-    transform: string;
-    textAnchor: string;
+  ngOnChanges(changes: SimpleChanges): void {
+    this.update();
+  }
 
-    constructor(element: ElementRef) {
-      this.element = element.nativeElement;
-    }
+  getSize(): any {
+    const h = this.element.getBoundingClientRect().height;
+    const w = this.element.getBoundingClientRect().width;
+    return { height: h, width: w, negative: this.value < 0 };
+  }
 
-    ngOnChanges(changes: SimpleChanges): void {
-      this.update();
-    }
+  ngAfterViewInit() {
+    this.dimensionsChanged.emit(this.getSize());
+  }
 
-    getSize(): any {
-      const h = this.element.getBoundingClientRect().height;
-      const w = this.element.getBoundingClientRect().width;
-      return { height: h, width: w, negative: this.value < 0 };
+  update(): void {
+    if (this.valueFormatting) {
+      this.formatedValue = this.valueFormatting(this.value);
+    } else {
+      this.formatedValue = formatLabel(this.value);
     }
 
-    ngAfterViewInit() {
-      this.dimensionsChanged.emit(this.getSize());
-    }
-
-    update(): void {
-      if (this.valueFormatting) {
-        this.formatedValue = this.valueFormatting(this.value);
+    if (this.orientation === 'horizontal') {
+      this.x = this.barX + this.barWidth;
+      // if the value is negative then it's on the left of the x0.
+      // we need to put the data label in front of the bar
+      if (this.value < 0) {
+        this.x = this.x - this.horizontalPadding;
+        this.textAnchor = 'end';
       } else {
-        this.formatedValue = formatLabel(this.value);
+        this.x = this.x + this.horizontalPadding;
+        this.textAnchor = 'start';
       }
+      this.y = this.barY + this.barHeight / 2;
+    } else {
+      // orientation must be "vertical"
+      this.x = this.barX + this.barWidth / 2;
+      this.y = this.barY + this.barHeight;
 
-      if (this.orientation === 'horizontal') {
-          this.x = this.barX + this.barWidth;
-          // if the value is negative then it's on the left of the x0.
-          // we need to put the data label in front of the bar
-          if (this.value < 0) {
-            this.x = this.x - this.horizontalPadding;
-            this.textAnchor = 'end';
-          } else {
-            this.x = this.x + this.horizontalPadding;
-            this.textAnchor = 'start';
-          }
-          this.y = this.barY + this.barHeight / 2;
-
+      if (this.value < 0) {
+        this.y = this.y + this.verticalPadding;
+        this.textAnchor = 'end';
       } else {
-        // orientation must be "vertical"
-        this.x = this.barX + this.barWidth / 2;
-        this.y = this.barY + this.barHeight;
-
-        if (this.value < 0) {
-          this.y = this.y + this.verticalPadding;
-          this.textAnchor = 'end';
-        } else {
-          this.y = this.y - this.verticalPadding;
-          this.textAnchor = 'start';
-        }
-        this.transform = `rotate(-45, ${ this.x } , ${ this.y })`;
+        this.y = this.y - this.verticalPadding;
+        this.textAnchor = 'start';
       }
-
+      this.transform = `rotate(-45, ${this.x} , ${this.y})`;
     }
   }
+}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical/bar-vertical.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical/bar-vertical.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical/bar-vertical.component.ts
@@ -5,13 +5,16 @@
   Output,
   EventEmitter,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
@@ -19,12 +22,11 @@
   templateUrl: 'bar-vertical.template.html',
   changeDetection: ChangeDetectionStrategy.OnPush,
   styleUrls: ['../../common/base-chart/base-chart.component.scss'],
   preserveWhitespaces: false,
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class BarVerticalComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -77,9 +79,14 @@
 
     if (!this.showDataLabel) {
       this.dataLabelMaxHeight = { negative: 0, positive: 0 };
     }
-    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];
+    this.margin = [
+      10 + this.dataLabelMaxHeight.positive,
+      20,
+      10 + this.dataLabelMaxHeight.negative,
+      20,
+    ];
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
@@ -91,9 +98,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.showDataLabel) {
       this.dims.height -= this.dataLabelMaxHeight.negative;
@@ -103,14 +110,16 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] +
+      this.dataLabelMaxHeight.negative})`;
   }
 
   getXScale(): any {
     this.xDomain = this.getXDomain();
-    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);
+    const spacing =
+      this.xDomain.length / (this.dims.width / this.barPadding + 1);
     return scaleBand()
       .rangeRound([0, this.dims.width])
       .paddingInner(spacing)
       .domain(this.xDomain);
@@ -153,18 +162,23 @@
     } else {
       domain = this.yDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.xDomain;
       opts.colors = this.colors;
@@ -187,20 +201,30 @@
   }
 
   onDataLabelMaxHeightChanged(event) {
     if (event.size.negative) {
-      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);
+      this.dataLabelMaxHeight.negative = Math.max(
+        this.dataLabelMaxHeight.negative,
+        event.size.height
+      );
     } else {
-      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);
+      this.dataLabelMaxHeight.positive = Math.max(
+        this.dataLabelMaxHeight.positive,
+        event.size.height
+      );
     }
-    if (event.index === (this.results.length - 1)) {
+    if (event.index === this.results.length - 1) {
       setTimeout(() => this.update());
     }
   }
 
   onActivate(item) {
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
@@ -210,14 +234,17 @@
   }
 
   onDeactivate(item) {
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-2d/bar-vertical-2d.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-2d/bar-vertical-2d.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-2d/bar-vertical-2d.component.ts
@@ -5,19 +5,17 @@
   ViewEncapsulation,
   EventEmitter,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
@@ -32,15 +30,14 @@
         style({
           opacity: 1,
           transform: '*',
         }),
-        animate(500, style({opacity: 0, transform: 'scale(0)'}))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0, transform: 'scale(0)' })),
+      ]),
+    ]),
+  ],
 })
 export class BarVertical2DComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -88,17 +85,22 @@
   margin = [10, 20, 10, 20];
   xAxisHeight = 0;
   yAxisWidth = 0;
   legendOptions: any;
-  dataLabelMaxHeight: any = {negative: 0, positive: 0};
+  dataLabelMaxHeight: any = { negative: 0, positive: 0 };
 
   update(): void {
     super.update();
 
     if (!this.showDataLabel) {
-      this.dataLabelMaxHeight = {negative: 0, positive: 0};
+      this.dataLabelMaxHeight = { negative: 0, positive: 0 };
     }
-    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];
+    this.margin = [
+      10 + this.dataLabelMaxHeight.positive,
+      20,
+      10 + this.dataLabelMaxHeight.negative,
+      20,
+    ];
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
@@ -110,9 +112,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.showDataLabel) {
       this.dims.height -= this.dataLabelMaxHeight.negative;
@@ -130,24 +132,32 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] +
+      this.dataLabelMaxHeight.negative})`;
   }
 
   onDataLabelMaxHeightChanged(event, groupIndex) {
-    if (event.size.negative)  {
-      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);
+    if (event.size.negative) {
+      this.dataLabelMaxHeight.negative = Math.max(
+        this.dataLabelMaxHeight.negative,
+        event.size.height
+      );
     } else {
-      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);
+      this.dataLabelMaxHeight.positive = Math.max(
+        this.dataLabelMaxHeight.positive,
+        event.size.height
+      );
     }
-    if (groupIndex === (this.results.length - 1)) {
+    if (groupIndex === this.results.length - 1) {
       setTimeout(() => this.update());
     }
   }
 
   getGroupScale(): any {
-    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);
+    const spacing =
+      this.groupDomain.length / (this.dims.height / this.groupPadding + 1);
 
     return scaleBand()
       .rangeRound([0, this.dims.width])
       .paddingInner(spacing)
@@ -236,18 +246,23 @@
     } else {
       domain = this.valuesDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.innerDomain;
       opts.colors = this.colors;
@@ -259,14 +274,14 @@
 
     return opts;
   }
 
-  updateYAxisWidth({width}) {
+  updateYAxisWidth({ width }) {
     this.yAxisWidth = width;
     this.update();
   }
 
-  updateXAxisHeight({height}) {
+  updateXAxisHeight({ height }) {
     this.xAxisHeight = height;
     this.update();
   }
 
@@ -276,15 +291,19 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(event, group?) {
@@ -293,14 +312,17 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-normalized/bar-vertical-normalized.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-normalized/bar-vertical-normalized.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-normalized/bar-vertical-normalized.component.ts
@@ -5,19 +5,17 @@
   EventEmitter,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
@@ -32,15 +30,14 @@
         style({
           opacity: 1,
           transform: '*',
         }),
-        animate(500, style({opacity: 0, transform: 'scale(0)'}))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0, transform: 'scale(0)' })),
+      ]),
+    ]),
+  ],
 })
 export class BarVerticalNormalizedComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -97,9 +94,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     this.formatDates();
 
@@ -112,9 +109,9 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
   }
 
   getGroupDomain() {
     const domain = [];
@@ -144,9 +141,10 @@
     return [0, 100];
   }
 
   getXScale(): any {
-    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);
+    const spacing =
+      this.groupDomain.length / (this.dims.width / this.barPadding + 1);
 
     return scaleBand()
       .rangeRound([0, this.dims.width])
       .paddingInner(spacing)
@@ -183,18 +181,23 @@
     } else {
       domain = this.valueDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.innerDomain;
       opts.colors = this.colors;
@@ -206,14 +209,14 @@
 
     return opts;
   }
 
-  updateYAxisWidth({width}) {
+  updateYAxisWidth({ width }) {
     this.yAxisWidth = width;
     this.update();
   }
 
-  updateXAxisHeight({height}) {
+  updateXAxisHeight({ height }) {
     this.xAxisHeight = height;
     this.update();
   }
 
@@ -223,15 +226,19 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(event, group?) {
@@ -240,14 +247,17 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-stacked/bar-vertical-stacked.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-stacked/bar-vertical-stacked.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/bar-vertical-stacked/bar-vertical-stacked.component.ts
@@ -5,19 +5,17 @@
   EventEmitter,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { scaleBand, scaleLinear } from 'd3-scale';
 
-import { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../../common/view-dimensions.helper';
 import { ColorHelper } from '../../common/color.helper';
 import { BaseChartComponent } from '../../common/base-chart/base-chart.component';
 
 @Component({
@@ -32,15 +30,14 @@
         style({
           opacity: 1,
           transform: '*',
         }),
-        animate(500, style({opacity: 0, transform: 'scale(0)'}))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0, transform: 'scale(0)' })),
+      ]),
+    ]),
+  ],
 })
 export class BarVerticalStackedComponent extends BaseChartComponent {
-
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -85,17 +82,22 @@
   margin = [10, 20, 10, 20];
   xAxisHeight = 0;
   yAxisWidth = 0;
   legendOptions: any;
-  dataLabelMaxHeight: any = {negative: 0, positive: 0};
+  dataLabelMaxHeight: any = { negative: 0, positive: 0 };
 
   update(): void {
     super.update();
 
     if (!this.showDataLabel) {
-      this.dataLabelMaxHeight = {negative: 0, positive: 0};
+      this.dataLabelMaxHeight = { negative: 0, positive: 0 };
     }
-    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];
+    this.margin = [
+      10 + this.dataLabelMaxHeight.positive,
+      20,
+      10 + this.dataLabelMaxHeight.negative,
+      20,
+    ];
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
@@ -107,9 +109,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.showDataLabel) {
       this.dims.height -= this.dataLabelMaxHeight.negative;
@@ -126,9 +128,10 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] +
+      this.dataLabelMaxHeight.negative})`;
   }
 
   getGroupDomain() {
     const domain = [];
@@ -181,9 +184,10 @@
     return [min, max];
   }
 
   getXScale(): any {
-    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);
+    const spacing =
+      this.groupDomain.length / (this.dims.width / this.barPadding + 1);
     return scaleBand()
       .rangeRound([0, this.dims.width])
       .paddingInner(spacing)
       .domain(this.groupDomain);
@@ -196,14 +200,20 @@
     return this.roundDomains ? scale.nice() : scale;
   }
 
   onDataLabelMaxHeightChanged(event, groupIndex) {
-    if (event.size.negative)  {
-      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);
+    if (event.size.negative) {
+      this.dataLabelMaxHeight.negative = Math.max(
+        this.dataLabelMaxHeight.negative,
+        event.size.height
+      );
     } else {
-      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);
+      this.dataLabelMaxHeight.positive = Math.max(
+        this.dataLabelMaxHeight.positive,
+        event.size.height
+      );
     }
-    if (groupIndex === (this.results.length - 1)) {
+    if (groupIndex === this.results.length - 1) {
       setTimeout(() => this.update());
     }
   }
 
@@ -230,18 +240,23 @@
     } else {
       domain = this.valueDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.innerDomain;
       opts.colors = this.colors;
@@ -253,14 +268,14 @@
 
     return opts;
   }
 
-  updateYAxisWidth({width}) {
+  updateYAxisWidth({ width }) {
     this.yAxisWidth = width;
     this.update();
   }
 
-  updateXAxisHeight({height}) {
+  updateXAxisHeight({ height }) {
     this.xAxisHeight = height;
     this.update();
   }
 
@@ -270,15 +285,19 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(event, group?) {
@@ -287,14 +306,17 @@
       item.series = group.name;
     }
 
     const idx = this.activeEntries.findIndex(d => {
-      return d.name === item.name && d.value === item.value && d.series === item.series;
+      return (
+        d.name === item.name &&
+        d.value === item.value &&
+        d.series === item.series
+      );
     });
 
     this.activeEntries.splice(idx, 1);
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/series-horizontal/series-horizontal.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/series-horizontal/series-horizontal.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/series-horizontal/series-horizontal.component.ts
@@ -5,24 +5,20 @@
   EventEmitter,
   OnChanges,
   SimpleChanges,
   ChangeDetectionStrategy,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { formatLabel } from '../../common/label.helper';
 import { D0Types } from '../series-vertical/series-vertical.component';
 
 @Component({
   selector: 'g[ng-svg-charts-series-horizontal]',
   template: `
-    <svg:g ng-svg-charts-bar
-      *ngFor="let bar of bars; trackBy:trackBy"
+    <svg:g
+      ng-svg-charts-bar
+      *ngFor="let bar of bars; trackBy: trackBy"
       [@animationState]="'active'"
       [width]="bar.width"
       [height]="bar.height"
       [x]="bar.x"
@@ -44,42 +40,54 @@
       [tooltipPlacement]="tooltipPlacement"
       [tooltipType]="tooltipType"
       [tooltipTitle]="tooltipTemplate ? undefined : bar.tooltipText"
       [tooltipTemplate]="tooltipTemplate"
-      [tooltipContext]="bar.data">
-    </svg:g>
+      [tooltipContext]="bar.data"
+    ></svg:g>
     <svg:g *ngIf="showDataLabel">
-      <svg:g ng-svg-charts-bar-label *ngFor="let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy"
+      <svg:g
+        ng-svg-charts-bar-label
+        *ngFor="
+          let b of barsForDataLabels;
+          let i = index;
+          trackBy: trackDataLabelBy
+        "
         [barX]="b.x"
         [barY]="b.y"
         [barWidth]="b.width"
         [barHeight]="b.height"
         [value]="b.total"
         [valueFormatting]="dataLabelFormatting"
         [orientation]="'horizontal'"
-        (dimensionsChanged)="dataLabelWidthChanged.emit({size:$event, index:i})"
+        (dimensionsChanged)="
+          dataLabelWidthChanged.emit({ size: $event, index: i })
+        "
       />
     </svg:g>
   `,
   changeDetection: ChangeDetectionStrategy.OnPush,
   animations: [
     trigger('animationState', [
       transition(':leave', [
         style({
-          opacity: 1
+          opacity: 1,
         }),
-        animate(500, style({ opacity: 0 }))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0 })),
+      ]),
+    ]),
+  ],
 })
 export class SeriesHorizontalComponent implements OnChanges {
   bars: any;
   x: any;
   y: any;
   barsForDataLabels: Array<{
-    x: number, y: number, width: number, height: number,
-    total: number, series: string
+    x: number;
+    y: number;
+    width: number;
+    height: number;
+    total: number;
+    series: string;
   }> = [];
 
   @Input() dims;
   @Input() type = 'standard';
@@ -109,13 +117,12 @@
     this.update();
   }
 
   update(): void {
-
     this.updateTooltipSettings();
     const d0 = {
       [D0Types.positive]: 0,
-      [D0Types.negative]: 0
+      [D0Types.negative]: 0,
     };
     let d0Type: D0Types;
     d0Type = D0Types.positive;
     let total;
@@ -135,9 +142,9 @@
         value,
         label,
         roundEdges,
         data: d,
-        formattedLabel
+        formattedLabel,
       };
 
       bar.height = this.yScale.bandwidth();
 
@@ -190,9 +197,12 @@
           bar.color = this.colors.getColor(value);
           bar.gradientStops = this.colors.getLinearGradientStops(value);
         } else {
           bar.color = this.colors.getColor(bar.offset1);
-          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);
+          bar.gradientStops = this.colors.getLinearGradientStops(
+            bar.offset1,
+            bar.offset0
+          );
         }
       }
 
       let tooltipLabel = formattedLabel;
@@ -202,28 +212,32 @@
         bar.data.series = this.seriesName;
         bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;
       }
 
-      bar.tooltipText = this.tooltipDisabled ? undefined : `
+      bar.tooltipText = this.tooltipDisabled
+        ? undefined
+        : `
         <span class="tooltip-label">${tooltipLabel}</span>
         <span class="tooltip-val">${value.toLocaleString()}</span>
       `;
 
       return bar;
     });
 
     this.updateDataLabels();
-
   }
 
   updateDataLabels() {
-
     if (this.type === 'stacked') {
       this.barsForDataLabels = [];
       const section: any = {};
       section.series = this.seriesName;
-      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);
-      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);
+      const totalPositive = this.series
+        .map(d => d.value)
+        .reduce((sum, d) => (d > 0 ? sum + d : sum), 0);
+      const totalNegative = this.series
+        .map(d => d.value)
+        .reduce((sum, d) => (d < 0 ? sum + d : sum), 0);
       section.total = totalPositive + totalNegative;
       section.x = 0;
       section.y = 0;
       // if total is positive then we show it on the right, otherwise on the left
@@ -253,9 +267,11 @@
     this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';
   }
 
   isActive(entry): boolean {
-    if (!this.activeEntries) { return false; }
+    if (!this.activeEntries) {
+      return false;
+    }
     const item = this.activeEntries.find(d => {
       return entry.name === d.name && entry.series === d.series;
     });
     return item !== undefined;

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/series-vertical/series-vertical.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/series-vertical/series-vertical.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bar-chart/series-vertical/series-vertical.component.ts
@@ -6,25 +6,21 @@
   OnChanges,
   ChangeDetectionStrategy,
   TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition,
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { formatLabel } from '../../common/label.helper';
 
 export enum D0Types {
   positive = 'positive',
-  negative = 'negative'
+  negative = 'negative',
 }
 
 @Component({
   selector: 'g[ng-svg-charts-series-vertical]',
   template: `
-    <svg:g ng-svg-charts-bar
+    <svg:g
+      ng-svg-charts-bar
       *ngFor="let bar of bars; trackBy: trackBy"
       [@animationState]="'active'"
       [@.disabled]="!animations"
       [width]="bar.width"
@@ -48,37 +44,44 @@
       [tooltipType]="tooltipType"
       [tooltipTitle]="tooltipTemplate ? undefined : bar.tooltipText"
       [tooltipTemplate]="tooltipTemplate"
       [tooltipContext]="bar.data"
-      [animations]="animations">
-    </svg:g>
+      [animations]="animations"
+    ></svg:g>
     <svg:g *ngIf="showDataLabel">
-      <svg:g ng-svg-charts-bar-label *ngFor="let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy"
+      <svg:g
+        ng-svg-charts-bar-label
+        *ngFor="
+          let b of barsForDataLabels;
+          let i = index;
+          trackBy: trackDataLabelBy
+        "
         [barX]="b.x"
         [barY]="b.y"
         [barWidth]="b.width"
         [barHeight]="b.height"
         [value]="b.total"
         [valueFormatting]="dataLabelFormatting"
         [orientation]="'vertical'"
-        (dimensionsChanged)="dataLabelHeightChanged.emit({size:$event, index:i})"
+        (dimensionsChanged)="
+          dataLabelHeightChanged.emit({ size: $event, index: i })
+        "
       />
     </svg:g>
   `,
   changeDetection: ChangeDetectionStrategy.OnPush,
   animations: [
     trigger('animationState', [
       transition(':leave', [
         style({
-          opacity: 1
+          opacity: 1,
         }),
-        animate(500, style({ opacity: 0 }))
-      ])
-    ])
-  ]
+        animate(500, style({ opacity: 0 })),
+      ]),
+    ]),
+  ],
 })
 export class SeriesVerticalComponent implements OnChanges {
-
   @Input() dims;
   @Input() type = 'standard';
   @Input() series;
   @Input() xScale;
@@ -105,10 +108,14 @@
   bars: any;
   x: any;
   y: any;
   barsForDataLabels: Array<{
-    x: number, y: number, width: number, height: number,
-    total: number, series: string
+    x: number;
+    y: number;
+    width: number;
+    height: number;
+    total: number;
+    series: string;
   }> = [];
 
   ngOnChanges(changes): void {
     this.update();
@@ -123,9 +130,9 @@
     const yScaleMin = Math.max(this.yScale.domain()[0], 0);
 
     const d0 = {
       [D0Types.positive]: 0,
-      [D0Types.negative]: 0
+      [D0Types.negative]: 0,
     };
     let d0Type = D0Types.positive;
 
     let total;
@@ -202,10 +209,12 @@
           bar.color = this.colors.getColor(value);
           bar.gradientStops = this.colors.getLinearGradientStops(value);
         } else {
           bar.color = this.colors.getColor(bar.offset1);
-          bar.gradientStops =
-            this.colors.getLinearGradientStops(bar.offset1, bar.offset0);
+          bar.gradientStops = this.colors.getLinearGradientStops(
+            bar.offset1,
+            bar.offset0
+          );
         }
       }
 
       let tooltipLabel = formattedLabel;
@@ -215,27 +224,32 @@
         bar.data.series = this.seriesName;
         bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;
       }
 
-      bar.tooltipText = this.tooltipDisabled ? undefined : `
+      bar.tooltipText = this.tooltipDisabled
+        ? undefined
+        : `
         <span class="tooltip-label">${tooltipLabel}</span>
         <span class="tooltip-val">${value.toLocaleString()}</span>
       `;
 
       return bar;
     });
 
     this.updateDataLabels();
-
   }
 
   updateDataLabels() {
     if (this.type === 'stacked') {
       this.barsForDataLabels = [];
       const section: any = {};
       section.series = this.seriesName;
-      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);
-      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);
+      const totalPositive = this.series
+        .map(d => d.value)
+        .reduce((sum, d) => (d > 0 ? sum + d : sum), 0);
+      const totalNegative = this.series
+        .map(d => d.value)
+        .reduce((sum, d) => (d < 0 ? sum + d : sum), 0);
       section.total = totalPositive + totalNegative;
       section.x = 0;
       section.y = 0;
       if (section.total > 0) {
@@ -256,9 +270,8 @@
         section.width = this.xScale.bandwidth();
         return section;
       });
     }
-
   }
 
   updateTooltipSettings() {
     this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';
@@ -283,6 +296,5 @@
 
   trackDataLabelBy(index, barLabel) {
     return index + '#' + barLabel.series + '#' + barLabel.total;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.component.ts
@@ -6,20 +6,18 @@
   HostListener,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { scaleLinear } from 'd3-scale';
 
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { getScaleType } from '../common/domain.helper';
 import { getDomain, getScale } from './bubble-chart.utils';
 import { id } from '../utils/id';
@@ -34,19 +32,22 @@
       [legendOptions]="legendOptions"
       [animations]="animations"
       (legendLabelClick)="onClick($event)"
       (legendLabelActivate)="onActivate($event)"
-      (legendLabelDeactivate)="onDeactivate($event)">
+      (legendLabelDeactivate)="onDeactivate($event)"
+    >
       <svg:defs>
         <svg:clipPath [attr.id]="clipPathId">
           <svg:rect
             [attr.width]="dims.width + 10"
             [attr.height]="dims.height + 10"
-            [attr.transform]="'translate(-5, -5)'"/>
+            [attr.transform]="'translate(-5, -5)'"
+          />
         </svg:clipPath>
       </svg:defs>
       <svg:g [attr.transform]="transform" class="bubble-chart chart">
-        <svg:g ng-svg-charts-x-axis
+        <svg:g
+          ng-svg-charts-x-axis
           *ngIf="xAxis"
           [showGridLines]="showGridLines"
           [dims]="dims"
           [xScale]="xScale"
@@ -55,10 +56,12 @@
           [trimTicks]="trimXAxisTicks"
           [maxTickLength]="maxXAxisTickLength"
           [tickFormatting]="xAxisTickFormatting"
           [ticks]="xAxisTicks"
-          (dimensionsChanged)="updateXAxisHeight($event)"/>
-        <svg:g ng-svg-charts-y-axis
+          (dimensionsChanged)="updateXAxisHeight($event)"
+        />
+        <svg:g
+          ng-svg-charts-y-axis
           *ngIf="yAxis"
           [showGridLines]="showGridLines"
           [yScale]="yScale"
           [dims]="dims"
@@ -67,9 +70,10 @@
           [trimTicks]="trimYAxisTicks"
           [maxTickLength]="maxYAxisTickLength"
           [tickFormatting]="yAxisTickFormatting"
           [ticks]="yAxisTicks"
-          (dimensionsChanged)="updateYAxisWidth($event)"/>
+          (dimensionsChanged)="updateYAxisWidth($event)"
+        />
         <svg:rect
           class="bubble-chart-area"
           x="0"
           y="0"
@@ -78,10 +82,14 @@
           style="fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';"
           (mouseenter)="deactivateAll()"
         />
         <svg:g [attr.clip-path]="clipPath">
-          <svg:g *ngFor="let series of data; trackBy:trackBy" [@animationState]="'active'">
-            <svg:g ng-svg-charts-bubble-series
+          <svg:g
+            *ngFor="let series of data; trackBy: trackBy"
+            [@animationState]="'active'"
+          >
+            <svg:g
+              ng-svg-charts-bubble-series
               [xScale]="xScale"
               [yScale]="yScale"
               [rScale]="rScale"
               [xScaleType]="xScaleType"
@@ -94,9 +102,10 @@
               [tooltipDisabled]="tooltipDisabled"
               [tooltipTemplate]="tooltipTemplate"
               (select)="onClick($event, series)"
               (activate)="onActivate($event)"
-              (deactivate)="onDeactivate($event)" />
+              (deactivate)="onDeactivate($event)"
+            />
           </svg:g>
         </svg:g>
       </svg:g>
     </ng-svg-charts-chart>
@@ -109,14 +118,17 @@
       transition(':leave', [
         style({
           opacity: 1,
         }),
-        animate(500, style({
-          opacity: 0
-        }))
-      ])
-    ])
-  ]
+        animate(
+          500,
+          style({
+            opacity: 0,
+          })
+        ),
+      ]),
+    ]),
+  ],
 })
 export class BubbleChartComponent extends BaseChartComponent {
   @Input() showGridLines = true;
   @Input() legend = false;
@@ -196,27 +208,36 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     this.seriesDomain = this.results.map(d => d.name);
     this.rDomain = this.getRDomain();
     this.xDomain = this.getXDomain();
     this.yDomain = this.getYDomain();
 
-    this.transform = `translate(${ this.dims.xOffset },${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;
 
-    const colorDomain = this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;
-    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);
+    const colorDomain =
+      this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      colorDomain,
+      this.customColors
+    );
 
     this.data = this.results;
 
     this.minRadius = Math.max(this.minRadius, 1);
     this.maxRadius = Math.max(this.maxRadius, 1);
 
-    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);
+    this.rScale = this.getRScale(this.rDomain, [
+      this.minRadius,
+      this.maxRadius,
+    ]);
 
     this.bubblePadding = [0, 0, 0, 0];
     this.setScales();
 
@@ -250,10 +271,16 @@
 
     for (const s of this.data) {
       for (const d of s.series) {
         const r = this.rScale(d.r);
-        const cx = (this.xScaleType === 'linear') ? this.xScale(Number(d.x)) : this.xScale(d.x);
-        const cy = (this.yScaleType === 'linear') ? this.yScale(Number(d.y)) : this.yScale(d.y);
+        const cx =
+          this.xScaleType === 'linear'
+            ? this.xScale(Number(d.x))
+            : this.xScale(d.x);
+        const cy =
+          this.yScaleType === 'linear'
+            ? this.yScale(Number(d.y))
+            : this.yScale(d.y);
         xMin = Math.max(r - cx, xMin);
         yMin = Math.max(r - cy, yMin);
         yMax = Math.max(cy + r, yMax);
         xMax = Math.max(cx + r, xMax);
@@ -279,13 +306,23 @@
     this.yScale = this.getYScale(this.yDomain, height);
   }
 
   getYScale(domain, height): any {
-    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);
+    return getScale(
+      domain,
+      [height, this.bubblePadding[0]],
+      this.yScaleType,
+      this.roundDomains
+    );
   }
 
   getXScale(domain, width): any {
-    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);
+    return getScale(
+      domain,
+      [this.bubblePadding[3], width],
+      this.xScaleType,
+      this.roundDomains
+    );
   }
 
   getRScale(domain, range): any {
     const scale = scaleLinear()
@@ -300,9 +337,9 @@
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       position: this.legendPosition,
-      title: undefined
+      title: undefined,
     };
 
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.seriesDomain;
@@ -327,9 +364,15 @@
       }
     }
 
     this.xScaleType = getScaleType(values);
-    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);
+    return getDomain(
+      values,
+      this.xScaleType,
+      this.autoScale,
+      this.xScaleMin,
+      this.xScaleMax
+    );
   }
 
   getYDomain(): any[] {
     const values = [];
@@ -342,9 +385,15 @@
       }
     }
 
     this.yScaleType = getScaleType(values);
-    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);
+    return getDomain(
+      values,
+      this.yScaleType,
+      this.autoScale,
+      this.yScaleMin,
+      this.yScaleMax
+    );
   }
 
   getRDomain(): number[] {
     let min = Infinity;
@@ -378,9 +427,9 @@
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(item): void {

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.module.ts
@@ -4,14 +4,8 @@
 import { BubbleSeriesComponent } from './bubble-series.component';
 
 @NgModule({
   imports: [ChartCommonModule],
-  declarations: [
-    BubbleChartComponent,
-    BubbleSeriesComponent
-  ],
-  exports: [
-    BubbleChartComponent,
-    BubbleSeriesComponent
-  ]
+  declarations: [BubbleChartComponent, BubbleSeriesComponent],
+  exports: [BubbleChartComponent, BubbleSeriesComponent],
 })
 export class BubbleChartModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.utils.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.utils.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-chart.utils.ts
@@ -1,28 +1,39 @@
 import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';
 
-export function getDomain(values, scaleType, autoScale, minVal?, maxVal?): number[] {
-    let domain: number[] = [];
-    if (scaleType === 'linear') {
-      values = values.map(v => Number(v));
-      if (!autoScale) {
-        values.push(0);
-      }
+export function getDomain(
+  values,
+  scaleType,
+  autoScale,
+  minVal?,
+  maxVal?
+): number[] {
+  let domain: number[] = [];
+  if (scaleType === 'linear') {
+    values = values.map(v => Number(v));
+    if (!autoScale) {
+      values.push(0);
     }
+  }
 
-    if (scaleType === 'time' || scaleType === 'linear') {
-      const min = minVal ? minVal : Math.min(...values);
-      const max = maxVal ? maxVal : Math.max(...values);
+  if (scaleType === 'time' || scaleType === 'linear') {
+    const min = minVal ? minVal : Math.min(...values);
+    const max = maxVal ? maxVal : Math.max(...values);
 
-      domain = [min, max];
-    } else {
-      domain = values;
-    }
+    domain = [min, max];
+  } else {
+    domain = values;
+  }
 
-    return domain;
+  return domain;
 }
 
-export function getScale(domain, range: number[], scaleType, roundDomains): any {
+export function getScale(
+  domain,
+  range: number[],
+  scaleType,
+  roundDomains
+): any {
   let scale: any;
 
   if (scaleType === 'time') {
     scale = scaleTime()

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/bubble-chart/bubble-series.component.ts
@@ -5,24 +5,20 @@
   SimpleChanges,
   EventEmitter,
   OnChanges,
   ChangeDetectionStrategy,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { formatLabel } from '../common/label.helper';
 
 @Component({
   selector: 'g[ng-svg-charts-bubble-series]',
   template: `
     <svg:g *ngFor="let circle of circles; trackBy: trackBy">
       <svg:g [attr.transform]="circle.transform">
-        <svg:g ng-svg-charts-circle
+        <svg:g
+          ng-svg-charts-circle
           [@animationState]="'active'"
           class="circle"
           [cx]="0"
           [cy]="0"
@@ -52,17 +48,16 @@
     trigger('animationState', [
       transition(':enter', [
         style({
           opacity: 0,
-          transform: 'scale(0)'
+          transform: 'scale(0)',
         }),
-        animate(250, style({opacity: 1, transform: 'scale(1)'}))
-      ])
-    ])
-  ]
+        animate(250, style({ opacity: 1, transform: 'scale(1)' })),
+      ]),
+    ]),
+  ],
 })
 export class BubbleSeriesComponent implements OnChanges {
-
   @Input() data;
   @Input() xScale;
   @Input() yScale;
   @Input() rScale;
@@ -93,73 +88,88 @@
 
   getCircles(): any[] {
     const seriesName = this.data.name;
 
-    return this.data.series.map((d, i) => {
-      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {
-        const y = d.y;
-        const x = d.x;
-        const r = d.r;
+    return this.data.series
+      .map((d, i) => {
+        if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {
+          const y = d.y;
+          const x = d.x;
+          const r = d.r;
 
-        const radius = this.rScale(r || 1);
-        const tooltipLabel = formatLabel(d.name);
+          const radius = this.rScale(r || 1);
+          const tooltipLabel = formatLabel(d.name);
 
-        const cx = (this.xScaleType === 'linear') ? this.xScale(Number(x)) : this.xScale(x);
-        const cy = (this.yScaleType === 'linear') ? this.yScale(Number(y)) : this.yScale(y);
+          const cx =
+            this.xScaleType === 'linear'
+              ? this.xScale(Number(x))
+              : this.xScale(x);
+          const cy =
+            this.yScaleType === 'linear'
+              ? this.yScale(Number(y))
+              : this.yScale(y);
 
-        const color = (this.colors.scaleType === 'linear') ?
-          this.colors.getColor(r) :
-          this.colors.getColor(seriesName);
+          const color =
+            this.colors.scaleType === 'linear'
+              ? this.colors.getColor(r)
+              : this.colors.getColor(seriesName);
 
-        const isActive = !this.activeEntries.length ? true : this.isActive({name: seriesName});
-        const opacity = isActive ? 1 : 0.3;
+          const isActive = !this.activeEntries.length
+            ? true
+            : this.isActive({ name: seriesName });
+          const opacity = isActive ? 1 : 0.3;
 
-        const data = {
-          series: seriesName,
-          name: d.name,
-          value: d.y,
-          x: d.x,
-          radius: d.r
-        };
+          const data = {
+            series: seriesName,
+            name: d.name,
+            value: d.y,
+            x: d.x,
+            radius: d.r,
+          };
 
-        return {
-          data,
-          x,
-          y,
-          r,
-          classNames: [`circle-data-${i}`],
-          value: y,
-          label: x,
-          cx,
-          cy,
-          radius,
-          tooltipLabel,
-          color,
-          opacity,
-          seriesName,
-          isActive,
-          transform: `translate(${cx},${cy})`
-        };
-      }
-    }).filter((circle) => circle !== undefined);
+          return {
+            data,
+            x,
+            y,
+            r,
+            classNames: [`circle-data-${i}`],
+            value: y,
+            label: x,
+            cx,
+            cy,
+            radius,
+            tooltipLabel,
+            color,
+            opacity,
+            seriesName,
+            isActive,
+            transform: `translate(${cx},${cy})`,
+          };
+        }
+      })
+      .filter(circle => circle !== undefined);
   }
 
   getTooltipText(circle): string {
     const hasRadius = typeof circle.r !== 'undefined';
     const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;
     const hasSeriesName = circle.seriesName && circle.seriesName.length;
 
     const radiusValue = hasRadius ? formatLabel(circle.r) : '';
-    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';
-    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';
+    const xAxisLabel =
+      this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';
+    const yAxisLabel =
+      this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';
     const x = formatLabel(circle.x);
     const y = formatLabel(circle.y);
-    const name = (hasSeriesName && hasTooltipLabel) ?
-      `${circle.seriesName} • ${circle.tooltipLabel}` :
-      circle.seriesName + circle.tooltipLabel;
-    const tooltipTitle = (hasSeriesName || hasTooltipLabel) ?
-      `<span class="tooltip-label">${name}</span>` :
-      '';
+    const name =
+      hasSeriesName && hasTooltipLabel
+        ? `${circle.seriesName} • ${circle.tooltipLabel}`
+        : circle.seriesName + circle.tooltipLabel;
+    const tooltipTitle =
+      hasSeriesName || hasTooltipLabel
+        ? `<span class="tooltip-label">${name}</span>`
+        : '';
 
     return `
       ${tooltipTitle}
       <span class="tooltip-label">
@@ -174,36 +184,38 @@
 
   onClick(value, label): void {
     this.select.emit({
       name: label,
-      value
+      value,
     });
   }
 
   isActive(entry): boolean {
-    if (!this.activeEntries) { return false; }
+    if (!this.activeEntries) {
+      return false;
+    }
     const item = this.activeEntries.find(d => {
       return entry.name === d.name;
     });
     return item !== undefined;
   }
 
   isVisible(circle): boolean {
     if (this.activeEntries.length > 0) {
-      return this.isActive({name: circle.seriesName});
+      return this.isActive({ name: circle.seriesName });
     }
 
     return circle.opacity !== 0;
   }
 
   activateCircle(circle): void {
     circle.barVisible = true;
-    this.activate.emit({name: this.data.name});
+    this.activate.emit({ name: this.data.name });
   }
 
   deactivateCircle(circle): void {
     circle.barVisible = false;
-    this.deactivate.emit({name: this.data.name});
+    this.deactivate.emit({ name: this.data.name });
   }
 
   trackBy(index, circle): string {
     return `${circle.data.series} ${circle.data.name}`;

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/chart-common.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/chart-common.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/chart-common.module.ts
@@ -1,11 +1,14 @@
 import { NgModule } from '@angular/core';
-import { Location, LocationStrategy, PathLocationStrategy, CommonModule } from '@angular/common';
+import {
+  Location,
+  LocationStrategy,
+  PathLocationStrategy,
+  CommonModule,
+} from '@angular/common';
 
 import { ChartComponent } from './charts/chart.component';
-import {
-  ScaleLegendComponent
-} from './legend/scale-legend.component';
+import { ScaleLegendComponent } from './legend/scale-legend.component';
 import { LegendComponent } from './legend/legend.component';
 import { LegendEntryComponent } from './legend/legend-entry.component';
 import { AdvancedLegendComponent } from './legend/advanced-legend.component';
 import { BaseChartComponent } from './base-chart/base-chart.component';
@@ -37,31 +40,20 @@
   GridPanelSeriesComponent,
   SvgLinearGradientComponent,
   SvgRadialGradientComponent,
   TimelineComponent,
-  AdvancedLegendComponent
+  AdvancedLegendComponent,
 ];
 
 @NgModule({
   providers: [
     Location,
     {
       provide: LocationStrategy,
-      useClass: PathLocationStrategy
-    }
+      useClass: PathLocationStrategy,
+    },
   ],
-  imports: [
-    CommonModule,
-    AxesModule,
-    TooltipModule
-  ],
-  declarations: [
-    ...COMPONENTS
-  ],
-  exports: [
-    CommonModule,
-    AxesModule,
-    TooltipModule,
-    ...COMPONENTS
-  ]
+  imports: [CommonModule, AxesModule, TooltipModule],
+  declarations: [...COMPONENTS],
+  exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS],
 })
-export class ChartCommonModule { }
+export class ChartCommonModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/color.helper.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/color.helper.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/color.helper.ts
@@ -10,9 +10,9 @@
   domain: any;
   customColors: any;
 
   constructor(scheme, type, domain, customColors?) {
-    if (typeof (scheme) === 'string') {
+    if (typeof scheme === 'string') {
       scheme = colorSets.find(cs => {
         return cs.name === scheme;
       });
     }
@@ -24,9 +24,9 @@
     this.scale = this.generateColorScheme(scheme, type, this.domain);
   }
 
   generateColorScheme(scheme, type, domain) {
-    if (typeof (scheme) === 'string') {
+    if (typeof scheme === 'string') {
       scheme = colorSets.find(cs => {
         return cs.name === scheme;
       });
     }
@@ -34,14 +34,12 @@
     if (type === 'quantile') {
       colorScale = scaleQuantile()
         .range(scheme.domain)
         .domain(domain);
-
     } else if (type === 'ordinal') {
       colorScale = scaleOrdinal()
         .range(scheme.domain)
         .domain(domain);
-
     } else if (type === 'linear') {
       // linear schemes must have at least 2 colors
       const colorDomain = [...scheme.domain];
       if (colorDomain.length === 1) {
@@ -63,19 +61,18 @@
       const valueScale = scaleLinear()
         .domain(this.domain)
         .range([0, 1]);
 
-      return (this.scale(valueScale(value)));
+      return this.scale(valueScale(value));
     } else {
-
       if (typeof this.customColors === 'function') {
         return this.customColors(value);
       }
 
       const formattedValue = value.toString();
       let found: any; // todo type customColors
       if (this.customColors && this.customColors.length > 0) {
-        found = this.customColors.find((mapping) => {
+        found = this.customColors.find(mapping => {
           return mapping.name.toLowerCase() === formattedValue.toLowerCase();
         });
       }
 
@@ -114,9 +111,9 @@
     stops.push({
       color: startColor,
       offset: startVal,
       originalOffset: startVal,
-      opacity: 1
+      opacity: 1,
     });
 
     while (currentVal < endVal && i < this.colorDomain.length) {
       const color = this.colorDomain[i];
@@ -125,16 +122,18 @@
         i++;
         continue;
       }
 
-      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {
+      if (
+        offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)
+      ) {
         break;
       }
 
       stops.push({
         color,
         offset,
-        opacity: 1
+        opacity: 1,
       });
       currentVal = offset;
       i++;
     }
@@ -142,9 +141,9 @@
     if (stops[stops.length - 1].offset < 100) {
       stops.push({
         color: endColor,
         offset: endVal,
-        opacity: 1
+        opacity: 1,
       });
     }
 
     if (endVal === startVal) {

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/domain.helper.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/domain.helper.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/domain.helper.ts
@@ -29,9 +29,9 @@
   }
 
   const allNumbers = values.every(value => typeof value === 'number');
   if (allNumbers) {
-      return 'linear';
-    }
+    return 'linear';
+  }
 
   return 'ordinal';
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-layout.helper.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-layout.helper.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-layout.helper.ts
@@ -52,16 +52,14 @@
     res[i].x = xScale(i % columns);
     res[i].y = yScale(Math.floor(i / columns));
     res[i].width = cardWidth;
     res[i].height = cardHeight;
-    res[i].data.percent = (total > 0) ? res[i].data.value / total : 0;
+    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;
     res[i].data.total = total;
   }
 
   return res;
 }
 
 function getTotal(results) {
-  return results
-    .map(d => d ? d.value : 0)
-    .reduce((sum, val) => sum + val, 0);
+  return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/view-dimensions.helper.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/view-dimensions.helper.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/view-dimensions.helper.ts
@@ -4,11 +4,21 @@
   xOffset: number;
 }
 
 export function calculateViewDimensions({
-  width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0,
-  yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false,
-  legendType = 'ordinal', legendPosition = 'right', columns = 12
+  width,
+  height,
+  margins,
+  showXAxis = false,
+  showYAxis = false,
+  xAxisHeight = 0,
+  yAxisWidth = 0,
+  showXLabel = false,
+  showYLabel = false,
+  showLegend = false,
+  legendType = 'ordinal',
+  legendPosition = 'right',
+  columns = 12,
 }): ViewDimensions {
   let xOffset = margins[3];
   let chartWidth = width;
   let chartHeight = height - margins[0] - margins[2];
@@ -21,9 +31,9 @@
       columns -= 1;
     }
   }
 
-  chartWidth = chartWidth * columns / 12;
+  chartWidth = (chartWidth * columns) / 12;
 
   chartWidth = chartWidth - margins[1] - margins[3];
 
   if (showXAxis) {
@@ -59,7 +69,7 @@
     width: ~~chartWidth,
     // tslint:disable-next-line: no-bitwise
     height: ~~chartHeight,
     // tslint:disable-next-line: no-bitwise
-    xOffset: ~~xOffset
+    xOffset: ~~xOffset,
   };
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/axes.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/axes.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/axes.module.ts
@@ -7,8 +7,20 @@
 import { CommonModule } from '@angular/common';
 
 @NgModule({
   imports: [CommonModule],
-  declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],
-  exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]
+  declarations: [
+    AxisLabelComponent,
+    XAxisComponent,
+    XAxisTicksComponent,
+    YAxisComponent,
+    YAxisTicksComponent,
+  ],
+  exports: [
+    AxisLabelComponent,
+    XAxisComponent,
+    XAxisTicksComponent,
+    YAxisComponent,
+    YAxisTicksComponent,
+  ],
 })
 export class AxesModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/axis-label.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/axis-label.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/axis-label.component.ts
@@ -3,9 +3,9 @@
   Input,
   ElementRef,
   OnChanges,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 
 @Component({
   selector: 'g[ng-svg-charts-axis-label]',
@@ -14,16 +14,16 @@
       [attr.stroke-width]="strokeWidth"
       [attr.x]="x"
       [attr.y]="y"
       [attr.text-anchor]="textAnchor"
-      [attr.transform]="transform">
-      {{label}}
+      [attr.transform]="transform"
+    >
+      {{ label }}
     </svg:text>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class AxisLabelComponent implements OnChanges {
-
   @Input() orient;
   @Input() label;
   @Input() offset;
   @Input() width;
@@ -60,9 +60,9 @@
         this.y = this.offset;
         this.x = this.width / 2;
         break;
       case 'left':
-        this.y = - (this.offset + this.textHeight + this.margin);
+        this.y = -(this.offset + this.textHeight + this.margin);
         this.x = -this.height / 2;
         this.transform = 'rotate(270)';
         break;
       case 'right':
@@ -72,6 +72,5 @@
         break;
       default:
     }
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/x-axis-ticks.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/x-axis-ticks.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/x-axis-ticks.component.ts
@@ -7,42 +7,45 @@
   ElementRef,
   ViewChild,
   SimpleChanges,
   AfterViewInit,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { trimLabel } from '../trim-label.helper';
 import { reduceTicks } from './ticks.helper';
 
 @Component({
   selector: 'g[ng-svg-charts-x-axis-ticks]',
   template: `
     <svg:g #ticksel>
-      <svg:g *ngFor="let tick of ticks" class="tick"
-        [attr.transform]="tickTransform(tick)">
-        <title>{{tickFormat(tick)}}</title>
+      <svg:g
+        *ngFor="let tick of ticks"
+        class="tick"
+        [attr.transform]="tickTransform(tick)"
+      >
+        <title>{{ tickFormat(tick) }}</title>
         <svg:text
           stroke-width="0.01"
           [attr.text-anchor]="textAnchor"
           [attr.transform]="textTransform"
-          [style.font-size]="'12px'">
-          {{tickTrim(tickFormat(tick))}}
+          [style.font-size]="'12px'"
+        >
+          {{ tickTrim(tickFormat(tick)) }}
         </svg:text>
       </svg:g>
     </svg:g>
 
-    <svg:g *ngFor="let tick of ticks"
-      [attr.transform]="tickTransform(tick)">
-      <svg:g *ngIf="showGridLines"
-        [attr.transform]="gridLineTransform()">
+    <svg:g *ngFor="let tick of ticks" [attr.transform]="tickTransform(tick)">
+      <svg:g *ngIf="showGridLines" [attr.transform]="gridLineTransform()">
         <svg:line
           class="gridline-path gridline-path-vertical"
           [attr.y1]="-gridLineHeight"
-          y2="0" />
+          y2="0"
+        />
       </svg:g>
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class XAxisTicksComponent implements OnChanges, AfterViewInit {
   @Input() scale;
   @Input() orient;
@@ -82,9 +85,12 @@
     setTimeout(() => this.updateDims());
   }
 
   updateDims(): void {
-    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);
+    const height = parseInt(
+      this.ticksElement.nativeElement.getBoundingClientRect().height,
+      10
+    );
     if (height !== this.height) {
       this.height = height;
       this.dimensionsChanged.emit({ height });
       setTimeout(() => this.updateDims());
@@ -99,9 +105,9 @@
       this.tickFormat = this.tickFormatting;
     } else if (scale.tickFormat) {
       this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);
     } else {
-      this.tickFormat = (d) => {
+      this.tickFormat = d => {
         if (d.constructor.name === 'Date') {
           return d.toLocaleDateString();
         }
         return d.toLocaleString();
@@ -181,9 +187,11 @@
     return Math.floor(this.width / tickWidth);
   }
 
   tickTransform(tick): string {
-    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';
+    return (
+      'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')'
+    );
   }
 
   gridLineTransform(): string {
     return `translate(0,${-this.verticalSpacing - 5})`;

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/x-axis.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/x-axis.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/x-axis.component.ts
@@ -5,20 +5,19 @@
   Output,
   EventEmitter,
   OnChanges,
   ViewChild,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 
 import { XAxisTicksComponent } from './x-axis-ticks.component';
 
 @Component({
   selector: 'g[ng-svg-charts-x-axis]',
   template: `
-    <svg:g
-      [attr.class]="xAxisClassName"
-      [attr.transform]="transform">
-      <svg:g ng-svg-charts-x-axis-ticks
+    <svg:g [attr.class]="xAxisClassName" [attr.transform]="transform">
+      <svg:g
+        ng-svg-charts-x-axis-ticks
         *ngIf="xScale"
         [trimTicks]="trimTicks"
         [maxTickLength]="maxTickLength"
         [tickFormatting]="tickFormatting"
@@ -31,22 +30,22 @@
         [width]="dims.width"
         [tickValues]="ticks"
         (dimensionsChanged)="emitTicksHeight($event)"
       />
-      <svg:g ng-svg-charts-axis-label
+      <svg:g
+        ng-svg-charts-axis-label
         *ngIf="showLabel"
         [label]="labelText"
         [offset]="labelOffset"
         [orient]="'bottom'"
         [height]="dims.height"
-        [width]="dims.width">
-      </svg:g>
+        [width]="dims.width"
+      ></svg:g>
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class XAxisComponent implements OnChanges {
-
   @Input() xScale;
   @Input() dims;
   @Input() trimTicks: boolean;
   @Input() maxTickLength: number;
@@ -79,9 +78,11 @@
     this.update();
   }
 
   update(): void {
-    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;
+    this.transform = `translate(0,${this.xAxisOffset +
+      this.padding +
+      this.dims.height})`;
 
     if (typeof this.xAxisTickCount !== 'undefined') {
       this.tickArguments = [this.xAxisTickCount];
     }
@@ -91,10 +92,9 @@
     const newLabelOffset = height + 25 + 5;
     if (newLabelOffset !== this.labelOffset) {
       this.labelOffset = newLabelOffset;
       setTimeout(() => {
-        this.dimensionsChanged.emit({height});
+        this.dimensionsChanged.emit({ height });
       }, 0);
     }
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/y-axis-ticks.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/y-axis-ticks.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/y-axis-ticks.component.ts
@@ -7,9 +7,9 @@
   ViewChild,
   EventEmitter,
   AfterViewInit,
   ChangeDetectionStrategy,
-  SimpleChanges
+  SimpleChanges,
 } from '@angular/core';
 import { trimLabel } from '../trim-label.helper';
 import { reduceTicks } from './ticks.helper';
 import { roundedRect } from '../../common/shape.helper';
@@ -17,68 +17,76 @@
 @Component({
   selector: 'g[ng-svg-charts-y-axis-ticks]',
   template: `
     <svg:g #ticksel>
-      <svg:g *ngFor="let tick of ticks" class="tick"
-        [attr.transform]="transform(tick)" >
-        <title>{{tickFormat(tick)}}</title>
+      <svg:g
+        *ngFor="let tick of ticks"
+        class="tick"
+        [attr.transform]="transform(tick)"
+      >
+        <title>{{ tickFormat(tick) }}</title>
         <svg:text
           stroke-width="0.01"
           [attr.dy]="dy"
           [attr.x]="x1"
           [attr.y]="y1"
           [attr.text-anchor]="textAnchor"
-          [style.font-size]="'12px'">
-          {{tickTrim(tickFormat(tick))}}
+          [style.font-size]="'12px'"
+        >
+          {{ tickTrim(tickFormat(tick)) }}
         </svg:text>
       </svg:g>
     </svg:g>
 
-    <svg:path *ngIf="referenceLineLength > 1 && refMax && refMin && showRefLines"
+    <svg:path
+      *ngIf="referenceLineLength > 1 && refMax && refMin && showRefLines"
       class="reference-area"
       [attr.d]="referenceAreaPath"
       [attr.transform]="gridLineTransform()"
     />
-    <svg:g *ngFor="let tick of ticks"
-      [attr.transform]="transform(tick)">
-      <svg:g
-        *ngIf="showGridLines"
-        [attr.transform]="gridLineTransform()">
-        <svg:line *ngIf="orient === 'left'"
+    <svg:g *ngFor="let tick of ticks" [attr.transform]="transform(tick)">
+      <svg:g *ngIf="showGridLines" [attr.transform]="gridLineTransform()">
+        <svg:line
+          *ngIf="orient === 'left'"
           class="gridline-path gridline-path-horizontal"
           x1="0"
-          [attr.x2]="gridLineWidth" />
-        <svg:line *ngIf="orient === 'right'"
+          [attr.x2]="gridLineWidth"
+        />
+        <svg:line
+          *ngIf="orient === 'right'"
           class="gridline-path gridline-path-horizontal"
           x1="0"
-          [attr.x2]="-gridLineWidth" />
+          [attr.x2]="-gridLineWidth"
+        />
       </svg:g>
     </svg:g>
 
     <svg:g *ngFor="let refLine of referenceLines">
       <svg:g *ngIf="showRefLines" [attr.transform]="transform(refLine.value)">
-        <svg:line class="refline-path gridline-path-horizontal"
+        <svg:line
+          class="refline-path gridline-path-horizontal"
           x1="0"
           [attr.x2]="gridLineWidth"
-          [attr.transform]="gridLineTransform()"/>
+          [attr.transform]="gridLineTransform()"
+        />
         <svg:g *ngIf="showRefLabels">
-          <title>{{tickTrim(tickFormat(refLine.value))}}</title>
+          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>
           <svg:text
             class="refline-label"
             [attr.dy]="dy"
             [attr.y]="-6"
             [attr.x]="gridLineWidth"
-            [attr.text-anchor]="textAnchor" >
-            {{refLine.name}}
+            [attr.text-anchor]="textAnchor"
+          >
+            {{ refLine.name }}
           </svg:text>
         </svg:g>
       </svg:g>
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class YAxisTicksComponent implements OnChanges, AfterViewInit {
-
   @Input() scale;
   @Input() orient;
   @Input() tickArguments = [5];
   @Input() tickValues: any[];
@@ -127,9 +135,12 @@
     setTimeout(() => this.updateDims());
   }
 
   updateDims(): void {
-    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);
+    const width = parseInt(
+      this.ticksElement.nativeElement.getBoundingClientRect().width,
+      10
+    );
     if (width !== this.width) {
       this.width = width;
       this.dimensionsChanged.emit({ width });
       setTimeout(() => this.updateDims());
@@ -156,11 +167,13 @@
         return d.toLocaleString();
       };
     }
 
-    this.adjustedScale = scale.bandwidth ? function(d) {
-      return scale(d) + scale.bandwidth() * 0.5;
-    } : scale;
+    this.adjustedScale = scale.bandwidth
+      ? function(d) {
+          return scale(d) + scale.bandwidth() * 0.5;
+        }
+      : scale;
 
     if (this.showRefLines && this.referenceLines) {
       this.setReferencelines();
     }
@@ -207,14 +220,24 @@
     setTimeout(() => this.updateDims());
   }
 
   setReferencelines(): void {
-    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));
-    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));
+    this.refMin = this.adjustedScale(
+      Math.min.apply(null, this.referenceLines.map(item => item.value))
+    );
+    this.refMax = this.adjustedScale(
+      Math.max.apply(null, this.referenceLines.map(item => item.value))
+    );
     this.referenceLineLength = this.referenceLines.length;
 
-    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax,
-      0, [false, false, false, false]);
+    this.referenceAreaPath = roundedRect(
+      0,
+      this.refMax,
+      this.gridLineWidth,
+      this.refMin - this.refMax,
+      0,
+      [false, false, false, false]
+    );
   }
 
   getTicks(): any {
     let ticks;

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/y-axis.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/y-axis.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/axes/y-axis.component.ts
@@ -5,19 +5,18 @@
   EventEmitter,
   OnChanges,
   ViewChild,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { YAxisTicksComponent } from './y-axis-ticks.component';
 
 @Component({
   selector: 'g[ng-svg-charts-y-axis]',
   template: `
-    <svg:g
-      [attr.class]="yAxisClassName"
-      [attr.transform]="transform">
-      <svg:g ng-svg-charts-y-axis-ticks
+    <svg:g [attr.class]="yAxisClassName" [attr.transform]="transform">
+      <svg:g
+        ng-svg-charts-y-axis-ticks
         *ngIf="yScale"
         [trimTicks]="trimTicks"
         [maxTickLength]="maxTickLength"
         [tickFormatting]="tickFormatting"
@@ -34,22 +33,22 @@
         [height]="dims.height"
         (dimensionsChanged)="emitTicksWidth($event)"
       />
 
-      <svg:g ng-svg-charts-axis-label
+      <svg:g
+        ng-svg-charts-axis-label
         *ngIf="showLabel"
         [label]="labelText"
         [offset]="labelOffset"
         [orient]="yOrient"
         [height]="dims.height"
-        [width]="dims.width">
-      </svg:g>
+        [width]="dims.width"
+      ></svg:g>
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class YAxisComponent implements OnChanges {
-
   @Input() yScale;
   @Input() dims;
   @Input() trimTicks: boolean;
   @Input() maxTickLength: number;
@@ -90,9 +89,9 @@
       this.labelOffset = 65;
       this.transform = `translate(${this.offset + this.dims.width} , 0)`;
     } else {
       this.offset = this.offset;
-      this.transform = `translate(${this.offset } , 0)`;
+      this.transform = `translate(${this.offset} , 0)`;
     }
 
     if (this.yAxisTickCount !== undefined) {
       this.tickArguments = [this.yAxisTickCount];
@@ -102,15 +101,14 @@
   emitTicksWidth({ width }): void {
     if (width !== this.labelOffset && this.yOrient === 'right') {
       this.labelOffset = width + this.labelOffset;
       setTimeout(() => {
-        this.dimensionsChanged.emit({width});
+        this.dimensionsChanged.emit({ width });
       }, 0);
     } else if (width !== this.labelOffset) {
       this.labelOffset = width;
       setTimeout(() => {
-        this.dimensionsChanged.emit({width});
+        this.dimensionsChanged.emit({ width });
       }, 0);
     }
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/base-chart/base-chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/base-chart/base-chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/base-chart/base-chart.component.ts
@@ -1,7 +1,16 @@
 import {
-  ElementRef, NgZone, ChangeDetectorRef, Component, Input,
-  Output, EventEmitter, AfterViewInit, OnDestroy, OnChanges, SimpleChanges
+  ElementRef,
+  NgZone,
+  ChangeDetectorRef,
+  Component,
+  Input,
+  Output,
+  EventEmitter,
+  AfterViewInit,
+  OnDestroy,
+  OnChanges,
+  SimpleChanges,
 } from '@angular/core';
 
 import { fromEvent as observableFromEvent } from 'rxjs';
 import { debounceTime } from 'rxjs/operators';
@@ -9,12 +18,13 @@
 import { VisibilityObserver } from '../../utils/visibility-observer';
 
 @Component({
   selector: 'base-chart',
-  template: `<div></div>`
+  template: `
+    <div></div>
+  `,
 })
 export class BaseChartComponent implements OnChanges, AfterViewInit, OnDestroy {
-
   @Input() results: any;
   @Input() view: number[];
   @Input() scheme: any = 'cool';
   @Input() schemeType = 'ordinal';
@@ -30,16 +40,19 @@
 
   constructor(
     protected chartElement: ElementRef,
     protected zone: NgZone,
-    protected cd: ChangeDetectorRef) {
-  }
+    protected cd: ChangeDetectorRef
+  ) {}
 
   ngAfterViewInit(): void {
     this.bindWindowResizeEvent();
 
     // listen for visibility of the element for hidden by default scenario
-    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);
+    this.visibilityObserver = new VisibilityObserver(
+      this.chartElement,
+      this.zone
+    );
     this.visibilityObserver.visible.subscribe(this.update.bind(this));
   }
 
   ngOnDestroy(): void {
@@ -165,9 +178,9 @@
     const results = [];
 
     for (const item of data) {
       const copy = {
-        name: item['name']
+        name: item['name'],
       };
 
       if (item['value'] !== undefined) {
         copy['value'] = item['value'];
@@ -189,6 +202,5 @@
     }
 
     return results;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/charts/chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/charts/chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/charts/chart.component.ts
@@ -1,14 +1,15 @@
 import {
-  Component, Input, OnChanges, ViewContainerRef, ChangeDetectionStrategy, EventEmitter,
-  Output, SimpleChanges
+  Component,
+  Input,
+  OnChanges,
+  ViewContainerRef,
+  ChangeDetectionStrategy,
+  EventEmitter,
+  Output,
+  SimpleChanges,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { TooltipService } from '../tooltip/tooltip.service';
 
 @Component({
   providers: [TooltipService],
@@ -17,13 +18,15 @@
     <div
       class="ng-svg-charts-outer"
       [style.width.px]="view[0]"
       [@animationState]="'active'"
-      [@.disabled]="!animations">
+      [@.disabled]="!animations"
+    >
       <svg
         class="ng-svg-charts"
         [attr.width]="chartWidth"
-        [attr.height]="view[1]">
+        [attr.height]="view[1]"
+      >
         <ng-content></ng-content>
       </svg>
       <ng-svg-charts-scale-legend
         *ngIf="showLegend && legendType === 'scaleLegend'"
@@ -31,9 +34,10 @@
         [horizontal]="legendOptions && legendOptions.position === 'below'"
         [valueRange]="legendOptions.domain"
         [colors]="legendOptions.colors"
         [height]="view[1]"
-        [width]="legendWidth">
+        [width]="legendWidth"
+      >
       </ng-svg-charts-scale-legend>
       <ng-svg-charts-legend
         *ngIf="showLegend && legendType === 'legend'"
         class="chart-legend"
@@ -45,24 +49,24 @@
         [width]="legendWidth"
         [activeEntries]="activeEntries"
         (labelClick)="legendLabelClick.emit($event)"
         (labelActivate)="legendLabelActivate.emit($event)"
-        (labelDeactivate)="legendLabelDeactivate.emit($event)">
+        (labelDeactivate)="legendLabelDeactivate.emit($event)"
+      >
       </ng-svg-charts-legend>
     </div>
   `,
   changeDetection: ChangeDetectionStrategy.OnPush,
   animations: [
     trigger('animationState', [
       transition(':enter', [
         style({ opacity: 0 }),
-        animate('500ms 100ms', style({ opacity: 1 }))
-      ])
-    ])
-  ]
+        animate('500ms 100ms', style({ opacity: 1 })),
+      ]),
+    ]),
+  ],
 })
 export class ChartComponent implements OnChanges {
-
   @Input() view;
   @Input() showLegend = false;
   @Input() legendOptions: any;
 
@@ -83,9 +87,10 @@
   legendWidth: any;
 
   constructor(
     private vcr: ViewContainerRef,
-    private tooltipService: TooltipService) {
+    private tooltipService: TooltipService
+  ) {
     this.tooltipService.injectionService.setRootViewContainer(this.vcr);
   }
 
   ngOnChanges(changes: SimpleChanges): void {
@@ -107,12 +112,13 @@
     }
 
     const chartColumns = 12 - legendColumns;
 
-    this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);
-    this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')
-      ? ~~(this.view[0] * legendColumns / 12.0)
-      : this.chartWidth;
+    this.chartWidth = ~~((this.view[0] * chartColumns) / 12.0);
+    this.legendWidth =
+      !this.legendOptions || this.legendOptions.position === 'right'
+        ? ~~((this.view[0] * legendColumns) / 12.0)
+        : this.chartWidth;
   }
 
   getLegendType(): string {
     if (this.legendOptions.scaleType === 'linear') {
@@ -120,6 +126,5 @@
     } else {
       return 'legend';
     }
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/circle/circle.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/circle/circle.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/circle/circle.component.ts
@@ -5,9 +5,9 @@
   Output,
   EventEmitter,
   OnChanges,
   ChangeDetectionStrategy,
-  HostListener
+  HostListener,
 } from '@angular/core';
 
 @Component({
   selector: 'g[ng-svg-charts-circle]',
@@ -22,12 +22,11 @@
       [attr.class]="classNames"
       [attr.pointer-events]="pointerEvents"
     />
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class CircleComponent implements OnChanges {
-
   @Input() cx;
   @Input() cy;
   @Input() r;
   @Input() fill;
@@ -56,11 +55,10 @@
     this.deactivate.emit(this.data);
   }
 
   ngOnChanges(changes: SimpleChanges): void {
-    this.classNames = Array.isArray(this.classNames) ?
-      this.classNames.join(' ') :
-      '';
+    this.classNames = Array.isArray(this.classNames)
+      ? this.classNames.join(' ')
+      : '';
     this.classNames += 'circle';
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/circle-series/circle-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/circle-series/circle-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/circle-series/circle-series.component.ts
@@ -6,16 +6,11 @@
   EventEmitter,
   OnChanges,
   OnInit,
   ChangeDetectionStrategy,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { formatLabel } from '../label.helper';
 import { id } from '../../utils/id';
 import { ColorHelper } from '../color.helper';
 
@@ -23,9 +18,10 @@
   selector: 'g[ng-svg-charts-circle-series]',
   template: `
     <svg:g *ngIf="circle">
       <defs>
-        <svg:g ng-svg-charts-svg-linear-gradient
+        <svg:g
+          ng-svg-charts-svg-linear-gradient
           orientation="vertical"
           [name]="gradientId"
           [stops]="circle.gradientStops"
         />
@@ -39,16 +35,17 @@
         [attr.height]="circle.height"
         [attr.fill]="gradientFill"
         class="tooltip-bar"
       />
-      <svg:g ng-svg-charts-circle
+      <svg:g
+        ng-svg-charts-circle
         class="circle"
         [cx]="circle.cx"
         [cy]="circle.cy"
         [r]="circle.radius"
         [fill]="circle.color"
-        [class.active]="isActive({name: circle.seriesName})"
-        [pointerEvents]="circle.value === 0 ? 'none': 'all'"
+        [class.active]="isActive({ name: circle.seriesName })"
+        [pointerEvents]="circle.value === 0 ? 'none' : 'all'"
         [data]="circle.value"
         [classNames]="circle.classNames"
         (select)="onClick($event, circle.label)"
         (activate)="activateCircle()"
@@ -69,15 +66,14 @@
       transition(':enter', [
         style({
           opacity: 0,
         }),
-        animate(250, style({opacity: 1}))
-      ])
-    ])
-  ]
+        animate(250, style({ opacity: 1 })),
+      ]),
+    ]),
+  ],
 })
 export class CircleSeriesComponent implements OnChanges, OnInit {
-
   @Input() data;
   @Input() type = 'standard';
   @Input() xScale;
   @Input() yScale;
@@ -111,19 +107,27 @@
     this.circle = this.getActiveCircle();
   }
 
   getActiveCircle(): {} {
-    const indexActiveDataPoint = this.data.series.findIndex((d) => {
+    const indexActiveDataPoint = this.data.series.findIndex(d => {
       const label = d.name;
-      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;
+      return (
+        label &&
+        this.visibleValue &&
+        label.toString() === this.visibleValue.toString() &&
+        d.value !== undefined
+      );
     });
 
     if (indexActiveDataPoint === -1) {
       // No valid point is 'active/hovered over' at this moment.
       return undefined;
     }
 
-    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);
+    return this.mapDataPointToCircle(
+      this.data.series[indexActiveDataPoint],
+      indexActiveDataPoint
+    );
   }
 
   mapDataPointToCircle(d: any, i: number): any {
     const seriesName = this.data.name;
@@ -159,9 +163,9 @@
 
     const data = {
       series: seriesName,
       value,
-      name: label
+      name: label,
     };
 
     return {
       classNames: [`circle-data-${i}`],
@@ -177,21 +181,24 @@
       opacity,
       seriesName,
       gradientStops: this.getGradientStops(color),
       min: d.min,
-      max: d.max
+      max: d.max,
     };
   }
 
-  getTooltipText({ tooltipLabel, value, seriesName, min, max}): string {
+  getTooltipText({ tooltipLabel, value, seriesName, min, max }): string {
     return `
       <span class="tooltip-label">${seriesName} • ${tooltipLabel}</span>
-      <span class="tooltip-val">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>
+      <span class="tooltip-val">${value.toLocaleString()}${this.getTooltipMinMaxText(
+      min,
+      max
+    )}</span>
     `;
   }
 
   getTooltipMinMaxText(min: any, max: any) {
-    if (min !== undefined || max  !== undefined) {
+    if (min !== undefined || max !== undefined) {
       let result = ' (';
       if (min !== undefined) {
         if (max === undefined) {
           result += '≥';
@@ -217,40 +224,42 @@
     return [
       {
         offset: 0,
         color,
-        opacity: 0.2
+        opacity: 0.2,
       },
       {
         offset: 100,
         color,
-        opacity: 1
-    }];
+        opacity: 1,
+      },
+    ];
   }
 
   onClick(value, label): void {
     this.select.emit({
       name: label,
-      value
+      value,
     });
   }
 
   isActive(entry): boolean {
-    if (!this.activeEntries) { return false; }
+    if (!this.activeEntries) {
+      return false;
+    }
     const item = this.activeEntries.find(d => {
       return entry.name === d.name;
     });
     return item !== undefined;
   }
 
   activateCircle(): void {
     this.barVisible = true;
-    this.activate.emit({name: this.data.name});
+    this.activate.emit({ name: this.data.name });
   }
 
   deactivateCircle(): void {
     this.barVisible = false;
     this.circle.opacity = 0;
-    this.deactivate.emit({name: this.data.name});
+    this.deactivate.emit({ name: this.data.name });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.directive.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.directive.ts
@@ -1,5 +1,13 @@
-import { Component, Input, Output, EventEmitter, ChangeDetectorRef, OnDestroy, ElementRef } from '@angular/core';
+import {
+  Component,
+  Input,
+  Output,
+  EventEmitter,
+  ChangeDetectorRef,
+  OnDestroy,
+  ElementRef,
+} from '@angular/core';
 import { count, decimalChecker } from './count.helper';
 
 /**
  * Count up component
@@ -12,9 +20,11 @@
  * @class CountUpDirective
  */
 @Component({
   selector: '[ng-svg-charts-count-up]',
-  template: `{{value}}`
+  template: `
+    {{ value }}
+  `,
 })
 export class CountUpDirective implements OnDestroy {
   @Input() countDuration = 1;
   @Input() countPrefix = '';
@@ -76,16 +86,24 @@
   start(): void {
     cancelAnimationFrame(this.animationReq);
 
     const valueFormatting =
-      this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);
+      this.valueFormatting ||
+      (value =>
+        `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);
 
     const callback = ({ value, progress, finished }) => {
       this.value = valueFormatting(value);
       this.cd.markForCheck();
       if (!finished) this.countChange.emit({ value: this.value, progress });
       if (finished) this.countFinish.emit({ value: this.value, progress });
     };
 
-    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);
+    this.animationReq = count(
+      this.countFrom,
+      this.countTo,
+      this.countDecimals,
+      this.countDuration,
+      callback
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.helper.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.helper.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/count/count.helper.ts
@@ -13,9 +13,15 @@
  * @param {any} countDuration
  * @param {any} callback
  * @returns
  */
-export function count(countFrom, countTo, countDecimals, countDuration, callback) {
+export function count(
+  countFrom,
+  countTo,
+  countDecimals,
+  countDuration,
+  callback
+) {
   const startVal = Number(countFrom);
   const endVal = Number(countTo);
   const countDown = startVal > endVal;
   const decimals = Math.max(0, countDecimals);
@@ -27,9 +33,10 @@
     let frameVal;
     const progress = timestamp - startTime;
 
     if (countDown) {
-      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);
+      frameVal =
+        startVal - easeOutExpo(progress, 0, startVal - endVal, duration);
     } else {
       frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);
     }
 
@@ -45,9 +52,9 @@
     callback({
       value: frameVal,
       progress,
       timestamp,
-      finished: !tick
+      finished: !tick,
     });
 
     if (tick) {
       return requestAnimationFrame(val => runCount(val));

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-panel/grid-panel.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-panel/grid-panel.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-panel/grid-panel.component.ts
@@ -1,9 +1,5 @@
-import {
-  Component,
-  Input,
-  ChangeDetectionStrategy
-} from '@angular/core';
+import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
 
 @Component({
   selector: 'g[ng-svg-charts-grid-panel]',
   template: `
@@ -15,15 +11,13 @@
       stroke="none"
       class="gridpanel"
     />
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class GridPanelComponent {
-
   @Input() path;
   @Input() width;
   @Input() height;
   @Input() x;
   @Input() y;
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-panel-series/grid-panel-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-panel-series/grid-panel-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/grid-panel-series/grid-panel-series.component.ts
@@ -1,20 +1,28 @@
-import { Component, SimpleChanges, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';
+import {
+  Component,
+  SimpleChanges,
+  Input,
+  OnChanges,
+  ChangeDetectionStrategy,
+} from '@angular/core';
 
 @Component({
   selector: 'g[ng-svg-charts-grid-panel-series]',
   template: `
-    <svg:g ng-svg-charts-grid-panel *ngFor="let gridPanel of gridPanels"
+    <svg:g
+      ng-svg-charts-grid-panel
+      *ngFor="let gridPanel of gridPanels"
       [height]="gridPanel.height"
       [width]="gridPanel.width"
       [x]="gridPanel.x"
       [y]="gridPanel.y"
       [class.grid-panel]="true"
       [class.odd]="gridPanel.class === 'odd'"
-      [class.even]="gridPanel.class === 'even'">
-    </svg:g>
+      [class.even]="gridPanel.class === 'even'"
+    ></svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class GridPanelSeriesComponent implements OnChanges {
   gridPanels: any[];
 
@@ -36,9 +44,9 @@
     this.gridPanels = this.getGridPanels();
   }
 
   getGridPanels(): any[] {
-    return this.data.map((d) => {
+    return this.data.map(d => {
       let offset;
       let width;
       let height;
       let x;
@@ -47,9 +55,12 @@
       let position;
 
       if (this.orient === 'vertical') {
         position = this.xScale(d.name);
-        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);
+        const positionIndex = Number.parseInt(
+          (position / this.xScale.step()).toString(),
+          10
+        );
 
         if (positionIndex % 2 === 1) {
           className = 'even';
         }
@@ -59,9 +70,12 @@
         x = this.xScale(d.name) - offset / 2;
         y = 0;
       } else if (this.orient === 'horizontal') {
         position = this.yScale(d.name);
-        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);
+        const positionIndex = Number.parseInt(
+          (position / this.yScale.step()).toString(),
+          10
+        );
 
         if (positionIndex % 2 === 1) {
           className = 'even';
         }
@@ -78,9 +92,9 @@
         class: className,
         height,
         width,
         x,
-        y
+        y,
       };
     });
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/advanced-legend.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/advanced-legend.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/advanced-legend.component.ts
@@ -5,9 +5,9 @@
   Input,
   OnChanges,
   Output,
   SimpleChanges,
-  ViewEncapsulation
+  ViewEncapsulation,
 } from '@angular/core';
 import { trimLabel } from '../trim-label.helper';
 import { formatLabel } from '../label.helper';
 
@@ -19,12 +19,16 @@
         *ngIf="animations"
         class="total-value"
         ng-svg-charts-count-up
         [countTo]="roundedTotal"
-        [valueFormatting]="valueFormatting">
-      </div>
+        [valueFormatting]="valueFormatting"
+      ></div>
       <div class="total-value" *ngIf="!animations">
-        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}
+        {{
+          valueFormatting
+            ? valueFormatting(roundedTotal)
+            : defaultValueFormatting(roundedTotal)
+        }}
       </div>
       <div class="total-label">
         {{ label }}
       </div>
@@ -35,38 +39,50 @@
             tabindex="-1"
             class="legend-item"
             (mouseenter)="activate.emit(legendItem.label)"
             (mouseleave)="deactivate.emit(legendItem.label)"
-            (click)="select.emit({ name: legendItem.label, value: legendItem.value })">
-            <div class="item-color" [style.border-left-color]="legendItem.color"></div>
+            (click)="
+              select.emit({ name: legendItem.label, value: legendItem.value })
+            "
+          >
             <div
+              class="item-color"
+              [style.border-left-color]="legendItem.color"
+            ></div>
+            <div
               *ngIf="animations"
               class="item-value"
               ng-svg-charts-count-up
               [countTo]="legendItem._value"
-              [valueFormatting]="valueFormatting">
-            </div>
+              [valueFormatting]="valueFormatting"
+            ></div>
             <div *ngIf="!animations" class="item-value">
-              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}
+              {{
+                valueFormatting
+                  ? valueFormatting(legendItem.value)
+                  : defaultValueFormatting(legendItem.value)
+              }}
             </div>
             <div class="item-label">{{ legendItem.displayLabel }}</div>
             <div
               *ngIf="animations"
               class="item-percent"
               ng-svg-charts-count-up
               [countTo]="legendItem.percentage"
-              [countSuffix]="'%'">
+              [countSuffix]="'%'"
+            ></div>
+            <div *ngIf="!animations" class="item-percent">
+              {{ legendItem.percentage.toLocaleString() }}%
             </div>
-            <div *ngIf="!animations" class="item-percent">{{ legendItem.percentage.toLocaleString() }}%</div>
           </div>
         </div>
       </div>
     </div>
   `,
   styleUrls: ['./advanced-legend.component.scss'],
   preserveWhitespaces: false,
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class AdvancedLegendComponent implements OnChanges {
   @Input() width: number;
   @Input() data;
@@ -83,11 +99,13 @@
   roundedTotal: number;
 
   @Input() valueFormatting: (value: number) => any;
   @Input() labelFormatting: (value: string) => any = label => label;
-  @Input() percentageFormatting: (value: number) => any = percentage => percentage;
+  @Input() percentageFormatting: (value: number) => any = percentage =>
+    percentage;
 
-  defaultValueFormatting: (value: number) => any = value => value.toLocaleString();
+  defaultValueFormatting: (value: number) => any = value =>
+    value.toLocaleString();
 
   ngOnChanges(changes: SimpleChanges): void {
     this.update();
   }
@@ -108,18 +126,23 @@
       const label = formatLabel(d.name);
       const value = d.value;
       const color = this.colors.getColor(label);
       const percentage = this.total > 0 ? (value / this.total) * 100 : 0;
-      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;
+      const formattedLabel =
+        typeof this.labelFormatting === 'function'
+          ? this.labelFormatting(label)
+          : label;
 
       return {
         _value: value,
         value,
         color,
         label: formattedLabel,
         displayLabel: trimLabel(formattedLabel, 20),
         origialLabel: d.name,
-        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()
+        percentage: this.percentageFormatting
+          ? this.percentageFormatting(percentage)
+          : percentage.toLocaleString(),
       };
     });
   }
 

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/legend-entry.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/legend-entry.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/legend-entry.component.ts
@@ -3,33 +3,34 @@
   Input,
   Output,
   ChangeDetectionStrategy,
   HostListener,
-  EventEmitter
- } from '@angular/core';
+  EventEmitter,
+} from '@angular/core';
 
 @Component({
   selector: 'ng-svg-charts-legend-entry',
   template: `
     <span
       [title]="formattedLabel"
       tabindex="-1"
       [class.active]="isActive"
-      (click)="select.emit(formattedLabel)">
+      (click)="select.emit(formattedLabel)"
+    >
       <span
         class="legend-label-color"
         [style.background-color]="color"
-        (click)="toggle.emit(formattedLabel)">
+        (click)="toggle.emit(formattedLabel)"
+      >
       </span>
       <span class="legend-label-text">
-        {{trimmedLabel}}
+        {{ trimmedLabel }}
       </span>
     </span>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class LegendEntryComponent {
-
   @Input() color: string;
   @Input() label: any;
   @Input() formattedLabel: string;
   @Input() isActive = false;
@@ -44,13 +45,12 @@
   }
 
   @HostListener('mouseenter')
   onMouseEnter(): void {
-    this.activate.emit({name: this.label});
+    this.activate.emit({ name: this.label });
   }
 
   @HostListener('mouseleave')
   onMouseLeave(): void {
-    this.deactivate.emit({name: this.label});
+    this.deactivate.emit({ name: this.label });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/legend.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/legend.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/legend.component.ts
@@ -1,44 +1,54 @@
 import {
-  Component, Input, ChangeDetectionStrategy, Output, EventEmitter,
-  SimpleChanges, OnChanges, ChangeDetectorRef, ViewEncapsulation
- } from '@angular/core';
+  Component,
+  Input,
+  ChangeDetectionStrategy,
+  Output,
+  EventEmitter,
+  SimpleChanges,
+  OnChanges,
+  ChangeDetectorRef,
+  ViewEncapsulation,
+} from '@angular/core';
 import { formatLabel } from '../label.helper';
 
 @Component({
   selector: 'ng-svg-charts-legend',
   template: `
     <div [style.width.px]="width">
       <header class="legend-title" *ngIf="title?.length > 0">
-        <span class="legend-title-text">{{title}}</span>
+        <span class="legend-title-text">{{ title }}</span>
       </header>
       <div class="legend-wrap">
-        <ul class="legend-labels"
-            [class.horizontal-legend]="horizontal"
-          [style.max-height.px]="height - 45">
+        <ul
+          class="legend-labels"
+          [class.horizontal-legend]="horizontal"
+          [style.max-height.px]="height - 45"
+        >
           <li
             *ngFor="let entry of legendEntries; trackBy: trackBy"
-            class="legend-label">
+            class="legend-label"
+          >
             <ng-svg-charts-legend-entry
               [label]="entry.label"
               [formattedLabel]="entry.formattedLabel"
               [color]="entry.color"
               [isActive]="isActive(entry)"
               (select)="labelClick.emit($event)"
               (activate)="activate($event)"
-              (deactivate)="deactivate($event)">
+              (deactivate)="deactivate($event)"
+            >
             </ng-svg-charts-legend-entry>
           </li>
         </ul>
       </div>
     </div>
   `,
   styleUrls: ['./legend.component.scss'],
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class LegendComponent implements OnChanges {
-
   @Input() data;
   @Input() title;
   @Input() colors;
   @Input() height;
@@ -51,9 +61,9 @@
   @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();
 
   legendEntries: any[] = [];
 
-  constructor(private cd: ChangeDetectorRef) { }
+  constructor(private cd: ChangeDetectorRef) {}
 
   ngOnChanges(changes: SimpleChanges): void {
     this.update();
   }
@@ -65,20 +75,20 @@
 
   getLegendEntries(): any[] {
     const items = [];
 
-    for(const label of this.data) {
+    for (const label of this.data) {
       const formattedLabel = formatLabel(label);
 
-      const idx = items.findIndex((i) => {
+      const idx = items.findIndex(i => {
         return i.label === formattedLabel;
       });
 
       if (idx === -1) {
         items.push({
           label,
           formattedLabel,
-          color: this.colors.getColor(label)
+          color: this.colors.getColor(label),
         });
       }
     }
 
@@ -103,6 +113,5 @@
 
   trackBy(index, item): string {
     return item.label;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/scale-legend.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/scale-legend.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/legend/scale-legend.component.ts
@@ -1,6 +1,11 @@
 import {
-  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation
+  Component,
+  Input,
+  OnChanges,
+  ChangeDetectionStrategy,
+  SimpleChanges,
+  ViewEncapsulation,
 } from '@angular/core';
 import { DomSanitizer } from '@angular/platform-browser';
 
 @Component({
@@ -9,41 +14,43 @@
     <div
       class="scale-legend"
       [class.horizontal-legend]="horizontal"
       [style.height.px]="horizontal ? undefined : height"
-      [style.width.px]="width">
+      [style.width.px]="width"
+    >
       <div class="scale-legend-label">
         <span>{{ valueRange[1].toLocaleString() }}</span>
       </div>
-      <div
-        class="scale-legend-wrap"
-        [style.background]="gradient">
-      </div>
+      <div class="scale-legend-wrap" [style.background]="gradient"></div>
       <div class="scale-legend-label">
         <span>{{ valueRange[0].toLocaleString() }}</span>
       </div>
     </div>
   `,
   styleUrls: ['./scale-legend.component.scss'],
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class ScaleLegendComponent implements OnChanges {
-
   @Input() valueRange;
   @Input() colors;
   @Input() height;
   @Input() width;
   @Input() horizontal = false;
 
   gradient: any;
 
-  constructor(private sanitizer: DomSanitizer) { }
+  constructor(private sanitizer: DomSanitizer) {}
 
   ngOnChanges(changes: SimpleChanges): void {
-    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());
-    const direction = (this.horizontal) ? 'right' : 'bottom';
-    this.gradient = this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to ${direction}, ${gradientValues})`);
+    const gradientValues = this.gradientString(
+      this.colors.range(),
+      this.colors.domain()
+    );
+    const direction = this.horizontal ? 'right' : 'bottom';
+    this.gradient = this.sanitizer.bypassSecurityTrustStyle(
+      `linear-gradient(to ${direction}, ${gradientValues})`
+    );
   }
 
   /**
    * Generates the string used in the gradient stylesheet properties
@@ -60,6 +67,5 @@
     });
 
     return pairs.join(', ');
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/svg-linear-gradient/svg-linear-gradient.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/svg-linear-gradient/svg-linear-gradient.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/svg-linear-gradient/svg-linear-gradient.component.ts
@@ -2,9 +2,9 @@
   Component,
   Input,
   OnChanges,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 
 @Component({
   selector: 'g[ng-svg-charts-svg-linear-gradient]',
@@ -13,20 +13,21 @@
       [id]="name"
       [attr.x1]="x1"
       [attr.y1]="y1"
       [attr.x2]="x2"
-      [attr.y2]="y2">
-      <svg:stop *ngFor="let stop of stops"
+      [attr.y2]="y2"
+    >
+      <svg:stop
+        *ngFor="let stop of stops"
         [attr.offset]="stop.offset + '%'"
         [style.stop-color]="stop.color"
         [style.stop-opacity]="stop.opacity"
       />
     </svg:linearGradient>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class SvgLinearGradientComponent implements OnChanges {
-
   @Input() orientation = 'vertical';
   @Input() name;
   @Input() stops: any[];
 
@@ -45,7 +46,6 @@
       this.x2 = '100%';
     } else if (this.orientation === 'vertical') {
       this.y1 = '100%';
     }
-
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/svg-radial-gradient/svg-radial-gradient.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/svg-radial-gradient/svg-radial-gradient.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/svg-radial-gradient/svg-radial-gradient.component.ts
@@ -1,6 +1,10 @@
 import {
-  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges
+  Component,
+  Input,
+  OnChanges,
+  ChangeDetectionStrategy,
+  SimpleChanges,
 } from '@angular/core';
 
 @Component({
   selector: 'g[ng-svg-charts-svg-radial-gradient]',
@@ -9,20 +13,21 @@
       [id]="name"
       [attr.cx]="cx"
       [attr.cy]="cy"
       [attr.r]="r"
-      gradientUnits="userSpaceOnUse">
-      <svg:stop *ngFor="let stop of stops"
+      gradientUnits="userSpaceOnUse"
+    >
+      <svg:stop
+        *ngFor="let stop of stops"
         [attr.offset]="stop.offset + '%'"
         [style.stop-color]="stop.color"
         [style.stop-opacity]="stop.opacity"
       />
     </svg:radialGradient>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class SvgRadialGradientComponent implements OnChanges {
-
   @Input() color: string;
   @Input() name: string;
   @Input() startOpacity: number;
   @Input() endOpacity = 1;
@@ -45,20 +50,23 @@
 
   ngOnChanges(changes: SimpleChanges): void {
     this.r = '30%';
     if (
-      ('color' in changes) ||
-      ('startOpacity' in changes) ||
-      ('endOpacity' in changes)) {
-        this.stopsDefault = [{
+      'color' in changes ||
+      'startOpacity' in changes ||
+      'endOpacity' in changes
+    ) {
+      this.stopsDefault = [
+        {
           offset: 0,
           color: this.color,
-          opacity: this.startOpacity
-        }, {
+          opacity: this.startOpacity,
+        },
+        {
           offset: 100,
           color: this.color,
-          opacity: this.endOpacity
-        }];
+          opacity: this.endOpacity,
+        },
+      ];
     }
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/timeline/timeline.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/timeline/timeline.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/timeline/timeline.component.ts
@@ -1,8 +1,15 @@
 import {
-  Component, Input, Output, EventEmitter, ElementRef,
-  OnChanges, ChangeDetectionStrategy,
-  ChangeDetectorRef, SimpleChanges, ViewEncapsulation
+  Component,
+  Input,
+  Output,
+  EventEmitter,
+  ElementRef,
+  OnChanges,
+  ChangeDetectionStrategy,
+  ChangeDetectorRef,
+  SimpleChanges,
+  ViewEncapsulation,
 } from '@angular/core';
 import { brushX } from 'd3-brush';
 import { scaleLinear, scaleTime, scalePoint } from 'd3-scale';
 import { select, event as d3event } from 'd3-selection';
@@ -11,20 +18,21 @@
 
 @Component({
   selector: 'g[ng-svg-charts-timeline]',
   template: `
-    <svg:g
-      class="timeline"
-      [attr.transform]="transform">
+    <svg:g class="timeline" [attr.transform]="transform">
       <svg:filter [attr.id]="filterId">
-        <svg:feColorMatrix in="SourceGraphic"
-            type="matrix"
-            values="0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0" />
+        <svg:feColorMatrix
+          in="SourceGraphic"
+          type="matrix"
+          values="0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"
+        />
       </svg:filter>
       <svg:g class="embedded-chart">
         <ng-content></ng-content>
       </svg:g>
-      <svg:rect x="0"
+      <svg:rect
+        x="0"
         [attr.width]="view[0]"
         y="0"
         [attr.height]="height"
         class="brush-background"
@@ -33,12 +41,11 @@
     </svg:g>
   `,
   styleUrls: ['./timeline.component.scss'],
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class TimelineComponent implements OnChanges {
-
   @Input() view;
   @Input() state;
   @Input() results;
   @Input() scheme;
@@ -61,11 +68,9 @@
   initialized = false;
   filterId: any;
   filter: any;
 
-  constructor(
-    element: ElementRef,
-    private cd: ChangeDetectorRef) {
+  constructor(element: ElementRef, private cd: ChangeDetectorRef) {
     this.element = element.nativeElement;
   }
 
   ngOnChanges(changes: SimpleChanges): void {
@@ -148,9 +153,11 @@
     return scale;
   }
 
   addBrush(): void {
-    if (this.brush) { return; }
+    if (this.brush) {
+      return;
+    }
 
     const height = this.height;
     const width = this.view[0];
 
@@ -169,9 +176,11 @@
       .call(this.brush);
   }
 
   updateBrush(): void {
-    if (!this.brush) { return; }
+    if (!this.brush) {
+      return;
+    }
 
     const height = this.height;
     const width = this.view[0];
 
@@ -180,9 +189,10 @@
       .select('.brush')
       .call(this.brush);
 
     // clear hardcoded properties so they can be defined by CSS
-    select(this.element).select('.selection')
+    select(this.element)
+      .select('.selection')
       .attr('fill', undefined)
       .attr('stroke', undefined)
       .attr('fill-opacity', undefined);
 
@@ -193,11 +203,10 @@
     const width = this.view[0];
 
     const dims = {
       width,
-      height: this.height
+      height: this.height,
     };
 
     return dims;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/alignment.type.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/alignment.type.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/alignment.type.ts
@@ -1,5 +1,5 @@
 export enum AlignmentTypes {
   left = 'left' as any,
   center = 'center' as any,
-  right = 'right' as any
+  right = 'right' as any,
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection-registery.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection-registery.service.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection-registery.service.ts
@@ -1,15 +1,14 @@
 import { ComponentRef } from '@angular/core';
 import { InjectionService } from './injection.service';
 
 export abstract class InjectionRegistery {
-
   protected abstract type: any;
 
   protected defaults: any = {};
   protected components: Map<any, any> = new Map();
 
-  constructor(public injectionService: InjectionService) { }
+  constructor(public injectionService: InjectionService) {}
 
   getByType(type: any = this.type) {
     return this.components.get(type);
   }
@@ -48,9 +47,9 @@
   destroyByType(type): void {
     const comps = this.components.get(type);
 
     if (comps) {
-      for(const comp of comps) {
+      for (const comp of comps) {
         this.destroy(comp);
       }
     }
   }
@@ -84,6 +83,5 @@
 
     const types = this.components.get(type);
     types.push(component);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection.service.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/injection.service.ts
@@ -5,9 +5,9 @@
   Injectable,
   Injector,
   EmbeddedViewRef,
   Type,
-  Renderer2
+  Renderer2,
 } from '@angular/core';
 
 /**
  * Injection service is a helper to append components
@@ -50,17 +50,23 @@
     const rootComponents = this.applicationRef.components;
 
     // fix cannot read length of undefined
     if (rootComponents) {
-      if (rootComponents.length) { return rootComponents[0]; }
+      if (rootComponents.length) {
+        return rootComponents[0];
+      }
     }
 
-    if (this._container) { return this._container; }
+    if (this._container) {
+      return this._container;
+    }
     if (InjectionService.globalRootViewContainer) {
       return InjectionService.globalRootViewContainer;
     }
 
-    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer.');
+    throw new Error(
+      'View Container not found! ngUpgrade needs to manually set this via setRootViewContainer.'
+    );
   }
 
   /**
    * Overrides the default root view container. This is useful for
@@ -83,11 +89,14 @@
    * @memberOf InjectionService
    */
   getComponentRootNode(componentRef: any): HTMLElement {
     // the top most component root node has no `hostView`
-    if (!componentRef.hostView) { return componentRef.element.nativeElement; }
+    if (!componentRef.hostView) {
+      return componentRef.element.nativeElement;
+    }
 
-    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;
+    return (componentRef.hostView as EmbeddedViewRef<any>)
+      .rootNodes[0] as HTMLElement;
   }
 
   /**
    * Gets the root component container html element.
@@ -108,9 +117,12 @@
    * @returns {ComponentRef<any>}
    *
    * @memberOf InjectionService
    */
-  projectComponentBindings(component: ComponentRef<any>, bindings: any): ComponentRef<any> {
+  projectComponentBindings(
+    component: ComponentRef<any>,
+    bindings: any
+  ): ComponentRef<any> {
     if (bindings) {
       if (bindings.inputs !== undefined) {
         const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);
         for (const bindingName of bindingKeys) {
@@ -144,9 +156,11 @@
     componentClass: Type<T>,
     bindings: any = {},
     location: Element = this.getRootViewContainerNode()
   ): ComponentRef<any> {
-    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);
+    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(
+      componentClass
+    );
     const componentRef: any = componentFactory.create(this.injector);
     const appRef: any = this.applicationRef;
     const componentRootNode = this.getComponentRootNode(componentRef);
 

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/show.type.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/show.type.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/show.type.ts
@@ -1,5 +1,5 @@
 export enum ShowTypes {
   all = 'all' as any,
   focus = 'focus' as any,
-  mouseover = 'mouseover' as any
+  mouseover = 'mouseover' as any,
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/style.type.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/style.type.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/style.type.ts
@@ -1,4 +1,4 @@
 export enum StyleTypes {
   popover = 'popover' as any,
-  tooltip = 'tooltip' as any
+  tooltip = 'tooltip' as any,
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.component.ts
@@ -1,7 +1,14 @@
 import {
-  Input, Component, ElementRef, AfterViewInit, ViewEncapsulation,
-  HostListener, ViewChild, HostBinding, Renderer2
+  Input,
+  Component,
+  ElementRef,
+  AfterViewInit,
+  ViewEncapsulation,
+  HostListener,
+  ViewChild,
+  HostBinding,
+  Renderer2,
 } from '@angular/core';
 
 import { throttleable } from '../../utils/throttle';
 import { PositionHelper } from './position/position';
@@ -16,29 +23,27 @@
     <div>
       <span
         #caretElm
         [hidden]="!showCaret"
-        class="tooltip-caret position-{{this.placement}}">
+        class="tooltip-caret position-{{ this.placement }}"
+      >
       </span>
       <div class="tooltip-content">
         <span *ngIf="!title">
           <ng-template
             [ngTemplateOutlet]="template"
-            [ngTemplateOutletContext]="{ model: context }">
+            [ngTemplateOutletContext]="{ model: context }"
+          >
           </ng-template>
         </span>
-        <span
-          *ngIf="title"
-          [innerHTML]="title">
-        </span>
+        <span *ngIf="title" [innerHTML]="title"> </span>
       </div>
     </div>
   `,
   encapsulation: ViewEncapsulation.None,
-  styleUrls: ['./tooltip.component.scss']
+  styleUrls: ['./tooltip.component.scss'],
 })
 export class TooltipContentComponent implements AfterViewInit {
-
   @Input() host: any;
   @Input() showCaret: boolean;
   @Input() type: StyleTypes;
   @Input() placement: PlacementTypes;
@@ -59,12 +64,9 @@
     clz += ` ${this.cssClass}`;
     return clz;
   }
 
-  constructor(
-    public element: ElementRef,
-    private renderer: Renderer2) {
-  }
+  constructor(public element: ElementRef, private renderer: Renderer2) {}
 
   ngAfterViewInit(): void {
     setTimeout(this.position.bind(this));
   }
@@ -73,9 +75,11 @@
     const nativeElm = this.element.nativeElement;
     const hostDim = this.host.nativeElement.getBoundingClientRect();
 
     // if no dims were found, never show
-    if (!hostDim.height && !hostDim.width) { return; }
+    if (!hostDim.height && !hostDim.width) {
+      return;
+    }
 
     const elmDim = nativeElm.getBoundingClientRect();
     this.checkFlip(hostDim, elmDim);
     this.positionContent(nativeElm, hostDim, elmDim);
@@ -89,9 +93,14 @@
   }
 
   positionContent(nativeElm, hostDim, elmDim): void {
     const { top, left } = PositionHelper.positionContent(
-      this.placement, elmDim, hostDim, this.spacing, this.alignment);
+      this.placement,
+      elmDim,
+      hostDim,
+      this.spacing,
+      this.alignment
+    );
 
     this.renderer.setStyle(nativeElm, 'top', `${top}px`);
     this.renderer.setStyle(nativeElm, 'left', `${left}px`);
   }
@@ -99,22 +108,31 @@
   positionCaret(hostDim, elmDim): void {
     const caretElm = this.caretElm.nativeElement;
     const caretDimensions = caretElm.getBoundingClientRect();
     const { top, left } = PositionHelper.positionCaret(
-      this.placement, elmDim, hostDim, caretDimensions, this.alignment);
+      this.placement,
+      elmDim,
+      hostDim,
+      caretDimensions,
+      this.alignment
+    );
 
     this.renderer.setStyle(caretElm, 'top', `${top}px`);
     this.renderer.setStyle(caretElm, 'left', `${left}px`);
   }
 
   checkFlip(hostDim, elmDim): void {
     this.placement = PositionHelper.determinePlacement(
-      this.placement, elmDim, hostDim, this.spacing, this.alignment);
+      this.placement,
+      elmDim,
+      hostDim,
+      this.spacing,
+      this.alignment
+    );
   }
 
   @HostListener('window:resize')
   @throttleable(100)
   onWindowResize(): void {
     this.position();
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.directive.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.directive.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.directive.ts
@@ -1,8 +1,13 @@
 import {
-  Directive, Input, Output, EventEmitter, HostListener,
+  Directive,
+  Input,
+  Output,
+  EventEmitter,
+  HostListener,
   ViewContainerRef,
-  Renderer2, OnDestroy
+  Renderer2,
+  OnDestroy,
 } from '@angular/core';
 
 import { PlacementTypes } from './position/placement.type';
 import { StyleTypes } from './style.type';
@@ -12,9 +17,8 @@
 import { TooltipService } from './tooltip.service';
 
 @Directive({ selector: '[ngx-tooltip]' })
 export class TooltipDirective implements OnDestroy {
-
   @Input() tooltipCssClass = '';
   @Input() tooltipTitle = '';
   @Input() tooltipAppendToBody = true;
   @Input() tooltipSpacing = 10;
@@ -35,15 +39,19 @@
   @Output() show = new EventEmitter();
   @Output() hide = new EventEmitter();
 
   private get listensForFocus(): boolean {
-    return this.tooltipShowEvent === ShowTypes.all ||
-      this.tooltipShowEvent === ShowTypes.focus;
+    return (
+      this.tooltipShowEvent === ShowTypes.all ||
+      this.tooltipShowEvent === ShowTypes.focus
+    );
   }
 
   private get listensForHover(): boolean {
-    return this.tooltipShowEvent === ShowTypes.all ||
-      this.tooltipShowEvent === ShowTypes.mouseover;
+    return (
+      this.tooltipShowEvent === ShowTypes.all ||
+      this.tooltipShowEvent === ShowTypes.mouseover
+    );
   }
 
   private component: any;
   private timeout: any;
@@ -53,10 +61,10 @@
 
   constructor(
     private tooltipService: TooltipService,
     private viewContainerRef: ViewContainerRef,
-    private renderer: Renderer2) {
-  }
+    private renderer: Renderer2
+  ) {}
 
   ngOnDestroy(): void {
     this.hideTooltip(true);
   }
@@ -89,9 +97,11 @@
 
       if (this.component) {
         const contentDom = this.component.instance.element.nativeElement;
         const contains = contentDom.contains(target);
-        if (contains) { return; }
+        if (contains) {
+          return;
+        }
       }
 
       this.hideTooltip(this.tooltipImmediateExit);
     }
@@ -104,9 +114,11 @@
     }
   }
 
   showTooltip(immediate?: boolean): void {
-    if (this.component || this.tooltipDisabled) { return; }
+    if (this.component || this.tooltipDisabled) {
+      return;
+    }
 
     const time = immediate ? 0 : this.tooltipShowTimeout;
 
     clearTimeout(this.timeout);
@@ -128,36 +140,58 @@
   }
 
   addHideListeners(tooltip): void {
     // on mouse enter, cancel the hide triggered by the leave
-    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {
-      clearTimeout(this.timeout);
-    });
+    this.mouseEnterContentEvent = this.renderer.listen(
+      tooltip,
+      'mouseenter',
+      () => {
+        clearTimeout(this.timeout);
+      }
+    );
 
     // content mouse leave listener
     if (this.tooltipCloseOnMouseLeave) {
-      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {
-        this.hideTooltip(this.tooltipImmediateExit);
-      });
+      this.mouseLeaveContentEvent = this.renderer.listen(
+        tooltip,
+        'mouseleave',
+        () => {
+          this.hideTooltip(this.tooltipImmediateExit);
+        }
+      );
     }
 
     // content close on click outside
     if (this.tooltipCloseOnClickOutside) {
-      this.documentClickEvent = this.renderer.listen(document, 'click', (event) => {
-        const contains = tooltip.contains(event.target);
-        if (!contains) { this.hideTooltip(); }
-      });
+      this.documentClickEvent = this.renderer.listen(
+        document,
+        'click',
+        event => {
+          const contains = tooltip.contains(event.target);
+          if (!contains) {
+            this.hideTooltip();
+          }
+        }
+      );
     }
   }
 
   hideTooltip(immediate = false): void {
-    if (!this.component) { return; }
+    if (!this.component) {
+      return;
+    }
 
     const destroyFn = () => {
       // remove events
-      if (this.mouseLeaveContentEvent) { this.mouseLeaveContentEvent(); }
-      if (this.mouseEnterContentEvent) { this.mouseEnterContentEvent(); }
-      if (this.documentClickEvent) { this.documentClickEvent(); }
+      if (this.mouseLeaveContentEvent) {
+        this.mouseLeaveContentEvent();
+      }
+      if (this.mouseEnterContentEvent) {
+        this.mouseEnterContentEvent();
+      }
+      if (this.documentClickEvent) {
+        this.documentClickEvent();
+      }
 
       // emit events
       this.hide.emit(true);
 
@@ -184,9 +218,8 @@
       type: this.tooltipType,
       showCaret: this.tooltipShowCaret,
       cssClass: this.tooltipCssClass,
       spacing: this.tooltipSpacing,
-      context: this.tooltipContext
+      context: this.tooltipContext,
     };
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.module.ts
@@ -11,7 +11,7 @@
   declarations: [TooltipContentComponent, TooltipDirective],
   providers: [InjectionService, TooltipService],
   exports: [TooltipContentComponent, TooltipDirective],
   imports: [CommonModule],
-  entryComponents: [TooltipContentComponent]
+  entryComponents: [TooltipContentComponent],
 })
-export class TooltipModule { }
+export class TooltipModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.service.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/tooltip.service.ts
@@ -4,12 +4,10 @@
 import { TooltipContentComponent } from './tooltip.component';
 
 @Injectable()
 export class TooltipService extends InjectionRegistery {
-
   type: any = TooltipContentComponent;
 
   constructor(public injectionService: InjectionService) {
     super(injectionService);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/position/placement.type.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/position/placement.type.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/position/placement.type.ts
@@ -1,6 +1,6 @@
 export enum PlacementTypes {
   top = 'top' as any,
   bottom = 'bottom' as any,
   left = 'left' as any,
-  right = 'right' as any
+  right = 'right' as any,
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/position/position.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/position/position.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip/position/position.ts
@@ -7,13 +7,20 @@
     return elDimensions.top - caretOffset;
   }
 
   if (alignment === 'bottom') {
-    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;
+    return (
+      elDimensions.top +
+      elDimensions.height -
+      popoverDimensions.height +
+      caretOffset
+    );
   }
 
   if (alignment === 'center') {
-    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;
+    return (
+      elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2
+    );
   }
 
   return undefined;
 }
@@ -23,13 +30,20 @@
     return elDimensions.left - caretOffset;
   }
 
   if (alignment === 'right') {
-    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;
+    return (
+      elDimensions.left +
+      elDimensions.width -
+      popoverDimensions.width +
+      caretOffset
+    );
   }
 
   if (alignment === 'center') {
-    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;
+    return (
+      elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2
+    );
   }
 
   return undefined;
 }
@@ -40,9 +54,8 @@
  * @export
  * @class PositionHelper
  */
 export class PositionHelper {
-
   /**
    * Calculate vertical alignment position
    *
    * @static
@@ -52,9 +65,13 @@
    * @returns {number}
    *
    * @memberOf PositionHelper
    */
-  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment): number {
+  static calculateVerticalAlignment(
+    elDimensions,
+    popoverDimensions,
+    alignment
+  ): number {
     let result = verticalPosition(elDimensions, popoverDimensions, alignment);
 
     if (result + popoverDimensions.height > window.innerHeight) {
       result = window.innerHeight - popoverDimensions.height;
@@ -74,26 +91,40 @@
    * @returns {number}
    *
    * @memberOf PositionHelper
    */
-  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {
+  static calculateVerticalCaret(
+    elDimensions,
+    popoverDimensions,
+    caretDimensions,
+    alignment
+  ): number {
     let result;
 
     if (alignment === 'top') {
-      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;
+      result =
+        elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;
     }
 
     if (alignment === 'bottom') {
-      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;
+      result =
+        popoverDimensions.height -
+        elDimensions.height / 2 -
+        caretDimensions.height / 2 -
+        caretOffset;
     }
 
     if (alignment === 'center') {
       result = popoverDimensions.height / 2 - caretDimensions.height / 2;
     }
 
-    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);
+    const popoverPosition = verticalPosition(
+      elDimensions,
+      popoverDimensions,
+      alignment
+    );
     if (popoverPosition + popoverDimensions.height > window.innerHeight) {
-      result += (popoverPosition + popoverDimensions.height - window.innerHeight);
+      result += popoverPosition + popoverDimensions.height - window.innerHeight;
     }
 
     return result;
   }
@@ -108,9 +139,13 @@
    * @returns {number}
    *
    * @memberOf PositionHelper
    */
-  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment): number {
+  static calculateHorizontalAlignment(
+    elDimensions,
+    popoverDimensions,
+    alignment
+  ): number {
     let result = horizontalPosition(elDimensions, popoverDimensions, alignment);
 
     if (result + popoverDimensions.width > window.innerWidth) {
       result = window.innerWidth - popoverDimensions.width;
@@ -130,26 +165,39 @@
    * @returns {number}
    *
    * @memberOf PositionHelper
    */
-  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {
+  static calculateHorizontalCaret(
+    elDimensions,
+    popoverDimensions,
+    caretDimensions,
+    alignment
+  ): number {
     let result;
 
     if (alignment === 'left') {
       result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;
     }
 
     if (alignment === 'right') {
-      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;
+      result =
+        popoverDimensions.width -
+        elDimensions.width / 2 -
+        caretDimensions.width / 2 -
+        caretOffset;
     }
 
     if (alignment === 'center') {
       result = popoverDimensions.width / 2 - caretDimensions.width / 2;
     }
 
-    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);
+    const popoverPosition = horizontalPosition(
+      elDimensions,
+      popoverDimensions,
+      alignment
+    );
     if (popoverPosition + popoverDimensions.width > window.innerWidth) {
-      result += (popoverPosition + popoverDimensions.width - window.innerWidth);
+      result += popoverPosition + popoverDimensions.width - window.innerWidth;
     }
 
     return result;
   }
@@ -166,20 +214,37 @@
    * @returns {boolean}
    *
    * @memberOf PositionHelper
    */
-  static shouldFlip(elDimensions, popoverDimensions, placement, alignment, spacing): boolean {
+  static shouldFlip(
+    elDimensions,
+    popoverDimensions,
+    placement,
+    alignment,
+    spacing
+  ): boolean {
     let flip = false;
 
     if (placement === 'right') {
-      const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);
-      if (popoverPosition + popoverDimensions.width + spacing > window.innerWidth) {
+      const popoverPosition = horizontalPosition(
+        elDimensions,
+        popoverDimensions,
+        alignment
+      );
+      if (
+        popoverPosition + popoverDimensions.width + spacing >
+        window.innerWidth
+      ) {
         flip = true;
       }
     }
 
     if (placement === 'left') {
-      const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);
+      const popoverPosition = horizontalPosition(
+        elDimensions,
+        popoverDimensions,
+        alignment
+      );
       if (popoverPosition - spacing < 0) {
         flip = true;
       }
     }
@@ -190,10 +255,17 @@
       }
     }
 
     if (placement === 'bottom') {
-      const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);
-      if (popoverPosition + popoverDimensions.height + spacing > window.innerHeight) {
+      const popoverPosition = verticalPosition(
+        elDimensions,
+        popoverDimensions,
+        alignment
+      );
+      if (
+        popoverPosition + popoverDimensions.height + spacing >
+        window.innerHeight
+      ) {
         flip = true;
       }
     }
 
@@ -212,28 +284,50 @@
    * @returns {*}
    *
    * @memberOf PositionHelper
    */
-  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment): any {
+  static positionCaret(
+    placement,
+    elmDim,
+    hostDim,
+    caretDimensions,
+    alignment
+  ): any {
     let top = 0;
     let left = 0;
 
     if (placement === PlacementTypes.right) {
       left = -7;
       top = PositionHelper.calculateVerticalCaret(
-        hostDim, elmDim, caretDimensions, alignment);
+        hostDim,
+        elmDim,
+        caretDimensions,
+        alignment
+      );
     } else if (placement === PlacementTypes.left) {
       left = elmDim.width;
       top = PositionHelper.calculateVerticalCaret(
-        hostDim, elmDim, caretDimensions, alignment);
+        hostDim,
+        elmDim,
+        caretDimensions,
+        alignment
+      );
     } else if (placement === PlacementTypes.top) {
       top = elmDim.height;
       left = PositionHelper.calculateHorizontalCaret(
-        hostDim, elmDim, caretDimensions, alignment);
+        hostDim,
+        elmDim,
+        caretDimensions,
+        alignment
+      );
     } else if (placement === PlacementTypes.bottom) {
       top = -7;
       left = PositionHelper.calculateHorizontalCaret(
-        hostDim, elmDim, caretDimensions, alignment);
+        hostDim,
+        elmDim,
+        caretDimensions,
+        alignment
+      );
     }
 
     return { top, left };
   }
@@ -257,21 +351,33 @@
 
     if (placement === PlacementTypes.right) {
       left = hostDim.left + hostDim.width + spacing;
       top = PositionHelper.calculateVerticalAlignment(
-        hostDim, elmDim, alignment);
+        hostDim,
+        elmDim,
+        alignment
+      );
     } else if (placement === PlacementTypes.left) {
       left = hostDim.left - elmDim.width - spacing;
       top = PositionHelper.calculateVerticalAlignment(
-        hostDim, elmDim, alignment);
+        hostDim,
+        elmDim,
+        alignment
+      );
     } else if (placement === PlacementTypes.top) {
       top = hostDim.top - elmDim.height - spacing;
       left = PositionHelper.calculateHorizontalAlignment(
-        hostDim, elmDim, alignment);
+        hostDim,
+        elmDim,
+        alignment
+      );
     } else if (placement === PlacementTypes.bottom) {
       top = hostDim.top + hostDim.height + spacing;
       left = PositionHelper.calculateHorizontalAlignment(
-        hostDim, elmDim, alignment);
+        hostDim,
+        elmDim,
+        alignment
+      );
     }
 
     return { top, left };
   }
@@ -288,15 +394,22 @@
    * @returns {*}
    *
    * @memberOf PositionHelper
    */
-  static determinePlacement(placement, elmDim, hostDim, spacing, alignment): any {
+  static determinePlacement(
+    placement,
+    elmDim,
+    hostDim,
+    spacing,
+    alignment
+  ): any {
     const shouldFlip = PositionHelper.shouldFlip(
       hostDim,
       elmDim,
       placement,
       alignment,
-      spacing);
+      spacing
+    );
 
     if (shouldFlip) {
       if (placement === PlacementTypes.right) {
         return PlacementTypes.left;
@@ -310,6 +423,5 @@
     }
 
     return placement;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip-area/tooltip-area.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip-area/tooltip-area.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/common/tooltip-area/tooltip-area.component.ts
@@ -6,14 +6,9 @@
   ViewChild,
   ChangeDetectionStrategy,
   TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { MouseEvent } from '../../events';
 
 @Component({
   selector: 'g[ng-svg-charts-tooltip-area]',
@@ -24,18 +19,18 @@
       transition('inactive => active', [
         style({
           opacity: 0,
         }),
-        animate(250, style({opacity: 0.7}))
+        animate(250, style({ opacity: 0.7 })),
       ]),
       transition('active => inactive', [
         style({
           opacity: 0.7,
         }),
-        animate(250, style({opacity: 0}))
-      ])
-    ])
-  ]
+        animate(250, style({ opacity: 0 })),
+      ]),
+    ]),
+  ],
 })
 export class TooltipAreaComponent {
   anchorOpacity = 0;
   anchorPos = -1;
@@ -59,9 +54,11 @@
   getValues(xVal): any[] {
     const results = [];
 
     for (const group of this.results) {
-      const item = group.series.find(d => d.name.toString() === xVal.toString());
+      const item = group.series.find(
+        d => d.name.toString() === xVal.toString()
+      );
       let groupName = group.name;
       if (groupName instanceof Date) {
         groupName = groupName.toLocaleDateString();
       }
@@ -88,9 +85,9 @@
           name: label,
           series: groupName,
           min: item.min,
           max: item.max,
-          color
+          color,
         });
       }
     }
 
@@ -107,13 +104,13 @@
     this.anchorPos = Math.min(this.dims.width, this.anchorPos);
 
     this.anchorValues = this.getValues(closestPoint);
     if (this.anchorPos !== this.lastAnchorPos) {
-      const ev = new MouseEvent('mouseleave', {bubbles: false});
+      const ev = new MouseEvent('mouseleave', { bubbles: false });
       this.tooltipAnchor.nativeElement.dispatchEvent(ev);
       this.anchorOpacity = 0.7;
       this.hover.emit({
-        value: closestPoint
+        value: closestPoint,
       });
       this.showTooltip();
 
       this.lastAnchorPos = this.anchorPos;
@@ -127,9 +124,9 @@
     let closestIndex = 0;
 
     while (minIndex <= maxIndex) {
       // tslint:disable-next-line: no-bitwise
-      const currentIndex = (minIndex + maxIndex) / 2 | 0;
+      const currentIndex = ((minIndex + maxIndex) / 2) | 0;
       const currentElement = this.xScale(this.xSet[currentIndex]);
 
       const curDiff = Math.abs(currentElement - xPos);
 
@@ -152,14 +149,14 @@
     return closestIndex;
   }
 
   showTooltip(): void {
-    const event = new MouseEvent('mouseenter', {bubbles: false});
+    const event = new MouseEvent('mouseenter', { bubbles: false });
     this.tooltipAnchor.nativeElement.dispatchEvent(event);
   }
 
   hideTooltip(): void {
-    const event = new MouseEvent('mouseleave', {bubbles: false});
+    const event = new MouseEvent('mouseleave', { bubbles: false });
     this.tooltipAnchor.nativeElement.dispatchEvent(event);
     this.anchorOpacity = 0;
     this.lastAnchorPos = -1;
   }
@@ -194,6 +191,5 @@
       result += ')';
     }
     return result;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge-arc.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge-arc.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge-arc.component.ts
@@ -3,28 +3,30 @@
   Input,
   Output,
   EventEmitter,
   ChangeDetectionStrategy,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { formatLabel } from '../common/label.helper';
 import { ColorHelper } from '../common/color.helper';
 
 @Component({
   selector: 'g[ng-svg-charts-gauge-arc]',
   template: `
-    <svg:g ng-svg-charts-pie-arc
+    <svg:g
+      ng-svg-charts-pie-arc
       class="background-arc"
       [startAngle]="0"
       [endAngle]="backgroundArc.endAngle"
       [innerRadius]="backgroundArc.innerRadius"
       [outerRadius]="backgroundArc.outerRadius"
       [cornerRadius]="cornerRadius"
       [data]="backgroundArc.data"
       [animate]="false"
-      [pointerEvents]="false">
-    </svg:g>
-    <svg:g ng-svg-charts-pie-arc
+      [pointerEvents]="false"
+    ></svg:g>
+    <svg:g
+      ng-svg-charts-pie-arc
       [startAngle]="0"
       [endAngle]="valueArc.endAngle"
       [innerRadius]="valueArc.innerRadius"
       [outerRadius]="valueArc.outerRadius"
@@ -41,15 +43,14 @@
       [tooltipPlacement]="'top'"
       [tooltipType]="'tooltip'"
       [tooltipTitle]="tooltipTemplate ? undefined : tooltipText(valueArc)"
       [tooltipTemplate]="tooltipTemplate"
-      [tooltipContext]="valueArc.data">
-    </svg:g>
+      [tooltipContext]="valueArc.data"
+    ></svg:g>
   `,
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class GaugeArcComponent {
-
   @Input() backgroundArc: any;
   @Input() valueArc: any;
   @Input() cornerRadius: any;
   @Input() colors: ColorHelper;

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge-axis.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge-axis.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge-axis.component.ts
@@ -2,36 +2,37 @@
   Component,
   Input,
   OnChanges,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { line } from 'd3-shape';
 
 @Component({
   selector: 'g[ng-svg-charts-gauge-axis]',
   template: `
     <svg:g [attr.transform]="rotate">
-        <svg:g *ngFor="let tick of ticks.big"
-            class="gauge-tick gauge-tick-large">
-            <svg:path [attr.d]="tick.line" />
-        </svg:g>
-        <svg:g *ngFor="let tick of ticks.big"
-            class="gauge-tick gauge-tick-large">
-            <svg:text
-                [style.textAnchor]="tick.textAnchor"
-                [attr.transform]="tick.textTransform"
-                alignment-baseline="central">
-                {{tick.text}}
-            </svg:text>
-        </svg:g>
-        <svg:g *ngFor="let tick of ticks.small"
-            class="gauge-tick gauge-tick-small">
-            <svg:path [attr.d]="tick.line" />
-        </svg:g>
+      <svg:g *ngFor="let tick of ticks.big" class="gauge-tick gauge-tick-large">
+        <svg:path [attr.d]="tick.line" />
+      </svg:g>
+      <svg:g *ngFor="let tick of ticks.big" class="gauge-tick gauge-tick-large">
+        <svg:text
+          [style.textAnchor]="tick.textAnchor"
+          [attr.transform]="tick.textTransform"
+          alignment-baseline="central"
+        >
+          {{ tick.text }}
+        </svg:text>
+      </svg:g>
+      <svg:g
+        *ngFor="let tick of ticks.small"
+        class="gauge-tick gauge-tick-small"
+      >
+        <svg:path [attr.d]="tick.line" />
+      </svg:g>
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class GaugeAxisComponent implements OnChanges {
   @Input() bigSegments: any;
   @Input() smallSegments: any;
@@ -52,27 +53,27 @@
   }
 
   update(): void {
     this.rotationAngle = -90 + this.startAngle;
-    this.rotate = `rotate(${ this.rotationAngle })`;
+    this.rotate = `rotate(${this.rotationAngle})`;
     this.ticks = this.getTicks();
   }
 
   getTicks(): any {
     const bigTickSegment = this.angleSpan / this.bigSegments;
-    const smallTickSegment = bigTickSegment / (this.smallSegments);
+    const smallTickSegment = bigTickSegment / this.smallSegments;
     const tickLength = 20;
     const ticks = {
       big: [],
-      small: []
+      small: [],
     };
 
     const startDistance = this.radius + 10;
     const textDist = startDistance + tickLength + 10;
 
     for (let i = 0; i <= this.bigSegments; i++) {
       const angleDeg = i * bigTickSegment;
-      const angle = angleDeg * Math.PI / 180;
+      const angle = (angleDeg * Math.PI) / 180;
 
       const textAnchor = this.getTextAnchor(angleDeg);
 
       let skip = false;
@@ -80,19 +81,22 @@
         skip = true;
       }
 
       if (!skip) {
-        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();
+        let text = Number.parseFloat(
+          this.valueScale.invert(angleDeg).toString()
+        ).toLocaleString();
         if (this.tickFormatting) {
           text = this.tickFormatting(text);
         }
         ticks.big.push({
           line: this.getTickPath(startDistance, tickLength, angle),
           textAnchor,
           text,
           textTransform: `
-            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${ -this.rotationAngle })
-          `
+            translate(${textDist * Math.cos(angle)}, ${textDist *
+            Math.sin(angle)}) rotate(${-this.rotationAngle})
+          `,
         });
       }
 
       if (i === this.bigSegments) {
@@ -100,12 +104,12 @@
       }
 
       for (let j = 1; j <= this.smallSegments; j++) {
         const smallAngleDeg = angleDeg + j * smallTickSegment;
-        const smallAngle = smallAngleDeg * Math.PI / 180;
+        const smallAngle = (smallAngleDeg * Math.PI) / 180;
 
         ticks.small.push({
-          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)
+          line: this.getTickPath(startDistance, tickLength / 2, smallAngle),
         });
       }
     }
 
@@ -133,10 +137,11 @@
     const y2 = (startDistance + tickLength) * Math.sin(angle);
     const x1 = startDistance * Math.cos(angle);
     const x2 = (startDistance + tickLength) * Math.cos(angle);
 
-    const points = [{x: x1, y: y1}, {x: x2, y: y2}];
-    const lineGenerator = line<any>().x(d => d.x).y(d => d.y);
+    const points = [{ x: x1, y: y1 }, { x: x2, y: y2 }];
+    const lineGenerator = line<any>()
+      .x(d => d.x)
+      .y(d => d.y);
     return lineGenerator(points);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge.component.ts
@@ -8,14 +8,17 @@
   Output,
   EventEmitter,
   ViewEncapsulation,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { scaleLinear } from 'd3-scale';
 
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 
 @Component({
   selector: 'ng-svg-charts-gauge',
@@ -27,12 +30,17 @@
       [activeEntries]="activeEntries"
       [animations]="animations"
       (legendLabelClick)="onClick($event)"
       (legendLabelActivate)="onActivate($event)"
-      (legendLabelDeactivate)="onDeactivate($event)">
+      (legendLabelDeactivate)="onDeactivate($event)"
+    >
       <svg:g [attr.transform]="transform" class="gauge chart">
-        <svg:g *ngFor="let arc of arcs; trackBy:trackBy" [attr.transform]="rotation">
-          <svg:g ng-svg-charts-gauge-arc
+        <svg:g
+          *ngFor="let arc of arcs; trackBy: trackBy"
+          [attr.transform]="rotation"
+        >
+          <svg:g
+            ng-svg-charts-gauge-arc
             [backgroundArc]="arc.backgroundArc"
             [valueArc]="arc.valueArc"
             [cornerRadius]="cornerRadius"
             [colors]="colors"
@@ -42,13 +50,14 @@
             [valueFormatting]="valueFormatting"
             [animations]="animations"
             (select)="onClick($event)"
             (activate)="onActivate($event)"
-            (deactivate)="onDeactivate($event)">
-          </svg:g>
+            (deactivate)="onDeactivate($event)"
+          ></svg:g>
         </svg:g>
 
-        <svg:g ng-svg-charts-gauge-axis
+        <svg:g
+          ng-svg-charts-gauge-axis
           *ngIf="showAxis"
           [bigSegments]="bigSegments"
           [smallSegments]="smallSegments"
           [min]="min"
@@ -56,31 +65,32 @@
           [radius]="outerRadius"
           [angleSpan]="angleSpan"
           [valueScale]="valueScale"
           [startAngle]="startAngle"
-          [tickFormatting]="axisTickFormatting">
-        </svg:g>
+          [tickFormatting]="axisTickFormatting"
+        ></svg:g>
 
-        <svg:text #textEl
-            [style.textAnchor]="'middle'"
-            [attr.transform]="textTransform"
-            alignment-baseline="central">
-          <tspan x="0" dy="0">{{displayValue}}</tspan>
-          <tspan x="0" dy="1.2em">{{units}}</tspan>
+        <svg:text
+          #textEl
+          [style.textAnchor]="'middle'"
+          [attr.transform]="textTransform"
+          alignment-baseline="central"
+        >
+          <tspan x="0" dy="0">{{ displayValue }}</tspan>
+          <tspan x="0" dy="1.2em">{{ units }}</tspan>
         </svg:text>
-
       </svg:g>
     </ng-svg-charts-chart>
   `,
   styleUrls: [
     '../common/base-chart/base-chart.component.scss',
-    './gauge.component.scss'
+    './gauge.component.scss',
   ],
   encapsulation: ViewEncapsulation.None,
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
-export class GaugeComponent extends BaseChartComponent implements AfterViewInit {
-
+export class GaugeComponent extends BaseChartComponent
+  implements AfterViewInit {
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() min = 0;
@@ -155,9 +165,9 @@
       width: this.width,
       height: this.height,
       margins: this.margin,
       showLegend: this.legend,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     this.domain = this.getDomain();
     this.valueDomain = this.getValueDomain();
@@ -173,10 +183,10 @@
 
     const xOffset = this.margin[3] + this.dims.width / 2;
     const yOffset = this.margin[0] + this.dims.height / 2;
 
-    this.transform = `translate(${ xOffset }, ${ yOffset })`;
-    this.rotation = `rotate(${ this.startAngle })`;
+    this.transform = `translate(${xOffset}, ${yOffset})`;
+    this.rotation = `rotate(${this.startAngle})`;
     setTimeout(() => this.scaleText(), 50);
   }
 
   getArcs(): any[] {
@@ -190,34 +200,35 @@
     this.cornerRadius = Math.floor(arcWidth / 2);
 
     let i = 0;
     for (const d of this.results) {
-      const outerRadius = this.outerRadius - (i * radiusPerArc);
+      const outerRadius = this.outerRadius - i * radiusPerArc;
       const innerRadius = outerRadius - arcWidth;
 
       const backgroundArc = {
-        endAngle: this.angleSpan * Math.PI / 180,
+        endAngle: (this.angleSpan * Math.PI) / 180,
         innerRadius,
         outerRadius,
         data: {
           value: this.max,
-          name: d.name
-        }
+          name: d.name,
+        },
       };
 
       const valueArc = {
-        endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,
+        endAngle:
+          (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,
         innerRadius,
         outerRadius,
         data: {
           value: d.value,
-          name: d.name
-        }
+          name: d.name,
+        },
       };
 
       const arc = {
         backgroundArc,
-        valueArc
+        valueArc,
       };
 
       arcs.push(arc);
       i++;
@@ -278,9 +289,10 @@
     if (width === 0) {
       this.resizeScale = 1;
     } else {
       const availableSpace = this.textRadius;
-      this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;
+      this.resizeScale =
+        Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;
     }
 
     if (this.resizeScale !== oldScale) {
       this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;
@@ -300,14 +312,19 @@
       scaleType: 'ordinal',
       colors: this.colors,
       domain: this.domain,
       title: this.legendTitle,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
   }
 
   setColors(): void {
-    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      'ordinal',
+      this.domain,
+      this.customColors
+    );
   }
 
   onActivate(item): void {
     const idx = this.activeEntries.findIndex(d => {
@@ -316,9 +333,9 @@
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(item): void {

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/gauge.module.ts
@@ -12,14 +12,14 @@
   declarations: [
     LinearGaugeComponent,
     GaugeComponent,
     GaugeArcComponent,
-    GaugeAxisComponent
+    GaugeAxisComponent,
   ],
   exports: [
     LinearGaugeComponent,
     GaugeComponent,
     GaugeArcComponent,
-    GaugeAxisComponent
-  ]
+    GaugeAxisComponent,
+  ],
 })
 export class GaugeModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/linear-gauge.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/linear-gauge.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/gauge/linear-gauge.component.ts
@@ -4,14 +4,17 @@
   ElementRef,
   ViewChild,
   AfterViewInit,
   ViewEncapsulation,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { scaleLinear } from 'd3-scale';
 
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 
 @Component({
   selector: 'ng-svg-charts-linear-gauge',
@@ -19,32 +22,35 @@
     <ng-svg-charts-chart
       [view]="[width, height]"
       [showLegend]="false"
       [animations]="animations"
-      (click)="onClick()">
+      (click)="onClick()"
+    >
       <svg:g class="linear-gauge chart">
-        <svg:g ng-svg-charts-bar
+        <svg:g
+          ng-svg-charts-bar
           class="background-bar"
           [width]="dims.width"
           [height]="3"
           [x]="margin[3]"
           [y]="dims.height / 2 + margin[0] - 2"
           [data]="{}"
           [orientation]="'horizontal'"
           [roundEdges]="true"
-          [animations]="animations">
-        </svg:g>
-        <svg:g ng-svg-charts-bar
+          [animations]="animations"
+        ></svg:g>
+        <svg:g
+          ng-svg-charts-bar
           [width]="valueScale(value)"
           [height]="3"
           [x]="margin[3]"
           [y]="dims.height / 2 + margin[0] - 2"
           [fill]="colors.getColor(units)"
           [data]="{}"
           [orientation]="'horizontal'"
           [roundEdges]="true"
-          [animations]="animations">
-        </svg:g>
+          [animations]="animations"
+        ></svg:g>
 
         <svg:line
           *ngIf="hasPreviousValue"
           [attr.transform]="transformLine"
@@ -66,39 +72,43 @@
         />
 
         <svg:g [attr.transform]="transform">
           <svg:g [attr.transform]="valueTranslate">
-            <svg:text #valueTextEl
+            <svg:text
+              #valueTextEl
               class="value"
               [style.textAnchor]="'middle'"
               [attr.transform]="valueTextTransform"
-              alignment-baseline="after-edge">
-              {{displayValue}}
+              alignment-baseline="after-edge"
+            >
+              {{ displayValue }}
             </svg:text>
           </svg:g>
 
           <svg:g [attr.transform]="unitsTranslate">
-            <svg:text #unitsTextEl
+            <svg:text
+              #unitsTextEl
               class="units"
               [style.textAnchor]="'middle'"
               [attr.transform]="unitsTextTransform"
-              alignment-baseline="before-edge">
-              {{units}}
+              alignment-baseline="before-edge"
+            >
+              {{ units }}
             </svg:text>
           </svg:g>
         </svg:g>
       </svg:g>
     </ng-svg-charts-chart>
   `,
   styleUrls: [
     '../common/base-chart/base-chart.component.scss',
-    './linear-gauge.component.scss'
+    './linear-gauge.component.scss',
   ],
   encapsulation: ViewEncapsulation.None,
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
-export class LinearGaugeComponent extends BaseChartComponent implements AfterViewInit {
-
+export class LinearGaugeComponent extends BaseChartComponent
+  implements AfterViewInit {
   @Input() min = 0;
   @Input() max = 100;
   @Input() value = 0;
   @Input() units: string;
@@ -147,9 +157,9 @@
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
-      margins: this.margin
+      margins: this.margin,
     });
 
     this.valueDomain = this.getValueDomain();
     this.valueScale = this.getValueScale();
@@ -159,10 +169,11 @@
 
     const xOffset = this.margin[3] + this.dims.width / 2;
     const yOffset = this.margin[0] + this.dims.height / 2;
 
-    this.transform = `translate(${ xOffset }, ${ yOffset })`;
-    this.transformLine = `translate(${ this.margin[3] + this.valueScale(this.previousValue) }, ${ yOffset })`;
+    this.transform = `translate(${xOffset}, ${yOffset})`;
+    this.transformLine = `translate(${this.margin[3] +
+      this.valueScale(this.previousValue)}, ${yOffset})`;
     this.valueTranslate = `translate(0, -15)`;
     this.unitsTranslate = `translate(0, 15)`;
     setTimeout(() => this.scaleText('value'), 50);
     setTimeout(() => this.scaleText('units'), 50);
@@ -200,34 +211,43 @@
     if (width === 0 || height === 0) return;
     const oldScale = resizeScale;
     const availableWidth = this.dims.width;
     const availableHeight = Math.max(this.dims.height / 2 - 15, 0);
-    const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;
-    const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;
+    const resizeScaleWidth =
+      Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;
+    const resizeScaleHeight =
+      Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;
     resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);
 
     if (resizeScale !== oldScale) {
       if (element === 'value') {
         this.valueResizeScale = resizeScale;
-        this.valueTextTransform = `scale(${ resizeScale }, ${ resizeScale })`;
+        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;
       } else {
         this.unitsResizeScale = resizeScale;
-        this.unitsTextTransform = `scale(${ resizeScale }, ${ resizeScale })`;
+        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;
       }
       this.cd.markForCheck();
       if (repeat) {
-        setTimeout(() => { this.scaleText(element, false); }, 50);
+        setTimeout(() => {
+          this.scaleText(element, false);
+        }, 50);
       }
     }
   }
 
   onClick(): void {
     this.select.emit({
       name: 'Value',
-      value: this.value
+      value: this.value,
     });
   }
 
   setColors(): void {
-    this.colors = new ColorHelper(this.scheme, 'ordinal', [this.value], this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      'ordinal',
+      [this.value],
+      this.customColors
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map-cell-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map-cell-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map-cell-series.component.ts
@@ -6,18 +6,18 @@
   EventEmitter,
   OnChanges,
   OnInit,
   ChangeDetectionStrategy,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { formatLabel } from '../common/label.helper';
 
 @Component({
   selector: 'g[ng-svg-charts-heat-map-cell-series]',
   template: `
     <svg:g
       ng-svg-charts-heat-map-cell
-      *ngFor="let c of cells; trackBy:trackBy"
+      *ngFor="let c of cells; trackBy: trackBy"
       [x]="c.x"
       [y]="c.y"
       [width]="c.width"
       [height]="c.height"
@@ -31,15 +31,14 @@
       [tooltipPlacement]="'top'"
       [tooltipType]="'tooltip'"
       [tooltipTitle]="tooltipTemplate ? undefined : tooltipText(c)"
       [tooltipTemplate]="tooltipTemplate"
-      [tooltipContext]="{series: c.series, name: c.label, value: c.data}">
-    </svg:g>
+      [tooltipContext]="{ series: c.series, name: c.label, value: c.data }"
+    ></svg:g>
   `,
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class HeatCellSeriesComponent implements OnChanges, OnInit {
-
   @Input() data;
   @Input() colors;
   @Input() xScale;
   @Input() yScale;
@@ -69,10 +68,10 @@
 
   getCells() {
     const cells = [];
 
-    this.data.map((row) => {
-      row.series.map((cell) => {
+    this.data.map(row => {
+      row.series.map(cell => {
         const value = cell.value;
 
         cells.push({
           row,
@@ -83,9 +82,9 @@
           height: this.yScale.bandwidth(),
           fill: this.colors.getColor(value),
           data: value,
           label: formatLabel(cell.name),
-          series: row.name
+          series: row.name,
         });
       });
     });
 
@@ -106,9 +105,8 @@
   onClick(value, label, series): void {
     this.select.emit({
       name: label,
       value,
-      series
+      series,
     });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map-cell.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map-cell.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map-cell.component.ts
@@ -5,9 +5,9 @@
   EventEmitter,
   SimpleChanges,
   ElementRef,
   OnChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { select } from 'd3-selection';
 
 import { id } from '../utils/id';
@@ -16,9 +16,10 @@
   selector: 'g[ng-svg-charts-heat-map-cell]',
   template: `
     <svg:g [attr.transform]="transform" class="cell">
       <defs *ngIf="gradient">
-        <svg:g ng-svg-charts-svg-linear-gradient
+        <svg:g
+          ng-svg-charts-svg-linear-gradient
           orientation="vertical"
           [name]="gradientId"
           [stops]="gradientStops"
         />
@@ -33,12 +34,11 @@
         (click)="onClick()"
       />
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class HeatMapCellComponent implements OnChanges {
-
   @Input() fill;
   @Input() x;
   @Input() y;
   @Input() width;
@@ -79,15 +79,16 @@
     return [
       {
         offset: 0,
         color: this.fill,
-        opacity: this.startOpacity
+        opacity: this.startOpacity,
       },
       {
         offset: 100,
         color: this.fill,
-        opacity: 1
-    }];
+        opacity: 1,
+      },
+    ];
   }
 
   loadAnimation(): void {
     const node = select(this.element).select('.cell');
@@ -97,13 +98,14 @@
 
   animateToCurrentForm(): void {
     const node: any = select(this.element).select('.cell');
 
-    node.transition().duration(750)
+    node
+      .transition()
+      .duration(750)
       .attr('opacity', 1);
   }
 
   onClick() {
     this.select.emit(this.data);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map.component.ts
@@ -3,16 +3,19 @@
   Input,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { scaleBand } from 'd3-scale';
 
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
-import {getScaleType} from '../common/domain.helper';
+import { getScaleType } from '../common/domain.helper';
 
 @Component({
   selector: 'ng-svg-charts-heat-map',
   template: `
@@ -20,11 +23,13 @@
       [view]="[width, height]"
       [showLegend]="legend"
       [animations]="animations"
       [legendOptions]="legendOptions"
-      (legendLabelClick)="onClick($event)">
+      (legendLabelClick)="onClick($event)"
+    >
       <svg:g [attr.transform]="transform" class="heat-map chart">
-        <svg:g ng-svg-charts-x-axis
+        <svg:g
+          ng-svg-charts-x-axis
           *ngIf="xAxis"
           [xScale]="xScale"
           [dims]="dims"
           [showLabel]="showXAxisLabel"
@@ -32,11 +37,12 @@
           [trimTicks]="trimXAxisTicks"
           [maxTickLength]="maxXAxisTickLength"
           [tickFormatting]="xAxisTickFormatting"
           [ticks]="xAxisTicks"
-          (dimensionsChanged)="updateXAxisHeight($event)">
-        </svg:g>
-        <svg:g ng-svg-charts-y-axis
+          (dimensionsChanged)="updateXAxisHeight($event)"
+        ></svg:g>
+        <svg:g
+          ng-svg-charts-y-axis
           *ngIf="yAxis"
           [yScale]="yScale"
           [dims]="dims"
           [showLabel]="showYAxisLabel"
@@ -44,19 +50,21 @@
           [trimTicks]="trimYAxisTicks"
           [maxTickLength]="maxYAxisTickLength"
           [tickFormatting]="yAxisTickFormatting"
           [ticks]="yAxisTicks"
-          (dimensionsChanged)="updateYAxisWidth($event)">
-        </svg:g>
-        <svg:rect *ngFor="let rect of rects"
+          (dimensionsChanged)="updateYAxisWidth($event)"
+        ></svg:g>
+        <svg:rect
+          *ngFor="let rect of rects"
           [attr.x]="rect.x"
           [attr.y]="rect.y"
           [attr.rx]="rect.rx"
           [attr.width]="rect.width"
           [attr.height]="rect.height"
           [attr.fill]="rect.fill"
         />
-        <svg:g ng-svg-charts-heat-map-cell-series
+        <svg:g
+          ng-svg-charts-heat-map-cell-series
           [xScale]="xScale"
           [yScale]="yScale"
           [colors]="colors"
           [data]="results"
@@ -71,12 +79,11 @@
     </ng-svg-charts-chart>
   `,
   changeDetection: ChangeDetectionStrategy.OnPush,
   styleUrls: ['../common/base-chart/base-chart.component.scss'],
-  encapsulation: ViewEncapsulation.None
+  encapsulation: ViewEncapsulation.None,
 })
 export class HeatMapComponent extends BaseChartComponent {
-
   @Input() legend;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -141,9 +148,9 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.scaleType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.scaleType === 'linear') {
       let min = this.min;
@@ -221,15 +228,20 @@
    * @returns {number}
    *
    * @memberOf HeatMapComponent
    */
-  getDimension(value: string | number | Array<string | number>, index = 0, N: number, L: number): number {
+  getDimension(
+    value: string | number | Array<string | number>,
+    index = 0,
+    N: number,
+    L: number
+  ): number {
     if (typeof value === 'string') {
       value = value
         .replace('[', '')
         .replace(']', '')
         .replace('px', '')
-        .replace('\'', '');
+        .replace("'", '');
 
       if (value.includes(',')) {
         value = value.split(',');
       }
@@ -243,17 +255,27 @@
     return N / (L / +value + 1);
   }
 
   getXScale(): any {
-    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);
+    const f = this.getDimension(
+      this.innerPadding,
+      0,
+      this.xDomain.length,
+      this.dims.width
+    );
     return scaleBand()
       .rangeRound([0, this.dims.width])
       .domain(this.xDomain)
       .paddingInner(f);
   }
 
   getYScale(): any {
-    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);
+    const f = this.getDimension(
+      this.innerPadding,
+      1,
+      this.yDomain.length,
+      this.dims.height
+    );
     return scaleBand()
       .rangeRound([this.dims.height, 0])
       .domain(this.yDomain)
       .paddingInner(f);
@@ -261,17 +283,17 @@
 
   getRects(): any[] {
     const rects = [];
 
-    this.xDomain.map((xVal) => {
-      this.yDomain.map((yVal) => {
+    this.xDomain.map(xVal => {
+      this.yDomain.map(yVal => {
         rects.push({
           x: this.xScale(xVal),
           y: this.yScale(yVal),
           rx: 3,
           width: this.xScale.bandwidth(),
           height: this.yScale.bandwidth(),
-          fill: 'rgba(200,200,200,0.03)'
+          fill: 'rgba(200,200,200,0.03)',
         });
       });
     });
 
@@ -282,18 +304,22 @@
     this.select.emit(data);
   }
 
   setColors(): void {
-    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.scaleType,
+      this.valueDomain
+    );
   }
 
   getLegendOptions() {
     return {
       scaleType: this.scaleType,
       domain: this.valueDomain,
       colors: this.scaleType === 'ordinal' ? this.colors : this.colors.scale,
       title: this.scaleType === 'ordinal' ? this.legendTitle : undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
   }
 
   updateYAxisWidth({ width }): void {
@@ -304,6 +330,5 @@
   updateXAxisHeight({ height }): void {
     this.xAxisHeight = height;
     this.update();
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/heat-map/heat-map.module.ts
@@ -8,13 +8,9 @@
   imports: [ChartCommonModule],
   declarations: [
     HeatMapCellComponent,
     HeatCellSeriesComponent,
-    HeatMapComponent
+    HeatMapComponent,
   ],
-  exports: [
-    HeatMapCellComponent,
-    HeatCellSeriesComponent,
-    HeatMapComponent
-  ]
+  exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],
 })
 export class HeatMapModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-chart.component.ts
@@ -6,20 +6,18 @@
   ViewEncapsulation,
   HostListener,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { scaleLinear, scaleTime, scalePoint } from 'd3-scale';
 import { curveLinear } from 'd3-shape';
 
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
 import { id } from '../utils/id';
 import { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';
@@ -35,17 +33,19 @@
       transition(':leave', [
         style({
           opacity: 1,
         }),
-        animate(500, style({
-          opacity: 0
-        }))
-      ])
-    ])
-  ]
+        animate(
+          500,
+          style({
+            opacity: 0,
+          })
+        ),
+      ]),
+    ]),
+  ],
 })
 export class LineChartComponent extends BaseChartComponent {
-
   @Input() legend;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis;
@@ -83,9 +83,11 @@
   @Output() activate: EventEmitter<any> = new EventEmitter();
   @Output() deactivate: EventEmitter<any> = new EventEmitter();
 
   @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;
-  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;
+  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<
+    any
+  >;
 
   dims: ViewDimensions;
   xSet: any;
   xDomain: any;
@@ -129,13 +131,14 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     if (this.timeline) {
-      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);
+      this.dims.height -=
+        this.timelineHeight + this.margin[2] + this.timelinePadding;
     }
 
     this.xDomain = this.getXDomain();
     if (this.filteredDomain) {
@@ -152,9 +155,9 @@
 
     this.setColors();
     this.legendOptions = this.getLegendOptions();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
 
     this.clipPathId = 'clip' + id().toString();
     this.clipPath = `url(#${this.clipPathId})`;
   }
@@ -162,11 +165,15 @@
   updateTimeline(): void {
     if (this.timeline) {
       this.timelineWidth = this.dims.width;
       this.timelineXDomain = this.getXDomain();
-      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);
+      this.timelineXScale = this.getXScale(
+        this.timelineXDomain,
+        this.timelineWidth
+      );
       this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);
-      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;
+      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this
+        .margin[2]})`;
     }
   }
 
   getXDomain(): any[] {
@@ -181,30 +188,30 @@
 
     let min;
     let max;
     if (this.scaleType === 'time' || this.scaleType === 'linear') {
-      min = this.xScaleMin
-        ? this.xScaleMin
-        : Math.min(...values);
+      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);
 
-      max = this.xScaleMax
-        ? this.xScaleMax
-        : Math.max(...values);
+      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);
     }
 
     if (this.scaleType === 'time') {
       domain = [new Date(min), new Date(max)];
       this.xSet = [...values].sort((a, b) => {
         const aDate = a.getTime();
         const bDate = b.getTime();
-        if (aDate > bDate) { return 1; }
-        if (bDate > aDate) { return -1; }
+        if (aDate > bDate) {
+          return 1;
+        }
+        if (bDate > aDate) {
+          return -1;
+        }
         return 0;
       });
     } else if (this.scaleType === 'linear') {
       domain = [min, max];
       // Use compare function to sort numbers numerically
-      this.xSet = [...values].sort((a, b) => (a - b));
+      this.xSet = [...values].sort((a, b) => a - b);
     } else {
       domain = values;
       this.xSet = values;
     }
@@ -238,15 +245,11 @@
     if (!this.autoScale) {
       values.push(0);
     }
 
-    const min = this.yScaleMin
-      ? this.yScaleMin
-      : Math.min(...values);
+    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);
 
-    const max = this.yScaleMax
-      ? this.yScaleMax
-      : Math.max(...values);
+    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);
 
     return [min, max];
   }
 
@@ -323,18 +326,23 @@
     } else {
       domain = this.yDomain;
     }
 
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     const opts = {
       scaleType: this.schemeType,
       colors: undefined,
       domain: [],
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
     if (opts.scaleType === 'ordinal') {
       opts.domain = this.seriesDomain;
       opts.colors = this.colors;

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-chart.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-chart.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-chart.module.ts
@@ -5,16 +5,8 @@
 import { LineSeriesComponent } from './line-series.component';
 
 @NgModule({
   imports: [ChartCommonModule],
-  declarations: [
-    LineComponent,
-    LineChartComponent,
-    LineSeriesComponent
-  ],
-  exports: [
-    LineComponent,
-    LineChartComponent,
-    LineSeriesComponent
-  ]
+  declarations: [LineComponent, LineChartComponent, LineSeriesComponent],
+  exports: [LineComponent, LineChartComponent, LineSeriesComponent],
 })
 export class LineChartModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line-series.component.ts
@@ -2,9 +2,9 @@
   Component,
   Input,
   OnChanges,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { area, line } from 'd3-shape';
 
 import { id } from '../utils/id';
@@ -14,15 +14,18 @@
   selector: 'g[ng-svg-charts-line-series]',
   template: `
     <svg:g>
       <defs>
-        <svg:g ng-svg-charts-svg-linear-gradient *ngIf="hasGradient"
+        <svg:g
+          ng-svg-charts-svg-linear-gradient
+          *ngIf="hasGradient"
           orientation="vertical"
           [name]="gradientId"
           [stops]="gradientStops"
         />
       </defs>
-      <svg:g ng-svg-charts-area
+      <svg:g
+        ng-svg-charts-area
         class="line-highlight"
         [data]="data"
         [path]="areaPath"
         [fill]="hasGradient ? gradientUrl : colors.getColor(data.name)"
@@ -33,18 +36,20 @@
         [class.active]="isActive(data)"
         [class.inactive]="isInactive(data)"
         [animations]="animations"
       />
-      <svg:g ng-svg-charts-line
+      <svg:g
+        ng-svg-charts-line
         class="line-series"
         [data]="data"
         [path]="path"
         [stroke]="stroke"
         [animations]="animations"
         [class.active]="isActive(data)"
         [class.inactive]="isInactive(data)"
       />
-    <svg:g ng-svg-charts-area
+      <svg:g
+        ng-svg-charts-area
         *ngIf="hasRange"
         class="line-series-range"
         [data]="data"
         [path]="outerPath"
@@ -55,12 +60,11 @@
         [animations]="animations"
       />
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class LineSeriesComponent implements OnChanges {
-
   @Input() data;
   @Input() xScale;
   @Input() yScale;
   @Input() colors;
@@ -133,27 +137,27 @@
   }
 
   getRangeGenerator(): any {
     return area<any>()
-        .x(d => {
-          const label = d.name;
-          let value;
-          if (this.scaleType === 'time') {
-            value = this.xScale(label);
-          } else if (this.scaleType === 'linear') {
-            value = this.xScale(Number(label));
-          } else {
-            value = this.xScale(label);
-          }
-          return value;
-        })
-        .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))
-        .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))
-        .curve(this.curve);
+      .x(d => {
+        const label = d.name;
+        let value;
+        if (this.scaleType === 'time') {
+          value = this.xScale(label);
+        } else if (this.scaleType === 'linear') {
+          value = this.xScale(Number(label));
+        } else {
+          value = this.xScale(label);
+        }
+        return value;
+      })
+      .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))
+      .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))
+      .curve(this.curve);
   }
 
   getAreaGenerator(): any {
-    const xProperty = (d) => {
+    const xProperty = d => {
       const label = d.name;
       return this.xScale(label);
     };
 
@@ -193,20 +197,23 @@
     }
   }
 
   isActive(entry): boolean {
-    if (!this.activeEntries) { return false; }
+    if (!this.activeEntries) {
+      return false;
+    }
     const item = this.activeEntries.find(d => {
       return entry.name === d.name;
     });
     return item !== undefined;
   }
 
   isInactive(entry): boolean {
-    if (!this.activeEntries || this.activeEntries.length === 0) { return false; }
+    if (!this.activeEntries || this.activeEntries.length === 0) {
+      return false;
+    }
     const item = this.activeEntries.find(d => {
       return entry.name === d.name;
     });
     return item === undefined;
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/line-chart/line.component.ts
@@ -5,16 +5,11 @@
   EventEmitter,
   OnChanges,
   ElementRef,
   ChangeDetectionStrategy,
-  SimpleChanges
+  SimpleChanges,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { select } from 'd3-selection';
 
 @Component({
   selector: 'g[ng-svg-charts-line]',
@@ -35,17 +30,19 @@
         style({
           strokeDasharray: 2000,
           strokeDashoffset: 2000,
         }),
-        animate(1000, style({
-          strokeDashoffset: 0
-        }))
-      ])
-    ])
-  ]
+        animate(
+          1000,
+          style({
+            strokeDashoffset: 0,
+          })
+        ),
+      ]),
+    ]),
+  ],
 })
 export class LineComponent implements OnChanges {
-
   @Input() path;
   @Input() stroke;
   @Input() data;
   @Input() fill = 'none';
@@ -55,10 +52,9 @@
 
   initialized = false;
   initialPath: string;
 
-  constructor(private element: ElementRef) {
-  }
+  constructor(private element: ElementRef) {}
 
   ngOnChanges(changes: SimpleChanges): void {
     if (!this.initialized) {
       this.initialized = true;
@@ -72,9 +68,10 @@
     const node: any = select(this.element.nativeElement).select('.line');
 
     if (this.animations) {
       node
-        .transition().duration(750)
+        .transition()
+        .duration(750)
         .attr('d', this.path);
     } else {
       node.attr('d', this.path);
     }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/card-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/card-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/card-series.component.ts
@@ -4,9 +4,9 @@
   Output,
   EventEmitter,
   OnChanges,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { invertColor } from '../utils/color-utils';
 
 export interface CardModel {
@@ -23,9 +23,9 @@
 @Component({
   selector: 'g[ng-svg-charts-card-series]',
   template: `
     <svg:rect
-      *ngFor="let c of emptySlots; trackBy:trackBy"
+      *ngFor="let c of emptySlots; trackBy: trackBy"
       class="card-empty"
       [attr.x]="c.x"
       [attr.y]="c.y"
       [style.fill]="emptyColor"
@@ -33,9 +33,11 @@
       [attr.height]="c.height"
       rx="3"
       ry="3"
     />
-    <svg:g ng-svg-charts-card *ngFor="let c of cards; trackBy:trackBy"
+    <svg:g
+      ng-svg-charts-card
+      *ngFor="let c of cards; trackBy: trackBy"
       [x]="c.x"
       [y]="c.y"
       [width]="c.width"
       [height]="c.height"
@@ -49,12 +51,11 @@
       [animations]="animations"
       (select)="onClick($event)"
     />
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class CardSeriesComponent implements OnChanges {
-
   @Input() data: any[];
   @Input() slots: any[];
   @Input() dims;
   @Input() colors;
@@ -79,18 +80,25 @@
   }
 
   update(): void {
     if (this.data.length > 2) {
-      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());
+      const valueFormatting =
+        this.valueFormatting || (card => card.value.toLocaleString());
 
       const sortedLengths = this.data
         .map(d => {
-          const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;
-          return hasValue ? valueFormatting({
-            data: d.data,
-            label: d ? d.data.name : '',
-            value: (d && d.data) ? d.data.value : ''
-          }).length : 0;
+          const hasValue =
+            d &&
+            d.data &&
+            typeof d.data.value !== 'undefined' &&
+            d.data.value !== null;
+          return hasValue
+            ? valueFormatting({
+                data: d.data,
+                label: d ? d.data.name : '',
+                value: d && d.data ? d.data.value : '',
+              }).length
+            : 0;
         })
         .sort((a, b) => b - a);
       const idx = Math.ceil(this.data.length / 2);
       this.medianSize = sortedLengths[idx];
@@ -101,41 +109,42 @@
     this.emptySlots = cards.filter(d => d.data.value === null);
   }
 
   getCards(): any[] {
-    const yPadding = typeof this.innerPadding === 'number' ?
-      this.innerPadding :
-      this.innerPadding[0] + this.innerPadding[2];
-    const xPadding = typeof this.innerPadding === 'number' ?
-      this.innerPadding :
-      this.innerPadding[1] + this.innerPadding[3];
+    const yPadding =
+      typeof this.innerPadding === 'number'
+        ? this.innerPadding
+        : this.innerPadding[0] + this.innerPadding[2];
+    const xPadding =
+      typeof this.innerPadding === 'number'
+        ? this.innerPadding
+        : this.innerPadding[1] + this.innerPadding[3];
 
-    return this.data
-      .map((d, index) => {
-        let label = d.data.name;
-        if (label && label.constructor.name === 'Date') {
-          label = label.toLocaleDateString();
-        } else {
-          label = label ? label.toLocaleString() : label;
-        }
-        d.data.name = label;
+    return this.data.map((d, index) => {
+      let label = d.data.name;
+      if (label && label.constructor.name === 'Date') {
+        label = label.toLocaleDateString();
+      } else {
+        label = label ? label.toLocaleString() : label;
+      }
+      d.data.name = label;
 
-        const value = d.data.value;
-        const valueColor = label ? this.colors.getColor(label) : this.emptyColor;
-        const color = this.cardColor || valueColor || '#000';
-        return {
-          x: d.x,
-          y: d.y,
-          width: d.width - xPadding,
-          height: d.height - yPadding,
-          color,
-          bandColor: this.bandColor || valueColor,
-          textColor: this.textColor || invertColor(color),
-          label,
-          data: d.data,
-          tooltipText: `${label}: ${value}`
-        };
-      });
+      const value = d.data.value;
+      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;
+      const color = this.cardColor || valueColor || '#000';
+      return {
+        x: d.x,
+        y: d.y,
+        width: d.width - xPadding,
+        height: d.height - yPadding,
+        color,
+        bandColor: this.bandColor || valueColor,
+        textColor: this.textColor || invertColor(color),
+        label,
+        data: d.data,
+        tooltipText: `${label}: ${value}`,
+      };
+    });
   }
 
   trackBy(index, card): string {
     return card.label;
@@ -143,6 +152,5 @@
 
   onClick(data): void {
     this.select.emit(data);
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/card.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/card.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/card.component.ts
@@ -1,20 +1,26 @@
 import {
-  Component, Input, Output, EventEmitter, ElementRef,
-  SimpleChanges, OnChanges, ViewChild, ChangeDetectionStrategy,
-  ChangeDetectorRef, NgZone, OnDestroy
+  Component,
+  Input,
+  Output,
+  EventEmitter,
+  ElementRef,
+  SimpleChanges,
+  OnChanges,
+  ViewChild,
+  ChangeDetectionStrategy,
+  ChangeDetectorRef,
+  NgZone,
+  OnDestroy,
 } from '@angular/core';
 import { trimLabel } from '../common/trim-label.helper';
 import { roundedRect } from '../common/shape.helper';
 import { count, decimalChecker } from '../common/count/count.helper';
 
 @Component({
   selector: 'g[ng-svg-charts-card]',
   template: `
-    <svg:g
-      [attr.transform]="transform"
-      class="cell"
-      (click)="onClick()">
+    <svg:g [attr.transform]="transform" class="cell" (click)="onClick()">
       <svg:rect
         class="card"
         [style.fill]="color"
         [attr.width]="cardWidth"
@@ -29,40 +35,43 @@
         [attr.transform]="transformBand"
         stroke="none"
         [attr.d]="bandPath"
       />
-      <title>{{label}}</title>
+      <title>{{ label }}</title>
       <svg:foreignObject
         class="trimmed-label"
         x="5"
         [attr.x]="textPadding[3]"
         [attr.y]="cardHeight - textPadding[2]"
         [attr.width]="textWidth"
         [attr.height]="labelFontSize + textPadding[2]"
-        alignment-baseline="hanging">
+        alignment-baseline="hanging"
+      >
         <xhtml:p
           [style.color]="textColor"
           [style.fontSize.px]="labelFontSize"
           [style.lineHeight.px]="labelFontSize"
-          [innerHTML]="formattedLabel">
+          [innerHTML]="formattedLabel"
+        >
         </xhtml:p>
       </svg:foreignObject>
-      <svg:text #textEl
+      <svg:text
+        #textEl
         class="value-text"
         [attr.x]="textPadding[3]"
         [attr.y]="textPadding[0]"
         [style.fill]="textColor"
         text-anchor="start"
         alignment-baseline="hanging"
-        [style.font-size.pt]="textFontSize">
-        {{value}}
+        [style.font-size.pt]="textFontSize"
+      >
+        {{ value }}
       </svg:text>
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class CardComponent implements OnChanges, OnDestroy {
-
   @Input() color;
   @Input() bandColor;
   @Input() textColor;
 
@@ -99,9 +108,13 @@
   labelFontSize = 15;
 
   bandPath: string;
 
-  constructor(element: ElementRef, private cd: ChangeDetectorRef, private zone: NgZone) {
+  constructor(
+    element: ElementRef,
+    private cd: ChangeDetectorRef,
+    private zone: NgZone
+  ) {
     this.element = element.nativeElement;
   }
 
   ngOnChanges(changes: SimpleChanges): void {
@@ -114,34 +127,43 @@
 
   update(): void {
     this.zone.run(() => {
       const hasValue = this.data && typeof this.data.value !== 'undefined';
-      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());
-      const labelFormatting = this.labelFormatting || (card => trimLabel(card.label, 55));
+      const valueFormatting =
+        this.valueFormatting || (card => card.value.toLocaleString());
+      const labelFormatting =
+        this.labelFormatting || (card => trimLabel(card.label, 55));
 
       this.transform = `translate(${this.x} , ${this.y})`;
 
-      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];
+      this.textWidth =
+        Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];
       this.cardWidth = Math.max(0, this.width);
       this.cardHeight = Math.max(0, this.height);
 
       this.label = this.data ? this.data.name : '';
 
       const cardData = {
         label: this.label,
         data: this.data,
-        value: this.data.value
+        value: this.data.value,
       };
 
       this.formattedLabel = labelFormatting(cardData);
-      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;
+      this.transformBand = `translate(0 , ${this.cardHeight -
+        this.bandHeight})`;
 
       const value = hasValue ? valueFormatting(cardData) : '';
 
       this.value = this.paddedValue(value);
       this.setPadding();
 
-      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);
+      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [
+        false,
+        false,
+        true,
+        true,
+      ]);
 
       setTimeout(() => {
         this.scaleText();
         this.value = value;
@@ -164,14 +186,19 @@
       cancelAnimationFrame(this.animationReq);
 
       const val = this.data.value;
       const decs = decimalChecker(val);
-      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());
+      const valueFormatting =
+        this.valueFormatting || (card => card.value.toLocaleString());
 
       const callback = ({ value, finished }) => {
         this.zone.run(() => {
           value = finished ? val : value;
-          this.value = valueFormatting({ label: this.label, data: this.data, value });
+          this.value = valueFormatting({
+            label: this.label,
+            data: this.data,
+            value,
+          });
           if (!finished) {
             this.value = this.paddedValue(this.value);
           }
           this.cd.markForCheck();
@@ -184,18 +211,25 @@
   }
 
   scaleText(): void {
     this.zone.run(() => {
-      const { width, height } = this.textEl.nativeElement.getBoundingClientRect();
+      const {
+        width,
+        height,
+      } = this.textEl.nativeElement.getBoundingClientRect();
       if (width === 0 || height === 0) {
         return;
       }
 
-      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;
+      const textPadding = (this.textPadding[1] = this.textPadding[3] =
+        this.cardWidth / 8);
       const availableWidth = this.cardWidth - 2 * textPadding;
       const availableHeight = this.cardHeight / 3;
 
-      const resizeScale = Math.min(availableWidth / width, availableHeight / height);
+      const resizeScale = Math.min(
+        availableWidth / width,
+        availableHeight / height
+      );
       this.textFontSize = Math.floor(this.textFontSize * resizeScale);
       this.labelFontSize = Math.min(this.textFontSize, 15);
 
       this.setPadding();
@@ -212,8 +246,8 @@
 
   onClick(): void {
     this.select.emit({
       name: this.data.name,
-      value: this.data.value
+      value: this.data.value,
     });
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/number-card.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/number-card.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/number-card.component.ts
@@ -1,24 +1,27 @@
 import {
   Component,
   ViewEncapsulation,
   ChangeDetectionStrategy,
-  Input
+  Input,
 } from '@angular/core';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { gridLayout, gridSize } from '../common/grid-layout.helper';
 
 @Component({
   selector: 'ng-svg-charts-number-card',
   templateUrl: 'number-card.template.html',
   styleUrls: [
     '../common/base-chart/base-chart.component.scss',
-    './card.component.scss'
+    './card.component.scss',
   ],
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class NumberCardComponent extends BaseChartComponent {
   @Input() cardColor: string;
   @Input() bandColor: string;
@@ -48,23 +51,23 @@
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
-      margins: this.margin
+      margins: this.margin,
     });
 
     this.domain = this.getDomain();
 
     this.setColors();
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
 
     const size = gridSize(this.dims, this.results.length, 150);
     const N = size[0] * size[1];
 
     const data = this.results.slice();
 
     while (data.length < N) {
-      data.push({value: null});
+      data.push({ value: null });
     }
 
     this.data = gridLayout(this.dims, data, 150, this.designatedTotal);
   }
@@ -77,8 +80,12 @@
     this.select.emit(data);
   }
 
   setColors(): void {
-    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      'ordinal',
+      this.domain,
+      this.customColors
+    );
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/number-card.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/number-card.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/number-card/number-card.module.ts
@@ -5,16 +5,8 @@
 import { NumberCardComponent } from './number-card.component';
 
 @NgModule({
   imports: [ChartCommonModule],
-  declarations: [
-    CardComponent,
-    CardSeriesComponent,
-    NumberCardComponent
-  ],
-  exports: [
-    CardComponent,
-    CardSeriesComponent,
-    NumberCardComponent
-  ]
+  declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],
+  exports: [CardComponent, CardSeriesComponent, NumberCardComponent],
 })
 export class NumberCardModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/advanced-pie-chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/advanced-pie-chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/advanced-pie-chart.component.ts
@@ -5,21 +5,27 @@
   EventEmitter,
   Input,
   Output,
   TemplateRef,
-  ViewEncapsulation
+  ViewEncapsulation,
 } from '@angular/core';
 
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
 
 @Component({
   selector: 'ng-svg-charts-advanced-pie-chart',
   templateUrl: 'advanced-pie-chart.template.html',
-  styleUrls: ['../common/base-chart/base-chart.component.scss', './advanced-pie-chart.component.scss'],
+  styleUrls: [
+    '../common/base-chart/base-chart.component.scss',
+    './advanced-pie-chart.component.scss',
+  ],
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class AdvancedPieChartComponent extends BaseChartComponent {
   @Input() gradient: boolean;
   @Input() activeEntries: any[] = [];
@@ -51,9 +57,9 @@
 
     this.dims = calculateViewDimensions({
       width: (this.width * 4) / 12.0,
       height: this.height,
-      margins: this.margin
+      margins: this.margin,
     });
 
     this.domain = this.getDomain();
     this.setColors();
@@ -76,13 +82,20 @@
     this.select.emit(data);
   }
 
   setColors(): void {
-    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      'ordinal',
+      this.domain,
+      this.customColors
+    );
   }
 
   onActivate(event: Event): void {
-    if (this.activeEntries.indexOf(event) > -1) { return; }
+    if (this.activeEntries.indexOf(event) > -1) {
+      return;
+    }
     this.activeEntries = [event, ...this.activeEntries];
     this.activate.emit({ value: event, entries: this.activeEntries });
   }
 

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-arc.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-arc.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-arc.component.ts
@@ -5,9 +5,9 @@
   EventEmitter,
   ElementRef,
   SimpleChanges,
   OnChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { interpolate } from 'd3-interpolate';
 import { select } from 'd3-selection';
 import { arc } from 'd3-shape';
@@ -18,9 +18,9 @@
 
 @Component({
   selector: 'g[ng-svg-charts-pie-arc]',
   templateUrl: 'pie-arc.template.html',
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class PieArcComponent implements OnChanges {
   @Input() fill;
   @Input() startAngle = 0;
@@ -159,8 +159,8 @@
     clearTimeout(this._timeout);
 
     this.dblclick.emit({
       data: this.data,
-      nativeEvent: event
+      nativeEvent: event,
     });
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-chart.component.ts
@@ -5,9 +5,9 @@
   ViewEncapsulation,
   EventEmitter,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { calculateViewDimensions } from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
@@ -16,15 +16,14 @@
   selector: 'ng-svg-charts-pie-chart',
   templateUrl: 'pie-chart.template.html',
   styleUrls: [
     '../common/base-chart/base-chart.component.scss',
-    './pie-chart.component.scss'
+    './pie-chart.component.scss',
   ],
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class PieChartComponent extends BaseChartComponent {
-
   @Input() labels = false;
   @Input() legend = false;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
@@ -67,9 +66,9 @@
       width: this.width,
       height: this.height,
       margins: this.margin,
       showLegend: this.legend,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     const xOffset = this.margin[3] + this.dims.width / 2;
     const yOffset = this.margin[0] + this.dims.height / 2;
@@ -120,18 +119,23 @@
     this.select.emit(data);
   }
 
   setColors(): void {
-    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      'ordinal',
+      this.domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     return {
       scaleType: 'ordinal',
       domain: this.domain,
       colors: this.colors,
       title: this.legendTitle,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
   }
 
   onActivate(item) {
@@ -141,9 +145,9 @@
     if (idx > -1) {
       return;
     }
 
-    this.activeEntries = [ item, ...this.activeEntries ];
+    this.activeEntries = [item, ...this.activeEntries];
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(item) {
@@ -155,6 +159,5 @@
     this.activeEntries = [...this.activeEntries];
 
     this.deactivate.emit({ value: item, entries: this.activeEntries });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-chart.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-chart.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-chart.module.ts
@@ -16,17 +16,17 @@
     PieArcComponent,
     PieChartComponent,
     PieGridComponent,
     PieGridSeriesComponent,
-    PieSeriesComponent
+    PieSeriesComponent,
   ],
   exports: [
     AdvancedPieChartComponent,
     PieLabelComponent,
     PieArcComponent,
     PieChartComponent,
     PieGridComponent,
     PieGridSeriesComponent,
-    PieSeriesComponent
-  ]
+    PieSeriesComponent,
+  ],
 })
 export class PieChartModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-grid-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-grid-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-grid-series.component.ts
@@ -5,17 +5,19 @@
   EventEmitter,
   ElementRef,
   OnChanges,
   SimpleChanges,
-  ChangeDetectionStrategy
+  ChangeDetectionStrategy,
 } from '@angular/core';
 import { pie } from 'd3-shape';
 
 @Component({
   selector: 'g[ng-svg-charts-pie-grid-series]',
   template: `
     <svg:g class="pie-grid-arcs">
-      <svg:g ng-svg-charts-pie-arc *ngFor="let arc of arcs; trackBy:trackBy"
+      <svg:g
+        ng-svg-charts-pie-arc
+        *ngFor="let arc of arcs; trackBy: trackBy"
         [attr.class]="arc.class"
         [startAngle]="arc.startAngle"
         [endAngle]="arc.endAngle"
         [innerRadius]="innerRadius"
@@ -25,17 +27,15 @@
         [data]="arc.data"
         [gradient]="false"
         [pointerEvents]="arc.pointerEvents"
         [animate]="arc.animate"
-        (select)="onClick($event)">
-      </svg:g>
+        (select)="onClick($event)"
+      ></svg:g>
     </svg:g>
   `,
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
-
 export class PieGridSeriesComponent implements OnChanges {
-
   @Input() colors;
   @Input() data;
   @Input() innerRadius = 70;
   @Input() outerRadius = 80;
@@ -56,9 +56,10 @@
   }
 
   update(): void {
     this.layout = pie<any, any>()
-      .value((d) => d.data.value).sort(null);
+      .value(d => d.data.value)
+      .sort(null);
 
     this.arcs = this.getArcs();
   }
 
@@ -78,17 +79,17 @@
         fill: color,
         startAngle: other ? 0 : arc.startAngle,
         endAngle: arc.endAngle,
         animate: this.animations && !other,
-        pointerEvents: !other
+        pointerEvents: !other,
       };
     });
   }
 
   onClick(data): void {
     this.select.emit({
       name: this.data[0].data.name,
-      value: this.data[0].data.value
+      value: this.data[0].data.value,
     });
   }
 
   trackBy(index, item): string {
@@ -101,6 +102,5 @@
 
   color(arc): any {
     return this.colors(this.label(arc));
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-grid.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-grid.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-grid.component.ts
@@ -3,14 +3,17 @@
   Input,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { min } from 'd3-array';
 import { format } from 'd3-format';
 
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
 import { trimLabel } from '../common/trim-label.helper';
 import { gridLayout } from '../common/grid-layout.helper';
@@ -20,9 +23,9 @@
   selector: 'ng-svg-charts-pie-grid',
   template: 'pie-grid.template.html',
   styleUrls: [
     '../common/base-chart/base-chart.component.scss',
-    './pie-grid.component.scss'
+    './pie-grid.component.scss',
   ],
   encapsulation: ViewEncapsulation.None,
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
@@ -48,14 +51,19 @@
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
-      margins: this.margin
+      margins: this.margin,
     });
 
     this.domain = this.getDomain();
 
-    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);
+    this.data = gridLayout(
+      this.dims,
+      this.results,
+      this.minWidth,
+      this.designatedTotal
+    );
     this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;
 
     this.series = this.getSeries();
     this.setColors();
@@ -78,15 +86,16 @@
 
   getSeries(): any[] {
     const total = this.designatedTotal ? this.designatedTotal : this.getTotal();
 
-    return this.data.map((d) => {
+    return this.data.map(d => {
       const baselineLabelHeight = 20;
       const padding = 10;
       const name = d.data.name;
       const label = formatLabel(name);
       const value = d.data.value;
-      const radius = (min([d.width - padding, d.height - baselineLabelHeight]) / 2) - 5;
+      const radius =
+        min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;
       const innerRadius = radius * 0.9;
 
       let count = 0;
       const colors = () => {
@@ -110,30 +119,35 @@
         label: trimLabel(label),
         total: value,
         value,
         percent: format('.1%')(d.data.percent),
-        data: [d, {
-          data: {
-            other: true,
-            value: total - value,
-            name: d.data.name
-          }
-        }]
+        data: [
+          d,
+          {
+            data: {
+              other: true,
+              value: total - value,
+              name: d.data.name,
+            },
+          },
+        ],
       };
     });
   }
 
   getTotal(): any {
-    return this.results
-      .map(d => d.value)
-      .reduce((sum, d) => sum + d, 0);
+    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);
   }
 
   onClick(data): void {
     this.select.emit(data);
   }
 
   setColors(): void {
-    this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);
+    this.colorScale = new ColorHelper(
+      this.scheme,
+      'ordinal',
+      this.domain,
+      this.customColors
+    );
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-label.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-label.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-label.component.ts
@@ -1,13 +1,19 @@
-import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';
+import {
+  Component,
+  Input,
+  OnChanges,
+  SimpleChanges,
+  ChangeDetectionStrategy,
+} from '@angular/core';
 import { arc } from 'd3-shape';
 
 import { trimLabel } from '../common/trim-label.helper';
 
 @Component({
   selector: 'g[ng-svg-charts-pie-label]',
   templateUrl: 'pie-label.template.html',
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class PieLabelComponent implements OnChanges {
   @Input() data;
   @Input() radius;
@@ -35,9 +41,9 @@
 
   update(): void {
     let startRadius = this.radius;
     if (this.explodeSlices) {
-      startRadius = this.radius * this.value / this.max;
+      startRadius = (this.radius * this.value) / this.max;
     }
 
     const innerArc = arc()
       .innerRadius(startRadius)

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/pie-chart/pie-series.component.ts
@@ -5,9 +5,9 @@
   Output,
   EventEmitter,
   OnChanges,
   ChangeDetectionStrategy,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { max } from 'd3-array';
 import { arc, pie } from 'd3-shape';
 
@@ -15,9 +15,9 @@
 
 @Component({
   selector: 'g[ng-svg-charts-pie-series]',
   templateUrl: 'pie-series.template.html',
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class PieSeriesComponent implements OnChanges {
   @Input() colors;
   @Input() series: any = [];
@@ -81,9 +81,10 @@
     const labelPositions = pieData;
 
     labelPositions.forEach(d => {
       d.pos = this.outerArc().centroid(d);
-      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);
+      d.pos[0] =
+        factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);
     });
 
     for (let i = 0; i < labelPositions.length - 1; i++) {
       const a = labelPositions[i];

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-chart.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-chart.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-chart.component.ts
@@ -5,20 +5,18 @@
   EventEmitter,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
-import {
-  trigger,
-  style,
-  animate,
-  transition
-} from '@angular/animations';
+import { trigger, style, animate, transition } from '@angular/animations';
 import { scaleLinear, scaleTime, scalePoint } from 'd3-scale';
 import { curveCardinalClosed } from 'd3-shape';
 
-import { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';
+import {
+  calculateViewDimensions,
+  ViewDimensions,
+} from '../common/view-dimensions.helper';
 import { ColorHelper } from '../common/color.helper';
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
 import { getScaleType } from '../common/domain.helper';
 import { isDate } from '../utils/types';
@@ -35,24 +33,30 @@
       [activeEntries]="activeEntries"
       [animations]="animations"
       (legendLabelClick)="onClick($event)"
       (legendLabelActivate)="onActivate($event)"
-      (legendLabelDeactivate)="onDeactivate($event)">
+      (legendLabelDeactivate)="onDeactivate($event)"
+    >
       <svg:g class="polar-chart chart" [attr.transform]="transform">
         <svg:g [attr.transform]="transformPlot">
           <svg:circle
             class="polar-chart-background"
-            cx="0" cy="0"
-            [attr.r]="this.outerRadius" />
+            cx="0"
+            cy="0"
+            [attr.r]="this.outerRadius"
+          />
           <svg:g *ngIf="showGridLines">
             <svg:circle
               *ngFor="let r of radiusTicks"
               class="gridline-path radial-gridline-path"
-              cx="0" cy="0"
-              [attr.r]="r" />
+              cx="0"
+              cy="0"
+              [attr.r]="r"
+            />
           </svg:g>
           <svg:g *ngIf="xAxis">
-            <svg:g ng-svg-charts-pie-label
+            <svg:g
+              ng-svg-charts-pie-label
               *ngFor="let tick of thetaTicks"
               [data]="tick"
               [radius]="outerRadius"
               [label]="tick.label"
@@ -60,13 +64,14 @@
               [value]="showGridLines ? 1 : outerRadius"
               [explodeSlices]="true"
               [animations]="animations"
               [labelTrim]="labelTrim"
-              [labelTrimSize]="labelTrimSize">
-            </svg:g>
+              [labelTrimSize]="labelTrimSize"
+            ></svg:g>
           </svg:g>
         </svg:g>
-        <svg:g ng-svg-charts-y-axis
+        <svg:g
+          ng-svg-charts-y-axis
           [attr.transform]="transformYAxis"
           *ngIf="yAxis"
           [yScale]="yAxisScale"
           [dims]="yAxisDims"
@@ -75,21 +80,26 @@
           [labelText]="yAxisLabel"
           [trimTicks]="trimYAxisTicks"
           [maxTickLength]="maxYAxisTickLength"
           [tickFormatting]="yAxisTickFormatting"
-          (dimensionsChanged)="updateYAxisWidth($event)">
-        </svg:g>
-        <svg:g ng-svg-charts-axis-label
+          (dimensionsChanged)="updateYAxisWidth($event)"
+        ></svg:g>
+        <svg:g
+          ng-svg-charts-axis-label
           *ngIf="xAxis && showXAxisLabel"
           [label]="xAxisLabel"
           [offset]="labelOffset"
           [orient]="'bottom'"
           [height]="dims.height"
-          [width]="dims.width">
-        </svg:g>
+          [width]="dims.width"
+        ></svg:g>
         <svg:g [attr.transform]="transformPlot">
-          <svg:g *ngFor="let series of results; trackBy:trackBy" [@animationState]="'active'">
-            <svg:g ng-svg-charts-polar-series
+          <svg:g
+            *ngFor="let series of results; trackBy: trackBy"
+            [@animationState]="'active'"
+          >
+            <svg:g
+              ng-svg-charts-polar-series
               [gradient]="gradient"
               [xScale]="xScale"
               [yScale]="yScale"
               [colors]="colors"
@@ -109,26 +119,29 @@
   `,
   styleUrls: [
     '../common/base-chart/base-chart.component.scss',
     '../pie-chart/pie-chart.component.scss',
-    './polar-chart.component.scss'],
+    './polar-chart.component.scss',
+  ],
   encapsulation: ViewEncapsulation.None,
   changeDetection: ChangeDetectionStrategy.OnPush,
   animations: [
     trigger('animationState', [
       transition(':leave', [
         style({
           opacity: 1,
         }),
-        animate(500, style({
-          opacity: 0
-        }))
-      ])
-    ])
-  ]
+        animate(
+          500,
+          style({
+            opacity: 0,
+          })
+        ),
+      ]),
+    ]),
+  ],
 })
 export class PolarChartComponent extends BaseChartComponent {
-
   @Input() legend: boolean;
   @Input() legendTitle = 'Legend';
   @Input() legendPosition = 'right';
   @Input() xAxis: boolean;
@@ -165,10 +178,10 @@
   labelOffset: number;
   xDomain: any;
   yDomain: any;
   seriesDomain: any;
-  yScale: any;  // -> rScale
-  xScale: any;  // -> tScale
+  yScale: any; // -> rScale
+  xScale: any; // -> tScale
   yAxisScale: any; // -> yScale
   colors: ColorHelper;
   scaleType: string;
   transform: string;
@@ -208,21 +221,24 @@
       showXLabel: this.showXAxisLabel,
       showYLabel: this.showYAxisLabel,
       showLegend: this.legend,
       legendType: this.schemeType,
-      legendPosition: this.legendPosition
+      legendPosition: this.legendPosition,
     });
 
     const halfWidth = ~~(this.dims.width / 2);
     const halfHeight = ~~(this.dims.height / 2);
 
-    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);
+    const outerRadius = (this.outerRadius = Math.min(
+      halfHeight / 1.5,
+      halfWidth / 1.5
+    ));
 
     const yOffset = Math.max(0, halfHeight - outerRadius);
 
     this.yAxisDims = {
       ...this.dims,
-      width: halfWidth
+      width: halfWidth,
     };
 
     this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;
     this.transformYAxis = `translate(0, ${yOffset})`;
@@ -265,9 +281,12 @@
       const startAngle = this.xScale(d);
       const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);
       const label = tickFormat(d);
 
-      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];
+      const startPos = [
+        outerRadius * Math.sin(startAngle),
+        -outerRadius * Math.cos(startAngle),
+      ];
       const pos = [dd, s * startPos[1]];
       return {
         innerRadius: 0,
         outerRadius,
@@ -275,9 +294,9 @@
         endAngle: startAngle,
         value: outerRadius,
         label,
         startPos,
-        pos
+        pos,
       };
     });
 
     const minDistance = 10;
@@ -407,12 +426,18 @@
     this.select.emit(data);
   }
 
   setColors(): void {
-    const domain = (this.schemeType === 'ordinal') ?
-      this.seriesDomain :
-      this.yDomain.reverse();
-    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);
+    const domain =
+      this.schemeType === 'ordinal'
+        ? this.seriesDomain
+        : this.yDomain.reverse();
+    this.colors = new ColorHelper(
+      this.scheme,
+      this.schemeType,
+      domain,
+      this.customColors
+    );
   }
 
   getLegendOptions() {
     if (this.schemeType === 'ordinal') {
@@ -420,17 +445,17 @@
         scaleType: this.schemeType,
         colors: this.colors,
         domain: this.seriesDomain,
         title: this.legendTitle,
-        position: this.legendPosition
+        position: this.legendPosition,
       };
     }
     return {
       scaleType: this.schemeType,
       colors: this.colors.scale,
       domain: this.yDomain,
       title: undefined,
-      position: this.legendPosition
+      position: this.legendPosition,
     };
   }
 
   updateYAxisWidth({ width }): void {
@@ -449,9 +474,11 @@
     });
     if (idx > -1) {
       return;
     }
-    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;
+    this.activeEntries = this.showSeriesOnHover
+      ? [item, ...this.activeEntries]
+      : this.activeEntries;
     this.activate.emit({ value: item, entries: this.activeEntries });
   }
 
   onDeactivate(item) {

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-chart.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-chart.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-chart.module.ts
@@ -6,14 +6,8 @@
 import { LineChartModule } from '../line-chart/line-chart.module';
 
 @NgModule({
   imports: [ChartCommonModule, PieChartModule, LineChartModule],
-  declarations: [
-    PolarChartComponent,
-    PolarSeriesComponent
-  ],
-  exports: [
-    PolarChartComponent,
-    PolarSeriesComponent
-  ]
+  declarations: [PolarChartComponent, PolarSeriesComponent],
+  exports: [PolarChartComponent, PolarSeriesComponent],
 })
-export class PolarChartModule { }
+export class PolarChartModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/polar-chart/polar-series.component.ts
@@ -1,5 +1,12 @@
-import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, TemplateRef } from '@angular/core';
+import {
+  Component,
+  Input,
+  OnChanges,
+  SimpleChanges,
+  ChangeDetectionStrategy,
+  TemplateRef,
+} from '@angular/core';
 import { lineRadial } from 'd3-shape';
 
 import { id } from '../utils/id';
 import { sortLinear, sortByTime, sortByDomain } from '../utils/sort';
@@ -8,18 +15,21 @@
   selector: 'g[ng-svg-charts-polar-series]',
   template: `
     <svg:g class="polar-charts-series">
       <defs>
-        <svg:g ng-svg-charts-svg-radial-gradient *ngIf="hasGradient"
+        <svg:g
+          ng-svg-charts-svg-radial-gradient
+          *ngIf="hasGradient"
           orientation="vertical"
           [color]="seriesColor"
           [name]="gradientId"
           [startOpacity]="0.25"
           [endOpacity]="1"
           [stops]="gradientStops"
         />
       </defs>
-      <svg:g ng-svg-charts-line
+      <svg:g
+        ng-svg-charts-line
         class="polar-series-path"
         [path]="path"
         [stroke]="hasGradient ? gradientUrl : seriesColor"
         [class.active]="active"
@@ -27,9 +37,10 @@
         [attr.fill-opacity]="rangeFillOpacity"
         [fill]="hasGradient ? gradientUrl : seriesColor"
         [animations]="animations"
       />
-      <svg:g ng-svg-charts-circle
+      <svg:g
+        ng-svg-charts-circle
         *ngFor="let circle of circles"
         class="circle"
         [cx]="circle.cx"
         [cy]="circle.cy"
@@ -41,13 +52,13 @@
         [tooltipPlacement]="'top'"
         tooltipType="tooltip"
         [tooltipTitle]="tooltipTemplate ? undefined : tooltipText(circle)"
         [tooltipTemplate]="tooltipTemplate"
-        [tooltipContext]="circle.data">
-      </svg:g>
+        [tooltipContext]="circle.data"
+      ></svg:g>
     </svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class PolarSeriesComponent implements OnChanges {
   @Input() name;
   @Input() data;
@@ -102,23 +113,25 @@
       const a = this.getAngle(d);
       const r = this.getRadius(d);
       const value = d.value;
 
-      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);
+      const color = this.colors.getColor(
+        linearScaleType ? Math.abs(value) : seriesName
+      );
 
       const cData = {
         series: seriesName,
         value,
-        name: d.name
+        name: d.name,
       };
 
       return {
         data: cData,
         cx: r * Math.sin(a),
         cy: -r * Math.cos(a),
         value,
         color,
-        label: d.name
+        label: d.name,
       };
     });
 
     this.active = this.isActive(this.data);

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map-cell-series.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map-cell-series.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map-cell-series.component.ts
@@ -5,15 +5,17 @@
   Output,
   SimpleChanges,
   EventEmitter,
   ChangeDetectionStrategy,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 
 @Component({
   selector: 'g[ng-svg-charts-tree-map-cell-series]',
   template: `
-    <svg:g ng-svg-charts-tree-map-cell *ngFor="let c of cells; trackBy:trackBy"
+    <svg:g
+      ng-svg-charts-tree-map-cell
+      *ngFor="let c of cells; trackBy: trackBy"
       [data]="c"
       [x]="c.x"
       [y]="c.y"
       [width]="c.width"
@@ -32,15 +34,14 @@
       [tooltipPlacement]="'top'"
       [tooltipType]="'tooltip'"
       [tooltipTitle]="tooltipTemplate ? undefined : getTooltipText(c)"
       [tooltipTemplate]="tooltipTemplate"
-      [tooltipContext]="c.data">
-    </svg:g>
+      [tooltipContext]="c.data"
+    ></svg:g>
   `,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class TreeMapCellSeriesComponent implements OnChanges {
-
   @Input() data;
   @Input() dims;
   @Input() colors;
   @Input() valueFormatting: any;
@@ -59,17 +60,17 @@
   }
 
   getCells(): any[] {
     return this.data.children
-      .filter((d) => {
+      .filter(d => {
         return d.depth === 1;
       })
       .map((d, index) => {
         const label = d.id;
 
         const data = {
           name: label,
-          value: d.value
+          value: d.value,
         };
 
         return {
           data,
@@ -79,9 +80,9 @@
           height: d.y1 - d.y0,
           fill: this.colors.getColor(label),
           label,
           value: d.value,
-          valueType: d.valueType
+          valueType: d.valueType,
         };
       });
   }
 

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map-cell.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map-cell.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map-cell.component.ts
@@ -1,5 +1,13 @@
-import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, ChangeDetectionStrategy } from '@angular/core';
+import {
+  Component,
+  Input,
+  Output,
+  EventEmitter,
+  ElementRef,
+  OnChanges,
+  ChangeDetectionStrategy,
+} from '@angular/core';
 import { select } from 'd3-selection';
 
 import { invertColor } from '../utils/color-utils';
 import { trimLabel } from '../common/trim-label.helper';
@@ -7,9 +15,9 @@
 
 @Component({
   selector: 'g[ng-svg-charts-tree-map-cell]',
   templateUrl: 'tree-map-cell.template.html',
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class TreeMapCellComponent implements OnChanges {
   @Input() data;
   @Input() fill;
@@ -43,15 +51,17 @@
 
   ngOnChanges(): void {
     this.update();
 
-    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());
-    const labelFormatting = this.labelFormatting || (cell => trimLabel(cell.label, 55));
+    this.valueFormatting =
+      this.valueFormatting || (value => value.toLocaleString());
+    const labelFormatting =
+      this.labelFormatting || (cell => trimLabel(cell.label, 55));
 
     const cellData = {
       data: this.data,
       label: this.label,
-      value: this.value
+      value: this.value,
     };
 
     this.formattedValue = this.valueFormatting(cellData.value);
     this.formattedLabel = labelFormatting(cellData);
@@ -111,23 +121,23 @@
 
   onClick(): void {
     this.select.emit({
       name: this.label,
-      value: this.value
+      value: this.value,
     });
   }
 
   getGradientStops() {
     return [
       {
         offset: 0,
         color: this.fill,
-        opacity: 0.3
+        opacity: 0.3,
       },
       {
         offset: 100,
         color: this.fill,
-        opacity: 1
-      }
+        opacity: 1,
+      },
     ];
   }
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map.component.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map.component.ts
@@ -5,9 +5,9 @@
   EventEmitter,
   ViewEncapsulation,
   ChangeDetectionStrategy,
   ContentChild,
-  TemplateRef
+  TemplateRef,
 } from '@angular/core';
 import { treemap, stratify } from 'd3-hierarchy';
 
 import { BaseChartComponent } from '../common/base-chart/base-chart.component';
@@ -19,11 +19,13 @@
   template: `
     <ng-svg-charts-chart
       [view]="[width, height]"
       [showLegend]="false"
-      [animations]="animations">
+      [animations]="animations"
+    >
       <svg:g [attr.transform]="transform" class="tree-map chart">
-        <svg:g ng-svg-charts-tree-map-cell-series
+        <svg:g
+          ng-svg-charts-tree-map-cell-series
           [colors]="colors"
           [data]="data"
           [dims]="dims"
           [tooltipDisabled]="tooltipDisabled"
@@ -38,12 +40,11 @@
     </ng-svg-charts-chart>
   `,
   styleUrls: ['./tree-map.component.scss'],
   encapsulation: ViewEncapsulation.None,
-  changeDetection: ChangeDetectionStrategy.OnPush
+  changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class TreeMapComponent extends BaseChartComponent {
-
   @Input() results;
   @Input() tooltipDisabled = false;
   @Input() valueFormatting: any;
   @Input() labelFormatting: any;
@@ -66,20 +67,19 @@
 
     this.dims = calculateViewDimensions({
       width: this.width,
       height: this.height,
-      margins: this.margin
+      margins: this.margin,
     });
 
     this.domain = this.getDomain();
 
-    this.treemap = treemap<any>()
-      .size([this.dims.width, this.dims.height]);
+    this.treemap = treemap<any>().size([this.dims.width, this.dims.height]);
 
     const rootNode = {
       name: 'root',
       value: 0,
-      isRoot: true
+      isRoot: true,
     };
 
     const root = stratify<any>()
       .id(d => {
@@ -91,17 +91,16 @@
           label = label.toLocaleString();
         }
         return label;
       })
-      .parentId(d => d.isRoot ? null : 'root')
-      ([rootNode, ...this.results])
+      .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])
       .sum(d => d.value);
 
     this.data = this.treemap(root);
 
     this.setColors();
 
-    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;
+    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;
   }
 
   getDomain(): any[] {
     return this.results.map(d => d.name);
@@ -111,8 +110,12 @@
     this.select.emit(data);
   }
 
   setColors(): void {
-    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);
+    this.colors = new ColorHelper(
+      this.scheme,
+      'ordinal',
+      this.domain,
+      this.customColors
+    );
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map.module.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/tree-map/tree-map.module.ts
@@ -8,13 +8,9 @@
   imports: [ChartCommonModule],
   declarations: [
     TreeMapCellComponent,
     TreeMapCellSeriesComponent,
-    TreeMapComponent
+    TreeMapComponent,
   ],
-  exports: [
-    TreeMapCellComponent,
-    TreeMapCellSeriesComponent,
-    TreeMapComponent
-  ]
+  exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],
 })
 export class TreeMapModule {}

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/color-sets.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/color-sets.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/color-sets.ts
@@ -3,122 +3,263 @@
     name: 'vivid',
     selectable: true,
     group: 'Ordinal',
     domain: [
-      '#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514'
-    ]
+      '#647c8a',
+      '#3f51b5',
+      '#2196f3',
+      '#00b862',
+      '#afdf0a',
+      '#a7b61a',
+      '#f3e562',
+      '#ff9800',
+      '#ff5722',
+      '#ff4514',
+    ],
   },
   {
     name: 'natural',
     selectable: true,
     group: 'Ordinal',
     domain: [
-      '#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3'
-    ]
+      '#bf9d76',
+      '#e99450',
+      '#d89f59',
+      '#f2dfa7',
+      '#a5d7c6',
+      '#7794b1',
+      '#afafaf',
+      '#707160',
+      '#ba9383',
+      '#d9d5c3',
+    ],
   },
   {
     name: 'cool',
     selectable: true,
     group: 'Ordinal',
     domain: [
-      '#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886'
-    ]
+      '#a8385d',
+      '#7aa3e5',
+      '#a27ea8',
+      '#aae3f5',
+      '#adcded',
+      '#a95963',
+      '#8796c0',
+      '#7ed3ed',
+      '#50abcc',
+      '#ad6886',
+    ],
   },
   {
     name: 'fire',
     selectable: true,
     group: 'Ordinal',
     domain: [
-      '#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00'
-    ]
+      '#ff3d00',
+      '#bf360c',
+      '#ff8f00',
+      '#ff6f00',
+      '#ff5722',
+      '#e65100',
+      '#ffca28',
+      '#ffab00',
+    ],
   },
   {
     name: 'solar',
     selectable: true,
     group: 'Continuous',
     domain: [
-      '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'
-    ]
+      '#fff8e1',
+      '#ffecb3',
+      '#ffe082',
+      '#ffd54f',
+      '#ffca28',
+      '#ffc107',
+      '#ffb300',
+      '#ffa000',
+      '#ff8f00',
+      '#ff6f00',
+    ],
   },
   {
     name: 'air',
     selectable: true,
     group: 'Continuous',
     domain: [
-      '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'
-    ]
+      '#e1f5fe',
+      '#b3e5fc',
+      '#81d4fa',
+      '#4fc3f7',
+      '#29b6f6',
+      '#03a9f4',
+      '#039be5',
+      '#0288d1',
+      '#0277bd',
+      '#01579b',
+    ],
   },
   {
     name: 'aqua',
     selectable: true,
     group: 'Continuous',
     domain: [
-      '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'
-    ]
+      '#e0f7fa',
+      '#b2ebf2',
+      '#80deea',
+      '#4dd0e1',
+      '#26c6da',
+      '#00bcd4',
+      '#00acc1',
+      '#0097a7',
+      '#00838f',
+      '#006064',
+    ],
   },
   {
     name: 'flame',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738'
-    ]
+      '#A10A28',
+      '#D3342D',
+      '#EF6D49',
+      '#FAAD67',
+      '#FDDE90',
+      '#DBED91',
+      '#A9D770',
+      '#6CBA67',
+      '#2C9653',
+      '#146738',
+    ],
   },
   {
     name: 'ocean',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1'
-    ]
+      '#1D68FB',
+      '#33C0FC',
+      '#4AFFFE',
+      '#AFFFFF',
+      '#FFFC63',
+      '#FDBD2D',
+      '#FC8A25',
+      '#FA4F1E',
+      '#FA141B',
+      '#BA38D1',
+    ],
   },
   {
     name: 'forest',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32'
-    ]
+      '#55C22D',
+      '#C1F33D',
+      '#3CC099',
+      '#AFFFFF',
+      '#8CFC9D',
+      '#76CFFA',
+      '#BA60FB',
+      '#EE6490',
+      '#C42A1C',
+      '#FC9F32',
+    ],
   },
   {
     name: 'horizon',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0'
-    ]
+      '#2597FB',
+      '#65EBFD',
+      '#99FDD0',
+      '#FCEE4B',
+      '#FEFCFA',
+      '#FDD6E3',
+      '#FCB1A8',
+      '#EF6F7B',
+      '#CB96E8',
+      '#EFDEE0',
+    ],
   },
   {
     name: 'neons',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600'
-    ]
+      '#FF3333',
+      '#FF33FF',
+      '#CC33FF',
+      '#0000FF',
+      '#33CCFF',
+      '#33FFFF',
+      '#33FF66',
+      '#CCFF33',
+      '#FFCC00',
+      '#FF6600',
+    ],
   },
   {
     name: 'picnic',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8'
-    ]
+      '#FAC51D',
+      '#66BD6D',
+      '#FAA026',
+      '#29BB9C',
+      '#E96B56',
+      '#55ACD2',
+      '#B7332F',
+      '#2C83C9',
+      '#9166B8',
+      '#92E7E8',
+    ],
   },
   {
     name: 'night',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634',
-      '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D'
-    ]
+      '#2B1B5A',
+      '#501356',
+      '#183356',
+      '#28203F',
+      '#391B3C',
+      '#1E2B3C',
+      '#120634',
+      '#2D0432',
+      '#051932',
+      '#453080',
+      '#75267D',
+      '#2C507D',
+      '#4B3880',
+      '#752F7D',
+      '#35547D',
+    ],
   },
   {
     name: 'nightLights',
     selectable: false,
     group: 'Ordinal',
     domain: [
-      '#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b',
-      '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3'
-    ]
-  }
+      '#4e31a5',
+      '#9c25a7',
+      '#3065ab',
+      '#57468b',
+      '#904497',
+      '#46648b',
+      '#32118d',
+      '#a00fb3',
+      '#1052a2',
+      '#6e51bd',
+      '#b63cc3',
+      '#6c97cb',
+      '#8671c1',
+      '#b455be',
+      '#7496c3',
+    ],
+  },
 ];

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/color-utils.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/color-utils.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/color-utils.ts
@@ -21,10 +21,10 @@
   const { r, g, b, opacity } = color;
   if (opacity === 0) {
     return color.toString();
   }
-  const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
-  const depth = (yiq >= 128) ? -.8 : .8;
+  const yiq = (r * 299 + g * 587 + b * 114) / 1000;
+  const depth = yiq >= 128 ? -0.8 : 0.8;
 
   return shadeRGBColor(color, depth);
 }
 
@@ -37,10 +37,10 @@
 export function shadeRGBColor({ r, g, b }, percent) {
   const t = percent < 0 ? 0 : 255;
   const p = percent < 0 ? percent * -1 : percent;
 
-  r = (Math.round((t - r) * p) + r);
-  g = (Math.round((t - g) * p) + g);
-  b = (Math.round((t - b) * p) + b);
+  r = Math.round((t - r) * p) + r;
+  g = Math.round((t - g) * p) + g;
+  b = Math.round((t - b) * p) + b;
 
   return `rgb(${r}, ${g}, ${b})`;
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/id.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/id.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/id.ts
@@ -10,9 +10,11 @@
  *
  *   Example: `ebgf`
  */
 export function id(): string {
-  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);
+  let newId = (
+    '0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)
+  ).slice(-4);
 
   // append a 'a' because neo gets mad
   newId = `a${newId}`;
 

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/throttle.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/throttle.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/throttle.ts
@@ -1,5 +1,4 @@
-
 /**
  * Throttle a function
  *
  * @export
@@ -67,12 +66,12 @@
       get: function getter() {
         Object.defineProperty(this, key, {
           configurable: true,
           enumerable: descriptor.enumerable,
-          value: throttle(descriptor.value, duration, options)
+          value: throttle(descriptor.value, duration, options),
         });
 
         return this[key];
-      }
+      },
     };
   };
 }

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/types.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/types.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/types.ts
@@ -1,5 +1,4 @@
-
 export function isDate(value) {
   return toString.call(value) === '[object Date]';
 }
 

Index: /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/visibility-observer.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/visibility-observer.ts
+++ /home/idnes/Projects/awe/src/lib/svg-chart/lib/utils/visibility-observer.ts
@@ -3,9 +3,8 @@
 /**
  * Visibility Observer
  */
 export class VisibilityObserver {
-
   @Output() visible: EventEmitter<any> = new EventEmitter();
 
   timeout: any;
   isVisible = false;
@@ -49,6 +48,5 @@
     this.zone.runOutsideAngular(() => {
       this.timeout = setTimeout(() => check());
     });
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumbs.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumbs.component.ts
+++ /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumbs.component.ts
@@ -11,18 +11,10 @@
   ElementRef,
   Input,
 } from '@angular/core';
 
-import {
-  Subscription,
-  Subject,
-  fromEvent,
-  merge,
-} from 'rxjs';
-import {
-  debounceTime,
-  distinctUntilChanged,
-} from 'rxjs/operators';
+import { Subscription, Subject, fromEvent, merge } from 'rxjs';
+import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
 
 import { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';
 
 @Component({
@@ -34,36 +26,35 @@
     class: 'td-breadcrumbs',
   },
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
-export class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {
-
+export class TdBreadcrumbsComponent
+  implements OnInit, DoCheck, AfterContentInit, OnDestroy {
   private _resizeSubscription: Subscription = Subscription.EMPTY;
   private _widthSubject: Subject<number> = new Subject<number>();
   private _resizing: boolean = false;
 
   // all the sub components, which are the individual breadcrumbs
-  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;
+  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<
+    TdBreadcrumbComponent
+  >;
   // the list of hidden breadcrumbs not shown right now (responsive)
   hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];
 
   /**
    * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.
    */
   @Input('separatorIcon') separatorIcon: string = 'chevron_right';
 
-  constructor(private _elementRef: ElementRef,
-              private _changeDetectorRef: ChangeDetectorRef) {
-  }
+  constructor(
+    private _elementRef: ElementRef,
+    private _changeDetectorRef: ChangeDetectorRef
+  ) {}
 
   ngOnInit(): void {
     this._resizeSubscription = merge(
-      fromEvent(window, 'resize').pipe(
-        debounceTime(10),
-      ),
-      this._widthSubject.asObservable().pipe(
-        distinctUntilChanged(),
-      ),
+      fromEvent(window, 'resize').pipe(debounceTime(10)),
+      this._widthSubject.asObservable().pipe(distinctUntilChanged())
     ).subscribe(() => {
       if (!this._resizing) {
         this._resizing = true;
         setTimeout(() => {
@@ -90,12 +81,12 @@
     this._resizeSubscription.unsubscribe();
   }
 
   /*
-  * Current width of the element container
-  */
+   * Current width of the element container
+   */
   get nativeElementWidth(): number {
-    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);
+    let element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;
     // Need to take into account border, margin and padding that might be around all the crumbs
     let style: CSSStyleDeclaration = window.getComputedStyle(element);
     let borderLeft: number = parseInt(style.borderLeft, 10);
     let borderRight: number = parseInt(style.borderRight, 10);
@@ -103,9 +94,17 @@
     let marginRight: number = parseInt(style.marginRight, 10);
     let paddingLeft: number = parseInt(style.paddingLeft, 10);
     let paddingRight: number = parseInt(style.paddingRight, 10);
 
-    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;
+    return (
+      element.getBoundingClientRect().width -
+      borderLeft -
+      borderRight -
+      marginLeft -
+      marginRight -
+      paddingLeft -
+      paddingRight
+    );
   }
 
   /**
    * The total count of individual breadcrumbs
@@ -136,9 +135,9 @@
     for (let i: number = crumbsArray.length - 1; i >= 0; i--) {
       let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];
       // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array
       // and hide it
-      if ((crumbWidthSum + breadcrumb.width) > this.nativeElementWidth) {
+      if (crumbWidthSum + breadcrumb.width > this.nativeElementWidth) {
         breadcrumb.displayCrumb = false;
         hiddenCrumbs.push(breadcrumb);
       } else {
         // else we show it
@@ -148,6 +147,5 @@
     }
     this.hiddenBreadcrumbs = hiddenCrumbs;
     this._changeDetectorRef.markForCheck();
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumbs.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumbs.module.ts
+++ /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumbs.module.ts
@@ -5,20 +5,9 @@
 import { TdBreadcrumbsComponent } from './breadcrumbs.component';
 import { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';
 
 @NgModule({
-  imports: [
-    CommonModule,
-    MatIconModule,
-  ],
-  declarations: [
-    TdBreadcrumbsComponent,
-    TdBreadcrumbComponent,
-  ],
-  exports: [
-    TdBreadcrumbsComponent,
-    TdBreadcrumbComponent,
-  ],
+  imports: [CommonModule, MatIconModule],
+  declarations: [TdBreadcrumbsComponent, TdBreadcrumbComponent],
+  exports: [TdBreadcrumbsComponent, TdBreadcrumbComponent],
 })
-export class CovalentBreadcrumbsModule {
-
-}
+export class CovalentBreadcrumbsModule {}

Index: /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumb/breadcrumb.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumb/breadcrumb.component.ts
+++ /home/idnes/Projects/awe/src/lib/tbreadcrumbs/breadcrumb/breadcrumb.component.ts
@@ -17,9 +17,8 @@
   },
   changeDetection: ChangeDetectionStrategy.OnPush,
 })
 export class TdBreadcrumbComponent implements AfterViewInit {
-
   private _displayCrumb: boolean = true;
   private _width: number = 0;
   // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'
   separatorIcon: string = 'chevron_right';
@@ -54,16 +53,19 @@
     // and showing them instead of the component doing itself for reasons like responsive
     return this._displayCrumb ? undefined : 'none';
   }
 
-  constructor(private _elementRef: ElementRef,
-              private _changeDetectorRef: ChangeDetectorRef) {
-  }
+  constructor(
+    private _elementRef: ElementRef,
+    private _changeDetectorRef: ChangeDetectorRef
+  ) {}
 
   ngAfterViewInit(): void {
     // set the width from the actual rendered DOM element
     setTimeout(() => {
-      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;
+      this._width = (<HTMLElement>(
+        this._elementRef.nativeElement
+      )).getBoundingClientRect().width;
       this._changeDetectorRef.markForCheck();
     });
   }
 
@@ -73,6 +75,5 @@
   _handleIconClick(event: Event): void {
     event.stopPropagation();
     event.preventDefault();
   }
-
 }

Index: /home/idnes/Projects/awe/src/lib/window-resize-listener/lib/window-scroll-resize-event.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/lib/window-resize-listener/lib/window-scroll-resize-event.module.ts
+++ /home/idnes/Projects/awe/src/lib/window-resize-listener/lib/window-scroll-resize-event.module.ts
@@ -5,10 +5,8 @@
 export class WindowScrollResizeEventModule {
   static forRoot(): ModuleWithProviders {
     return {
       ngModule: WindowScrollResizeEventModule,
-      providers: [
-        ResizeListenerService
-      ]
+      providers: [ResizeListenerService],
     };
   }
 }

Index: /home/idnes/Projects/awe/src/web/hmr.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/hmr.ts
+++ /home/idnes/Projects/awe/src/web/hmr.ts
@@ -1,14 +1,19 @@
 import { NgModuleRef, ApplicationRef } from '@angular/core';
 import { createNewHosts } from '@angularclass/hmr';
 
-export const hmrBootstrap = (module: any, bootstrap: () => Promise<NgModuleRef<any>>) => {
+export const hmrBootstrap = (
+  module: any,
+  bootstrap: () => Promise<NgModuleRef<any>>
+) => {
   let ngModule: NgModuleRef<any>;
   module.hot.accept();
   bootstrap().then(mod => (ngModule = mod));
   module.hot.dispose(() => {
     const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);
-    const elements = appRef.components.map(componentRef => componentRef.location.nativeElement);
+    const elements = appRef.components.map(
+      componentRef => componentRef.location.nativeElement
+    );
     const makeVisible = createNewHosts(elements);
     ngModule.destroy();
     makeVisible();
   });

Index: /home/idnes/Projects/awe/src/web/main.prod.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/main.prod.ts
+++ /home/idnes/Projects/awe/src/web/main.prod.ts
@@ -8,6 +8,7 @@
 if (environment.production) {
   enableProdMode();
 }
 
-platformBrowserDynamic().bootstrapModule(AppModule)
+platformBrowserDynamic()
+  .bootstrapModule(AppModule)
   .catch(err => console.error(err));

Index: /home/idnes/Projects/awe/src/web/app/app-lib.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/app-lib.module.ts
+++ /home/idnes/Projects/awe/src/web/app/app-lib.module.ts
@@ -8,7 +8,7 @@
   ],
   exports: [
     MarkdownModule,
     // DigitOnlyModule
-  ]
+  ],
 })
-export class AppLibModule { }
+export class AppLibModule {}

Index: /home/idnes/Projects/awe/src/web/app/app-routing.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/app-routing.module.ts
+++ /home/idnes/Projects/awe/src/web/app/app-routing.module.ts
@@ -3,7 +3,7 @@
 import { routes } from './routes';
 
 @NgModule({
   imports: [RouterModule.forRoot(routes, { useHash: true })],
-  exports: [RouterModule]
+  exports: [RouterModule],
 })
-export class AppRoutingModule { }
+export class AppRoutingModule {}

Index: /home/idnes/Projects/awe/src/web/app/app.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/app.module.ts
+++ /home/idnes/Projects/awe/src/web/app/app.module.ts
@@ -24,18 +24,15 @@
     SharedModule.forRoot(),
     AppRoutingModule,
     // ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })
   ],
-  declarations: [
-    AppRoot,
-    ... screens
-  ],
+  declarations: [AppRoot, ...screens],
   providers: [HttpClientModule],
   bootstrap: [AppRoot],
   exports: [
     HttpClientModule,
     AppLibModule,
     // MarkdownModule,
-    SharedModule
-  ]
+    SharedModule,
+  ],
 })
-export class AppModule { }
+export class AppModule {}

Index: /home/idnes/Projects/awe/src/web/app/routes.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/routes.ts
+++ /home/idnes/Projects/awe/src/web/app/routes.ts
@@ -7,36 +7,35 @@
     path: '',
     redirectTo: 'login',
     pathMatch: 'full',
     data: {
-      name: 'login'
-    }
+      name: 'login',
+    },
   },
   {
     path: 'login',
     component: LoginScreen,
     data: {
-      name: 'login'
-    }
+      name: 'login',
+    },
   },
   {
     path: 'install',
     component: InstallScreen,
     data: {
-      name: 'install'
-    }
+      name: 'install',
+    },
   },
   {
     path: 'logo',
     component: LogoScreen,
     data: {
-      name: 'logo'
-    }
+      name: 'logo',
+    },
   },
   {
     path: 'admin',
     loadChildren: './extra/extra.module#ExtraModule',
-    component: ExtraScreen
-  }
+    component: ExtraScreen,
+  },
 ];
 export { routes };
-

Index: /home/idnes/Projects/awe/src/web/app/core/customReuseStrategy.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/customReuseStrategy.ts
+++ /home/idnes/Projects/awe/src/web/app/core/customReuseStrategy.ts
@@ -1,11 +1,14 @@
-import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';
+import {
+  ActivatedRouteSnapshot,
+  DetachedRouteHandle,
+  RouteReuseStrategy,
+} from '@angular/router';
 // import { ItemComponent } from '../item/item.component';
 
 export class CustomReuseStrategy implements RouteReuseStrategy {
+  handlers: { [key: string]: DetachedRouteHandle } = {};
 
-  handlers: {[key: string]: DetachedRouteHandle} = {};
-
   shouldDetach(route: ActivatedRouteSnapshot): boolean {
     return false;
   }
 
@@ -23,9 +26,12 @@
     }
     return this.handlers[route.routeConfig.path];
   }
 
-  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {
+  shouldReuseRoute(
+    future: ActivatedRouteSnapshot,
+    curr: ActivatedRouteSnapshot
+  ): boolean {
     // return curr.component !== ItemComponent;
     return true;
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/core/initializer.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/initializer.ts
+++ /home/idnes/Projects/awe/src/web/app/core/initializer.ts
@@ -4,9 +4,8 @@
 import { Preference, LOADING, Theme, SIZE } from './services';
 import { Renderer2, RendererFactory2 } from '@angular/core';
 import Promise from 'bluebird';
 
-
 const appInit = (
   db: PreferencesDB,
   preference: Preference,
   loading: LOADING,
@@ -21,18 +20,14 @@
   // return async () => await db.update(1, {key: 'saya', value: {saya: 'pusing'}}).toPromise();
 
   // return async () => await observable$.pipe(delay(2000)).toPromise();
   return () => {
-    return new Promise(
-      (resolve, reject) => {
-        theme.toggle(renderer);
-        size.set([window.innerWidth, window.innerHeight]);
-        loading.isLoading$.next(true);
-        resolve();
-      }
-    );
+    return new Promise((resolve, reject) => {
+      theme.toggle(renderer);
+      size.set([window.innerWidth, window.innerHeight]);
+      loading.isLoading$.next(true);
+      resolve();
+    });
   };
 };
 
 export { appInit };
-
-

Index: /home/idnes/Projects/awe/src/web/app/core/data/config.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/data/config.ts
+++ /home/idnes/Projects/awe/src/web/app/core/data/config.ts
@@ -1,5 +1,5 @@
 const config = {
-  name: 'AutodriveIDB'
+  name: 'AutodriveIDB',
 };
 
 export { config };

Index: /home/idnes/Projects/awe/src/web/app/core/data/funca.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/data/funca.ts
+++ /home/idnes/Projects/awe/src/web/app/core/data/funca.ts
@@ -1,34 +1,47 @@
 import Dexie from 'dexie';
 import * as d3Hierarchy from 'd3-hierarchy';
 import { from, defer, of, Observable, SubscriptionLike, concat } from 'rxjs';
-import { mergeMap, expand, take, map, toArray, startWith } from 'rxjs/operators';
+import {
+  mergeMap,
+  expand,
+  take,
+  map,
+  toArray,
+  startWith,
+} from 'rxjs/operators';
 import { MemberDB } from './member.db';
 import { WorkerDB } from './idb';
 
 const memberDB = new MemberDB(new WorkerDB());
 
-const funca =  (data: any) => {
-  const root: string = (data && data.value) ? data.value  : '';
-  const getChild = (x: string) => memberDB.where('parentMemberId', x)
-  .pipe(
-    mergeMap((arr) => from(arr).pipe(map(i => {
-        return { parentId: i.parentMemberId, id: i.memberId, level: i.level };
-    }))),
-  );
+const funca = (data: any) => {
+  const root: string = data && data.value ? data.value : '';
+  const getChild = (x: string) =>
+    memberDB.where('parentMemberId', x).pipe(
+      mergeMap(arr =>
+        from(arr).pipe(
+          map(i => {
+            return {
+              parentId: i.parentMemberId,
+              id: i.memberId,
+              level: i.level,
+            };
+          })
+        )
+      )
+    );
   const y = (z: any) => {
     // if
     return memberDB.one('memberId', z).pipe(
-    map(i => {
-      return { parentId: '', id: i.memberId, level: i.level };
-    })
+      map(i => {
+        return { parentId: '', id: i.memberId, level: i.level };
+      })
     );
   };
   const req = (d: string) => {
     return getChild(d).pipe(
-      expand(
-        itm => of(itm).pipe(mergeMap(i => getChild(i.id)))
-      ),
+      expand(itm => of(itm).pipe(mergeMap(i => getChild(i.id))))
       // startWith(y(root)),
       // take(500),
       //        toArray()
     );

Index: /home/idnes/Projects/awe/src/web/app/core/data/idb.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/data/idb.ts
+++ /home/idnes/Projects/awe/src/web/app/core/data/idb.ts
@@ -3,13 +3,14 @@
   constructor() {
     super('AutodriveIDB');
     const Version = this.version(1);
     Version.stores({
-      members: 'id, parentId, name, level, memberId, parentMemberId, address, email',
+      members:
+        'id, parentId, name, level, memberId, parentMemberId, address, email',
       users: '++id, loginName',
       preferences: '++id, key, value',
       config: 'secure, host, port, key',
-      icons: 'title, text, code'
+      icons: 'title, text, code',
     });
   }
 }
-export  { WorkerDB };
+export { WorkerDB };

Index: /home/idnes/Projects/awe/src/web/app/core/data/member.db.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/data/member.db.ts
+++ /home/idnes/Projects/awe/src/web/app/core/data/member.db.ts
@@ -18,22 +18,42 @@
     this.table = idb.table('members');
   }
 
   where(key: string, value: any) {
-    return defer(() => from(this.table.where(key).equals(value).toArray()));
+    return defer(() =>
+      from(
+        this.table
+          .where(key)
+          .equals(value)
+          .toArray()
+      )
+    );
   }
 
   one(key: string, value: any) {
-    return defer(() => from(this.table.where(key).equals(value).first()));
+    return defer(() =>
+      from(
+        this.table
+          .where(key)
+          .equals(value)
+          .first()
+      )
+    );
   }
 
   cnt(key: string, value: any) {
-    return defer(() => from(this.table.where(key).equals(value).count()));
+    return defer(() =>
+      from(
+        this.table
+          .where(key)
+          .equals(value)
+          .count()
+      )
+    );
   }
 
   clear() {
     return defer(() => from(this.table.clear()));
   }
 }
 
 export { MemberDB, IMembers };
-

Index: /home/idnes/Projects/awe/src/web/app/core/db/icons.db.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/db/icons.db.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/db/icons.db.service.ts
@@ -10,9 +10,8 @@
 }
 
 @Injectable()
 export class IconsDB {
-
   table: Dexie.Table<IIcons, number>;
 
   constructor(idb: IDBService) {
     this.table = idb.table('icons');
@@ -33,20 +32,27 @@
   bulkPut(items: IIcons[]) {
     return from(this.table.bulkPut(items));
   }
 
-  bulkDelete(keys: ReadonlyArray< string | number | Array<Array<void>> >) {
+  bulkDelete(keys: ReadonlyArray<string | number | Array<Array<void>>>) {
     return from(this.table.bulkDelete(keys));
   }
 
-  update(id: number, change: {[keyPath: string]: any}) {
+  update(id: number, change: { [keyPath: string]: any }) {
     return defer(() => from(this.table.update(id, change)));
   }
 
   put(id: number, value: IIcons) {
     return defer(() => from(this.table.put(value, id)));
   }
 
   where(key: string, value: any) {
-    return defer(() => from(this.table.where(key).equals(value).count()));
+    return defer(() =>
+      from(
+        this.table
+          .where(key)
+          .equals(value)
+          .count()
+      )
+    );
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/core/db/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/db/index.ts
+++ /home/idnes/Projects/awe/src/web/app/core/db/index.ts
@@ -1,5 +1,5 @@
 import { MembersDB } from './members.db.service';
 import { PreferencesDB } from './preferences.db.service';
 import { IconsDB } from './icons.db.service';
-const DBS = [ MembersDB, PreferencesDB, IconsDB ];
+const DBS = [MembersDB, PreferencesDB, IconsDB];
 export { MembersDB, PreferencesDB, IconsDB, DBS };

Index: /home/idnes/Projects/awe/src/web/app/core/db/members.db.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/db/members.db.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/db/members.db.service.ts
@@ -14,9 +14,8 @@
 }
 
 @Injectable()
 export class MembersDB {
-
   table: Dexie.Table<IMembers, number>;
 
   constructor(idb: IDBService) {
     this.table = idb.table('members');
@@ -37,25 +36,38 @@
   bulkPut(items: IMembers[]) {
     return from(this.table.bulkPut(items));
   }
 
-  bulkDelete(keys: ReadonlyArray< string | number | Array<Array<void>> >) {
+  bulkDelete(keys: ReadonlyArray<string | number | Array<Array<void>>>) {
     return from(this.table.bulkDelete(keys));
   }
 
-  update(id: number, change: {[keyPath: string]: any}) {
+  update(id: number, change: { [keyPath: string]: any }) {
     return defer(() => from(this.table.update(id, change)));
   }
 
   put(id: number, value: IMembers) {
     return defer(() => from(this.table.put(value, id)));
   }
 
   where(key: string, value: any) {
-    return defer(() => from(this.table.where(key).equals(value).toArray()));
+    return defer(() =>
+      from(
+        this.table
+          .where(key)
+          .equals(value)
+          .toArray()
+      )
+    );
   }
 
   notEqual(key: string, value: any) {
-    return defer(() => from(this.table.where(key).notEqual(value).toArray()));
+    return defer(() =>
+      from(
+        this.table
+          .where(key)
+          .notEqual(value)
+          .toArray()
+      )
+    );
   }
-
 }

Index: /home/idnes/Projects/awe/src/web/app/core/db/preferences.db.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/db/preferences.db.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/db/preferences.db.service.ts
@@ -9,9 +9,8 @@
   value?: any;
 }
 @Injectable()
 export class PreferencesDB {
-
   table: Dexie.Table<IPreferences, number>;
 
   constructor(idb: IDBService) {
     this.table = idb.table('preferences');
@@ -28,9 +27,9 @@
       from(this.table.add(item, id));
     });
   }
 
-  update(id: number, change: {[keyPath: string]: any}): Observable<number> {
+  update(id: number, change: { [keyPath: string]: any }): Observable<number> {
     return defer(() => {
       return from(this.table.update(id, change));
     });
   }

Index: /home/idnes/Projects/awe/src/web/app/core/guards/loading.guard.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/guards/loading.guard.ts
+++ /home/idnes/Projects/awe/src/web/app/core/guards/loading.guard.ts
@@ -1,15 +1,19 @@
 import { Injectable } from '@angular/core';
-import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';
+import {
+  CanActivate,
+  ActivatedRouteSnapshot,
+  RouterStateSnapshot,
+  Router,
+} from '@angular/router';
 import { LOADING } from '@core/services';
 import { Observable } from 'rxjs';
 import { map } from 'rxjs/operators';
 
 @Injectable()
 export class LoadingGuard implements CanActivate {
+  constructor(private router: Router, private loading: LOADING) {}
 
-  constructor(private router: Router, private loading: LOADING) { }
-
   canActivate(
     route: ActivatedRouteSnapshot,
     state: RouterStateSnapshot
   ): Observable<boolean> | boolean {

Index: /home/idnes/Projects/awe/src/web/app/core/services/address.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/address.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/address.service.ts
@@ -1,10 +1,9 @@
 import { Injectable } from '@angular/core';
 import { of } from 'rxjs';
 @Injectable()
 export class AddressService {
-  constructor() {
-  }
+  constructor() {}
 
   get_administrative_division(a: any, b: any, c: any) {
     return of([]);
   }

Index: /home/idnes/Projects/awe/src/web/app/core/services/addresses.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/addresses.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/addresses.service.ts
@@ -1,43 +1,55 @@
-import { HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';
+import {
+  HttpClient,
+  HttpErrorResponse,
+  HttpHeaders,
+} from '@angular/common/http';
 import { map, retry } from 'rxjs/operators';
 import { Injectable } from '@angular/core';
 import { map as lodashMap } from 'lodash';
 import { Observable } from 'rxjs';
 
-
 @Injectable()
 export class AddressesService {
   config: any;
   private headers: HttpHeaders;
   constructor(private http: HttpClient) {
     this.config = {
-      apiUrl: 'http://127.0.0.1:9080/assets'
+      apiUrl: 'http://127.0.0.1:9080/assets',
     };
-    this.headers = new HttpHeaders(
-      {
-        'Content-Type': 'application/json',
-        Accept: 'application/json'
-      }
-    );
+    this.headers = new HttpHeaders({
+      'Content-Type': 'application/json',
+      Accept: 'application/json',
+    });
   }
 
   /**
    *
    * @param type string
    * @param where any
    * @param prepend any
    */
-  get_administrative_division(type: string, where?: any, prepend?: boolean): Observable<{}> {
+  get_administrative_division(
+    type: string,
+    where?: any,
+    prepend?: boolean
+  ): Observable<{}> {
     const data = where ? where : {};
-    return this.http.post(`${this.config.apiUrl}/${type}`, data, {
-      headers: this.headers
-    }).pipe(
-      retry(1),
-      map(address => {
-        let formatted = lodashMap(address, item => ({ value: item[0], name: item[1] }));
-        formatted = prepend ? [{value: '', name: ''}].concat(formatted) : formatted;
-        return formatted;
+    return this.http
+      .post(`${this.config.apiUrl}/${type}`, data, {
+        headers: this.headers,
       })
-    );
+      .pipe(
+        retry(1),
+        map(address => {
+          let formatted = lodashMap(address, item => ({
+            value: item[0],
+            name: item[1],
+          }));
+          formatted = prepend
+            ? [{ value: '', name: '' }].concat(formatted)
+            : formatted;
+          return formatted;
+        })
+      );
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/core/services/authentication.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/authentication.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/authentication.service.ts
@@ -5,9 +5,9 @@
 export class AuthenticationService {
   isLogin = false;
   authenticating = false;
 
-  constructor(private router: Router) { }
+  constructor(private router: Router) {}
 
   login() {
     this.authenticating = true;
     this.isLogin = true;

Index: /home/idnes/Projects/awe/src/web/app/core/services/dummy.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/dummy.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/dummy.service.ts
@@ -5,11 +5,19 @@
 // import { IMembers } from './idb.service';
 import { of, from, Observable, BehaviorSubject, defer } from 'rxjs';
 import * as d3Hierarchy from 'd3-hierarchy';
 import {
-  map, mergeMap, toArray, take,
-  takeUntil, tap, concatMap, filter,
-  mergeAll, expand } from 'rxjs/operators';
+  map,
+  mergeMap,
+  toArray,
+  take,
+  takeUntil,
+  tap,
+  concatMap,
+  filter,
+  mergeAll,
+  expand,
+} from 'rxjs/operators';
 import { camelCase, zip, fromPairs } from 'lodash';
 // import { Promise } from 'bluebird';
 
 import * as WebWorker from '@worker/hard';
@@ -20,23 +28,28 @@
 }
 
 @Injectable()
 export class DummyService implements OnDestroy {
-
   beforeDestroy$: BehaviorSubject<boolean>;
 
-  constructor(private http: HttpClient, private membersDB: MembersDB, private iconsDB: IconsDB) {
+  constructor(
+    private http: HttpClient,
+    private membersDB: MembersDB,
+    private iconsDB: IconsDB
+  ) {
     this.beforeDestroy$ = new BehaviorSubject<boolean>(false);
   }
 
   transform(response: DummyResponse): Observable<any> {
-    return from(response.rows)
-      .pipe(
-        mergeMap(value => from(response.columns).pipe(
+    return from(response.rows).pipe(
+      mergeMap(value =>
+        from(response.columns).pipe(
           map(column => `${camelCase(column)}`),
           toArray(),
-          map(key => fromPairs(zip(key, value)))))
-      );
+          map(key => fromPairs(zip(key, value)))
+        )
+      )
+    );
   }
 
   hallo2() {
     const data$ = this.http.get('assets/icon.json');
@@ -54,82 +67,80 @@
   }
 
   getMemberDummy() {
     const data$ = this.http.get('assets/member.json');
-    const a = data$
-      .pipe(
-        mergeMap((response: DummyResponse) => this.transform(response)),
-        // take(10000),
-        // mergeMap(member => this.membersDB.add(member))
-        toArray(),
-        mergeMap(members => this.membersDB.bulkAdd(members)),
-        // takeUntil(this.beforeDestroy$)
-      );
+    const a = data$.pipe(
+      mergeMap((response: DummyResponse) => this.transform(response)),
+      // take(10000),
+      // mergeMap(member => this.membersDB.add(member))
+      toArray(),
+      mergeMap(members => this.membersDB.bulkAdd(members))
+      // takeUntil(this.beforeDestroy$)
+    );
     return a;
   }
 
   calconworker(xyz: string) {
     return defer(() => {
-      const a = new Promise(
-        (resolve, reject) => {
-          const worker = new (WebWorker as any)();
-          worker.postMessage({ key: 'parentId', value: xyz });
-          worker.addEventListener('message', (event) => {
-            worker.terminate();
-            resolve({ondummy1: event.data});
-          });
-        }
-      );
+      const a = new Promise((resolve, reject) => {
+        const worker = new (WebWorker as any)();
+        worker.postMessage({ key: 'parentId', value: xyz });
+        worker.addEventListener('message', event => {
+          worker.terminate();
+          resolve({ ondummy1: event.data });
+        });
+      });
       return from(a);
     });
   }
 
   fdx() {
+    const getChild = (x: string) =>
+      this.membersDB
+        .where('parentMemberId', x)
+        .pipe(
+          mergeMap(arr =>
+            from(arr).pipe(
+              map(i => ({ pid: i.parentMemberId, id: i.memberId, l: i.level }))
+            )
+          )
+        );
 
-    const getChild = (x: string) => this.membersDB.where('parentMemberId', x)
-    .pipe(
-      mergeMap((arr) => from(arr).pipe(map(i => ({pid: i.parentMemberId, id: i.memberId, l: i.level})))),
-    );
-
-    getChild('').pipe(
-      expand(
-        itm => of(itm).pipe(mergeMap(i => getChild(i.id)))
-      ),
-      take(500),
-      toArray()
-    )
+    getChild('')
+      .pipe(
+        expand(itm => of(itm).pipe(mergeMap(i => getChild(i.id)))),
+        take(500),
+        toArray()
+      )
       .subscribe(x => console.log(x));
   }
 
   fromdexie() {
     const fromArr = (root: number) => {
       const data$ = from([
-        {p: 0, i: 1},
-        {p: 1, i: 2},
-        {p: 1, i: 3},
-        {p: 1, i: 4},
-        {p: 2, i: 5},
-        {p: 2, i: 6},
-        {p: 2, i: 7},
-        {p: 3, i: 8}
+        { p: 0, i: 1 },
+        { p: 1, i: 2 },
+        { p: 1, i: 3 },
+        { p: 1, i: 4 },
+        { p: 2, i: 5 },
+        { p: 2, i: 6 },
+        { p: 2, i: 7 },
+        { p: 3, i: 8 },
       ]);
 
       const getChild = (parent: number) => {
-        return data$
-          .pipe(
-            filter(i => i.p === parent),
-            // map(i => i.i),
-            // toArray()
-          );
+        return data$.pipe(
+          filter(i => i.p === parent)
+          // map(i => i.i),
+          // toArray()
+        );
       };
 
       const root$ = of(root);
 
       const rec$ = getChild(root);
       return rec$.pipe(
-        expand(
-          id => of(id).pipe(mergeMap(i => getChild(i.i)))
-        ),
+        expand(id => of(id).pipe(mergeMap(i => getChild(i.i)))),
         toArray()
       );
     };
     fromArr(1).subscribe(x => console.log(x));
@@ -137,44 +148,39 @@
 
   fromarray() {
     const fromArr = (root: number) => {
       const data$ = from([
-        {p: 0, i: 1},
-        {p: 1, i: 2},
-        {p: 1, i: 3},
-        {p: 1, i: 4},
-        {p: 2, i: 5},
-        {p: 2, i: 6},
-        {p: 2, i: 7},
-        {p: 3, i: 8}
+        { p: 0, i: 1 },
+        { p: 1, i: 2 },
+        { p: 1, i: 3 },
+        { p: 1, i: 4 },
+        { p: 2, i: 5 },
+        { p: 2, i: 6 },
+        { p: 2, i: 7 },
+        { p: 3, i: 8 },
       ]);
 
       const getChild = (parent: number) => {
-        return data$
-          .pipe(
-            filter(i => i.p === parent),
-            // map(i => i.i),
-            // toArray()
-          );
+        return data$.pipe(
+          filter(i => i.p === parent)
+          // map(i => i.i),
+          // toArray()
+        );
       };
 
       const root$ = of(root);
 
       const rec$ = getChild(root);
       return rec$.pipe(
-        expand(
-          id => of(id).pipe(mergeMap(i => getChild(i.i)))
-        ),
+        expand(id => of(id).pipe(mergeMap(i => getChild(i.i)))),
         toArray()
       );
     };
     fromArr(0).subscribe(x => console.log(x));
   }
 
   hallo() {
-    this.membersDB.where('level', 2).subscribe(
-      x => console.log(x)
-    );
+    this.membersDB.where('level', 2).subscribe(x => console.log(x));
   }
 
   ngOnDestroy() {
     this.beforeDestroy$.next(true);

Index: /home/idnes/Projects/awe/src/web/app/core/services/idb.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/idb.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/idb.service.ts
@@ -34,9 +34,8 @@
   key: string;
 } */
 
 export class IDBService extends Dexie {
-
   // members!: Dexie.Table<IMembers, number>;
   // users!: Dexie.Table<IUsers, number>;
   // preferences!: Dexie.Table<IPreferences, number>;
   // config!: Dexie.Table<IConfig, null>;
@@ -44,13 +43,14 @@
   constructor() {
     super('AutodriveIDB');
     const Version = this.version(1);
     const schema = {
-      members: 'id, parentId, name, level, memberId, parentMemberId, address, email',
+      members:
+        'id, parentId, name, level, memberId, parentMemberId, address, email',
       users: '++id, loginName',
       preferences: '++id, key, value',
       config: 'secure, host, port, key',
-      icons: 'title, text, code'
+      icons: 'title, text, code',
     };
     Version.stores(schema);
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/core/services/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/index.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/index.ts
@@ -14,20 +14,38 @@
 import { AddressService } from './address.service';
 import { MembersService } from './members.api.service';
 
 const providers = [
-  API, Auth, IDB,
-  Theme, RouteName, Preference,
-  SCREEN, LOADING, SIZE,
-  AddressService, AddressesService,
+  API,
+  Auth,
+  IDB,
+  Theme,
+  RouteName,
+  Preference,
+  SCREEN,
+  LOADING,
+  SIZE,
+  AddressService,
+  AddressesService,
   MembersService,
-  Dummy, SIZING, WORKER ];
+  Dummy,
+  SIZING,
+  WORKER,
+];
 export {
-  API, Auth, IDB,
-  Theme, RouteName,
-  Preference, Dummy, SCREEN,
-  LOADING, SIZE, SIZING,
-  WORKER, AddressService,
+  API,
+  Auth,
+  IDB,
+  Theme,
+  RouteName,
+  Preference,
+  Dummy,
+  SCREEN,
+  LOADING,
+  SIZE,
+  SIZING,
+  WORKER,
+  AddressService,
   MembersService,
-  AddressesService, providers
+  AddressesService,
+  providers,
 };
-

Index: /home/idnes/Projects/awe/src/web/app/core/services/members.api.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/members.api.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/members.api.service.ts
@@ -1,13 +1,16 @@
-import {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';
-import {throwError, Observable} from 'rxjs';
-import {catchError, map} from 'rxjs/operators';
-import {transform} from 'lodash';
-import {Injectable} from '@angular/core';
+import {
+  HttpClient,
+  HttpErrorResponse,
+  HttpHeaders,
+} from '@angular/common/http';
+import { throwError, Observable } from 'rxjs';
+import { catchError, map } from 'rxjs/operators';
+import { transform } from 'lodash';
+import { Injectable } from '@angular/core';
 
 @Injectable()
 export class MembersService {
-
   apiUrl: string;
 
   constructor(private http: HttpClient) {
     this.apiUrl = 'http://127.0.0.1:9080/assets';
@@ -20,24 +23,21 @@
     } else {
       // The backend returned an unsuccessful response code.
       // The response body may contain clues as to what went wrong,
       console.error(
-        `Backend returned code ${error.status}, ` +
-        `body was: ${error.error}`);
+        `Backend returned code ${error.status}, ` + `body was: ${error.error}`
+      );
     }
     // return an observable with a user-facing error message
-    return throwError(
-      'Something bad happened; please try again later.');
+    return throwError('Something bad happened; please try again later.');
   }
 
   get_all(data?: any): Observable<any> {
-
     const headers = new HttpHeaders({
       'Content-Type': 'application/json',
       Accept: 'application/json',
-  });
-    return this.http.get(`${this.apiUrl}/member.json`, {headers})
-    .pipe(
+    });
+    return this.http.get(`${this.apiUrl}/member.json`, { headers }).pipe(
       map((response: any) => {
         /* let { meta, list } = response;
         let { column, size } = meta;
         list = transform(list, (acc, items: any[]) => {
@@ -55,11 +55,9 @@
     );
   }
 
   get_one(id: string): Observable<any> {
-    return this.http.post(`${this.apiUrl}/members/${id}`, {}, {})
-    .pipe(
-      catchError(this.handleError)
-    );
+    return this.http
+      .post(`${this.apiUrl}/members/${id}`, {}, {})
+      .pipe(catchError(this.handleError));
   }
-
 }

Index: /home/idnes/Projects/awe/src/web/app/core/services/preference.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/preference.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/preference.service.ts
@@ -1,12 +1,10 @@
 import { Injectable } from '@angular/core';
 import { BehaviorSubject, defer, from } from 'rxjs';
 import { PreferencesDB } from '../db/preferences.db.service';
 
-
 @Injectable()
 export class PreferenceService {
-
   preferenceSubject$: BehaviorSubject<any>;
 
   constructor(private db: PreferencesDB) {
     this.preferenceSubject$ = new BehaviorSubject(null);

Index: /home/idnes/Projects/awe/src/web/app/core/services/routename.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/routename.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/routename.service.ts
@@ -3,24 +3,21 @@
 import { startWith, pairwise, map, filter } from 'rxjs/operators';
 
 @Injectable()
 export class RouteNameService {
-
   routeNameSubject$: BehaviorSubject<string>;
 
   constructor() {
     this.routeNameSubject$ = new BehaviorSubject(null);
   }
 
   observable(): Observable<string> {
-    return this.routeNameSubject$
-      .asObservable()
-      .pipe(
-        startWith(null),
-        pairwise(),
-        filter((x: any) => (x[1] !== x[0])),
-        // map(w => (`${w[0]}=>${w[1]}`)),
-      );
+    return this.routeNameSubject$.asObservable().pipe(
+      startWith(null),
+      pairwise(),
+      filter((x: any) => x[1] !== x[0])
+      // map(w => (`${w[0]}=>${w[1]}`)),
+    );
   }
 
   snapshot(): string {
     return this.routeNameSubject$.value;
@@ -28,6 +25,5 @@
 
   save(name: string): void {
     this.routeNameSubject$.next(name);
   }
-
 }

Index: /home/idnes/Projects/awe/src/web/app/core/services/screen.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/screen.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/screen.service.ts
@@ -5,9 +5,11 @@
 @Injectable()
 export class ScreenService {
   screen$: BehaviorSubject<string[]>;
 
-  constructor() { this.screen$ = new BehaviorSubject([null, null]); }
+  constructor() {
+    this.screen$ = new BehaviorSubject([null, null]);
+  }
 
   prevSnapshot(): string {
     return this.screen$.value[0];
   }

Index: /home/idnes/Projects/awe/src/web/app/core/services/size.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/size.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/size.service.ts
@@ -5,9 +5,11 @@
 @Injectable()
 export class SizeService {
   size$: BehaviorSubject<number[]>;
 
-  constructor() { this.size$ = new BehaviorSubject([null, null]); }
+  constructor() {
+    this.size$ = new BehaviorSubject([null, null]);
+  }
 
   snapshot(): number[] {
     return this.size$.value;
   }

Index: /home/idnes/Projects/awe/src/web/app/core/services/sizing.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/sizing.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/sizing.service.ts
@@ -1,10 +1,17 @@
 import { Injectable } from '@angular/core';
-import {BreakpointObserver, Breakpoints, MediaMatcher} from '@angular/cdk/layout';
+import {
+  BreakpointObserver,
+  Breakpoints,
+  MediaMatcher,
+} from '@angular/cdk/layout';
 
 @Injectable()
 export class SizingService {
   BreakPointsRegistry = Breakpoints;
-  constructor(public breakpointObserver: BreakpointObserver, public mediaMatcher: MediaMatcher) {
+  constructor(
+    public breakpointObserver: BreakpointObserver,
+    public mediaMatcher: MediaMatcher
+  ) {
     // this.BreakPointsRegistry = Breakpoints;
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/core/services/theme.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/theme.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/theme.service.ts
@@ -5,9 +5,9 @@
   renderer: Renderer2;
   theme: string;
   dark = false;
 
-  constructor() { }
+  constructor() {}
 
   toggle(renderer: Renderer2) {
     // this.dark = !this.dark;
     this.renderer = renderer;

Index: /home/idnes/Projects/awe/src/web/app/core/services/worker.service.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/core/services/worker.service.ts
+++ /home/idnes/Projects/awe/src/web/app/core/services/worker.service.ts
@@ -2,15 +2,12 @@
 import { BehaviorSubject } from 'rxjs';
 
 @Injectable()
 export class WorkerService {
-
   // worker: Worker;
 
   constructor() {
     // this.worker = new Worker('./pub/worker2.js');
   }
 
-  postMessage() {
-  }
-
+  postMessage() {}
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/extra-lib.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/extra-lib.module.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/extra-lib.module.ts
@@ -15,7 +15,7 @@
 
 @NgModule({
   imports: [...modules, MarkdownModule.forChild(), MaskModule.forChild()],
   exports: [...modules, MarkdownModule, MaskModule],
-  providers: []
+  providers: [],
 })
-export class ExtraLibModule { }
+export class ExtraLibModule {}

Index: /home/idnes/Projects/awe/src/web/app/extra/extra-routing.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/extra-routing.module.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/extra-routing.module.ts
@@ -3,7 +3,7 @@
 import { routes } from './routes';
 
 @NgModule({
   imports: [RouterModule.forChild(routes)],
-  exports: [RouterModule]
+  exports: [RouterModule],
 })
-export class ExtraRoutingModule { }
+export class ExtraRoutingModule {}

Index: /home/idnes/Projects/awe/src/web/app/extra/extra.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/extra.module.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/extra.module.ts
@@ -21,41 +21,21 @@
 import { FilterBox } from './components/filter-box';
 
 import { HomeCard } from './components/home-card';
 
-const svgTree = [
-  SvgG,
-  SvgSvg,
-  TreeViewer
-];
+const svgTree = [SvgG, SvgSvg, TreeViewer];
 
-const chart = [
-  ChartBar,
-  ChartBarGroup,
-  ChartDonut,
-  ChartLine,
-];
+const chart = [ChartBar, ChartBarGroup, ChartDonut, ChartLine];
 
 const various = [
   ConfirmDialog,
   PageBottomSheet,
   SnackbarNotification,
   FilterBox,
-  MemberTable
+  MemberTable,
 ];
 
 @NgModule({
-  imports: [
-    CommonModule,
-    SharedModule,
-    ExtraLibModule,
-    ExtraRoutingModule
-  ],
-  declarations: [
-    ... chart,
-    ...svgTree,
-    ... screens,
-    ... various,
-    HomeCard
-  ],
+  imports: [CommonModule, SharedModule, ExtraLibModule, ExtraRoutingModule],
+  declarations: [...chart, ...svgTree, ...screens, ...various, HomeCard],
 })
-export class ExtraModule { }
+export class ExtraModule {}

Index: /home/idnes/Projects/awe/src/web/app/extra/routes.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/routes.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/routes.ts
@@ -1,11 +1,15 @@
 import { Routes } from '@angular/router';
 import {
-  AdminScreen, MemberScreen,
-  AccountScreen, PreferenceScreen,
-  DevScreen, HelpScreen,
-  PosScreen, MemberAddScreen,
-  MasterScreen
+  AdminScreen,
+  MemberScreen,
+  AccountScreen,
+  PreferenceScreen,
+  DevScreen,
+  HelpScreen,
+  PosScreen,
+  MemberAddScreen,
+  MasterScreen,
 } from './screens';
 import { LoadingGuard } from '@core/guards/loading.guard';
 const routes: Routes = [
   {
@@ -16,66 +20,65 @@
   {
     path: 'home',
     component: AdminScreen,
     data: {
-      name: 'home'
-    }
+      name: 'home',
+    },
   },
   {
     path: 'member',
     component: MemberScreen,
     data: {
-      name: 'member'
-    }
+      name: 'member',
+    },
   },
   {
     path: 'memberadd',
     component: MemberAddScreen,
     data: {
-      name: 'memberadd'
-    }
+      name: 'memberadd',
+    },
   },
   {
     path: 'account',
     component: AccountScreen,
     data: {
-      name: 'account'
-    }
+      name: 'account',
+    },
   },
   {
     path: 'preference',
     component: PreferenceScreen,
     data: {
-      name: 'preference'
-    }
+      name: 'preference',
+    },
   },
   {
     path: 'dev',
     component: DevScreen,
     data: {
-      name: 'dev'
-    }
+      name: 'dev',
+    },
   },
   {
     path: 'help',
     component: HelpScreen,
     data: {
-      name: 'help'
-    }
+      name: 'help',
+    },
   },
   {
     path: 'pos',
     component: PosScreen,
     data: {
-      name: 'pos'
-    }
+      name: 'pos',
+    },
   },
   {
     path: 'master',
     component: MasterScreen,
     data: {
-      name: 'master'
-    }
-  }
+      name: 'master',
+    },
+  },
 ];
 export { routes };
-

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar/chart-bar.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar/chart-bar.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar/chart-bar.component.ts
@@ -1,9 +1,19 @@
-import {Component} from '@angular/core';
-import {Input} from '@angular/core';
+import { Component } from '@angular/core';
+import { Input } from '@angular/core';
 
 const chartColorScheme = {
-  domain: ['#FFB300', '#E64A19', '#76ff03', '#2979ff', '#EC407A', '#BA68C8', '#fdd835', '#0091ea', '#ff8f00']
+  domain: [
+    '#FFB300',
+    '#E64A19',
+    '#76ff03',
+    '#2979ff',
+    '#EC407A',
+    '#BA68C8',
+    '#fdd835',
+    '#0091ea',
+    '#ff8f00',
+  ],
 };
 
 @Component({
   selector: 'chart-bar',
@@ -14,56 +24,55 @@
         display: inline-block;
         width: 100%;
         height: 100%;
       }
-    `
+    `,
   ],
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class ChartBarComponent {
-
   @Input() mode: 'horizontal' | 'vertical' = 'horizontal';
 
   view = null;
 
   results: any[] = [
     {
       name: 'Bronze',
-      value: 30
+      value: 30,
     },
     {
       name: 'Silver',
-      value: 20
+      value: 20,
     },
     {
       name: 'Gold',
-      value: 20
+      value: 20,
     },
     {
       name: 'Diamond',
-      value: 10
+      value: 10,
     },
     {
       name: 'Double Diamond',
-      value: 5
+      value: 5,
     },
     {
       name: 'Triple Diamond',
-      value: 10
+      value: 10,
     },
     {
       name: 'Ambassador',
-      value: 10
+      value: 10,
     },
     {
       name: 'Double Ambassador',
-      value: 10
+      value: 10,
     },
     {
       name: 'Triple Ambassador',
-      value: 10
-    }
+      value: 10,
+    },
   ];
 
   colorScheme = chartColorScheme;
-  onSelect(e: any) { }
+  onSelect(e: any) {}
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar/index.ts
@@ -1,1 +1,1 @@
-export { ChartBarComponent as ChartBar } from './chart-bar.component';
\ No newline at end of file
+export { ChartBarComponent as ChartBar } from './chart-bar.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar-group/chart-bar-group.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar-group/chart-bar-group.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar-group/chart-bar-group.ts
@@ -1,8 +1,18 @@
-import {Component} from '@angular/core';
-import {Input} from '@angular/core';
+import { Component } from '@angular/core';
+import { Input } from '@angular/core';
 const chartColorScheme = {
-  domain: ['#FFB300', '#E64A19', '#76ff03', '#2979ff', '#EC407A', '#BA68C8', '#fdd835', '#0091ea', '#ff8f00']
+  domain: [
+    '#FFB300',
+    '#E64A19',
+    '#76ff03',
+    '#2979ff',
+    '#EC407A',
+    '#BA68C8',
+    '#fdd835',
+    '#0091ea',
+    '#ff8f00',
+  ],
 };
 
 @Component({
   selector: 'chart-bar-group',
@@ -14,13 +24,12 @@
         display: inline-block;
         height: 100%;
         width: 100%;
       }
-    `
-  ]
+    `,
+  ],
 })
 export class ChartBarGroupComponent {
-
   @Input() mode: 'horizontal' | 'vertical' = 'horizontal';
 
   colorScheme = chartColorScheme;
 
@@ -31,71 +40,71 @@
       name: 'Germany',
       series: [
         {
           name: '2010',
-          value: 40632
+          value: 40632,
         },
         {
           name: '2000',
-          value: 36953
+          value: 36953,
         },
         {
           name: '1990',
-          value: 31476
-        }
-      ]
+          value: 31476,
+        },
+      ],
     },
     {
       name: 'United States',
       series: [
         {
           name: '2010',
-          value: 49737
+          value: 49737,
         },
         {
           name: '2000',
-          value: 45986
+          value: 45986,
         },
         {
           name: '1990',
-          value: 37060
-        }
-      ]
+          value: 37060,
+        },
+      ],
     },
     {
       name: '31-11-2012',
       series: [
         {
           name: '2010',
-          value: 36745
+          value: 36745,
         },
         {
           name: '2000',
-          value: 34774
+          value: 34774,
         },
         {
           name: '1990',
-          value: 29476
-        }
-      ]
+          value: 29476,
+        },
+      ],
     },
     {
       name: '31-11-2013',
       series: [
         {
           name: '2010',
-          value: 36240
+          value: 36240,
         },
         {
           name: '2000',
-          value: 32543
+          value: 32543,
         },
         {
           name: '1990',
-          value: 26424
-        }
-      ]
-    }
+          value: 26424,
+        },
+      ],
+    },
   ];
 
-  onSelect(e: any) { }
+  onSelect(e: any) {}
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar-group/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar-group/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-bar-group/index.ts
@@ -1,1 +1,1 @@
-export {ChartBarGroupComponent as ChartBarGroup} from "./chart-bar-group";
+export { ChartBarGroupComponent as ChartBarGroup } from './chart-bar-group';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-donut/chart-donut.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-donut/chart-donut.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-donut/chart-donut.component.ts
@@ -1,7 +1,17 @@
-import {Component} from '@angular/core';
+import { Component } from '@angular/core';
 const chartColorScheme = {
-  domain: ['#FFB300', '#E64A19', '#76ff03', '#2979ff', '#EC407A', '#BA68C8', '#fdd835', '#0091ea', '#ff8f00']
+  domain: [
+    '#FFB300',
+    '#E64A19',
+    '#76ff03',
+    '#2979ff',
+    '#EC407A',
+    '#BA68C8',
+    '#fdd835',
+    '#0091ea',
+    '#ff8f00',
+  ],
 };
 
 @Component({
   selector: 'member-donut-chart',
@@ -12,63 +22,62 @@
         display: inline-block;
         height: 100%;
         width: 100%;
       }
-    `
+    `,
   ],
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class ChartDonutComponent {
-
   view = null;
 
   results: any[] = [
     {
       name: 'Bronze',
-      value: 15000
+      value: 15000,
     },
     {
       name: 'Silver',
-      value: 2380
+      value: 2380,
     },
     {
       name: 'Gold',
-      value: 1250
+      value: 1250,
     },
     {
       name: 'Diamond',
-      value: 678
+      value: 678,
     },
     {
       name: 'Double Diamond',
-      value: 40
+      value: 40,
     },
     {
       name: 'Triple Diamond',
-      value: 10
+      value: 10,
     },
     {
       name: 'Ambassador',
-      value: 2
+      value: 2,
     },
     {
       name: 'Double Ambassador',
-      value: 3
+      value: 3,
     },
     {
       name: 'Triple Ambassador',
-      value: 5
+      value: 5,
     },
     {
       name: 'Double Ambassador',
-      value: 4
+      value: 4,
     },
     {
       name: 'Triple Ambassador',
-      value: 2
-    }
+      value: 2,
+    },
   ];
 
   colorScheme = chartColorScheme;
 
-  onSelect(e: any) { }
+  onSelect(e: any) {}
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-donut/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-donut/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-donut/index.ts
@@ -1,1 +1,1 @@
-export {ChartDonutComponent as ChartDonut} from './chart-donut.component'
+export { ChartDonutComponent as ChartDonut } from './chart-donut.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-line/chart-line.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-line/chart-line.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-line/chart-line.component.ts
@@ -1,7 +1,17 @@
-import {Component} from '@angular/core';
+import { Component } from '@angular/core';
 const chartColorScheme = {
-  domain: ['#FFB300', '#E64A19', '#76ff03', '#2979ff', '#EC407A', '#BA68C8', '#fdd835', '#0091ea', '#ff8f00']
+  domain: [
+    '#FFB300',
+    '#E64A19',
+    '#76ff03',
+    '#2979ff',
+    '#EC407A',
+    '#BA68C8',
+    '#fdd835',
+    '#0091ea',
+    '#ff8f00',
+  ],
 };
 
 @Component({
   selector: 'chart-line',
@@ -12,14 +22,13 @@
         display: inline-block;
         height: 100%;
         width: 100%;
       }
-    `
+    `,
   ],
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class ChartLineComponent {
-
   colorScheme = chartColorScheme;
 
   view = null;
 
@@ -29,67 +38,67 @@
       name: 'A',
       series: [
         {
           name: 'Jan',
-          value: 420
+          value: 420,
         },
         {
           name: 'Feb',
-          value: 300
+          value: 300,
         },
         {
           name: 'Mar',
-          value: 200
+          value: 200,
         },
         {
           name: 'Apr',
-          value: 220
-        }
-      ]
+          value: 220,
+        },
+      ],
     },
 
     {
       name: 'B',
       series: [
         {
           name: 'Jan',
-          value: 490
+          value: 490,
         },
         {
           name: 'Feb',
-          value: 450
+          value: 450,
         },
         {
           name: 'Mar',
-          value: 350
+          value: 350,
         },
         {
           name: 'Apr',
-          value: 230
-        }
-      ]
+          value: 230,
+        },
+      ],
     },
     {
       name: 'C',
       series: [
         {
           name: 'Jan',
-          value: 300
+          value: 300,
         },
         {
           name: 'Feb',
-          value: 350
+          value: 350,
         },
         {
           name: 'Mar',
-          value: 250
+          value: 250,
         },
         {
           name: 'Apr',
-          value: 250
-        }
-      ]
-    }
+          value: 250,
+        },
+      ],
+    },
   ];
 
-  onSelect(e: any) { }
+  onSelect(e: any) {}
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/components/chart-line/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/chart-line/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/chart-line/index.ts
@@ -1,1 +1,1 @@
-export {ChartLineComponent as ChartLine} from './chart-line.component'
+export { ChartLineComponent as ChartLine } from './chart-line.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/confirm-dialog.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/confirm-dialog.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/confirm-dialog.component.ts
@@ -1,8 +1,8 @@
-import {Component} from '@angular/core'
+import { Component } from '@angular/core';
 
 @Component({
   selector: 'confirm-dialog',
   templateUrl: 'template.html',
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
-export class ConfirmDialogComponent { }
+export class ConfirmDialogComponent {}

Index: /home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/confirm-dialog/index.ts
@@ -1,1 +1,3 @@
-export {ConfirmDialogComponent as ConfirmDialog} from './confirm-dialog.component'
+export {
+  ConfirmDialogComponent as ConfirmDialog,
+} from './confirm-dialog.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/filter-box/filter-box.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/filter-box/filter-box.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/filter-box/filter-box.component.ts
@@ -4,9 +4,9 @@
 @Component({
   selector: 'filter-box',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class FilterBoxComponent implements OnInit {
   @Input() filterItem: any[];
 
@@ -27,17 +27,20 @@
     return { name: item[0], value: item[1], checked: true };
   }
 
   changeAll(e: MatCheckboxChange) {
-    this.items = map(this.items, i => { i.checked = e.checked; return i; } );
+    this.items = map(this.items, i => {
+      i.checked = e.checked;
+      return i;
+    });
     this.change.emit(this.checked());
   }
 
   changeOne(e: MatCheckboxChange) {
-    this.all = every(this.items, i => i.checked === true );
+    this.all = every(this.items, i => i.checked === true);
     this.change.emit(this.checked());
   }
 
   checked() {
-    return map(filter(this.items, (i) => i.checked), (i) => i.value);
+    return map(filter(this.items, i => i.checked), i => i.value);
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/components/filter-box/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/filter-box/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/filter-box/index.ts
@@ -1,1 +1,1 @@
-export {FilterBoxComponent as FilterBox} from './filter-box.component'
+export { FilterBoxComponent as FilterBox } from './filter-box.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/home-card/home-card.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/home-card/home-card.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/home-card/home-card.component.ts
@@ -3,12 +3,11 @@
 @Component({
   selector: 'home-card',
   styleUrls: ['style.scss'],
   templateUrl: 'template.html',
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class HomeCardComponent {
-
   @Input() title = '';
 
   onResized(event: ResizedEvent) {
     console.log(event);

Index: /home/idnes/Projects/awe/src/web/app/extra/components/member-table/filters.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/member-table/filters.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/member-table/filters.ts
@@ -1,14 +1,7 @@
 const filters = [
+  ['status', 'Semua', [['active', 1], ['grace period', 2]]],
   [
-    'status',
-    'Semua',
-    [
-      ['active', 1],
-      ['grace period', 2]
-    ]
-  ],
-  [
     'levels',
     'Semua',
     [
       ['bronze', 1],
@@ -18,10 +11,10 @@
       ['double diamond', 5],
       ['triple diamond', 6],
       ['ambassador', 7],
       ['double ambassador', 8],
-      ['triple ambassador', 9]
-    ]
-  ]
+      ['triple ambassador', 9],
+    ],
+  ],
 ];
 
 export { filters };

Index: /home/idnes/Projects/awe/src/web/app/extra/components/member-table/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/member-table/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/member-table/index.ts
@@ -1,2 +1,1 @@
 export { MemberTableComponent as MemberTable } from './member-table.component';
-

Index: /home/idnes/Projects/awe/src/web/app/extra/components/member-table/member-table.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/member-table/member-table.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/member-table/member-table.component.ts
@@ -15,15 +15,11 @@
 @Component({
   selector: 'member-table',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  animations: [
-    expandTableRows,
-  ],
-  providers: [
-    MembersService
-  ],
-  preserveWhitespaces: false
+  animations: [expandTableRows],
+  providers: [MembersService],
+  preserveWhitespaces: false,
 })
 export class MemberTableComponent implements OnInit, OnDestroy, pageStandard {
   // paginator
   private subscription: SubscriptionLike;
@@ -46,9 +42,8 @@
   expression = true;
   dataSource: MatTableDataSource<[]>;
   expandedElement: any;
 
-
   // dataSource = new MatTableDataSource(this.datas);
 
   constructor(
     // tslint:disable-next-line: variable-name
@@ -58,13 +53,15 @@
     private members: MembersService
   ) {
     const initialSelection = [];
     const allowMultiSelect = true;
-    this.selection = new SelectionModel<any>(allowMultiSelect, initialSelection);
+    this.selection = new SelectionModel<any>(
+      allowMultiSelect,
+      initialSelection
+    );
     this.dataSource = new MatTableDataSource([]);
   }
 
-
   /** Whether the number of selected elements matches the total number of rows. */
   isAllSelected() {
     const numSelected = this.selection.selected.length;
     const numRows = this.dataSource.data.length;
@@ -102,11 +99,11 @@
   }
 
   /** Selects all rows if they are not all selected; otherwise clear selection. */
   masterToggle() {
-    this.isAllSelected() ?
-      this.selection.clear() :
-      this.dataSource.data.forEach(row => this.selection.select(row));
+    this.isAllSelected()
+      ? this.selection.clear()
+      : this.dataSource.data.forEach(row => this.selection.select(row));
   }
 
   getData() {
     this.filters = filters;
@@ -129,9 +126,9 @@
     this.router.navigate([`/admin/members/${id}`]);
   }
 
   onCopySuccess(e: any) {
-    this._clipboardService.copyFromContent(e)
+    this._clipboardService.copyFromContent(e);
   }
 
   onCopyError() {}
 
@@ -144,25 +141,28 @@
     this.router.navigate([`/admin/members/store`]);
   }
 
   save() {
-    this.subscription = this.members.get_all()
-    .subscribe(
+    this.subscription = this.members.get_all().subscribe(
       members => {
         const { list, size, column } = members;
         this.columnsToDisplay = column;
         this.columnsTitle = lodashMap(column, title => upperFirst(title));
         this.length = size;
-        const source = transform(list, (c, v: any, index) => {
-          v.oddeven = (index % 2 === 0) ? 'even' : 'odd';
-          return c.push(v);
-          }, []);
+        const source = transform(
+          list,
+          (c, v: any, index) => {
+            v.oddeven = index % 2 === 0 ? 'even' : 'odd';
+            return c.push(v);
+          },
+          []
+        );
         this.expression = false;
         this.dataSource = new MatTableDataSource(source);
       },
       response => console.log(`POST call in error, ${response}`),
       () => console.log('Complete')
-      );
+    );
   }
 
   clickBack() {
     this.router.navigate([`/admin/home`]);

Index: /home/idnes/Projects/awe/src/web/app/extra/components/page-bottom-sheet/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/page-bottom-sheet/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/page-bottom-sheet/index.ts
@@ -1,1 +1,3 @@
-export {PageBottomSheetComponent as PageBottomSheet} from  './page-bottom-sheet.component'
+export {
+  PageBottomSheetComponent as PageBottomSheet,
+} from './page-bottom-sheet.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/page-bottom-sheet/page-bottom-sheet.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/page-bottom-sheet/page-bottom-sheet.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/page-bottom-sheet/page-bottom-sheet.component.ts
@@ -3,12 +3,12 @@
 
 @Component({
   selector: 'page-bottom-sheet',
   templateUrl: 'template.html',
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class PageBottomSheetComponent {
-  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) { }
+  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {}
 
   ds(e: Event) {
     e.preventDefault();
     return null;

Index: /home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/index.ts
@@ -1,1 +1,3 @@
-export {SnackbarNotificationComponent as SnackbarNotification} from './snackbar-notification.component'
+export {
+  SnackbarNotificationComponent as SnackbarNotification,
+} from './snackbar-notification.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/snackbar-notification.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/snackbar-notification.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/snackbar-notification/snackbar-notification.component.ts
@@ -1,11 +1,11 @@
-import {Component, Inject}  from '@angular/core'
+import { Component, Inject } from '@angular/core';
 // import { MAT_SNACK_BAR_DATA } from '@angular/material';
 
 @Component({
   selector: 'snackbar-notification',
   templateUrl: 'template.html',
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class SnackbarNotificationComponent {
   /* constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any)  {
 

Index: /home/idnes/Projects/awe/src/web/app/extra/components/svg-g/svg-g.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/svg-g/svg-g.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/svg-g/svg-g.component.ts
@@ -5,9 +5,9 @@
   Input,
   Output,
   ViewChild,
   ElementRef,
-  EventEmitter
+  EventEmitter,
 } from '@angular/core';
 import * as d3Shape from 'd3-shape';
 // import * as d3Zoom from 'd3-zoom';
 // import * as d3Selection from 'd3-selection';
@@ -17,11 +17,11 @@
 
 @Component({
   selector: '[svg-g]',
   templateUrl: 'template.html',
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
-export class SvgGComponent  implements AfterContentInit, OnChanges {
+export class SvgGComponent implements AfterContentInit, OnChanges {
   @ViewChild('svgG', { read: ElementRef }) svgG: ElementRef;
   @Input() tree: any;
   @Input() w: number;
   @Input() h: number;
@@ -32,9 +32,9 @@
   @Input() showBlocked = false;
   @Input() showPathToRoot = false;
   @Input() margin: SvgMargin;
   svgWidth = 0;
-  svgHeight  = 0;
+  svgHeight = 0;
   mHeight = 0;
   mWidth = 0;
   viewMode = 'vertical';
   nodesClassL: string;
@@ -53,27 +53,26 @@
     this.svgWidth = this.getSvgWidth();
     this.mHeight = this.getHeight();
     this.mWidth = this.getWidth();
 
-    map(this.tree, (node) => {
+    map(this.tree, node => {
       node.classes = this.nodeClass(node);
       node.pathLink = [];
       node.pathElbow = [];
       node.pathToRoot = [];
       node.pathElbowCombine = this.combinedElbow(node);
       node.ttLvl = this.getTextTransform(node);
       node.ttId = this.getTextTransform2(node);
       node.pathToRoot = this.pathToRootC(node);
-      forEach(node.children, (child) => {
+      forEach(node.children, child => {
         node.pathLink.push({
           classes: this.linkClass(child),
-          d: this.getLink(child)
+          d: this.getLink(child),
         });
         node.pathElbow.push({
           classes: 'elbow',
-          d: this.getElbow(child)
+          d: this.getElbow(child),
         });
-
       });
     });
   }
 
@@ -82,9 +81,11 @@
     const dL = [];
     // tslint:disable-next-line: prefer-for-of
     for (let index = 0; index < ancestors.length; index++) {
       const element = ancestors[index];
-      if (element.parent === null) { continue; }
+      if (element.parent === null) {
+        continue;
+      }
       const x = element.x;
       const y = element.y;
       const px = element.parent.x;
       const py = element.parent.y;
@@ -92,33 +93,44 @@
     }
     return dL.join(' ');
   }
 
-  ngAfterContentInit() {
-  }
+  ngAfterContentInit() {}
 
   nodesClass() {
     let classL = 'nodes';
-    if (this.showId) { classL = `${classL} show-id`; }
-    if (this.showLevel) { classL = `${classL} show-level`; }
-    if (this.showBlocked) { classL = `${classL} show-blocked`; }
-    if (this.showPathToRoot) { classL = `${classL} show-ptr`; }
+    if (this.showId) {
+      classL = `${classL} show-id`;
+    }
+    if (this.showLevel) {
+      classL = `${classL} show-level`;
+    }
+    if (this.showBlocked) {
+      classL = `${classL} show-blocked`;
+    }
+    if (this.showPathToRoot) {
+      classL = `${classL} show-ptr`;
+    }
     return classL;
   }
 
   nodeClass(node: any) {
     const id = node.data.id;
     const level = node.data.lvl;
     let classStr = `node node-id-${id} node-level-${level}`;
-    if (id === this.currentSelection) { classStr = `${classStr} selected`; }
+    if (id === this.currentSelection) {
+      classStr = `${classStr} selected`;
+    }
     return classStr;
   }
 
   linkClass(link: any) {
     let linkClass = '';
     const sourceLvl = link.parent.data.lvl;
     const targetLvl = link.data.lvl;
-    if (sourceLvl <= targetLvl) { linkClass = `${linkClass} blocked`; }
+    if (sourceLvl <= targetLvl) {
+      linkClass = `${linkClass} blocked`;
+    }
     return linkClass;
   }
 
   getViewBox() {
@@ -161,20 +173,18 @@
     return this.w + this.margin.left + this.margin.right;
   }
 
   getLink(link: any) {
-    return this.diagonal(
-      {
-        source: {
-          x: link.parent.x,
-          y: link.parent.y
-        },
-        target: {
-          x: link.x,
-          y: link.y
-        }
-      }
-    );
+    return this.diagonal({
+      source: {
+        x: link.parent.x,
+        y: link.parent.y,
+      },
+      target: {
+        x: link.x,
+        y: link.y,
+      },
+    });
   }
 
   getElbow(link: any) {
     return this.elbow(
@@ -187,44 +197,51 @@
   getElbow2(link: any) {
     return {
       source: {
         x: link.parent.x,
-        y: link.parent.y
+        y: link.parent.y,
       },
       target: {
         x: link.x,
-        y: link.y
-      }
+        y: link.y,
+      },
     };
   }
 
   diagonal(st: any) {
-    const mode = (this.viewMode === 'vertical') ? d3Shape.linkVertical : d3Shape.linkHorizontal;
-    return mode().x((d: any) => d.x).y((d: any) =>  d.y)(st);
+    const mode =
+      this.viewMode === 'vertical'
+        ? d3Shape.linkVertical
+        : d3Shape.linkHorizontal;
+    return mode()
+      .x((d: any) => d.x)
+      .y((d: any) => d.y)(st);
   }
 
   elbow(st: any, root: boolean, hasChild: boolean) {
-    let d = `M${st.source.x},${(st.source.y)} V${st.source.y + 35} H${st.target.x}`;
+    let d = `M${st.source.x},${st.source.y} V${st.source.y + 35} H${
+      st.target.x
+    }`;
     d = hasChild ? `${d} V${st.target.y + 35}` : `${d} V${st.target.y}`;
     return d;
   }
 
   combinedElbow(node: any) {
     const d = {
       a: '',
-      b: ''
+      b: '',
     };
     const children = node.children;
     let index = 1;
     let hl1 = '';
     let hl2 = '';
     let vl = '';
     const tr = [];
-    forEach(children, (child) => {
+    forEach(children, child => {
       const e = this.getElbow2(child);
 
       if (index === 1) {
-        vl = `M${e.source.x},${(e.source.y + 15)} V${e.target.y - 35}`;
+        vl = `M${e.source.x},${e.source.y + 15} V${e.target.y - 35}`;
         hl1 = `M${e.target.x},${e.target.y - 35}`;
       }
       if (index === children.length) {
         hl2 = `H${e.target.x}`;

Index: /home/idnes/Projects/awe/src/web/app/extra/components/svg-svg/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/svg-svg/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/svg-svg/index.ts
@@ -1,2 +1,1 @@
 export { SvgSvgComponent as SvgSvg, SvgMargin } from './svg-svg.component';
-

Index: /home/idnes/Projects/awe/src/web/app/extra/components/svg-svg/svg-svg.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/svg-svg/svg-svg.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/svg-svg/svg-svg.component.ts
@@ -8,9 +8,9 @@
   AfterContentInit,
   OnChanges,
   OnInit,
   OnDestroy,
-  AfterViewInit
+  AfterViewInit,
 } from '@angular/core';
 import * as d3Shape from 'd3-shape';
 import * as d3Zoom from 'd3-zoom';
 import * as d3Selection from 'd3-selection';
@@ -29,12 +29,13 @@
   selector: '[svg-svg]',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
   preserveWhitespaces: false,
-  providers: [ResizeListenerService]
+  providers: [ResizeListenerService],
 })
-export class SvgSvgComponent implements AfterContentInit, AfterViewInit, OnChanges, OnInit, OnDestroy {
-  @ViewChild('svgSvg', {read: ElementRef}) svgSvg: ElementRef;
+export class SvgSvgComponent
+  implements AfterContentInit, AfterViewInit, OnChanges, OnInit, OnDestroy {
+  @ViewChild('svgSvg', { read: ElementRef }) svgSvg: ElementRef;
   @Input() tree: any;
   w: number;
   h: number;
   @Input() currentSelection: any;
@@ -48,9 +49,9 @@
   zoomGroup: d3Selection.Selection<any, {}, null, undefined>;
   nodes: d3Selection.Selection<any, {}, null, undefined>;
   zoom: d3Zoom.ZoomBehavior<any, any>;
   svgWidth = 0;
-  svgHeight  = 0;
+  svgHeight = 0;
   mHeight = 0;
   mWidth = 0;
   viewMode = 'vertical';
   nodesClassL: string;
@@ -90,25 +91,25 @@
     this.svgWidth = this.getSvgWidth();
     this.mHeight = this.getHeight();
     this.mWidth = this.getWidth();
 
-    map(this.tree, (node) => {
+    map(this.tree, node => {
       node.classes = this.nodeClass(node);
       node.pathLink = [];
       node.pathElbow = [];
       node.pathToRoot = [];
       node.pathElbowCombine = this.combinedElbow(node);
       node.ttLvl = this.getTextTransform(node);
       node.ttId = this.getTextTransform2(node);
       node.pathToRoot = this.pathToRootC(node);
-      forEach(node.children, (child) => {
+      forEach(node.children, child => {
         node.pathLink.push({
           classes: this.linkClass(child),
-          d: this.getLink(child)
+          d: this.getLink(child),
         });
         node.pathElbow.push({
           classes: 'elbow',
-          d: this.getElbow(child)
+          d: this.getElbow(child),
         });
       });
     });
   }
@@ -133,23 +134,25 @@
 
   firstRun(ev: string) {
     const element = this.svgSvg.nativeElement;
     const { clientHeight, clientWidth } = element;
-    console.log({ev, h: clientHeight, w: clientWidth, e: element});
-    if(ev === 'on changes') {
+    console.log({ ev, h: clientHeight, w: clientWidth, e: element });
+    if (ev === 'on changes') {
       this.w = clientWidth;
       this.h = clientHeight;
     }
   }
 
   ngAfterContentInit() {
     // this.zoomGroup.call(this.zoom, d3Zoom.zoomIdentity.translate(this.getCenterHorizontal(), this.getCenterVertical()))
     this.zoomGroup.call(
-      this.zoom
-      .scaleExtent([-2, 2])
-      .on('zoom.svg', () => this.onZoom()));
+      this.zoom.scaleExtent([-2, 2]).on('zoom.svg', () => this.onZoom())
+    );
     this.firstRun('after content init');
-    this.nodes.attr('transform', `translate(${this.getCenterHorizontal()}, ${this.getCenterVertical()})`);
+    this.nodes.attr(
+      'transform',
+      `translate(${this.getCenterHorizontal()}, ${this.getCenterVertical()})`
+    );
   }
 
   onZoom() {
     // let event = d3Selection.event;
@@ -157,28 +160,40 @@
   }
 
   nodesClass() {
     let classL = '';
-    if (this.showId) { classL = `${classL} show-id`; }
-    if (this.showLevel) { classL = `${classL} show-level`; }
-    if (this.showBlocked) { classL = `${classL} show-blocked`; }
-    if (this.showPathToRoot) { classL = `${classL} show-ptr`; }
+    if (this.showId) {
+      classL = `${classL} show-id`;
+    }
+    if (this.showLevel) {
+      classL = `${classL} show-level`;
+    }
+    if (this.showBlocked) {
+      classL = `${classL} show-blocked`;
+    }
+    if (this.showPathToRoot) {
+      classL = `${classL} show-ptr`;
+    }
     return classL;
   }
 
   nodeClass(node: any) {
     const id = node.data.id;
     const level = node.data.lvl;
     let classStr = `node node-id-${id} node-level-${level}`;
-    if (id === this.currentSelection) { classStr = `${classStr} selected`; }
+    if (id === this.currentSelection) {
+      classStr = `${classStr} selected`;
+    }
     return classStr;
   }
 
   linkClass(link: any) {
     let linkClass = '';
     const sourceLvl = link.parent.data.lvl;
     const targetLvl = link.data.lvl;
-    if (sourceLvl <= targetLvl) { linkClass = `${linkClass} blocked`; }
+    if (sourceLvl <= targetLvl) {
+      linkClass = `${linkClass} blocked`;
+    }
     return linkClass;
   }
 
   getViewBox() {
@@ -223,20 +238,18 @@
     return this.w + this.margin.left + this.margin.right;
   }
 
   getLink(link: any) {
-    return this.diagonal(
-      {
-        source: {
-          x: link.parent.x,
-          y: link.parent.y
-        },
-        target: {
-          x: link.x,
-          y: link.y
-        }
-      }
-    );
+    return this.diagonal({
+      source: {
+        x: link.parent.x,
+        y: link.parent.y,
+      },
+      target: {
+        x: link.x,
+        y: link.y,
+      },
+    });
   }
 
   getElbow(link: any) {
     return this.elbow(
@@ -249,44 +262,51 @@
   getElbow2(link: any) {
     return {
       source: {
         x: link.parent.x,
-        y: link.parent.y
+        y: link.parent.y,
       },
       target: {
         x: link.x,
-        y: link.y
-      }
+        y: link.y,
+      },
     };
   }
 
   diagonal(st: any) {
-    const mode = (this.viewMode === 'vertical') ? d3Shape.linkVertical : d3Shape.linkHorizontal;
-    return mode().x((d: any) => d.x).y((d: any) =>  d.y)(st);
+    const mode =
+      this.viewMode === 'vertical'
+        ? d3Shape.linkVertical
+        : d3Shape.linkHorizontal;
+    return mode()
+      .x((d: any) => d.x)
+      .y((d: any) => d.y)(st);
   }
 
   elbow(st: any, root: boolean, hasChild: boolean) {
-    let d = `M${st.source.x},${(st.source.y)} V${st.source.y + 35} H${st.target.x}`;
+    let d = `M${st.source.x},${st.source.y} V${st.source.y + 35} H${
+      st.target.x
+    }`;
     d = hasChild ? `${d} V${st.target.y + 35}` : `${d} V${st.target.y}`;
     return d;
   }
 
   combinedElbow(node: any) {
     const d = {
       a: '',
-      b: ''
+      b: '',
     };
     const children = node.children;
     let index = 1;
     let hl1 = '';
     let hl2 = '';
     let vl = '';
     const tr = [];
-    forEach(children, (child) => {
+    forEach(children, child => {
       const e = this.getElbow2(child);
 
       if (index === 1) {
-        vl = `M${e.source.x},${(e.source.y + 15)} V${e.target.y - 35}`;
+        vl = `M${e.source.x},${e.source.y + 15} V${e.target.y - 35}`;
         hl1 = `M${e.target.x},${e.target.y - 35}`;
       }
       if (index === children.length) {
         hl2 = `H${e.target.x}`;
@@ -297,6 +317,5 @@
     const x = tr.join(' ');
     d.b = `${vl} ${hl1} ${hl2} ${x}`;
     return d;
   }
-
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/index.ts
@@ -1,1 +1,1 @@
-export {TreeViewerComponent as TreeViewer} from './tree-viewer.component'
+export { TreeViewerComponent as TreeViewer } from './tree-viewer.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/level.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/level.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/level.ts
@@ -2,9 +2,9 @@
   {
     id: 1,
     name: 'bronze',
     requirement: null,
-    bonus: null
+    bonus: null,
   },
   {
     id: 2,
     name: 'silver',
@@ -12,36 +12,36 @@
     bonus: [
       {
         name: 'group_development',
         type: 'percentage',
-        value: 3
+        value: 3,
       },
       {
         name: 'city_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'province_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'national_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'match',
         type: 'fixed',
-        value: 50000
+        value: 50000,
       },
       {
         name: 'sponsor',
         type: 'percentage',
-        value: 10
-      }
-    ]
+        value: 10,
+      },
+    ],
   },
   {
     id: 3,
     name: 'gold',
@@ -49,36 +49,36 @@
     bonus: [
       {
         name: 'group_development',
         type: 'percentage',
-        value: 6
+        value: 6,
       },
       {
         name: 'city_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'province_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'national_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'match',
         type: 'fixed',
-        value: 50000
+        value: 50000,
       },
       {
         name: 'sponsor',
         type: 'percentage',
-        value: 10
-      }
-    ]
+        value: 10,
+      },
+    ],
   },
   {
     id: 4,
     name: 'diamond',
@@ -86,36 +86,36 @@
     bonus: [
       {
         name: 'group_development',
         type: 'percentage',
-        value: 9
+        value: 9,
       },
       {
         name: 'city_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'province_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'national_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'match',
         type: 'fixed',
-        value: 50000
+        value: 50000,
       },
       {
         name: 'sponsor',
         type: 'percentage',
-        value: 10
-      }
-    ]
+        value: 10,
+      },
+    ],
   },
   {
     id: 5,
     name: 'double diamond',
@@ -123,36 +123,36 @@
     bonus: [
       {
         name: 'group_development',
         type: 'percentage',
-        value: 2
+        value: 2,
       },
       {
         name: 'city_development',
         type: 'percentage',
-        value: .5
+        value: 0.5,
       },
       {
         name: 'province_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'national_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'match',
         type: 'fixed',
-        value: 50000
+        value: 50000,
       },
       {
         name: 'sponsor',
         type: 'percentage',
-        value: 10
-      }
-    ]
+        value: 10,
+      },
+    ],
   },
   {
     id: 6,
     name: 'triple diamond',
@@ -160,41 +160,41 @@
     bonus: [
       {
         name: 'group_development',
         type: 'percentage',
-        value: 3
+        value: 3,
       },
       {
         name: 'city_development',
         type: 'percentage',
-        value: 1
+        value: 1,
       },
       {
         name: 'province_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'national_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'match',
         type: 'fixed',
-        value: 50000
+        value: 50000,
       },
       {
         name: 'sponsor',
         type: 'percentage',
-        value: 10
-      }
-    ]
+        value: 10,
+      },
+    ],
   },
   {
     id: 7,
     name: 'ambassador',
-    requirement: 3
+    requirement: 3,
   },
   {
     id: 8,
     name: 'double ambassador',
@@ -202,36 +202,36 @@
     bonus: [
       {
         name: 'group_development',
         type: 'percentage',
-        value: 2
+        value: 2,
       },
       {
         name: 'city_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'province_development',
         type: 'percentage',
-        value: 1
+        value: 1,
       },
       {
         name: 'national_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'match',
         type: 'fixed',
-        value: 50000
+        value: 50000,
       },
       {
         name: 'sponsor',
         type: 'percentage',
-        value: 10
-      }
-    ]
+        value: 10,
+      },
+    ],
   },
   {
     id: 9,
     name: 'triple ambassador',
@@ -239,40 +239,40 @@
     bonus: [
       {
         name: 'group_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'city_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'province_development',
         type: 'percentage',
-        value: null
+        value: null,
       },
       {
         name: 'national_development',
         type: 'percentage',
-        value: 1
+        value: 1,
       },
       {
         name: 'match',
         type: 'fixed',
-        value: 50000
+        value: 50000,
       },
       {
         name: 'sponsor',
         type: 'percentage',
-        value: 10
-      }
-    ]
-  }
-]
+        value: 10,
+      },
+    ],
+  },
+];
 export interface levelInterface {
   id: number;
   name: string;
   requirement: number;
-  percentage?: [number]
+  percentage?: [number];
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/tree-viewer.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/tree-viewer.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/components/tree-viewer/tree-viewer.component.ts
@@ -1,5 +1,13 @@
-import {Component, ElementRef, AfterViewInit, ViewChild, OnInit, OnChanges, AfterContentInit} from '@angular/core';
+import {
+  Component,
+  ElementRef,
+  AfterViewInit,
+  ViewChild,
+  OnInit,
+  OnChanges,
+  AfterContentInit,
+} from '@angular/core';
 import * as d3Hierarchy from 'd3-hierarchy';
 // import * as faker from 'faker';
 // import {Scenario as Storage} from '@services/scenario.service';
 import { ResizedEvent } from '@lib/resize-event';
@@ -26,13 +34,14 @@
 @Component({
   selector: 'tree-viewer',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
-export class TreeViewerComponent implements AfterViewInit, OnInit, OnChanges, AfterContentInit {
-  @ViewChild('svgTreeRef', {read: ElementRef}) svgTreeRef: ElementRef;
-  @ViewChild('svgSvg', {read: ElementRef}) svgSvg: ElementRef;
+export class TreeViewerComponent
+  implements AfterViewInit, OnInit, OnChanges, AfterContentInit {
+  @ViewChild('svgTreeRef', { read: ElementRef }) svgTreeRef: ElementRef;
+  @ViewChild('svgSvg', { read: ElementRef }) svgSvg: ElementRef;
 
   splitSizeA = 0;
   splitSizeB = 100;
 
@@ -50,17 +59,17 @@
   height: any;
   selectedId: any;
   selectedName: any;
   cId: number;
-  margin = {top: 30, right: 30, bottom: 30, left: 30};
+  margin = { top: 30, right: 30, bottom: 30, left: 30 };
   rootElement = {
     name: 'Root',
     lvl: undefined,
     id: 0,
     parentId: null,
     active: false,
     blocking: true,
-    hidden: false
+    hidden: false,
   };
   lvl: any;
 
   constructor(private size: SIZE) {
@@ -72,30 +81,44 @@
 
   firstRun(ev: string) {
     const element = this.svgSvg.nativeElement;
     const { clientHeight, clientWidth } = element;
-    console.log({ev, h: element.clientHeight, w: element.clientWidth, e: element});
+    console.log({
+      ev,
+      h: element.clientHeight,
+      w: element.clientWidth,
+      e: element,
+    });
   }
 
-  ngAfterViewInit() { this.firstRun('after view parent'); }
-  ngOnInit() { this.firstRun('on init parent'); }
-  ngOnChanges() { this.firstRun('on changes parent'); }
-  ngAfterContentInit() { this.firstRun('after content parent'); }
+  ngAfterViewInit() {
+    this.firstRun('after view parent');
+  }
+  ngOnInit() {
+    this.firstRun('on init parent');
+  }
+  ngOnChanges() {
+    this.firstRun('on changes parent');
+  }
+  ngAfterContentInit() {
+    this.firstRun('after content parent');
+  }
 
   onHide() {
     this.svgData.each((d: any) => this.hideChildren(d));
   }
 
   hideChildren(d: any) {
-    if (d.data.id !== this.selectedId) { return; }
+    if (d.data.id !== this.selectedId) {
+      return;
+    }
   }
 
   onAncestors() {
     this.svgData.each((d: any) => this.showAncestors(d));
   }
 
-  onDummy() {
-  }
+  onDummy() {}
 
   showAncestors(d: any) {
     if (d.data.id !== this.selectedId) {
       return;
@@ -133,10 +156,9 @@
     console.log(descendants);
   }
 
   onResizeSvg(event: ResizedEvent): void {
-
-    console.log({'resize event': event});
+    console.log({ 'resize event': event });
     let width = 0;
     let height = 0;
 
     if (event.newWidth !== undefined && event.newWidth > 0) {
@@ -151,9 +173,11 @@
   }
 
   generate() {
     this.ldata = [];
-    if (this.data.tree.length < 1) { this.data.tree.push(this.rootElement); }
+    if (this.data.tree.length < 1) {
+      this.data.tree.push(this.rootElement);
+    }
     this.svgData = this.treeLayout(d3Hierarchy.stratify()(this.data.tree));
     this.svgData.each((d: any) => this.setLevelName(d));
     this.svgData.each((d: any) => this.ldata.push(d));
   }
@@ -171,15 +195,16 @@
   treeLayout(data: any) {
     return d3Hierarchy
       .tree()
       .nodeSize([70, 70])
-      .separation(() => 1)
-      (data);
+      .separation(() => 1)(data);
   }
 
-  levelName(idf ?: any) {
-    const x = find(level, (a) => (a.id === idf));
-    if (x !== undefined) { return x.name; }
+  levelName(idf?: any) {
+    const x = find(level, a => a.id === idf);
+    if (x !== undefined) {
+      return x.name;
+    }
   }
 
   edit1() {
     /* this.storage.saveScenario({
@@ -196,9 +221,9 @@
       parentId: this.selectedId,
       lvl: 1,
       active: true,
       lvlName: 'bronze',
-      hidden: false
+      hidden: false,
     };
     this.data.tree.push(a);
     this.ldata = [];
     this.title = this.data.id;
@@ -212,18 +237,23 @@
     d.data.lvlName = this.levelName(d.data.lvl);
   }
 
   setLevel(d: any) {
-    if (d.data.id !== this.selectedId) { return; }
+    if (d.data.id !== this.selectedId) {
+      return;
+    }
     const ancestors = d.ancestors();
     // tslint:disable-next-line: prefer-for-of
     for (let index = 0; index < ancestors.length; index++) {
       const element = ancestors[index];
       const des = element.descendants().slice(1);
-      if (element.data.lvl === undefined) { continue; }
-      const currentLevel = find(level, (item) => item.id === element.data.lvl);
-      const nextLevel = find(level, (item) => item.id === (element.data.lvl + 1));
-      const p = partition(des, (o: any) => o.data.lvl === currentLevel.id)[0].length;
+      if (element.data.lvl === undefined) {
+        continue;
+      }
+      const currentLevel = find(level, item => item.id === element.data.lvl);
+      const nextLevel = find(level, item => item.id === element.data.lvl + 1);
+      const p = partition(des, (o: any) => o.data.lvl === currentLevel.id)[0]
+        .length;
       if (p >= nextLevel.requirement) {
         element.data.lvl = element.data.lvl + 1;
         element.data.lvlName = this.levelName(element.data.lvl);
       }

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/index.ts
@@ -15,9 +15,9 @@
   MemberScreen,
   PosScreen,
   PreferenceScreen,
   MemberAddScreen,
-  MasterScreen
+  MasterScreen,
 ];
 export {
   AccountScreen,
   AdminScreen,
@@ -27,6 +27,6 @@
   PosScreen,
   PreferenceScreen,
   MemberAddScreen,
   MasterScreen,
-  screens
+  screens,
 };

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/account-screen/account-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/account-screen/account-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/account-screen/account-screen.component.ts
@@ -2,12 +2,10 @@
 
 @Component({
   selector: 'extra-screen-account',
   templateUrl: 'template.html',
-  styleUrls: ['style.scss']
+  styleUrls: ['style.scss'],
 })
 export class AccountScreenComponent {
-
-  constructor() { }
+  constructor() {}
   inc() {}
-
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/account-screen/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/account-screen/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/account-screen/index.ts
@@ -1,1 +1,3 @@
-export { AccountScreenComponent as AccountScreen } from './account-screen.component';
+export {
+  AccountScreenComponent as AccountScreen,
+} from './account-screen.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/admin-screen/admin-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/admin-screen/admin-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/admin-screen/admin-screen.component.ts
@@ -1,79 +1,68 @@
 import { Component, OnInit, HostBinding } from '@angular/core';
-import { BreakpointObserver, MediaMatcher, Breakpoints } from '@angular/cdk/layout';
+import {
+  BreakpointObserver,
+  MediaMatcher,
+  Breakpoints,
+} from '@angular/cdk/layout';
 import { ResizedEvent } from '@lib/resize-event';
 import { from, of } from 'rxjs';
 import { throttleTime } from 'rxjs/operators';
 
 @Component({
   selector: 'extra-screen-admin',
   templateUrl: 'template.html',
-  styleUrls: ['style.scss']
+  styleUrls: ['style.scss'],
 })
 export class AdminScreenComponent {
-
   @HostBinding() class = 'fill-parent';
 
   cols = 1;
   width = 0;
   height: 0;
   onResized(event: ResizedEvent) {
-    of(event).pipe(
-      throttleTime(60)
-    ).subscribe(x => console.log(x));
+    of(event)
+      .pipe(throttleTime(60))
+      .subscribe(x => console.log(x));
   }
 
-  constructor( private breakpointObserver: BreakpointObserver, private mediaMatcher: MediaMatcher) {
-    this.breakpointObserver.observe([
-      Breakpoints.HandsetLandscape,
-    ]).subscribe(result => {
+  constructor(
+    private breakpointObserver: BreakpointObserver,
+    private mediaMatcher: MediaMatcher
+  ) {
+    this.breakpointObserver
+      .observe([Breakpoints.HandsetLandscape])
+      .subscribe(result => {
+        if (result.matches) {
+          this.cols = 2;
+        }
+      });
+    this.breakpointObserver
+      .observe([Breakpoints.HandsetPortrait])
+      .subscribe(result => {
+        if (result.matches) {
+          this.cols = 1;
+        }
+      });
+    this.breakpointObserver.observe([Breakpoints.Small]).subscribe(result => {
       if (result.matches) {
         this.cols = 2;
       }
     });
-    this.breakpointObserver.observe([
-      Breakpoints.HandsetPortrait
-    ]).subscribe(result => {
+    this.breakpointObserver.observe([Breakpoints.Medium]).subscribe(result => {
       if (result.matches) {
-        this.cols = 1;
+        this.cols = 3;
       }
     });
-    this.breakpointObserver.observe([
-      Breakpoints.Small
-    ]).subscribe(
-      result => {
-        if (result.matches) {
-          this.cols = 2;
-        }
+    this.breakpointObserver.observe([Breakpoints.Large]).subscribe(result => {
+      if (result.matches) {
+        this.cols = 3;
       }
-    );
-    this.breakpointObserver.observe([
-      Breakpoints.Medium
-    ]).subscribe(
-      result => {
-        if (result.matches) {
-          this.cols = 3;
-        }
-      }
-    );
-    this.breakpointObserver.observe([
-      Breakpoints.Large
-    ]).subscribe(
-      result => {
-        if (result.matches) {
-          this.cols = 3;
-        }
-      }
-    );
+    });
 
-    this.breakpointObserver.observe([
-      Breakpoints.XSmall
-    ]).subscribe(
-      result => {
-        if (result.matches) {
-          this.cols = 1;
-        }
+    this.breakpointObserver.observe([Breakpoints.XSmall]).subscribe(result => {
+      if (result.matches) {
+        this.cols = 1;
       }
-    );
+    });
   }
-
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/dev-screen/dev-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/dev-screen/dev-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/dev-screen/dev-screen.component.ts
@@ -7,27 +7,31 @@
 @Component({
   selector: 'dev-screen-member',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  providers: [Dummy]
+  providers: [Dummy],
 })
 export class DevScreenComponent {
   abc: string;
   xyz: string;
   www: string;
   rt: string;
   rw: string;
   paz: string;
-  mypattern = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } };
-  rtrw = { 'A': { pattern: new RegExp('[1-9]') }, 'B': { pattern: new RegExp('[0-9]') } }
+  mypattern = {
+    A: { pattern: new RegExp('[1-9]') },
+    B: { pattern: new RegExp('[0-9]') },
+  };
+  rtrw = {
+    A: { pattern: new RegExp('[1-9]') },
+    B: { pattern: new RegExp('[0-9]') },
+  };
 
   constructor(public dummy: Dummy) {
     this.xyz = '';
   }
   loadData() {
-    this.dummy.getMemberDummy().subscribe(
-      y => console.log(y)
-    );
+    this.dummy.getMemberDummy().subscribe(y => console.log(y));
   }
 
   calculateData() {
     this.dummy.fromdexie();
@@ -38,11 +42,12 @@
   }
 
   wow() {
     // console.log(this.xyz);
-    this.dummy.calconworker(this.xyz).pipe(take(1)).subscribe(i => console.log(i));
+    this.dummy
+      .calconworker(this.xyz)
+      .pipe(take(1))
+      .subscribe(i => console.log(i));
   }
 
-  toCanvas(el: ElementRef) {
-
-  }
+  toCanvas(el: ElementRef) {}
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/dev-screen/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/dev-screen/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/dev-screen/index.ts
@@ -1,2 +1,1 @@
 export { DevScreenComponent as DevScreen } from './dev-screen.component';
-

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/help-screen/help-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/help-screen/help-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/help-screen/help-screen.component.ts
@@ -3,12 +3,11 @@
 @Component({
   selector: 'help-screen-preference',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  providers: []
+  providers: [],
 })
 export class HelpScreenComponent {
-
   md = `
     Colons can be used to align columns.
 
     | Tables        | Are           | Cool  |
@@ -25,8 +24,7 @@
     --- | --- | ---
     *Still* | \`renders\` | **nicely**
     1 | 2 | 3`;
 
-  constructor() { }
+  constructor() {}
   inc() {}
-
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/master-screen/master-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/master-screen/master-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/master-screen/master-screen.component.ts
@@ -3,12 +3,12 @@
 @Component({
   selector: 'master-screen',
   templateUrl: 'template.html',
   styles: [
-    `:host {
-      height: 100%;
-    }`
-  ]
+    `
+      :host {
+        height: 100%;
+      }
+    `,
+  ],
 })
-export class MasterScreenComponent {
-
-}
+export class MasterScreenComponent {}

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/member-add-screen/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/member-add-screen/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/member-add-screen/index.ts
@@ -1,2 +1,3 @@
-export { MemberAddScreenComponent as MemberAddScreen } from './member-add-screen.component';
-
+export {
+  MemberAddScreenComponent as MemberAddScreen,
+} from './member-add-screen.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/member-add-screen/member-add-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/member-add-screen/member-add-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/member-add-screen/member-add-screen.component.ts
@@ -1,11 +1,11 @@
-import {Component, OnInit, AfterViewInit, OnDestroy} from '@angular/core';
-import {FormBuilder, FormGroup, Validators} from '@angular/forms';
-import {MatSnackBar, MatBottomSheet, MatDialog} from '@angular/material'
-import {Router} from '@angular/router';
-import {SubscriptionLike} from 'rxjs';
-import {map, forEach, find, transform} from 'lodash';
-import {Observable} from 'rxjs';
+import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';
+import { FormBuilder, FormGroup, Validators } from '@angular/forms';
+import { MatSnackBar, MatBottomSheet, MatDialog } from '@angular/material';
+import { Router } from '@angular/router';
+import { SubscriptionLike } from 'rxjs';
+import { map, forEach, find, transform } from 'lodash';
+import { Observable } from 'rxjs';
 import { ConfirmDialog } from '@extra/components/confirm-dialog';
 
 // import { SnackbarNotification } from '@extra/components/snackbar-notification';
 // import { PageBottomSheet } from '@extra/components/page-bottom-sheet';
@@ -25,23 +25,22 @@
 @Component({
   selector: 'members-store',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  providers: [
-    AddressesService
-  ]
+  providers: [AddressesService],
 })
-export class MemberAddScreenComponent implements OnInit, AfterViewInit, OnDestroy {
-  private emptyOptions = [{value: '', name: ''}];
+export class MemberAddScreenComponent
+  implements OnInit, AfterViewInit, OnDestroy {
+  private emptyOptions = [{ value: '', name: '' }];
   isLinear = true;
   changed = false;
   personalGroup: FormGroup;
   addressGroup: FormGroup;
   addressSelect: any = [
     ['Provinsi', 'provinces', 'province', 'regencies'],
     ['Kota/Kabupaten', 'regencies', 'regency', 'districts'],
     ['Kecamatan', 'districts', 'district', 'villages'],
-    ['Kelurahan/Desa', 'villages', null, null]
+    ['Kelurahan/Desa', 'villages', null, null],
   ];
   addressSelected: AddressSelected;
   oktosave = false;
 
@@ -54,16 +53,15 @@
     private addresses: AddressesService,
     private router: Router,
     public bottomSheet: MatBottomSheet,
     public dialog: MatDialog
-  ) { }
+  ) {}
 
   ngOnInit() {
     this.initialize();
   }
 
-  ngOnDestroy(): void {
-  }
+  ngOnDestroy(): void {}
 
   initialize() {
     this.personalGroup = this._formBuilder.group({
       nama: ['', Validators.required],
@@ -77,11 +75,13 @@
       provinces: [{ value: '', disabled: false }, Validators.required],
       regencies: [{ value: '', disabled: true }, Validators.required],
       districts: [{ value: '', disabled: true }, Validators.required],
       villages: [{ value: '', disabled: true }, Validators.required],
-      address: [{ value: '', disabled: false }, Validators.required]
+      address: [{ value: '', disabled: false }, Validators.required],
     });
-    this.addressSelect = map(this.addressSelect, select => this.populate_select(select));
+    this.addressSelect = map(this.addressSelect, select =>
+      this.populate_select(select)
+    );
     this.get_administrative_division('provinces');
   }
 
   clickBack() {
@@ -95,18 +95,20 @@
     return group;
   }
 
   canDeactivate(): Observable<boolean> | boolean {
-    if (!this.changed) { return true; }
+    if (!this.changed) {
+      return true;
+    }
     const dialogRef = this.dialog.open(ConfirmDialog, {
-      width: '250px'
+      width: '250px',
     });
     return dialogRef.afterClosed();
   }
 
   openDialog() {
     const dialogRef = this.dialog.open(ConfirmDialog, {
-      width: '250px'
+      width: '250px',
     });
 
     dialogRef.afterClosed().subscribe(result => {
       console.log(result);
@@ -117,81 +119,87 @@
     console.log('animation done');
   }
 
   get_administrative_division(type: string, where?: any, control?: any): void {
-    const subscription: SubscriptionLike = this
-      .addresses
+    const subscription: SubscriptionLike = this.addresses
       .get_administrative_division(type, where, true)
       .subscribe(
-        (value) => {
+        value => {
           this.set_options(type, value);
-          if (control) { control.enable(); }
+          if (control) {
+            control.enable();
+          }
           subscription.unsubscribe();
         },
-        (e) => {
+        e => {
           this.addressGroup.get('provinces').setValue('');
-          this.snackBar.open('Maaf terjadi kesalahan', null, { duration: 6000 });
+          this.snackBar.open('Maaf terjadi kesalahan', null, {
+            duration: 6000,
+          });
         }
       );
   }
 
   set_options(type: string, value: any) {
-    this.addressSelect = map(
-      this.addressSelect,
-      (form) => {
-        form.options = (form.formControlName === type) ? value : form.options;
-        return form;
-      }
-    );
+    this.addressSelect = map(this.addressSelect, form => {
+      form.options = form.formControlName === type ? value : form.options;
+      return form;
+    });
   }
 
   set_no_options(type: string) {
     this.set_options(type, this.emptyOptions);
   }
 
-  get_text_value() {
-  }
+  get_text_value() {}
 
   ngAfterViewInit() {
     this.av();
   }
 
   av(): void {
-    forEach(this.addressSelect, (g) => {
+    forEach(this.addressSelect, g => {
       const addressGroup = this.addressGroup;
       const chain1 = addressGroup.controls[g[1]];
-      const chain2: any = (g[3]) ? addressGroup.controls[g[3]] : false;
+      const chain2: any = g[3] ? addressGroup.controls[g[3]] : false;
       if (chain2 !== false) {
-        chain1.valueChanges.subscribe(
-          v => {
-            chain2.setValue('');
-            this.set_no_options(g[3]);
-            chain2.disable();
-            const where = {};
-            where[g[2]] = v;
-            if (v === '' || v === null) { return; }
-            this.get_administrative_division(g[3], where, chain2);
+        chain1.valueChanges.subscribe(v => {
+          chain2.setValue('');
+          this.set_no_options(g[3]);
+          chain2.disable();
+          const where = {};
+          where[g[2]] = v;
+          if (v === '' || v === null) {
+            return;
           }
-        );
+          this.get_administrative_division(g[3], where, chain2);
+        });
       }
     });
 
-    this.addressGroup.valueChanges.subscribe(
-      (v) => {
-        this.addressSelected = transform(v, (acc, val, key: any) => {
+    this.addressGroup.valueChanges.subscribe(v => {
+      this.addressSelected = transform(
+        v,
+        (acc, val, key: any) => {
           if (key === 'address') {
             acc[key] = val;
           } else {
-            const area = find(this.addressSelect, vy => vy.formControlName === key).options;
+            const area = find(
+              this.addressSelect,
+              vy => vy.formControlName === key
+            ).options;
             if (area) {
-            const x = find(area, vx => vx.value === `${val}`);
-            if (x) { acc[key] = x.name; }
+              const x = find(area, vx => vx.value === `${val}`);
+              if (x) {
+                acc[key] = x.name;
+              }
             }
           }
           return acc;
-        }, {});
-      }
-    );
+        },
+        {}
+      );
+    });
   }
 
   save() {}
 
@@ -201,7 +209,7 @@
     this.av();
   }
 
   show() {
-    console.log({pn: this.pn});
+    console.log({ pn: this.pn });
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/member-screen/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/member-screen/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/member-screen/index.ts
@@ -1,2 +1,3 @@
-export { MemberScreenComponent as MemberScreen } from './member-screen.component';
-
+export {
+  MemberScreenComponent as MemberScreen,
+} from './member-screen.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/member-screen/member-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/member-screen/member-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/member-screen/member-screen.component.ts
@@ -2,9 +2,9 @@
 
 @Component({
   selector: 'extra-screen-member',
   templateUrl: 'template.html',
-  styleUrls: ['style.scss']
+  styleUrls: ['style.scss'],
 })
 export class MemberScreenComponent {
   constructor() {
     console.log('constructor');

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/pos-screen/pos-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/pos-screen/pos-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/pos-screen/pos-screen.component.ts
@@ -6,11 +6,9 @@
 @Component({
   selector: 'pos-page-component',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  animations: [
-    expandTableRows,
-  ],
+  animations: [expandTableRows],
 })
 export class PosScreenComponent {
   expandedElement: any;
   selection: any;
@@ -23,32 +21,31 @@
       id: 1,
       name: 'hallo',
       price: 30.5,
       quantity: '',
-    }
+    },
   ];
 
-  todo = [
-  ];
+  todo = [];
 
-  done = [
-  ];
+  done = [];
   dataSource = new MatTableDataSource(this.todo);
 
   constructor() {
     const initialSelection = [];
     const allowMultiSelect = true;
-    this.selection = new SelectionModel<any>(allowMultiSelect, initialSelection);
+    this.selection = new SelectionModel<any>(
+      allowMultiSelect,
+      initialSelection
+    );
     for (let i = 0; i < 30; i++) {
-      this.todo.push(
-        {
-          id: i + 1,
-          name: '', // faker.commerce.productName(),
-          price: '', // faker.commerce.price(10000, 3000000, 2),
-          quantity: '', // faker.finance.amount(1, 5, 0),
-          color: '' // faker.internet.color()
-        }
-      );
+      this.todo.push({
+        id: i + 1,
+        name: '', // faker.commerce.productName(),
+        price: '', // faker.commerce.price(10000, 3000000, 2),
+        quantity: '', // faker.finance.amount(1, 5, 0),
+        color: '', // faker.internet.color()
+      });
     }
   }
 
   /** Whether the number of selected elements matches the total number of rows. */
@@ -59,9 +56,9 @@
   }
 
   /** Selects all rows if they are not all selected; otherwise clear selection. */
   masterToggle() {
-    this.isAllSelected() ?
-      this.selection.clear() :
-      this.dataSource.data.forEach(row => this.selection.select(row));
+    this.isAllSelected()
+      ? this.selection.clear()
+      : this.dataSource.data.forEach(row => this.selection.select(row));
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/preference-screen/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/preference-screen/index.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/preference-screen/index.ts
@@ -1,1 +1,3 @@
-export { PreferenceScreenComponent as PreferenceScreen } from './preference-screen.component';
+export {
+  PreferenceScreenComponent as PreferenceScreen,
+} from './preference-screen.component';

Index: /home/idnes/Projects/awe/src/web/app/extra/screens/preference-screen/preference-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/extra/screens/preference-screen/preference-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/extra/screens/preference-screen/preference-screen.component.ts
@@ -4,12 +4,11 @@
 @Component({
   selector: 'extra-screen-preference',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  providers: []
+  providers: [],
 })
 export class PreferenceScreenComponent {
-
   md = `
     Colons can be used to align columns.
 
     | Tables        | Are           | Cool  |
@@ -26,8 +25,7 @@
     --- | --- | ---
     *Still* | \`renders\` | **nicely**
     1 | 2 | 3`;
 
-  constructor() { }
+  constructor() {}
   inc() {}
-
 }

Index: /home/idnes/Projects/awe/src/web/app/screens/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/screens/index.ts
+++ /home/idnes/Projects/awe/src/web/app/screens/index.ts
@@ -1,6 +1,6 @@
 import { InstallScreen } from './install-screen';
 import { LoginScreen } from './login-screen';
 import { ExtraScreen } from './extra-screen';
 import { LogoScreen } from './logo-screen';
-const screens = [ InstallScreen, LoginScreen, ExtraScreen, LogoScreen ];
+const screens = [InstallScreen, LoginScreen, ExtraScreen, LogoScreen];
 export { InstallScreen, LoginScreen, ExtraScreen, LogoScreen, screens };

Index: /home/idnes/Projects/awe/src/web/app/screens/extra-screen/extra-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/screens/extra-screen/extra-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/screens/extra-screen/extra-screen.component.ts
@@ -2,10 +2,9 @@
 
 @Component({
   selector: 'extra-screen',
   templateUrl: 'template.html',
-  styleUrls: ['style.scss']
+  styleUrls: ['style.scss'],
 })
 export class ExtraScreenComponent {
   constructor() {}
 }
-

Index: /home/idnes/Projects/awe/src/web/app/screens/install-screen/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/screens/install-screen/index.ts
+++ /home/idnes/Projects/awe/src/web/app/screens/install-screen/index.ts
@@ -1,1 +1,3 @@
-export { InstallScreenComponent as InstallScreen } from './install-screen.component';
+export {
+  InstallScreenComponent as InstallScreen,
+} from './install-screen.component';

Index: /home/idnes/Projects/awe/src/web/app/screens/install-screen/install-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/screens/install-screen/install-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/screens/install-screen/install-screen.component.ts
@@ -2,11 +2,9 @@
 
 @Component({
   selector: 'install-screen',
   templateUrl: 'template.html',
-  styleUrls: ['style.scss']
+  styleUrls: ['style.scss'],
 })
 export class InstallScreenComponent {
-
-  constructor() { }
+  constructor() {}
 }
-

Index: /home/idnes/Projects/awe/src/web/app/screens/login-screen/login-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/screens/login-screen/login-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/screens/login-screen/login-screen.component.ts
@@ -1,57 +1,79 @@
 import { Component, OnInit } from '@angular/core';
-import { trigger, state, style, transition, animate, query, stagger, group, sequence, animateChild, keyframes } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  transition,
+  animate,
+  query,
+  stagger,
+  group,
+  sequence,
+  animateChild,
+  keyframes,
+} from '@angular/animations';
 import { AuthenticationService } from '../../core/services/authentication.service';
 import { RouteNameService } from '../../core/services/routename.service';
 import { ActivatedRoute } from '@angular/router';
 import { from, of, Subject } from 'rxjs';
-import {  delay, take, mergeMap, takeUntil } from 'rxjs/operators';
+import { delay, take, mergeMap, takeUntil } from 'rxjs/operators';
 
 @Component({
   selector: 'login-screen',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
   animations: [
-    trigger(
-      'animatecard',
-      [
-        state('showSpinner', style({transform: 'scale(0)'})),
-        state('hideSpinner', style({transform: 'scale(1)'})),
-        transition('* => showSpinner', [
-          query('*', animate('0ms', style({opacity: '0'}))),
-          query(':self', [stagger('350ms', animate('350ms', style({height: '40px', width: '40px', borderRadius: '50%'})))]),
-          query(':self', [stagger('350ms', animate('350ms', style({transform: 'scale(0)'})))]),
+    trigger('animatecard', [
+      state('showSpinner', style({ transform: 'scale(0)' })),
+      state('hideSpinner', style({ transform: 'scale(1)' })),
+      transition('* => showSpinner', [
+        query('*', animate('0ms', style({ opacity: '0' }))),
+        query(':self', [
+          stagger(
+            '350ms',
+            animate(
+              '350ms',
+              style({ height: '40px', width: '40px', borderRadius: '50%' })
+            )
+          ),
         ]),
-        transition('* => hideSpinner', [
-          animate('350ms', style({transform: 'scale(1)'}))
-        ])
-      ]
-    ),
-    trigger(
-      'animatespinner', [
-        state('showSpinner', style({opacity: '1', display: 'flex', transform: 'scale(1)'})),
-        state('hideSpinner', style({opacity: '0', display: 'none', transform: 'scale(0)'})),
-        transition('* => showSpinner', [animate('350ms')]),
-        transition('* => hideSpinner', [animate('350ms')])
-      ]
-    )
+        query(':self', [
+          stagger('350ms', animate('350ms', style({ transform: 'scale(0)' }))),
+        ]),
+      ]),
+      transition('* => hideSpinner', [
+        animate('350ms', style({ transform: 'scale(1)' })),
+      ]),
+    ]),
+    trigger('animatespinner', [
+      state(
+        'showSpinner',
+        style({ opacity: '1', display: 'flex', transform: 'scale(1)' })
+      ),
+      state(
+        'hideSpinner',
+        style({ opacity: '0', display: 'none', transform: 'scale(0)' })
+      ),
+      transition('* => showSpinner', [animate('350ms')]),
+      transition('* => hideSpinner', [animate('350ms')]),
+    ]),
   ],
 })
 export class LoginScreenComponent implements OnInit {
-
   animationState = 'hideSpinner';
   stoper$: Subject<boolean>;
 
   constructor(
     private authenticationService: AuthenticationService,
-    private routeName: RouteNameService, private activateRoute: ActivatedRoute
-    ) {
-      this.stoper$ = new Subject();
-      this.routeName.save(this.activateRoute.snapshot.data.name);
+    private routeName: RouteNameService,
+    private activateRoute: ActivatedRoute
+  ) {
+    this.stoper$ = new Subject();
+    this.routeName.save(this.activateRoute.snapshot.data.name);
   }
 
-  ngOnInit() {
-  }
+  ngOnInit() {}
 
   login() {
     this.animationState = 'showSpinner';
     // from(this.authenticationService.login())
@@ -60,20 +82,16 @@
         delay(6000),
         mergeMap(() => this.authenticationService.login()),
         takeUntil(this.stoper$.asObservable())
       )
-      .subscribe(
-        v => {
-          this.animationState = 'hideSpinner';
-        }
-      );
+      .subscribe(v => {
+        this.animationState = 'hideSpinner';
+      });
   }
 
   cancel() {
     this.stoper$.next(false);
     this.animationState = 'hideSpinner';
   }
 
-  inc() {
-  }
-
+  inc() {}
 }

Index: /home/idnes/Projects/awe/src/web/app/screens/logo-screen/logo-screen.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/screens/logo-screen/logo-screen.component.ts
+++ /home/idnes/Projects/awe/src/web/app/screens/logo-screen/logo-screen.component.ts
@@ -2,11 +2,9 @@
 
 @Component({
   selector: 'logo-screen',
   templateUrl: 'template.html',
-  styleUrls: ['style.scss']
+  styleUrls: ['style.scss'],
 })
 export class LogoScreenComponent {
-
-  constructor() { }
-
+  constructor() {}
 }

Index: /home/idnes/Projects/awe/src/web/app/shared/material.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/material.module.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/material.module.ts
@@ -1,5 +1,4 @@
-
 import { ReactiveFormsModule, FormsModule } from '@angular/forms';
 import { NgModule, ModuleWithProviders } from '@angular/core';
 import { DragDropModule } from '@angular/cdk/drag-drop';
 import { OverlayModule } from '@angular/cdk/overlay';
@@ -76,19 +75,14 @@
   MatIconModule,
   MatMenuModule,
   OverlayModule,
   PortalModule,
-  MatButtonToggleModule
+  MatButtonToggleModule,
 ];
 
 @NgModule({
-  imports: [
-    CommonModule,
-    ReactiveFormsModule,
-    FormsModule,
-    ...modules
-  ],
-  exports: modules
+  imports: [CommonModule, ReactiveFormsModule, FormsModule, ...modules],
+  exports: modules,
 })
 export class MaterialModule {
   /* static forRoot(): ModuleWithProviders {
     return {

Index: /home/idnes/Projects/awe/src/web/app/shared/shared-component.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/shared-component.module.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/shared-component.module.ts
@@ -24,9 +24,9 @@
 import {
   CovalentCommonModule,
   CovalentSearchModule,
   CovalentFileModule,
-  CovalentBreadcrumbsModule
+  CovalentBreadcrumbsModule,
 } from '@try/tera-data';
 import { ContextMenuModule as ContextMenuModule2 } from '@lib/context-menu2';
 // import { PhonePipeModule } from '@lib/phone-pipe/lib/phonepipe.module';
 import { MaskModule } from '@try/input-mask';
@@ -41,9 +41,9 @@
   ScrollPadding,
   BoxPadding,
   PageStandard,
   SearchDemoComponent,
-  FileUploadDemoComponent
+  FileUploadDemoComponent,
 ];
 
 const modules = [
   CommonModule,
@@ -62,9 +62,9 @@
   AngularResizedEventModule,
   ContextMenuModule2,
   ClickOutsideModule,
   // PhonePipeModule,
-  CobaModule
+  CobaModule,
   // SharedLibModule
 ];
 
 const imported = [
@@ -72,24 +72,22 @@
   MaskModule.forRoot(),
   ScrollToModule.forRoot(),
   AngularSplitModule.forRoot(),
   MatPasswordStrengthModule.forRoot(),
-  MatCalendarModule.forRoot()
+  MatCalendarModule.forRoot(),
 ];
 
 const exported = [
   ...modules,
   ScrollToModule,
   AngularSplitModule,
   MatPasswordStrengthModule,
   MatCalendarModule,
-  components
+  components,
 ];
 
 @NgModule({
-  imports: [
-    ...imported
-  ],
+  imports: [...imported],
   declarations: [...components],
-  exports: exported
+  exports: exported,
 })
-export class SharedComponentModule { }
+export class SharedComponentModule {}

Index: /home/idnes/Projects/awe/src/web/app/shared/shared-lib.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/shared-lib.module.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/shared-lib.module.ts
@@ -14,9 +14,9 @@
   NgObjectPipesModule,
 } from '@try/pipes';
 
 @NgModule({
-  providers: [ResizeListenerService]
+  providers: [ResizeListenerService],
 })
 export class ResizeListenerModule {
   /* static forRoot(): ModuleWithProviders {
     return {
@@ -44,7 +44,7 @@
 
 @NgModule({
   imports: [...modules],
   exports: [...modules],
-  providers: []
+  providers: [],
 })
-export class SharedLibModule { }
+export class SharedLibModule {}

Index: /home/idnes/Projects/awe/src/web/app/shared/shared.module.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/shared.module.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/shared.module.ts
@@ -1,45 +1,51 @@
-import { NgModule, ModuleWithProviders, APP_INITIALIZER, RendererFactory2 } from '@angular/core';
+import {
+  NgModule,
+  ModuleWithProviders,
+  APP_INITIALIZER,
+  RendererFactory2,
+} from '@angular/core';
 import { CommonModule } from '@angular/common';
 import 'hammerjs';
 import {
   Preference,
   IDB,
   providers as CoreProviders,
   LOADING,
   Theme,
-  SIZE
+  SIZE,
 } from '@core/services';
 import { PreferencesDB, DBS } from '@core/db';
 import { appInit } from '@core/initializer';
 import { LoadingGuard } from '@core/guards/loading.guard';
 import { SharedComponentModule } from './shared-component.module';
 
 @NgModule({
-  imports: [
-    CommonModule,
-    SharedComponentModule,
-  ],
-  exports: [
-    CommonModule,
-    SharedComponentModule
-  ]
+  imports: [CommonModule, SharedComponentModule],
+  exports: [CommonModule, SharedComponentModule],
 })
 export class SharedModule {
   static forRoot(): ModuleWithProviders {
     return {
       ngModule: SharedModule,
       providers: [
-        ... CoreProviders,
+        ...CoreProviders,
         IDB,
-        ... DBS,
+        ...DBS,
         LoadingGuard,
         {
           provide: APP_INITIALIZER,
           useFactory: appInit,
           multi: true,
-          deps: [PreferencesDB, Preference, LOADING, Theme, RendererFactory2, SIZE]
-        }
-      ]
+          deps: [
+            PreferencesDB,
+            Preference,
+            LOADING,
+            Theme,
+            RendererFactory2,
+            SIZE,
+          ],
+        },
+      ],
     };
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/shared/animations/expandTableRow.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/animations/expandTableRow.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/animations/expandTableRow.ts
@@ -1,6 +1,15 @@
-import {trigger, transition, style, animate, state} from '@angular/animations'
+import {
+  trigger,
+  transition,
+  style,
+  animate,
+  state,
+} from '@angular/animations';
 export const expandTableRows = trigger('detailExpand', [
-  state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),
-  state('expanded', style({height: '*'})),
-  transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
+  state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),
+  state('expanded', style({ height: '*' })),
+  transition(
+    'expanded <=> collapsed',
+    animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')
+  ),
 ]);

Index: /home/idnes/Projects/awe/src/web/app/shared/components/app-base/app-base.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/app-base/app-base.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/app-base/app-base.component.ts
@@ -1,6 +1,14 @@
 import { Component, OnInit } from '@angular/core';
-import { trigger, style, animate, state, transition, query, group } from '@angular/animations';
+import {
+  trigger,
+  style,
+  animate,
+  state,
+  transition,
+  query,
+  group,
+} from '@angular/animations';
 import { of } from 'rxjs';
 import { delay } from 'rxjs/operators';
 
 @Component({
@@ -8,39 +16,43 @@
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
   animations: [
     trigger('hidebg', [
-      state('true', style({
-        opacity: 1,
-        zIndex: 1
-      })),
-      state('false', style({
-        opacity: 0,
-        zIndex: -1
-      })),
-      transition(
-        '*=>true', [
-          animate('1000ms', style({ opacity: 1 })),
-        ]
+      state(
+        'true',
+        style({
+          opacity: 1,
+          zIndex: 1,
+        })
       ),
+      state(
+        'false',
+        style({
+          opacity: 0,
+          zIndex: -1,
+        })
+      ),
+      transition('*=>true', [animate('1000ms', style({ opacity: 1 }))]),
       transition(
-        '*=>false', group([
+        '*=>false',
+        group([
           animate('1000ms', style({ opacity: 0 })),
-          query(
-            '.placeholder',
-            [animate('1000ms', style({ transform: 'scale(.5)' }))]
-          )
+          query('.placeholder', [
+            animate('1000ms', style({ transform: 'scale(.5)' })),
+          ]),
         ])
-      )
-    ])
-  ]
+      ),
+    ]),
+  ],
 })
 export class AppBaseComponent implements OnInit {
   logoShow = true;
   sideNavShow = false;
 
-  constructor() { }
+  constructor() {}
 
   ngOnInit() {
-    of(true).pipe(delay(1000)).subscribe(() => this.logoShow = false);
+    of(true)
+      .pipe(delay(1000))
+      .subscribe(() => (this.logoShow = false));
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/shared/components/app-logo/app-logo.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/app-logo/app-logo.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/app-logo/app-logo.component.ts
@@ -8,12 +8,11 @@
   styleUrls: ['style.scss'],
   animations: [],
   providers: [
     // ActivatedRouteSnapshot
-  ]
+  ],
 })
 export class AppLogoComponent implements OnInit {
-
   constructor(private loading: LOADING, private route: ActivatedRoute) {}
 
   ngOnInit() {
     // console.log(this.route.snapshot.queryParams);

Index: /home/idnes/Projects/awe/src/web/app/shared/components/app-root/app-root.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/app-root/app-root.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/app-root/app-root.component.ts
@@ -1,64 +1,76 @@
 import { Component } from '@angular/core';
 import { Router, NavigationEnd, RouterEvent } from '@angular/router';
-import { trigger, state, style, transition, query, animate, group } from '@angular/animations';
+import {
+  trigger,
+  state,
+  style,
+  transition,
+  query,
+  animate,
+  group,
+} from '@angular/animations';
 import { Theme, SCREEN, SIZING } from '@core/services';
 import { filter, pairwise, map, takeLast } from 'rxjs/operators';
 
 @Component({
   selector: 'app-root',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
   animations: [
-    trigger(
-      'tologin', [
-        transition(
-          '*=>true', [
-            query(
-              ':enter',
-              [
-                animate('0ms', style({ transform: 'scale(0)' })),
-                animate('300ms', style({ transform: 'scale(1)' }))
-              ]
-            )
-          ]
-        )
-      ]
-    ),
-    trigger(
-      'fromlogin', [
-        transition(
-          '*=>true', [
-            query(
-              ':enter',
-              [
-                animate('0ms', style({ transform: 'scale(0)' })),
-                animate('300ms', style({ transform: 'scale(1)' }))
-              ]
-            ),
-            query(
-              ':leave',
-              [
-                animate('0ms', style({ position: 'absolute', top: 0, left: 0, transform: 'scale(1)', opacity: '1'  })),
-                animate('600ms', style({ position: 'absolute', top: 0, left: 0, transform: 'scale(.5)', opacity: '0' }))
-              ]
-            )
-          ]
-        )
-      ]
-    )
-  ]
+    trigger('tologin', [
+      transition('*=>true', [
+        query(':enter', [
+          animate('0ms', style({ transform: 'scale(0)' })),
+          animate('300ms', style({ transform: 'scale(1)' })),
+        ]),
+      ]),
+    ]),
+    trigger('fromlogin', [
+      transition('*=>true', [
+        query(':enter', [
+          animate('0ms', style({ transform: 'scale(0)' })),
+          animate('300ms', style({ transform: 'scale(1)' })),
+        ]),
+        query(':leave', [
+          animate(
+            '0ms',
+            style({
+              position: 'absolute',
+              top: 0,
+              left: 0,
+              transform: 'scale(1)',
+              opacity: '1',
+            })
+          ),
+          animate(
+            '600ms',
+            style({
+              position: 'absolute',
+              top: 0,
+              left: 0,
+              transform: 'scale(.5)',
+              opacity: '0',
+            })
+          ),
+        ]),
+      ]),
+    ]),
+  ],
 })
 export class AppRootComponent {
   tologin = false;
   fromlogin = false;
-  constructor( public theme: Theme, private router: Router, private sizing: SIZING ) {
-    const navEnd$ = this.router.events
-      .pipe(
-        filter((event: RouterEvent) => event instanceof NavigationEnd),
-        map((event: NavigationEnd) => (event.urlAfterRedirects)),
-        pairwise()
-      );
+  constructor(
+    public theme: Theme,
+    private router: Router,
+    private sizing: SIZING
+  ) {
+    const navEnd$ = this.router.events.pipe(
+      filter((event: RouterEvent) => event instanceof NavigationEnd),
+      map((event: NavigationEnd) => event.urlAfterRedirects),
+      pairwise()
+    );
     navEnd$.subscribe((pairs: string[]) => {
       if (pairs[1] === '/login') {
         this.tologin = true;
       } else {
@@ -69,11 +81,10 @@
       } else {
         this.fromlogin = false;
       }
       console.log(pairs);
-
     });
-    this.sizing.breakpointObserver.observe([
-      this.sizing.BreakPointsRegistry.HandsetPortrait
-    ]).subscribe(x => console.log(x));
+    this.sizing.breakpointObserver
+      .observe([this.sizing.BreakPointsRegistry.HandsetPortrait])
+      .subscribe(x => console.log(x));
   }
 }

Index: /home/idnes/Projects/awe/src/web/app/shared/components/app-theme/app-theme.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/app-theme/app-theme.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/app-theme/app-theme.component.ts
@@ -3,12 +3,11 @@
 
 @Component({
   selector: 'app-theme',
   templateUrl: 'template.html',
-
 })
 export class AppThemeComponent {
-  constructor(public themeService: ThemeService, private renderer: Renderer2) { }
+  constructor(public themeService: ThemeService, private renderer: Renderer2) {}
 
   click() {
     this.themeService.toggle(this.renderer);
   }

Index: /home/idnes/Projects/awe/src/web/app/shared/components/box-padding/box-padding.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/box-padding/box-padding.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/box-padding/box-padding.component.ts
@@ -1,10 +1,10 @@
-import { Component, Input, OnInit, HostBinding } from '@angular/core'
+import { Component, Input, OnInit, HostBinding } from '@angular/core';
 @Component({
   selector: 'box-padding',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class BoxPaddingComponent implements OnInit {
   @Input() padding = 0;
 
@@ -14,13 +14,13 @@
 
   @HostBinding() class = 'box-padding-wow';
 
   padStyle: {
-    backgroundColor: string,
-    padding: string
+    backgroundColor: string;
+    padding: string;
   };
   boxStyle: {
-    backgroundColor: string
+    backgroundColor: string;
   };
 
   constructor() {
     this.padStyle = { backgroundColor: null, padding: null };

Index: /home/idnes/Projects/awe/src/web/app/shared/components/box-padding/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/box-padding/index.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/box-padding/index.ts
@@ -1,2 +1,1 @@
 export { BoxPaddingComponent as BoxPadding } from './box-padding.component';
-

Index: /home/idnes/Projects/awe/src/web/app/shared/components/file-upload/file-upload.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/file-upload/file-upload.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/file-upload/file-upload.component.ts
@@ -10,9 +10,8 @@
   animations: [slideInDownAnimation],
   preserveWhitespaces: true,
 })
 export class FileUploadDemoComponent {
-
   @HostBinding('@routeAnimation') routeAnimation = true;
   @HostBinding('class.td-route-animation') classAnimation = true;
 
   fileSelectMsg = 'No file selected yet.';

Index: /home/idnes/Projects/awe/src/web/app/shared/components/page-standard/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/page-standard/index.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/page-standard/index.ts
@@ -1,2 +1,4 @@
-export { PageStandardComponent as PageStandard } from './page-standard.component';
+export {
+  PageStandardComponent as PageStandard,
+} from './page-standard.component';
 export { pageStandard } from './page-standard.interface';

Index: /home/idnes/Projects/awe/src/web/app/shared/components/page-standard/page-standard.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/page-standard/page-standard.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/page-standard/page-standard.component.ts
@@ -1,17 +1,17 @@
-import {Component, Input, Output, OnInit, EventEmitter} from '@angular/core';
-import {Location} from '@angular/common';
+import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';
+import { Location } from '@angular/common';
 
 @Component({
   selector: 'page-standard',
   templateUrl: 'template.html',
   styleUrls: ['style.scss'],
-  preserveWhitespaces: false
+  preserveWhitespaces: false,
 })
 export class PageStandardComponent implements OnInit {
   @Input() title: string;
 
-  @Input() padding  = 10;
+  @Input() padding = 10;
 
   @Input() background = 'grey';
 
   @Input() boxBackground = '#424242';
@@ -21,12 +21,14 @@
   @Output() clickBack: EventEmitter<any> = new EventEmitter();
 
   classes: string[] = [];
 
-  constructor(private location: Location) { }
+  constructor(private location: Location) {}
 
   ngOnInit() {
-    if (this.barBottom) { this.classes.push('bottom'); }
+    if (this.barBottom) {
+      this.classes.push('bottom');
+    }
   }
 
   close(e: any) {
     if (this.clickBack) {

Index: /home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/index.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/index.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/index.ts
@@ -1,1 +1,3 @@
-export {ScrollPaddingComponent as ScrollPadding} from  './scroll-padding.component'
+export {
+  ScrollPaddingComponent as ScrollPadding,
+} from './scroll-padding.component';

Index: /home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/scroll-padding.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/scroll-padding.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/scroll-padding/scroll-padding.component.ts
@@ -1,16 +1,16 @@
-import {Component, Input, OnInit} from '@angular/core'
+import { Component, Input, OnInit } from '@angular/core';
 
 @Component({
   selector: 'scroll-padding',
   templateUrl: 'template.html',
-  styleUrls: ['style.scss']
+  styleUrls: ['style.scss'],
 })
 export class ScrollPaddingComponent implements OnInit {
   @Input() padding = 0;
 
   style: {
-    padding: string
+    padding: string;
   } = { padding: '' };
 
   ngOnInit() {
     this.style.padding = `${this.padding}px`;

Index: /home/idnes/Projects/awe/src/web/app/shared/components/search/search.component.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/app/shared/components/search/search.component.ts
+++ /home/idnes/Projects/awe/src/web/app/shared/components/search/search.component.ts
@@ -9,87 +9,105 @@
   templateUrl: 'search.component.html',
   animations: [slideInDownAnimation],
 })
 export class SearchDemoComponent {
-
   @HostBinding('@routeAnimation') routeAnimation = true;
   @HostBinding('class.td-route-animation') classAnimation = true;
 
   // tslint:disable-next-line: ban-types
-  searchInputAttrs: Object[] = [{
-    description: `Debounce timeout between keypresses. Defaults to 400.`,
-    name: 'debounce?',
-    type: 'number',
-  }, {
-    description: `Placeholder for the underlying input component.`,
-    name: 'placeholder?',
-    type: 'string',
-  }, {
-    description: `Sets if the input underline should be visible. Defaults to 'false'.`,
-    name: 'showUnderline?',
-    type: 'boolean',
-  }, {
-    description: `Event emitted after the [debounce] timeout.`,
-    name: 'searchDebounce',
-    type: 'function($event)',
-  }, {
-    description: `Event emitted after the key enter has been pressed.`,
-    name: 'search',
-    type: 'function($event)',
-  }, {
-    description: `The icon used to clear the search input. Defaults to 'cancel' icon.`,
-    name: 'clearIcon?',
-    type: 'string',
-  }, {
-    description: `Event emitted after the clear icon has been clicked.`,
-    name: 'clear',
-    type: 'function($event)',
-  }];
+  searchInputAttrs: Object[] = [
+    {
+      description: `Debounce timeout between keypresses. Defaults to 400.`,
+      name: 'debounce?',
+      type: 'number',
+    },
+    {
+      description: `Placeholder for the underlying input component.`,
+      name: 'placeholder?',
+      type: 'string',
+    },
+    {
+      description: `Sets if the input underline should be visible. Defaults to 'false'.`,
+      name: 'showUnderline?',
+      type: 'boolean',
+    },
+    {
+      description: `Event emitted after the [debounce] timeout.`,
+      name: 'searchDebounce',
+      type: 'function($event)',
+    },
+    {
+      description: `Event emitted after the key enter has been pressed.`,
+      name: 'search',
+      type: 'function($event)',
+    },
+    {
+      description: `The icon used to clear the search input. Defaults to 'cancel' icon.`,
+      name: 'clearIcon?',
+      type: 'string',
+    },
+    {
+      description: `Event emitted after the clear icon has been clicked.`,
+      name: 'clear',
+      type: 'function($event)',
+    },
+  ];
 
   // tslint:disable-next-line: ban-types
-  searchBoxAttrs: Object[] = [{
-    description: `Debounce timeout between keypresses. Defaults to 400.`,
-    name: 'debounce?',
-    type: 'number',
-  }, {
-    description: `Placeholder for the underlying input component.`,
-    name: 'placeholder?',
-    type: 'string',
-  }, {
-    description: `The icon used to close the search toggle, only shown when [alwaysVisible] is false.
+  searchBoxAttrs: Object[] = [
+    {
+      description: `Debounce timeout between keypresses. Defaults to 400.`,
+      name: 'debounce?',
+      type: 'number',
+    },
+    {
+      description: `Placeholder for the underlying input component.`,
+      name: 'placeholder?',
+      type: 'string',
+    },
+    {
+      description: `The icon used to close the search toggle, only shown when [alwaysVisible] is false.
                   Defaults to 'search' icon.`,
-    name: 'backIcon?',
-    type: 'string',
-  }, {
-    description: `The icon used to open/focus the search toggle.
+      name: 'backIcon?',
+      type: 'string',
+    },
+    {
+      description: `The icon used to open/focus the search toggle.
                   Defaults to 'search' icon.`,
-    name: 'searchIcon?',
-    type: 'string',
-  }, {
-    description: `The icon used to clear the search input. Defaults to 'cancel' icon.`,
-    name: 'clearIcon?',
-    type: 'string',
-  }, {
-    description: `Sets if the input underline should be visible. Defaults to 'false'.`,
-    name: 'showUnderline?',
-    type: 'boolean',
-  }, {
-    description: `Sets if the input should always be visible. Defaults to 'false'.`,
-    name: 'alwaysVisible?',
-    type: 'boolean',
-  }, {
-    description: `Event emitted after the [debounce] timeout.`,
-    name: 'searchDebounce',
-    type: 'function($event)',
-  }, {
-    description: `Event emitted after the key enter has been pressed.`,
-    name: 'search',
-    type: 'function($event)',
-  }, {
-    description: `Event emitted after the clear icon has been clicked.`,
-    name: 'clear',
-    type: 'function($event)',
-  }];
+      name: 'searchIcon?',
+      type: 'string',
+    },
+    {
+      description: `The icon used to clear the search input. Defaults to 'cancel' icon.`,
+      name: 'clearIcon?',
+      type: 'string',
+    },
+    {
+      description: `Sets if the input underline should be visible. Defaults to 'false'.`,
+      name: 'showUnderline?',
+      type: 'boolean',
+    },
+    {
+      description: `Sets if the input should always be visible. Defaults to 'false'.`,
+      name: 'alwaysVisible?',
+      type: 'boolean',
+    },
+    {
+      description: `Event emitted after the [debounce] timeout.`,
+      name: 'searchDebounce',
+      type: 'function($event)',
+    },
+    {
+      description: `Event emitted after the key enter has been pressed.`,
+      name: 'search',
+      type: 'function($event)',
+    },
+    {
+      description: `Event emitted after the clear icon has been clicked.`,
+      name: 'clear',
+      type: 'function($event)',
+    },
+  ];
 
   searchInputTerm = '';
   searchBoxTerm = '';
   debounce = 0;
@@ -102,6 +120,5 @@
 
   toggleAlwaysVisible(): void {
     this.alwaysVisible = !this.alwaysVisible;
   }
-
 }

Index: /home/idnes/Projects/awe/src/web/environments/environment.prod.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/environments/environment.prod.ts
+++ /home/idnes/Projects/awe/src/web/environments/environment.prod.ts
@@ -1,3 +1,3 @@
 export const environment = {
-  production: true
+  production: true,
 };

Index: /home/idnes/Projects/awe/src/web/environments/environment.ts
===================================================================
--- /home/idnes/Projects/awe/src/web/environments/environment.ts
+++ /home/idnes/Projects/awe/src/web/environments/environment.ts
@@ -1,3 +1,3 @@
 export const environment = {
-  production: false
+  production: false,
 };

Index: /home/idnes/Projects/awe/src/worker/hard.ts
===================================================================
--- /home/idnes/Projects/awe/src/worker/hard.ts
+++ /home/idnes/Projects/awe/src/worker/hard.ts
@@ -1,93 +1,103 @@
 import Dexie from 'dexie';
 import * as d3Hierarchy from 'd3-hierarchy';
-import { from, defer, of, Observable, SubscriptionLike, concat, Subject } from 'rxjs';
-import { mergeMap, expand, take, map, toArray, startWith, takeUntil } from 'rxjs/operators';
+import {
+  from,
+  defer,
+  of,
+  Observable,
+  SubscriptionLike,
+  concat,
+  Subject,
+} from 'rxjs';
+import {
+  mergeMap,
+  expand,
+  take,
+  map,
+  toArray,
+  startWith,
+  takeUntil,
+} from 'rxjs/operators';
 // import { HttpClient, HttpHandler } from '@angular/common/http';
 // import { ApiService } from '@core/services/api.service';
 
 import { funca } from '@core/data/funca';
 
 const ctx: Worker = self as any;
 
-
-ctx.addEventListener(
-  'message', (event) => {
+ctx.addEventListener('message', event => {
   const closed$: Subject<boolean> = new Subject();
   const calculateTree = () => {
     const action$ = funca(event.data);
-    const subcription$: SubscriptionLike = action$
-    .subscribe(message => {
+    const subcription$: SubscriptionLike = action$.subscribe(message => {
       ctx.postMessage(message);
       // closed$.next(true);
       subcription$.unsubscribe();
       close();
-      }
-    );
+    });
   };
 
   calculateTree();
 
-    // const memberDB = new MemberDB(new WorkerDB());
+  // const memberDB = new MemberDB(new WorkerDB());
 
-    // const myfunc = () => {
-    //   console.log(event.data);
-    //   const root: string = (event.data && event.data.value) ? event.data.value  : '';
-    //   const getChild = (x: string) => memberDB.where('parentMemberId', x)
-    //   .pipe(
-    //     mergeMap((arr) => from(arr).pipe(map(i => {
-    //         return { parentId: i.parentMemberId, id: i.memberId, level: i.level };
-    //     }))),
-    //   );
-    //   const y = (z: any) => {
-    //     // if
-    //     return memberDB.one('memberId', z).pipe(
-    //     map(i => {
-    //       return { parentId: '', id: i.memberId, level: i.level };
-    //     })
-    //     );
-    //   };
-    //   const req = (d: string) => {
-    //     return getChild(d).pipe(
-    //       expand(
-    //         itm => of(itm).pipe(mergeMap(i => getChild(i.id)))
-    //       ),
-    //       // startWith(y(root)),
-    //       // take(500),
-    //       //        toArray()
-    //     );
-    //   };
-    //   const w: SubscriptionLike = req(root).pipe(toArray())
-    //     .subscribe(arr => {
-    //       /* const stratify = d3Hierarchy.stratify();
-    //       const stratified = stratify(arr);
-    //       ctx.postMessage(stratified); */
-    //       ctx.postMessage(arr);
-    //       w.unsubscribe();
-    //       close();
-    //     }
-    //     );
-    // };
+  // const myfunc = () => {
+  //   console.log(event.data);
+  //   const root: string = (event.data && event.data.value) ? event.data.value  : '';
+  //   const getChild = (x: string) => memberDB.where('parentMemberId', x)
+  //   .pipe(
+  //     mergeMap((arr) => from(arr).pipe(map(i => {
+  //         return { parentId: i.parentMemberId, id: i.memberId, level: i.level };
+  //     }))),
+  //   );
+  //   const y = (z: any) => {
+  //     // if
+  //     return memberDB.one('memberId', z).pipe(
+  //     map(i => {
+  //       return { parentId: '', id: i.memberId, level: i.level };
+  //     })
+  //     );
+  //   };
+  //   const req = (d: string) => {
+  //     return getChild(d).pipe(
+  //       expand(
+  //         itm => of(itm).pipe(mergeMap(i => getChild(i.id)))
+  //       ),
+  //       // startWith(y(root)),
+  //       // take(500),
+  //       //        toArray()
+  //     );
+  //   };
+  //   const w: SubscriptionLike = req(root).pipe(toArray())
+  //     .subscribe(arr => {
+  //       /* const stratify = d3Hierarchy.stratify();
+  //       const stratified = stratify(arr);
+  //       ctx.postMessage(stratified); */
+  //       ctx.postMessage(arr);
+  //       w.unsubscribe();
+  //       close();
+  //     }
+  //     );
+  // };
 
-    // const myfunc2 = () => memberDB.cnt(
-    //   event.data.key,
-    //   event.data.value
-    // ).subscribe(x => ctx.postMessage(x));
+  // const myfunc2 = () => memberDB.cnt(
+  //   event.data.key,
+  //   event.data.value
+  // ).subscribe(x => ctx.postMessage(x));
 
-    // // const myfunc3 = () => ((new HttpClient(new Hand())).get('assets/member.json')).subscribe(x => ctx.postMessage(x));
-    // // myfunc3();
-    // // myfunc2();
-    // const myfunc3 = () => {
-    //   // const msg = (new ApiService()).logging(`${event.data}`);
-    //   const msg = event.data;
-    //   console.log(d3Hierarchy);
-    //   console.log(ctx);
-    //   ctx.postMessage(msg);
-    //   close();
-    // };
-    // // myfunc();
-    // funca(event.data, ctx);
+  // // const myfunc3 = () => ((new HttpClient(new Hand())).get('assets/member.json')).subscribe(x => ctx.postMessage(x));
+  // // myfunc3();
+  // // myfunc2();
+  // const myfunc3 = () => {
+  //   // const msg = (new ApiService()).logging(`${event.data}`);
+  //   const msg = event.data;
+  //   console.log(d3Hierarchy);
+  //   console.log(ctx);
+  //   ctx.postMessage(msg);
+  //   close();
+  // };
+  // // myfunc();
+  // funca(event.data, ctx);
+});
 
-  }
-);
-
 export default null as any;

prettier reported errors... run `gts fix` to address.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
