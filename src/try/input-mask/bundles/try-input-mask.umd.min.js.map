{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@try/input-mask/lib/config.ts","ng://@try/input-mask/lib/mask-applier.service.ts","ng://@try/input-mask/lib/mask.service.ts","ng://@try/input-mask/lib/mask.directive.ts","ng://@try/input-mask/lib/mask.pipe.ts","ng://@try/input-mask/lib/mask.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","__read","o","m","ar","error","config","InjectionToken","NEW_CONFIG","INITIAL_CONFIG","initialConfig","sufix","prefix","clearIfNotMatch","showTemplate","showMaskTyped","dropSpecialCharacters","shownMaskExpression","specialCharacters","patterns","0","pattern","RegExp","9","optional","A","S","H","h","MaskApplierService","_config","maskExpression","separator","str","char","decimalChar","precision","x","split","decimals","res","rgx","test","replace","undefined","substr","percentage","Number","getPrecision","Infinity","checkInputPrecision","inputValue","decimalMarker","precisionRegEx","precisionMatch","match","substring","endsWith","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","applyMaskWithPattern","maskAndPattern","_a","mask","customPattern","applyMask","position","cb","shiftStep","cursor","result","multi","slice","inputArray","toString","startsWith","strForSep","includes","indexOf","lastIndexOf","add","inputSymbol","_checkSymbolMask","_findSpecialChar","shift","newPosition","has","find","val","maskSymbol","Injectable","tslib_1.__param","Inject","MaskService","document","_elementRef","_renderer","_this","_super","isNumberValue","maskIsShown","onChange","onTouch","_formElement","nativeElement","__","constructor","create","tslib_1.__extends","showMaskInInput","filter","item","isArray","_removeMask","_removeSufix","_removePrefix","resLen","applyValueChanges","maskedInput","activeElement","clearIfNotMatchFn","Error","formElementProperty","_b","name","setProperty","specialCharactersForRemove","_regExpForRemove","map","join","DOCUMENT","ElementRef","Renderer2","MaskDirective","_maskService","_position","_maskValue","_repeatPatternSymbols","_inputValue","onInput","el","selectionStart","caretShift","selectionEnd","inputType","onBlur","onFocus","keyCode","a","preventDefault","onPaste","MAX_SAFE_INTEGER","writeValue","_arguments","generator","String","P","Promise","resolve","reject","fulfilled","rejected","then","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","maskExp","reduce","accum","currval","index","_start","_end","repeatNumber","tslib_1.__decorate","Input","HostListener","KeyboardEvent","MaskDirective_1","Directive","selector","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MaskPipe","transform","Pipe","pure","MaskModule","forRoot","configValue","ngModule","MaskModule_1","useValue","useFactory","_configFactory","deps","forChild","NgModule","exports","declarations","initConfig"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n    sufix: string;\n    prefix: string;\n    clearIfNotMatch: boolean;\n    showTemplate: boolean;\n    showMaskTyped: boolean;\n    shownMaskExpression: string;\n    dropSpecialCharacters: boolean | string[];\n    specialCharacters: string[];\n    patterns: {\n        [character: string]: {\n            pattern: RegExp,\n            optional?: boolean\n        }\n    };\n}\n\nexport type optionsConfig = Partial<IConfig>;\nexport const config: InjectionToken<string> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n    sufix: '',\n    prefix: '',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    dropSpecialCharacters: true,\n    shownMaskExpression: '',\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\\\"', '\\''],\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true\n        },\n        'A': {\n            pattern: new RegExp('\\[a-zA-Z0-9\\]')\n        },\n        'S': {\n            pattern: new RegExp('\\[a-zA-Z\\]')\n        },\n        'd': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'm': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'H': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'h': {\n            pattern: new RegExp('\\\\d'),\n        },\n        's': {\n            pattern: new RegExp('\\\\d'),\n        }\n    }\n};\n","import { Inject, Injectable } from '@angular/core';\nimport { config, IConfig } from './config';\n\n@Injectable()\nexport class MaskApplierService {\n\n  public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n  public showTemplate: IConfig['showTemplate'];\n  public clearIfNotMatch: IConfig['clearIfNotMatch'];\n  public maskExpression: string = '';\n  public shownMaskExpression: string = '';\n  public maskSpecialCharacters: IConfig['specialCharacters'];\n  public maskAvailablePatterns: IConfig['patterns'];\n  public prefix: IConfig['prefix'];\n  public sufix: IConfig['sufix'];\n  public customPattern: IConfig['patterns'];\n\n  private _shift: Set<number>;\n\n  public constructor(\n    @Inject(config) protected _config: IConfig\n  ) {\n    this._shift = new Set();\n    this.maskSpecialCharacters = this._config!.specialCharacters;\n    this.maskAvailablePatterns = this._config.patterns;\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n    this.maskSpecialCharacters = this._config!.specialCharacters;\n    this.maskAvailablePatterns = this._config.patterns;\n    this.prefix = this._config.prefix;\n    this.sufix = this._config.sufix;\n\n\n  }\n  // tslint:disable-next-line:no-any\n  public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {\n    const [mask, customPattern] = maskAndPattern;\n    this.customPattern = customPattern;\n    return this.applyMask(inputValue, mask);\n  }\n  public applyMask(\n    inputValue: string,\n    maskExpression: string,\n    position: number = 0,\n    cb: Function = () => { }\n  ): string {\n    if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n      return '';\n    }\n    let cursor: number = 0;\n    let result: string = ``;\n    let multi: boolean = false;\n    let shiftStep: number;\n\n    if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n      inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n    }\n\n    const inputArray: string[] = inputValue.toString()\n      .split('');\n    if (maskExpression === 'percent') {\n      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      }\n      if (this.percentage(inputValue)) {\n        result = inputValue;\n      } else {\n        result = inputValue.substring(0, inputValue.length - 1);\n      }\n    } else if (maskExpression === 'separator'\n      || maskExpression === 'dot_separator' || maskExpression.startsWith('dot_separator')\n      || maskExpression === 'coma_separator' || maskExpression.startsWith('coma_separator')) {\n      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:\";<>?\\/]/)) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      }\n      const precision: number = this.getPrecision(maskExpression);\n      let strForSep: string;\n      if (maskExpression === 'separator') {\n        if (inputValue.includes(',')\n          && inputValue.endsWith(',') && inputValue.indexOf(',') !== inputValue.lastIndexOf(',')) {\n          inputValue = inputValue.substring(0, inputValue.length - 1);\n        }\n        if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:.\";<>?\\/]/)) {\n          inputValue = inputValue.substring(0, inputValue.length - 1);\n        }\n        strForSep = inputValue.replace(/\\s/g, '');\n        result = this.separator(strForSep, ' ', '.', precision);\n      } else if (maskExpression === 'dot_separator' || maskExpression.startsWith('dot_separator')) {\n        if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:\\s\";<>?\\/]/)) {\n          inputValue = inputValue.substring(0, inputValue.length - 1);\n        }\n        inputValue = this.checkInputPrecision(inputValue, precision, ',');\n        strForSep = inputValue.replace(/\\./g, '');\n        result = this.separator(strForSep, '.', ',', precision);\n      } else if (maskExpression === 'coma_separator' || maskExpression.startsWith('coma_separator')) {\n        inputValue = this.checkInputPrecision(inputValue, precision, '.');\n        strForSep = inputValue.replace(/\\,/g, '');\n        result = this.separator(strForSep, ',', '.', precision);\n      }\n      position = result.length + 1;\n      cursor = position;\n      shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n        ? inputArray.length\n        : cursor;\n      this._shift.add(shiftStep + this.prefix.length || 0);\n    } else {\n      // tslint:disable-next-line\n      for (let i: number = 0, inputSymbol: string = inputArray[0]; i\n        < inputArray.length; i++ , inputSymbol = inputArray[i]) {\n        if (cursor === maskExpression.length) {\n          break;\n        }\n        if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n          result += inputSymbol;\n          cursor += 2;\n        } else if (\n          maskExpression[cursor + 1] === '*' && multi\n          && this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\n        ) {\n          result += inputSymbol;\n          cursor += 3;\n          multi = false;\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])\n          && maskExpression[cursor + 1]\n          === '*') {\n          result += inputSymbol;\n          multi = true;\n        } else if (maskExpression[cursor + 1] === '?' && this._checkSymbolMask(\n          inputSymbol,\n          maskExpression[cursor + 2]\n        )) {\n          result += inputSymbol;\n          cursor += 3;\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n          if (maskExpression[cursor] === 'H') {\n            if (Number(inputSymbol) > 2) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          } if (maskExpression[cursor] === 'h') {\n            if (result === '2' && Number(inputSymbol) > 3) {\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 'm') {\n            if (Number(inputSymbol) > 5) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 's') {\n            if (Number(inputSymbol) > 5) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 'd') {\n            if (Number(inputSymbol) > 3) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor - 1] === 'd') {\n            if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 31) {\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 'm') {\n            if (Number(inputSymbol) > 1) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor - 1] === 'm') {\n            if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 12) {\n              continue;\n            }\n          }\n          result += inputSymbol;\n          cursor++;\n        } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n          result += maskExpression[cursor];\n          cursor++;\n          shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n            ? inputArray.length\n            : cursor;\n          this._shift.add(shiftStep + this.prefix.length || 0);\n          i--;\n        } else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1\n          && this.maskAvailablePatterns[maskExpression[cursor]]\n          && this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n          cursor++;\n          i--;\n        } else if ((this.maskExpression[cursor + 1] === '*')\n          && (this._findSpecialChar(this.maskExpression[cursor + 2]))\n          && (this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2]) && multi) {\n          cursor += 3;\n          result += inputSymbol;\n        }\n      }\n    }\n    if (result.length + 1 === maskExpression.length\n      && this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n      result += maskExpression[maskExpression.length - 1];\n    }\n\n\n    let shift: number = 1;\n    let newPosition: number = position + 1;\n\n    while (this._shift.has(newPosition)) {\n      shift++;\n      newPosition++;\n    }\n\n    cb(this._shift.has(position) ? shift : 0);\n    let res: string = `${this.prefix}${result}`;\n    res = this.sufix ? `${this.prefix}${result}${this.sufix}` : `${this.prefix}${result}`;\n    if (result.length === 0) {\n      res = `${this.prefix}${result}`;\n    }\n    return res;\n  }\n  public _findSpecialChar(inputSymbol: string): undefined | string {\n    const symbol: string | undefined = this.maskSpecialCharacters\n      .find((val: string) => val === inputSymbol);\n    return symbol;\n  }\n\n  private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n    this.maskAvailablePatterns = this.customPattern\n      ? this.customPattern\n      : this.maskAvailablePatterns;\n    return this.maskAvailablePatterns[maskSymbol]\n      && this.maskAvailablePatterns[maskSymbol].pattern\n      && this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol);\n  }\n\n  private separator = (str: string, char: string, decimalChar: string, precision: number) => {\n    str += '';\n    const x: string[] = str.split(decimalChar);\n    const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n    let res: string = x[0];\n    const rgx: RegExp = /(\\d+)(\\d{3})/;\n    while (rgx.test(res)) {\n      res = res.replace(rgx, '$1' + char + '$2');\n    }\n    if (precision === undefined) {\n      return res + decimals;\n    } else if (precision === 0) {\n      return res;\n    }\n    return res + decimals.substr(0, precision + 1);\n  }\n\n  private percentage = (str: string): boolean => {\n    return Number(str) >= 0 && Number(str) <= 100;\n  }\n\n  private getPrecision = (maskExpression: string): number => {\n    const x: string[] = maskExpression.split('.');\n    if (x.length > 1) {\n      return Number(x[x.length - 1]);\n    }\n    return Infinity;\n  }\n\n  private checkInputPrecision = (inputValue: string, precision: number, decimalMarker: string): string => {\n    if (precision < Infinity) {\n      let precisionRegEx: RegExp;\n\n      if (decimalMarker === '.') {\n        precisionRegEx = new RegExp(`\\\\.\\\\d{${precision}}.*$`);\n      } else {\n        precisionRegEx = new RegExp(`,\\\\d{${precision}}.*$`);\n      }\n\n      const precisionMatch: RegExpMatchArray | null = inputValue.match(precisionRegEx);\n      if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      } else if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      }\n    }\n    return inputValue;\n  }\n}\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\nimport { MaskApplierService } from './mask-applier.service';\n\n@Injectable()\nexport class MaskService extends MaskApplierService {\n  public maskExpression: string = '';\n  public isNumberValue: boolean = false;\n  public showMaskTyped: boolean = false;\n  public maskIsShown: string = '';\n  private _formElement: HTMLInputElement;\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n  public onTouch = () => { };\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    @Inject(config) protected _config: IConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2\n  ) {\n    super(_config);\n    this._formElement = this._elementRef.nativeElement;\n  }\n\n  public applyMask(\n    inputValue: string,\n    maskExpression: string,\n    position: number = 0,\n    cb: Function = () => { }\n  ): string {\n\n    this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n    if (!inputValue && this.showMaskTyped) {\n      return this.prefix + this.maskIsShown;\n    }\n    const result: string = super.applyMask(\n      inputValue,\n      maskExpression,\n      position,\n      cb\n    );\n    if (this.maskExpression === 'dot_separator.2' && this.dropSpecialCharacters === true) {\n      this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== ',');\n    }\n    if ((this.maskExpression === 'coma_separator.2' && this.dropSpecialCharacters === true)) {\n      this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== '.');\n\n    }\n    Array.isArray(this.dropSpecialCharacters)\n      ? this.onChange(this._removeMask(this._removeSufix(this._removePrefix(result)), this.dropSpecialCharacters))\n      : this.dropSpecialCharacters === true\n        ? this.onChange(\n          this.isNumberValue\n            ? Number(this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters))\n            : this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters)\n        )\n        : this.onChange(this._removeSufix(this._removePrefix(result)));\n    let ifMaskIsShown: string = '';\n    if (!this.showMaskTyped) {\n      return result;\n    }\n    const resLen: number = result.length;\n    const prefNmask: string = this.prefix + this.maskIsShown;\n    ifMaskIsShown = prefNmask.slice(resLen);\n    return result + ifMaskIsShown;\n  }\n\n  public applyValueChanges(\n    position: number = 0,\n    cb: Function = () => { }\n  ): void {\n    const maskedInput: string | number = this.applyMask(\n      this._formElement.value,\n      this.maskExpression,\n      position,\n      cb\n    );\n    this._formElement.value = maskedInput;\n    if (this._formElement === this.document.activeElement) {\n      return;\n    }\n    this.clearIfNotMatchFn();\n  }\n\n  public showMaskInInput(): string {\n    if (this.showMaskTyped && !!this.shownMaskExpression) {\n      if (this.maskExpression.length !== this.shownMaskExpression.length) {\n        throw new Error('Mask expression must match mask placeholder length');\n      } else {\n        return this.shownMaskExpression;\n      }\n    } else if (this.showMaskTyped) {\n      return this.maskExpression.replace(/\\w/g, '_');\n    }\n    return '';\n  }\n\n  public clearIfNotMatchFn(): void {\n    if (\n      this.clearIfNotMatch === true &&\n      this.maskExpression.length !== this._formElement.value.length\n    ) {\n      this.formElementProperty = ['value', ''];\n      this.applyMask(this._formElement.value, this.maskExpression);\n    }\n  }\n\n  public set formElementProperty([name, value]: [string, string | boolean]) {\n    this._renderer.setProperty(this._formElement, name, value);\n  }\n\n  private _removeMask(\n    value: string,\n    specialCharactersForRemove: string[]\n  ): string {\n    return value\n      ? value.replace(this._regExpForRemove(specialCharactersForRemove), '')\n      : value;\n  }\n\n  private _removePrefix(value: string): string {\n    if (!this.prefix) {\n      return value;\n    }\n    return value\n      ? value.replace(this.prefix, '')\n      : value;\n  }\n\n  private _removeSufix(value: string): string {\n    if (!this.sufix) {\n      return value;\n    }\n    return value\n      ? value.replace(this.sufix, '')\n      : value;\n  }\n\n  private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\n    return new RegExp(\n      specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'),\n      'gi'\n    );\n  }\n}\n","import {\n  Directive,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { IConfig } from './config';\n\n@Directive({\n  selector: '[mask]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MaskDirective),\n      multi: true\n    },\n    MaskService\n  ]\n})\nexport class MaskDirective implements ControlValueAccessor {\n  private _maskValue: string;\n  private _inputValue: string;\n  private _position: number | null = null;\n  // tslint:disable-next-line\n  private _start: number;\n  private _end: number;\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n  public onTouch = () => { };\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    private _maskService: MaskService\n  ) { }\n\n\n  @Input('mask')\n  public set maskExpression(value: string) {\n    this._maskValue = value || '';\n    if (!this._maskValue) {\n      return;\n    }\n    this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue);\n    this._maskService.formElementProperty = [\n      'value',\n      this._maskService.applyMask(\n        this._inputValue,\n        this._maskService.maskExpression\n      )\n    ];\n  }\n\n  @Input()\n  public set specialCharacters(value: IConfig['specialCharacters']) {\n    if (\n      !value ||\n      !Array.isArray(value) ||\n      (Array.isArray(value) && !value.length)\n    ) {\n      return;\n    }\n    this._maskService.maskSpecialCharacters = value;\n  }\n\n  @Input()\n  public set patterns(value: IConfig['patterns']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.maskAvailablePatterns = value;\n  }\n\n  @Input()\n  public set prefix(value: IConfig['prefix']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.prefix = value;\n  }\n\n  @Input()\n  public set sufix(value: IConfig['sufix']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.sufix = value;\n  }\n\n  @Input()\n  public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\n    this._maskService.dropSpecialCharacters = value;\n  }\n\n  @Input()\n  public set showMaskTyped(value: IConfig['showMaskTyped']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.showMaskTyped = value;\n  }\n\n  @Input()\n  public set shownMaskExpression(value: IConfig['shownMaskExpression']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.shownMaskExpression = value;\n  }\n\n  @Input()\n  public set showTemplate(value: IConfig['showTemplate']) {\n    this._maskService.showTemplate = value;\n  }\n\n  @Input()\n  public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\n    this._maskService.clearIfNotMatch = value;\n  }\n\n  @HostListener('input', ['$event'])\n  public onInput(e: KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    this._inputValue = el.value;\n    if (!this._maskValue) {\n      this.onChange(el.value);\n      return;\n    }\n    const position: number = (el.selectionStart as number) === 1\n      ? (el.selectionStart as number) + this._maskService.prefix.length\n      : el.selectionStart as number;\n    let caretShift = 0;\n    this._maskService.applyValueChanges(\n      position,\n      (shift: number) => (caretShift = shift)\n    );\n    // only set the selection if the element is active\n    if (this.document.activeElement !== el) {\n      return;\n    }\n    el.selectionStart = el.selectionEnd =\n      this._position !== null\n        ? this._position\n        : position +\n        // tslint:disable-next-line\n        ((e as any).inputType === 'deleteContentBackward' ? 0 : caretShift);\n    this._position = null;\n  }\n\n  @HostListener('blur')\n  public onBlur(): void {\n    this._maskService.clearIfNotMatchFn();\n    this.onTouch();\n  }\n\n  @HostListener('click', ['$event'])\n  public onFocus(e: MouseEvent | KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    if (\n      el !== null && el.selectionStart !== null &&\n      el.selectionStart === el.selectionEnd &&\n      el.selectionStart > this._maskService.prefix.length &&\n      // tslint:disable-next-line\n      (e as any).keyCode !== 38\n    ) {\n      return;\n    }\n    if (this._maskService.showMaskTyped) {\n      this._maskService.maskIsShown = this._maskService.showMaskInInput();\n    }\n    el.value = !el.value || el.value === this._maskService.prefix\n      ? this._maskService.prefix + this._maskService.maskIsShown\n      : el.value;\n    /** fix of cursor position with prefix when mouse click occur */\n    if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\n      el.selectionStart = this._maskService.prefix.length;\n      return;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  public a(e: KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    if (e.keyCode === 38) {\n      e.preventDefault();\n    }\n    if (e.keyCode === 37 || e.keyCode === 8) {\n      if ((el.selectionStart as number) <= this._maskService.prefix.length\n        && (el.selectionEnd as number) <= this._maskService.prefix.length) {\n        e.preventDefault();\n      }\n      this.onFocus(e);\n      if (e.keyCode === 8\n        && el.selectionStart === 0\n        && el.selectionEnd === el.value.length) {\n        el.value = this._maskService.prefix;\n        this._position = this._maskService.prefix ? this._maskService.prefix.length : 1;\n        this.onInput(e);\n      }\n    }\n  }\n\n  @HostListener('paste')\n  public onPaste(): void {\n    this._position = Number.MAX_SAFE_INTEGER;\n  }\n\n  /** It writes the value in the input */\n  public async writeValue(inputValue: string): Promise<void> {\n    if (inputValue === undefined) {\n      inputValue = '';\n    }\n    if (typeof inputValue === 'number') {\n      inputValue = String(inputValue);\n      this._maskService.isNumberValue = true;\n    }\n    inputValue && this._maskService.maskExpression ||\n      this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped)\n      ? (this._maskService.formElementProperty = [\n        'value',\n        this._maskService.applyMask(\n          inputValue,\n          this._maskService.maskExpression\n        )\n      ])\n      : (this._maskService.formElementProperty = ['value', inputValue]);\n    this._inputValue = inputValue;\n  }\n\n  // tslint:disable-next-line\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n    this._maskService.onChange = this.onChange;\n  }\n\n  // tslint:disable-next-line\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /** It disables the input element */\n  public setDisabledState(isDisabled: boolean): void {\n    this._maskService.formElementProperty = ['disabled', isDisabled];\n  }\n  private _repeatPatternSymbols(maskExp: string): string {\n    return maskExp.match(/{[0-9]+}/)\n      && maskExp.split('')\n        .reduce((accum: string, currval: string, index: number): string => {\n          this._start = (currval === '{') ? index : this._start;\n\n          if (currval !== '}') {\n            return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n          }\n          this._end = index;\n          const repeatNumber: number = Number(maskExp\n            .slice(this._start + 1, this._end));\n          const repaceWith: string = new Array(repeatNumber + 1)\n            .join(maskExp[this._start - 1]);\n          return accum + repaceWith;\n        }, '') || maskExp;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MaskApplierService } from './mask-applier.service';\nimport { IConfig } from './config';\n\n@Pipe({\n  name: 'mask',\n  pure: true\n})\nexport class MaskPipe implements PipeTransform {\n\n  public constructor(private _maskService: MaskApplierService) { }\n\n  public transform(value: string|number, mask: string | [string, IConfig['patterns']]): string {\n    if (!value) {\n      return '';\n    }\n    if (typeof mask === 'string') {\n      return this._maskService.applyMask(`${value}`, mask);\n    }\n    return this._maskService.applyMaskWithPattern(`${value}`, mask);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\nimport { MaskApplierService } from './mask-applier.service';\nimport { MaskDirective } from './mask.directive';\nimport { MaskPipe } from './mask.pipe';\n\n@NgModule({\n  providers: [MaskApplierService],\n  exports: [MaskDirective, MaskPipe],\n  declarations: [MaskDirective, MaskPipe]\n})\nexport class MaskModule {\n\n  public static forRoot(configValue?: optionsConfig): ModuleWithProviders {\n    return {\n      ngModule: MaskModule,\n      providers: [\n        {\n          provide: NEW_CONFIG,\n          useValue: configValue\n        },\n        {\n          provide: INITIAL_CONFIG,\n          useValue: initialConfig\n        },\n        {\n          provide: config,\n          useFactory: _configFactory,\n          deps: [INITIAL_CONFIG, NEW_CONFIG]\n        },\n      ]\n    };\n  }\n  public static forChild(configValue?: optionsConfig): ModuleWithProviders {\n    return {\n      ngModule: MaskModule,\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function _configFactory\n  (initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {\n  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };\n}\n"]}