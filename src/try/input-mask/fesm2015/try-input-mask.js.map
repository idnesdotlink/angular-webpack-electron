{"version":3,"file":"try-input-mask.js","sources":["ng://@try/input-mask/lib/config.ts","ng://@try/input-mask/lib/mask-applier.service.ts","ng://@try/input-mask/lib/mask.service.ts","ng://@try/input-mask/lib/mask.directive.ts","ng://@try/input-mask/lib/mask.pipe.ts","ng://@try/input-mask/lib/mask.module.ts","ng://@try/input-mask/try-input-mask.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n    sufix: string;\n    prefix: string;\n    clearIfNotMatch: boolean;\n    showTemplate: boolean;\n    showMaskTyped: boolean;\n    shownMaskExpression: string;\n    dropSpecialCharacters: boolean | string[];\n    specialCharacters: string[];\n    patterns: {\n        [character: string]: {\n            pattern: RegExp,\n            optional?: boolean\n        }\n    };\n}\n\nexport type optionsConfig = Partial<IConfig>;\nexport const config: InjectionToken<string> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n    sufix: '',\n    prefix: '',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    dropSpecialCharacters: true,\n    shownMaskExpression: '',\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\\\"', '\\''],\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true\n        },\n        'A': {\n            pattern: new RegExp('\\[a-zA-Z0-9\\]')\n        },\n        'S': {\n            pattern: new RegExp('\\[a-zA-Z\\]')\n        },\n        'd': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'm': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'H': {\n            pattern: new RegExp('\\\\d'),\n        },\n        'h': {\n            pattern: new RegExp('\\\\d'),\n        },\n        's': {\n            pattern: new RegExp('\\\\d'),\n        }\n    }\n};\n","import { Inject, Injectable } from '@angular/core';\nimport { config, IConfig } from './config';\n\n@Injectable()\nexport class MaskApplierService {\n\n  public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n  public showTemplate: IConfig['showTemplate'];\n  public clearIfNotMatch: IConfig['clearIfNotMatch'];\n  public maskExpression: string = '';\n  public shownMaskExpression: string = '';\n  public maskSpecialCharacters: IConfig['specialCharacters'];\n  public maskAvailablePatterns: IConfig['patterns'];\n  public prefix: IConfig['prefix'];\n  public sufix: IConfig['sufix'];\n  public customPattern: IConfig['patterns'];\n\n  private _shift: Set<number>;\n\n  public constructor(\n    @Inject(config) protected _config: IConfig\n  ) {\n    this._shift = new Set();\n    this.maskSpecialCharacters = this._config!.specialCharacters;\n    this.maskAvailablePatterns = this._config.patterns;\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n    this.maskSpecialCharacters = this._config!.specialCharacters;\n    this.maskAvailablePatterns = this._config.patterns;\n    this.prefix = this._config.prefix;\n    this.sufix = this._config.sufix;\n\n\n  }\n  // tslint:disable-next-line:no-any\n  public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {\n    const [mask, customPattern] = maskAndPattern;\n    this.customPattern = customPattern;\n    return this.applyMask(inputValue, mask);\n  }\n  public applyMask(\n    inputValue: string,\n    maskExpression: string,\n    position: number = 0,\n    cb: Function = () => { }\n  ): string {\n    if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n      return '';\n    }\n    let cursor: number = 0;\n    let result: string = ``;\n    let multi: boolean = false;\n    let shiftStep: number;\n\n    if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n      inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n    }\n\n    const inputArray: string[] = inputValue.toString()\n      .split('');\n    if (maskExpression === 'percent') {\n      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      }\n      if (this.percentage(inputValue)) {\n        result = inputValue;\n      } else {\n        result = inputValue.substring(0, inputValue.length - 1);\n      }\n    } else if (maskExpression === 'separator'\n      || maskExpression === 'dot_separator' || maskExpression.startsWith('dot_separator')\n      || maskExpression === 'coma_separator' || maskExpression.startsWith('coma_separator')) {\n      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:\";<>?\\/]/)) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      }\n      const precision: number = this.getPrecision(maskExpression);\n      let strForSep: string;\n      if (maskExpression === 'separator') {\n        if (inputValue.includes(',')\n          && inputValue.endsWith(',') && inputValue.indexOf(',') !== inputValue.lastIndexOf(',')) {\n          inputValue = inputValue.substring(0, inputValue.length - 1);\n        }\n        if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:.\";<>?\\/]/)) {\n          inputValue = inputValue.substring(0, inputValue.length - 1);\n        }\n        strForSep = inputValue.replace(/\\s/g, '');\n        result = this.separator(strForSep, ' ', '.', precision);\n      } else if (maskExpression === 'dot_separator' || maskExpression.startsWith('dot_separator')) {\n        if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:\\s\";<>?\\/]/)) {\n          inputValue = inputValue.substring(0, inputValue.length - 1);\n        }\n        inputValue = this.checkInputPrecision(inputValue, precision, ',');\n        strForSep = inputValue.replace(/\\./g, '');\n        result = this.separator(strForSep, '.', ',', precision);\n      } else if (maskExpression === 'coma_separator' || maskExpression.startsWith('coma_separator')) {\n        inputValue = this.checkInputPrecision(inputValue, precision, '.');\n        strForSep = inputValue.replace(/\\,/g, '');\n        result = this.separator(strForSep, ',', '.', precision);\n      }\n      position = result.length + 1;\n      cursor = position;\n      shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n        ? inputArray.length\n        : cursor;\n      this._shift.add(shiftStep + this.prefix.length || 0);\n    } else {\n      // tslint:disable-next-line\n      for (let i: number = 0, inputSymbol: string = inputArray[0]; i\n        < inputArray.length; i++ , inputSymbol = inputArray[i]) {\n        if (cursor === maskExpression.length) {\n          break;\n        }\n        if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n          result += inputSymbol;\n          cursor += 2;\n        } else if (\n          maskExpression[cursor + 1] === '*' && multi\n          && this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\n        ) {\n          result += inputSymbol;\n          cursor += 3;\n          multi = false;\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])\n          && maskExpression[cursor + 1]\n          === '*') {\n          result += inputSymbol;\n          multi = true;\n        } else if (maskExpression[cursor + 1] === '?' && this._checkSymbolMask(\n          inputSymbol,\n          maskExpression[cursor + 2]\n        )) {\n          result += inputSymbol;\n          cursor += 3;\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n          if (maskExpression[cursor] === 'H') {\n            if (Number(inputSymbol) > 2) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          } if (maskExpression[cursor] === 'h') {\n            if (result === '2' && Number(inputSymbol) > 3) {\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 'm') {\n            if (Number(inputSymbol) > 5) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 's') {\n            if (Number(inputSymbol) > 5) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 'd') {\n            if (Number(inputSymbol) > 3) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor - 1] === 'd') {\n            if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 31) {\n              continue;\n            }\n          }\n          if (maskExpression[cursor] === 'm') {\n            if (Number(inputSymbol) > 1) {\n              result += 0;\n              cursor += 1;\n              shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                ? inputArray.length\n                : cursor;\n              this._shift.add(shiftStep + this.prefix.length || 0);\n              i--;\n              continue;\n            }\n          }\n          if (maskExpression[cursor - 1] === 'm') {\n            if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 12) {\n              continue;\n            }\n          }\n          result += inputSymbol;\n          cursor++;\n        } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n          result += maskExpression[cursor];\n          cursor++;\n          shiftStep = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n            ? inputArray.length\n            : cursor;\n          this._shift.add(shiftStep + this.prefix.length || 0);\n          i--;\n        } else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1\n          && this.maskAvailablePatterns[maskExpression[cursor]]\n          && this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n          cursor++;\n          i--;\n        } else if ((this.maskExpression[cursor + 1] === '*')\n          && (this._findSpecialChar(this.maskExpression[cursor + 2]))\n          && (this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2]) && multi) {\n          cursor += 3;\n          result += inputSymbol;\n        }\n      }\n    }\n    if (result.length + 1 === maskExpression.length\n      && this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n      result += maskExpression[maskExpression.length - 1];\n    }\n\n\n    let shift: number = 1;\n    let newPosition: number = position + 1;\n\n    while (this._shift.has(newPosition)) {\n      shift++;\n      newPosition++;\n    }\n\n    cb(this._shift.has(position) ? shift : 0);\n    let res: string = `${this.prefix}${result}`;\n    res = this.sufix ? `${this.prefix}${result}${this.sufix}` : `${this.prefix}${result}`;\n    if (result.length === 0) {\n      res = `${this.prefix}${result}`;\n    }\n    return res;\n  }\n  public _findSpecialChar(inputSymbol: string): undefined | string {\n    const symbol: string | undefined = this.maskSpecialCharacters\n      .find((val: string) => val === inputSymbol);\n    return symbol;\n  }\n\n  private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n    this.maskAvailablePatterns = this.customPattern\n      ? this.customPattern\n      : this.maskAvailablePatterns;\n    return this.maskAvailablePatterns[maskSymbol]\n      && this.maskAvailablePatterns[maskSymbol].pattern\n      && this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol);\n  }\n\n  private separator = (str: string, char: string, decimalChar: string, precision: number) => {\n    str += '';\n    const x: string[] = str.split(decimalChar);\n    const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n    let res: string = x[0];\n    const rgx: RegExp = /(\\d+)(\\d{3})/;\n    while (rgx.test(res)) {\n      res = res.replace(rgx, '$1' + char + '$2');\n    }\n    if (precision === undefined) {\n      return res + decimals;\n    } else if (precision === 0) {\n      return res;\n    }\n    return res + decimals.substr(0, precision + 1);\n  }\n\n  private percentage = (str: string): boolean => {\n    return Number(str) >= 0 && Number(str) <= 100;\n  }\n\n  private getPrecision = (maskExpression: string): number => {\n    const x: string[] = maskExpression.split('.');\n    if (x.length > 1) {\n      return Number(x[x.length - 1]);\n    }\n    return Infinity;\n  }\n\n  private checkInputPrecision = (inputValue: string, precision: number, decimalMarker: string): string => {\n    if (precision < Infinity) {\n      let precisionRegEx: RegExp;\n\n      if (decimalMarker === '.') {\n        precisionRegEx = new RegExp(`\\\\.\\\\d{${precision}}.*$`);\n      } else {\n        precisionRegEx = new RegExp(`,\\\\d{${precision}}.*$`);\n      }\n\n      const precisionMatch: RegExpMatchArray | null = inputValue.match(precisionRegEx);\n      if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      } else if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n        inputValue = inputValue.substring(0, inputValue.length - 1);\n      }\n    }\n    return inputValue;\n  }\n}\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\nimport { MaskApplierService } from './mask-applier.service';\n\n@Injectable()\nexport class MaskService extends MaskApplierService {\n  public maskExpression: string = '';\n  public isNumberValue: boolean = false;\n  public showMaskTyped: boolean = false;\n  public maskIsShown: string = '';\n  private _formElement: HTMLInputElement;\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n  public onTouch = () => { };\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    @Inject(config) protected _config: IConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2\n  ) {\n    super(_config);\n    this._formElement = this._elementRef.nativeElement;\n  }\n\n  public applyMask(\n    inputValue: string,\n    maskExpression: string,\n    position: number = 0,\n    cb: Function = () => { }\n  ): string {\n\n    this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n    if (!inputValue && this.showMaskTyped) {\n      return this.prefix + this.maskIsShown;\n    }\n    const result: string = super.applyMask(\n      inputValue,\n      maskExpression,\n      position,\n      cb\n    );\n    if (this.maskExpression === 'dot_separator.2' && this.dropSpecialCharacters === true) {\n      this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== ',');\n    }\n    if ((this.maskExpression === 'coma_separator.2' && this.dropSpecialCharacters === true)) {\n      this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== '.');\n\n    }\n    Array.isArray(this.dropSpecialCharacters)\n      ? this.onChange(this._removeMask(this._removeSufix(this._removePrefix(result)), this.dropSpecialCharacters))\n      : this.dropSpecialCharacters === true\n        ? this.onChange(\n          this.isNumberValue\n            ? Number(this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters))\n            : this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters)\n        )\n        : this.onChange(this._removeSufix(this._removePrefix(result)));\n    let ifMaskIsShown: string = '';\n    if (!this.showMaskTyped) {\n      return result;\n    }\n    const resLen: number = result.length;\n    const prefNmask: string = this.prefix + this.maskIsShown;\n    ifMaskIsShown = prefNmask.slice(resLen);\n    return result + ifMaskIsShown;\n  }\n\n  public applyValueChanges(\n    position: number = 0,\n    cb: Function = () => { }\n  ): void {\n    const maskedInput: string | number = this.applyMask(\n      this._formElement.value,\n      this.maskExpression,\n      position,\n      cb\n    );\n    this._formElement.value = maskedInput;\n    if (this._formElement === this.document.activeElement) {\n      return;\n    }\n    this.clearIfNotMatchFn();\n  }\n\n  public showMaskInInput(): string {\n    if (this.showMaskTyped && !!this.shownMaskExpression) {\n      if (this.maskExpression.length !== this.shownMaskExpression.length) {\n        throw new Error('Mask expression must match mask placeholder length');\n      } else {\n        return this.shownMaskExpression;\n      }\n    } else if (this.showMaskTyped) {\n      return this.maskExpression.replace(/\\w/g, '_');\n    }\n    return '';\n  }\n\n  public clearIfNotMatchFn(): void {\n    if (\n      this.clearIfNotMatch === true &&\n      this.maskExpression.length !== this._formElement.value.length\n    ) {\n      this.formElementProperty = ['value', ''];\n      this.applyMask(this._formElement.value, this.maskExpression);\n    }\n  }\n\n  public set formElementProperty([name, value]: [string, string | boolean]) {\n    this._renderer.setProperty(this._formElement, name, value);\n  }\n\n  private _removeMask(\n    value: string,\n    specialCharactersForRemove: string[]\n  ): string {\n    return value\n      ? value.replace(this._regExpForRemove(specialCharactersForRemove), '')\n      : value;\n  }\n\n  private _removePrefix(value: string): string {\n    if (!this.prefix) {\n      return value;\n    }\n    return value\n      ? value.replace(this.prefix, '')\n      : value;\n  }\n\n  private _removeSufix(value: string): string {\n    if (!this.sufix) {\n      return value;\n    }\n    return value\n      ? value.replace(this.sufix, '')\n      : value;\n  }\n\n  private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\n    return new RegExp(\n      specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'),\n      'gi'\n    );\n  }\n}\n","import {\n  Directive,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { IConfig } from './config';\n\n@Directive({\n  selector: '[mask]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MaskDirective),\n      multi: true\n    },\n    MaskService\n  ]\n})\nexport class MaskDirective implements ControlValueAccessor {\n  private _maskValue: string;\n  private _inputValue: string;\n  private _position: number | null = null;\n  // tslint:disable-next-line\n  private _start: number;\n  private _end: number;\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n  public onTouch = () => { };\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    private _maskService: MaskService\n  ) { }\n\n\n  @Input('mask')\n  public set maskExpression(value: string) {\n    this._maskValue = value || '';\n    if (!this._maskValue) {\n      return;\n    }\n    this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue);\n    this._maskService.formElementProperty = [\n      'value',\n      this._maskService.applyMask(\n        this._inputValue,\n        this._maskService.maskExpression\n      )\n    ];\n  }\n\n  @Input()\n  public set specialCharacters(value: IConfig['specialCharacters']) {\n    if (\n      !value ||\n      !Array.isArray(value) ||\n      (Array.isArray(value) && !value.length)\n    ) {\n      return;\n    }\n    this._maskService.maskSpecialCharacters = value;\n  }\n\n  @Input()\n  public set patterns(value: IConfig['patterns']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.maskAvailablePatterns = value;\n  }\n\n  @Input()\n  public set prefix(value: IConfig['prefix']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.prefix = value;\n  }\n\n  @Input()\n  public set sufix(value: IConfig['sufix']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.sufix = value;\n  }\n\n  @Input()\n  public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\n    this._maskService.dropSpecialCharacters = value;\n  }\n\n  @Input()\n  public set showMaskTyped(value: IConfig['showMaskTyped']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.showMaskTyped = value;\n  }\n\n  @Input()\n  public set shownMaskExpression(value: IConfig['shownMaskExpression']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.shownMaskExpression = value;\n  }\n\n  @Input()\n  public set showTemplate(value: IConfig['showTemplate']) {\n    this._maskService.showTemplate = value;\n  }\n\n  @Input()\n  public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\n    this._maskService.clearIfNotMatch = value;\n  }\n\n  @HostListener('input', ['$event'])\n  public onInput(e: KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    this._inputValue = el.value;\n    if (!this._maskValue) {\n      this.onChange(el.value);\n      return;\n    }\n    const position: number = (el.selectionStart as number) === 1\n      ? (el.selectionStart as number) + this._maskService.prefix.length\n      : el.selectionStart as number;\n    let caretShift = 0;\n    this._maskService.applyValueChanges(\n      position,\n      (shift: number) => (caretShift = shift)\n    );\n    // only set the selection if the element is active\n    if (this.document.activeElement !== el) {\n      return;\n    }\n    el.selectionStart = el.selectionEnd =\n      this._position !== null\n        ? this._position\n        : position +\n        // tslint:disable-next-line\n        ((e as any).inputType === 'deleteContentBackward' ? 0 : caretShift);\n    this._position = null;\n  }\n\n  @HostListener('blur')\n  public onBlur(): void {\n    this._maskService.clearIfNotMatchFn();\n    this.onTouch();\n  }\n\n  @HostListener('click', ['$event'])\n  public onFocus(e: MouseEvent | KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    if (\n      el !== null && el.selectionStart !== null &&\n      el.selectionStart === el.selectionEnd &&\n      el.selectionStart > this._maskService.prefix.length &&\n      // tslint:disable-next-line\n      (e as any).keyCode !== 38\n    ) {\n      return;\n    }\n    if (this._maskService.showMaskTyped) {\n      this._maskService.maskIsShown = this._maskService.showMaskInInput();\n    }\n    el.value = !el.value || el.value === this._maskService.prefix\n      ? this._maskService.prefix + this._maskService.maskIsShown\n      : el.value;\n    /** fix of cursor position with prefix when mouse click occur */\n    if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\n      el.selectionStart = this._maskService.prefix.length;\n      return;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  public a(e: KeyboardEvent): void {\n    const el: HTMLInputElement = e.target as HTMLInputElement;\n    if (e.keyCode === 38) {\n      e.preventDefault();\n    }\n    if (e.keyCode === 37 || e.keyCode === 8) {\n      if ((el.selectionStart as number) <= this._maskService.prefix.length\n        && (el.selectionEnd as number) <= this._maskService.prefix.length) {\n        e.preventDefault();\n      }\n      this.onFocus(e);\n      if (e.keyCode === 8\n        && el.selectionStart === 0\n        && el.selectionEnd === el.value.length) {\n        el.value = this._maskService.prefix;\n        this._position = this._maskService.prefix ? this._maskService.prefix.length : 1;\n        this.onInput(e);\n      }\n    }\n  }\n\n  @HostListener('paste')\n  public onPaste(): void {\n    this._position = Number.MAX_SAFE_INTEGER;\n  }\n\n  /** It writes the value in the input */\n  public async writeValue(inputValue: string): Promise<void> {\n    if (inputValue === undefined) {\n      inputValue = '';\n    }\n    if (typeof inputValue === 'number') {\n      inputValue = String(inputValue);\n      this._maskService.isNumberValue = true;\n    }\n    inputValue && this._maskService.maskExpression ||\n      this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped)\n      ? (this._maskService.formElementProperty = [\n        'value',\n        this._maskService.applyMask(\n          inputValue,\n          this._maskService.maskExpression\n        )\n      ])\n      : (this._maskService.formElementProperty = ['value', inputValue]);\n    this._inputValue = inputValue;\n  }\n\n  // tslint:disable-next-line\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n    this._maskService.onChange = this.onChange;\n  }\n\n  // tslint:disable-next-line\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /** It disables the input element */\n  public setDisabledState(isDisabled: boolean): void {\n    this._maskService.formElementProperty = ['disabled', isDisabled];\n  }\n  private _repeatPatternSymbols(maskExp: string): string {\n    return maskExp.match(/{[0-9]+}/)\n      && maskExp.split('')\n        .reduce((accum: string, currval: string, index: number): string => {\n          this._start = (currval === '{') ? index : this._start;\n\n          if (currval !== '}') {\n            return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n          }\n          this._end = index;\n          const repeatNumber: number = Number(maskExp\n            .slice(this._start + 1, this._end));\n          const repaceWith: string = new Array(repeatNumber + 1)\n            .join(maskExp[this._start - 1]);\n          return accum + repaceWith;\n        }, '') || maskExp;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MaskApplierService } from './mask-applier.service';\nimport { IConfig } from './config';\n\n@Pipe({\n  name: 'mask',\n  pure: true\n})\nexport class MaskPipe implements PipeTransform {\n\n  public constructor(private _maskService: MaskApplierService) { }\n\n  public transform(value: string|number, mask: string | [string, IConfig['patterns']]): string {\n    if (!value) {\n      return '';\n    }\n    if (typeof mask === 'string') {\n      return this._maskService.applyMask(`${value}`, mask);\n    }\n    return this._maskService.applyMaskWithPattern(`${value}`, mask);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\nimport { MaskApplierService } from './mask-applier.service';\nimport { MaskDirective } from './mask.directive';\nimport { MaskPipe } from './mask.pipe';\n\n@NgModule({\n  providers: [MaskApplierService],\n  exports: [MaskDirective, MaskPipe],\n  declarations: [MaskDirective, MaskPipe]\n})\nexport class MaskModule {\n\n  public static forRoot(configValue?: optionsConfig): ModuleWithProviders {\n    return {\n      ngModule: MaskModule,\n      providers: [\n        {\n          provide: NEW_CONFIG,\n          useValue: configValue\n        },\n        {\n          provide: INITIAL_CONFIG,\n          useValue: initialConfig\n        },\n        {\n          provide: config,\n          useFactory: _configFactory,\n          deps: [INITIAL_CONFIG, NEW_CONFIG]\n        },\n      ]\n    };\n  }\n  public static forChild(configValue?: optionsConfig): ModuleWithProviders {\n    return {\n      ngModule: MaskModule,\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function _configFactory\n  (initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {\n  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {IConfig as Éµa,INITIAL_CONFIG as Éµd,NEW_CONFIG as Éµc,config as Éµb,initialConfig as Éµe} from './lib/config';"],"names":["tslib_1.__param","tslib_1.__decorate"],"mappings":"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"}