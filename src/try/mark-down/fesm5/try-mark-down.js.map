{"version":3,"file":"try-mark-down.js","sources":["ng://@try/mark-down/lib/language.pipe.ts","ng://@try/mark-down/lib/marked-options.ts","ng://@try/mark-down/lib/marked-renderer.ts","ng://@try/mark-down/lib/markdown.service.ts","ng://@try/mark-down/lib/prism-plugin.ts","ng://@try/mark-down/lib/markdown.component.ts","ng://@try/mark-down/lib/markdown.pipe.ts","ng://@try/mark-down/lib/markdown.module.ts","ng://@try/mark-down/try-mark-down.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'language',\n})\nexport class LanguagePipe implements PipeTransform {\n\n  transform(value: string, language: string): string {\n    if (typeof value !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid value type [${value}]`);\n      return value;\n    }\n    if (typeof language !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${language}]`);\n      return value;\n    }\n    return '```' + language + '\\n' +  value + '\\n```';\n  }\n}\n","import { Renderer } from 'marked';\n\nexport class MarkedOptions implements marked.MarkedOptions {\n  /**\n   * A prefix URL for any relative link.\n   */\n  baseUrl?: string;\n\n  /**\n   * Enable GFM line breaks. This option requires the gfm option to be true.\n   */\n  breaks?: boolean;\n\n  /**\n   * Enable GitHub flavored markdown.\n   */\n  gfm?: boolean;\n\n  /**\n   * Include an id attribute when emitting headings.\n   */\n  headerIds?: boolean;\n\n  /**\n   * Set the prefix for header tag ids.\n   */\n  headerPrefix?: string;\n\n  /**\n   * Set the prefix for code block classes.\n   */\n  langPrefix?: string;\n\n  /**\n   * Mangle autolinks (<email@domain.com>).\n   */\n  mangle?: boolean;\n\n  /**\n   * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.\n   */\n  pedantic?: boolean;\n\n  /**\n   * Type: object Default: new Renderer()\n   *\n   * An object containing functions to render tokens to HTML.\n   */\n  renderer?: Renderer;\n\n  /**\n   * Sanitize the output. Ignore any HTML that has been input.\n   */\n  sanitize?: boolean;\n\n  /**\n   * Shows an HTML error message when rendering fails.\n   */\n  silent?: boolean;\n\n  /**\n   * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.\n   */\n  smartLists?: boolean;\n\n  /**\n   * Use \"smart\" typograhic punctuation for things like quotes and dashes.\n   */\n  smartypants?: boolean;\n\n  /**\n   * Enable GFM tables. This option requires the gfm option to be true.\n   */\n  tables?: boolean;\n\n  /**\n   * Generate closing slash for self-closing tags (<br/> instead of <br>)\n   */\n  xhtml?: boolean;\n\n  /**\n   * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.\n   */\n  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;\n\n  /**\n   * Optionally sanitize found HTML with a sanitizer function.\n   */\n  sanitizer?(html: string): string;\n}\n","import { Renderer } from 'marked';\n\nexport class MarkedRenderer extends Renderer { }\n","import { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional, PLATFORM_ID, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { parse } from 'marked';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { MarkedOptions } from './marked-options';\nimport { MarkedRenderer } from './marked-renderer';\n\ndeclare var Prism: {\n  highlightAll: (async: boolean) => void;\n  highlightAllUnder: (element: Element) => void;\n};\n\n// tslint:disable-next-line:max-line-length\nexport const errorSrcWithoutHttpClient = '[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n\n@Injectable()\nexport class MarkdownService {\n  // tslint:disable-next-line: variable-name\n  private _options: MarkedOptions;\n\n  get options(): MarkedOptions { return this._options; }\n  set options(value: MarkedOptions) {\n    this._options = Object.assign({},\n      { renderer: new MarkedRenderer() },\n      this._options,\n      value,\n    );\n  }\n\n  get renderer(): MarkedRenderer { return this.options.renderer; }\n  set renderer(value: MarkedRenderer) {\n    this.options.renderer = value;\n  }\n\n  constructor(\n    // tslint:disable-next-line: ban-types\n    @Inject(PLATFORM_ID) private platform: Object,\n    @Optional() private http: HttpClient,\n    private domSanitizer: DomSanitizer,\n    options: MarkedOptions,\n  ) {\n    this.options = options;\n  }\n\n  compile(markdown: string, decodeHtml = false, markedOptions = this.options): string {\n    const precompiled = this.precompile(markdown);\n    const compiled = parse(\n      decodeHtml ? this.decodeHtml(precompiled) : precompiled,\n      markedOptions);\n    return markedOptions.sanitize && !markedOptions.sanitizer\n      ? this.domSanitizer.sanitize(SecurityContext.HTML, compiled)\n      : compiled;\n  }\n\n  getSource(src: string): Observable<string> {\n    if (!this.http) {\n      throw new Error(errorSrcWithoutHttpClient);\n    }\n    return this.http\n      .get(src, { responseType: 'text' })\n      .pipe(map(markdown => this.handleExtension(src, markdown)));\n  }\n\n  highlight(element?: Element) {\n    if (isPlatformBrowser(this.platform) && typeof Prism !== 'undefined') {\n      if (element) {\n        Prism.highlightAllUnder(element);\n      } else {\n        Prism.highlightAll(false);\n      }\n    }\n  }\n\n  private decodeHtml(html: string) {\n    if (isPlatformBrowser(this.platform)) {\n      const textarea = document.createElement('textarea');\n      textarea.innerHTML = html;\n      return textarea.value;\n    }\n    return html;\n  }\n\n  private handleExtension(src: string, markdown: string): string {\n    const extension = src\n      ? src.split('?')[0].split('.').splice(-1).join()\n      : null;\n    return extension !== 'md'\n      ? '```' + extension + '\\n' + markdown + '\\n```'\n      : markdown;\n  }\n\n  private precompile(markdown: string): string {\n    if (!markdown) {\n      return '';\n    }\n    let indentStart: number;\n    return markdown\n      .split('\\n')\n      .map(line => {\n        // set current line ident start to base reference indentation\n        let lineIdentStart = indentStart;\n        // find position of 1st non-whitespace character\n        // to determine the current line indentation start\n        if (line.length > 0) {\n          lineIdentStart = isNaN(lineIdentStart)\n            ? line.search(/\\S|$/)\n            : Math.min(line.search(/\\S|$/), lineIdentStart);\n        }\n        // keep 1st non-whitespace line indentation\n        // as base reference for other lines\n        if (isNaN(indentStart)) {\n          indentStart = lineIdentStart;\n        }\n        // remove whitespaces before current line indentation\n        return !!lineIdentStart\n          ? line.substring(lineIdentStart)\n          : line;\n      }).join('\\n');\n  }\n}\n","export enum PrismPlugin {\n  LineHighlight = 'line-highlight',\n  LineNumbers = 'line-numbers',\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { MarkdownService } from './markdown.service';\nimport { PrismPlugin } from './prism-plugin';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'markdown, [markdown]',\n  template: '<ng-content></ng-content>',\n})\nexport class MarkdownComponent implements OnChanges, AfterViewInit {\n  @Input() data: string;\n  @Input() src: string;\n\n  // Plugin - lineNumbers\n  @Input()\n  get lineNumbers(): boolean { return this._lineNumbers; }\n  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }\n  @Input() start: number;\n\n  // Plugin - lineHighlight\n  @Input()\n  get lineHighlight(): boolean { return this._lineHighlight; }\n  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }\n  @Input() line: string | string[];\n  @Input() lineOffset: number;\n\n  @Output() error = new EventEmitter<string>();\n  @Output() load = new EventEmitter<string>();\n\n  private _lineHighlight = false;\n  private _lineNumbers = false;\n\n  constructor(\n    public element: ElementRef<HTMLElement>,\n    public markdownService: MarkdownService,\n  ) { }\n\n  ngOnChanges() {\n    if (this.data) {\n      this.handleData();\n      return;\n    }\n    if (this.src) {\n      this.handleSrc();\n      return;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this.data && !this.src) {\n      this.handleTransclusion();\n    }\n  }\n\n  render(markdown: string, decodeHtml = false) {\n    this.element.nativeElement.innerHTML = this.markdownService.compile(markdown, decodeHtml);\n    this.handlePlugins();\n    this.markdownService.highlight(this.element.nativeElement);\n  }\n\n  private coerceBooleanProperty(value: boolean): boolean {\n    return value != null && `${value}` !== 'false';\n  }\n\n  private handleData() {\n    this.render(this.data);\n  }\n\n  private handleSrc() {\n    this.markdownService\n      .getSource(this.src)\n      .subscribe(\n        markdown => {\n          this.render(markdown);\n          this.load.emit(markdown);\n        },\n        error => this.error.emit(error),\n      );\n  }\n\n  private handleTransclusion() {\n    this.render(this.element.nativeElement.innerHTML, true);\n  }\n\n  private handlePlugins() {\n    if (this.lineHighlight) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineHighlight);\n      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\n    }\n    if (this.lineNumbers) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\n    }\n  }\n\n  private setPluginClass(element: HTMLElement, plugin: string | string[]) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const classes = plugin instanceof Array ? plugin : [plugin];\n      preElements.item(i).classList.add(...classes);\n    }\n  }\n\n  private setPluginOptions(element: HTMLElement, options: object) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      Object.keys(options).forEach(option => {\n        const attributeValue = options[option];\n        if (!!attributeValue) {\n          const attributeName = this.toLispCase(option);\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n        }\n      });\n    }\n  }\n\n  private toLispCase(value: string) {\n    const upperChars = value.match(/([A-Z])/g);\n    if (!upperChars) {\n      return value;\n    }\n    let str = value.toString();\n    for (let i = 0, n = upperChars.length; i < n; i++) {\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n    }\n    if (str.slice(0, 1) === '-') {\n      str = str.slice(1);\n    }\n    return str;\n  }\n}\n","import { ElementRef, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { MarkdownService } from './markdown.service';\n\n@Pipe({\n  name: 'markdown',\n})\nexport class MarkdownPipe implements PipeTransform {\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private markdownService: MarkdownService,\n    private zone: NgZone,\n  ) { }\n\n  transform(value: string): string {\n    if (value == null) {\n      return '';\n    }\n\n    if (typeof value !== 'string') {\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${value}]`);\n      return value;\n    }\n\n    const markdown = this.markdownService.compile(value);\n\n    this.zone.onStable\n      .pipe(first())\n      .subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\n\n    return markdown;\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\n\nimport { LanguagePipe } from './language.pipe';\nimport { MarkdownComponent } from './markdown.component';\nimport { MarkdownPipe } from './markdown.pipe';\nimport { MarkdownService } from './markdown.service';\nimport { MarkedOptions } from './marked-options';\n\n// having a dependency on `HttpClientModule` within a library\n// breaks all the interceptors from the app consuming the library\n// here, we explicitely ask the user to pass a provider with\n// their own instance of `HttpClientModule`\nexport interface MarkdownModuleConfig {\n  loader?: Provider;\n  markedOptions?: Provider;\n}\n\nexport const initialMarkedOptions: Provider = {\n  provide: MarkedOptions,\n  useValue: {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n  },\n};\n\nconst sharedDeclarations = [\n  LanguagePipe,\n  MarkdownComponent,\n  MarkdownPipe,\n];\n\n@NgModule({\n  exports: [\n    ...sharedDeclarations,\n  ],\n  declarations: [\n    ...sharedDeclarations,\n  ],\n})\nexport class MarkdownModule {\n  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: MarkdownModule,\n      providers: [\n        MarkdownService,\n        ...(markdownModuleConfig\n          ? [\n              markdownModuleConfig.loader || [],\n              markdownModuleConfig.markedOptions || initialMarkedOptions,\n            ]\n          : [initialMarkedOptions]),\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: MarkdownModule,\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__extends","tslib_1.__param","tslib_1.__decorate"],"mappings":"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"}