{"version":3,"file":"try-password-strength.js","sources":["ng://@try/password-strength/module/component/mat-password-strength/mat-password-strength.component.ts","ng://@try/password-strength/module/animations/index.ts","ng://@try/password-strength/module/component/mat-password-strength-info/mat-password-strength-info.component.ts","ng://@try/password-strength/module/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts","ng://@try/password-strength/module/mat-password-strength.module.ts","ng://@try/password-strength/try-password-strength.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {AbstractControl, FormControl, Validators} from '@angular/forms';\n\nexport enum Colors {\n  primary = 'primary',\n  accent = 'accent',\n  warn = 'warn'\n}\n\nexport enum Criteria {\n  at_least_eight_chars,\n  at_least_one_lower_case_char,\n  at_least_one_upper_case_char,\n  at_least_one_digit_char,\n  at_least_one_special_char,\n}\n\n@Component({\n  selector: 'mat-password-strength',\n  exportAs: 'matPasswordStrength',\n  templateUrl: './mat-password-strength.component.html',\n  styleUrls: ['./mat-password-strength.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatPasswordStrengthComponent implements OnInit, OnChanges {\n\n  @Input() password: string;\n  @Input() validators: Criteria[] = Object.keys(Criteria).map(key => Criteria[key]);\n  @Input() externalError: boolean;\n\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n\n  @Input() min = 8;\n  @Input() max = 30;\n\n  @Output()\n  onStrengthChanged: EventEmitter<number> = new EventEmitter<number>();\n\n  criteriaMap = new Map<Criteria, RegExp>();\n\n  containAtLeastMinChars: boolean;\n  containAtLeastOneLowerCaseLetter: boolean;\n  containAtLeastOneUpperCaseLetter: boolean;\n  containAtLeastOneDigit: boolean;\n  containAtLeastOneSpecialChar: boolean;\n\n  passwordFormControl: AbstractControl = new FormControl();\n\n  private _strength = 0;\n\n  private _color: string;\n\n  ngOnInit(): void {\n    this.setRulesAndValidators();\n    if (this.password) {\n      this.calculatePasswordStrength();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ((changes.externalError && changes.externalError.firstChange) || changes.password.isFirstChange()) {\n      return;\n    } else if (changes.externalError && changes.externalError.currentValue) {\n      this._color = Colors.warn;\n      return;\n    } else if (changes.password.previousValue === changes.password.currentValue && !changes.password.firstChange) {\n      this.calculatePasswordStrength();\n    } else {\n      this.password && this.password.length > 0 ?\n        this.calculatePasswordStrength() : this.reset();\n    }\n  }\n\n  get strength(): number {\n    return this._strength ? this._strength : 0;\n  }\n\n  get color(): string {\n\n    if (this._strength <= 20) {\n      return Colors.warn;\n    } else if (this._strength <= 80) {\n      return Colors.accent;\n    } else {\n      return Colors.primary;\n    }\n  }\n\n  private _containAtLeastMinChars(): boolean {\n    this.containAtLeastMinChars = this.password.length >= this.min;\n    return this.containAtLeastMinChars;\n  }\n\n  private _containAtLeastOneLowerCaseLetter(): boolean {\n    this.containAtLeastOneLowerCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_lower_case_char)\n        .test(this.password);\n    return this.containAtLeastOneLowerCaseLetter;\n  }\n\n  private _containAtLeastOneUpperCaseLetter(): boolean {\n    this.containAtLeastOneUpperCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_upper_case_char)\n        .test(this.password);\n    return this.containAtLeastOneUpperCaseLetter;\n  }\n\n  private _containAtLeastOneDigit(): boolean {\n    this.containAtLeastOneDigit =\n      this.criteriaMap\n        .get(Criteria.at_least_one_digit_char)\n        .test(this.password);\n    return this.containAtLeastOneDigit;\n  }\n\n  private _containAtLeastOneSpecialChar(): boolean {\n    this.containAtLeastOneSpecialChar =\n      this.criteriaMap\n        .get(Criteria.at_least_one_special_char)\n        .test(this.password);\n    return this.containAtLeastOneSpecialChar;\n  }\n\n  setRulesAndValidators(): void {\n    if (this.enableLengthRule) {\n      this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(`^.{${this.min},${this.max}$`));\n    }\n    if (this.enableLowerCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExp(/^(?=.*?[a-z])/));\n    }\n    if (this.enableUpperCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExp(/^(?=.*?[A-Z])/));\n    }\n    if (this.enableDigitRule) {\n      this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExp(/^(?=.*?[0-9])/));\n    }\n    if (this.enableSpecialCharRule) {\n      this.criteriaMap.set(Criteria.at_least_one_special_char, RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/));\n    }\n\n    this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(Criteria.at_least_eight_chars)));\n\n    this.validators.map(criteria => {\n      this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(criteria)));\n    })\n\n  }\n\n  calculatePasswordStrength(): void {\n    const requirements: Array<boolean> = [];\n    const unit = 100 / this.criteriaMap.size;\n\n    // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\n    // console.log('unit = ', unit);\n\n    requirements.push(\n      this.enableLengthRule ? this._containAtLeastMinChars() : false,\n      this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false,\n      this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false,\n      this.enableDigitRule ? this._containAtLeastOneDigit() : false,\n      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false);\n\n    this._strength = requirements.filter(v => v).length * unit;\n    // console.log('length = ', this._strength / unit);\n    this.onStrengthChanged.emit(this.strength);\n  }\n\n  reset() {\n    this._strength = 0;\n    this.containAtLeastMinChars =\n      this.containAtLeastOneLowerCaseLetter =\n        this.containAtLeastOneUpperCaseLetter =\n          this.containAtLeastOneDigit =\n            this.containAtLeastOneSpecialChar = false;\n  }\n}\n","import {animate, animation, AnimationReferenceMetadata, keyframes, style} from '@angular/animations';\n\nexport function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {\n  const params = {timing: timing, delay: 0, rotateX, rotateY};\n\n  return animation(\n    [\n      style({'backface-visibility': 'visible'}),\n      animate(\n        '{{ timing }}s {{ delay }}s ease-in',\n        keyframes([\n          style({\n            opacity: 0,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n            offset: 0,\n          }),\n          style({\n            opacity: 1,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n            offset: 0.4,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n            offset: 0.6,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n            offset: 0.8,\n          }),\n          style({\n            transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n            offset: 1,\n          }),\n        ])\n      ),\n    ],\n    {params}\n  );\n}\n\nexport const flipInX = flipIn(1, 1, 0);\nexport const flipInY = flipIn(1, 0, 1);\n\nexport const shake = animation(\n  animate(\n    '{{ timing }}s {{ delay }}s',\n    keyframes([\n      style({transform: 'translate3d(0, 0, 0)', offset: 0}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.1}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.2}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.3}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.4}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.5}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.6}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.7}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.8}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.9}),\n      style({transform: 'translate3d(0, 0, 0)', offset: 1}),\n    ])\n  ),\n  {params: {timing: 1, delay: 0}}\n);\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatPasswordStrengthComponent} from '../mat-password-strength/mat-password-strength.component';\nimport {animate, animateChild, keyframes, query, stagger, style, transition, trigger, useAnimation} from '@angular/animations';\nimport {shake} from '../../animations/index';\n\n@Component({\n  selector: 'mat-password-strength-info',\n  exportAs: 'matPasswordStrengthInfo',\n  templateUrl: './mat-password-strength-info.component.html',\n  styleUrls: ['./mat-password-strength-info.component.scss'],\n  animations: [\n    // nice stagger effect when showing existing elements\n    trigger('list', [\n      transition(':enter', [\n        // child animation selector + stagger\n        query('@items',\n          stagger(300, animateChild())\n        )\n      ]),\n    ]),\n    trigger('items', [\n      // cubic-bezier for a tiny bouncing feel\n      transition(':enter', [\n        style({transform: 'scale(0.5)', opacity: 0}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(1)', opacity: 1}))\n      ]),\n      transition(':leave', [\n        style({transform: 'scale(1)', opacity: 1, height: '*'}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(0.5)', opacity: 0, height: '0px', margin: '0px'}))\n      ]),\n    ]),\n    trigger('positiveState', [\n      transition(':enter', [\n        style({'backface-visibility': 'visible'}),\n        animate(\n          '{{ timing }}s {{ delay }}s ease-in',\n          keyframes([\n            style({\n              opacity: 0,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n              offset: 0,\n            }),\n            style({\n              opacity: 1,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n              offset: 0.4,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n              offset: 0.6,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n              offset: 0.8,\n            }),\n            style({\n              transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n              offset: 1,\n            }),\n          ])\n        ),\n      ], {params: {timing: 1, delay: 0, rotateX: 1, rotateY: 0}}),\n    ]),\n    trigger('negativeState', [\n      transition(':enter', useAnimation(shake)),\n    ]),\n  ],\n})\nexport class MatPasswordStrengthInfoComponent implements OnInit {\n\n  @Input()\n  passwordComponent: MatPasswordStrengthComponent;\n\n  @Input()\n  enableScoreInfo = false;\n\n  @Input()\n  lowerCaseCriteriaMsg = 'contains at least one lower character';\n\n  @Input()\n  upperCaseCriteriaMsg = 'contains at least one upper character';\n\n  @Input()\n  digitsCriteriaMsg = 'contains at least one digit character';\n\n  @Input()\n  specialCharsCriteriaMsg = 'contains at least one special character';\n\n  @Input()\n  minCharsCriteriaMsg: string;\n\n  ngOnInit(): void {\n    if (!this.minCharsCriteriaMsg) {\n      this.minCharsCriteriaMsg = `contains at least ${this.passwordComponent.min} characters`\n    }\n  }\n\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\ntype Type = 'text' | 'password' ;\n\n@Component({\n  selector: 'mat-pass-toggle-visibility',\n  templateUrl: './mat-pass-toggle-visibility.component.html',\n  styleUrls: ['./mat-pass-toggle-visibility.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MatPassToggleVisibilityComponent {\n\n  @Input()\n  isVisible: boolean;\n\n  _type: Type = 'text';\n\n  get type() {\n    return this.isVisible ? 'text' : 'password';\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MatCardModule, MatIconModule, MatProgressBarModule, MatRippleModule} from '@angular/material';\n\nimport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\nimport {MatPasswordStrengthInfoComponent} from './component/mat-password-strength-info/mat-password-strength-info.component';\nimport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\n\n// Export module's public API\nexport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\nexport {\n  MatPasswordStrengthInfoComponent\n} from './component/mat-password-strength-info/mat-password-strength-info.component';\nexport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatIconModule,\n    MatRippleModule\n  ],\n  exports: [\n    MatPasswordStrengthComponent,\n    MatPasswordStrengthInfoComponent,\n    MatPassToggleVisibilityComponent\n  ],\n  declarations: [\n    MatPasswordStrengthComponent,\n    MatPasswordStrengthInfoComponent,\n    MatPassToggleVisibilityComponent\n  ],\n  entryComponents: [MatPassToggleVisibilityComponent]\n})\nexport class MatPasswordStrengthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MatPasswordStrengthModule,\n      providers: []\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {shake as Éµa} from './module/animations/index';"],"names":["tslib_1.__decorate"],"mappings":"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"}