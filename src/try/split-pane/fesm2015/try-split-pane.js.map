{"version":3,"file":"try-split-pane.js","sources":["ng://@try/split-pane/lib/utils.ts","ng://@try/split-pane/lib/component/split.component.ts","ng://@try/split-pane/lib/directive/splitArea.directive.ts","ng://@try/split-pane/lib/service/UndetectedEventPlugin.ts","ng://@try/split-pane/lib/module.ts","ng://@try/split-pane/public_api.ts","ng://@try/split-pane/try-split-pane.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\n\nimport { IPoint } from './interface/IPoint';\n\n\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {\n    // TouchEvent\n    if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {\n        return {\n            x: (<TouchEvent> event).touches[0].clientX,\n            y: (<TouchEvent> event).touches[0].clientY,\n        };\n    }\n    // MouseEvent\n    else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {\n        return {\n            x: (<MouseEvent> event).clientX,\n            y: (<MouseEvent> event).clientY,\n        };\n    }\n    return null;\n}\n\nexport function getPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\n    return elRef.nativeElement[(direction === 'horizontal') ? 'offsetWidth' : 'offsetHeight'];\n\n}\n\nexport function getInputBoolean(v: any) {\n    return (typeof(v) === 'boolean') ? v : (v === 'false' ? false : true);\n}\n\nexport function isValidTotalSize(total: number): boolean {\n    return total > .999 && total < 1.001;\n}\n","import { Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, AfterViewInit, OnDestroy, ElementRef, NgZone, ViewChildren, QueryList } from '@angular/core';\nimport { Observable, Subscriber, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { IArea } from '../interface/IArea';\nimport { IPoint } from '../interface/IPoint';\nimport { SplitAreaDirective } from '../directive/splitArea.directive';\nimport { getPointFromEvent, getPixelSize, getInputBoolean, isValidTotalSize } from '../utils';\n\n/**\n * angular-split\n *\n * Areas size are set in percentage of the split container.\n * Gutters size are set in pixels.\n *\n * So we set css 'flex-basis' property like this (where 0 <= area.size <= 1):\n *  calc( { area.size * 100 }% - { area.size * nbGutter * gutterSize }px );\n *\n * Examples with 3 visible areas and 2 gutters:\n *\n * |                     10px                   10px                                  |\n * |---------------------[]---------------------[]------------------------------------|\n * |  calc(20% - 4px)          calc(20% - 4px)              calc(60% - 12px)          |\n *\n *\n * |                          10px                        10px                        |\n * |--------------------------[]--------------------------[]--------------------------|\n * |  calc(33.33% - 6.667px)      calc(33.33% - 6.667px)      calc(33.33% - 6.667px)  |\n *\n *\n * |10px                                                  10px                        |\n * |[]----------------------------------------------------[]--------------------------|\n * |0                 calc(66.66% - 13.333px)                  calc(33%% - 6.667px)   |\n *\n *\n *  10px 10px                                                                         |\n * |[][]------------------------------------------------------------------------------|\n * |0 0                               calc(100% - 20px)                               |\n *\n */\n\n@Component({\n    selector: 'as-split',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: [`./split.component.scss`],\n    template: `\n        <ng-content></ng-content>\n        <ng-template ngFor [ngForOf]=\"displayedAreas\" let-index=\"index\" let-last=\"last\">\n            <div *ngIf=\"last === false\"\n                 #gutterEls\n                 class=\"as-split-gutter\"\n                 [style.flex-basis.px]=\"gutterSize\"\n                 [style.order]=\"index*2+1\"\n                 (as-split-undetected.click)=\"clickGutter($event, index+1)\"\n                 (as-split-undetected.mousedown)=\"startDragging($event, index*2+1, index+1)\"\n                 (as-split-undetected.touchstart)=\"startDragging($event, index*2+1, index+1)\">\n                <div class=\"as-split-gutter-icon\"></div>\n            </div>\n        </ng-template>`,\n})\nexport class SplitComponent implements AfterViewInit, OnDestroy {\n\n    private _direction: 'horizontal' | 'vertical' = 'horizontal';\n\n    @Input() set direction(v: 'horizontal' | 'vertical') {\n        this._direction = (v === 'vertical') ? 'vertical' : 'horizontal';\n\n        this.renderer.addClass(this.elRef.nativeElement, `is-${ this._direction }`);\n        this.renderer.removeClass(this.elRef.nativeElement, `is-${ (this._direction === 'vertical') ? 'horizontal' : 'vertical' }`);\n\n        this.build(false, false);\n    }\n\n    get direction(): 'horizontal' | 'vertical' {\n        return this._direction;\n    }\n\n    ////\n\n    private _gutterSize: number = 11;\n\n    @Input() set gutterSize(v: number) {\n        v = Number(v);\n        this._gutterSize = (!isNaN(v) && v > 0) ? v : 11;\n\n        this.build(false, false);\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    ////\n\n    private _useTransition: boolean = false;\n\n    @Input() set useTransition(v: boolean) {\n        this._useTransition = getInputBoolean(v);\n\n        if(this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'is-transition');\n        else                    this.renderer.removeClass(this.elRef.nativeElement, 'is-transition');\n    }\n\n    get useTransition(): boolean {\n        return this._useTransition;\n    }\n\n    ////\n\n    private _disabled: boolean = false;\n\n    @Input() set disabled(v: boolean) {\n        this._disabled = getInputBoolean(v);\n\n        if(this._disabled)  this.renderer.addClass(this.elRef.nativeElement, 'is-disabled');\n        else                this.renderer.removeClass(this.elRef.nativeElement, 'is-disabled');\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    ////\n\n    private _dir: 'ltr' | 'rtl' = 'ltr';\n\n    @Input() set dir(v: 'ltr' | 'rtl') {\n        v = (v === 'rtl') ? 'rtl' : 'ltr';\n        this._dir = v;\n\n        this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\n    }\n\n    get dir(): 'ltr' | 'rtl' {\n        return this._dir;\n    }\n\n    ////\n\n    private dragStartSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\n    @Output() get dragStart(): Observable<{gutterNum: number, sizes: Array<number>}> {\n        return new Observable(subscriber => this.dragStartSubscriber = subscriber);\n    }\n\n    private dragEndSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\n    @Output() get dragEnd(): Observable<{gutterNum: number, sizes: Array<number>}> {\n        return new Observable(subscriber => this.dragEndSubscriber = subscriber);\n    }\n\n    private gutterClickSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\n    @Output() get gutterClick(): Observable<{gutterNum: number, sizes: Array<number>}> {\n        return new Observable(subscriber => this.gutterClickSubscriber = subscriber);\n    }\n\n    private transitionEndSubscriber: Subscriber<Array<number>>\n    @Output() get transitionEnd(): Observable<Array<number>> {\n        return new Observable(subscriber => this.transitionEndSubscriber = subscriber).pipe(\n            debounceTime<Array<number>>(20)\n        );\n    }\n\n    private dragProgressSubject: Subject<{gutterNum: number, sizes: Array<number>}> = new Subject();\n    dragProgress$: Observable<{gutterNum: number, sizes: Array<number>}> = this.dragProgressSubject.asObservable();\n\n    ////\n\n    private isDragging: boolean = false;\n    private currentGutterNum: number = 0;\n    private startPoint: IPoint | null = null;\n    private endPoint: IPoint | null = null;\n\n    public readonly displayedAreas: Array<IArea> = [];\n    private readonly hidedAreas: Array<IArea> = [];\n\n    private readonly dragListeners: Array<Function> = [];\n    private readonly dragStartValues = {\n        sizePixelContainer: 0,\n        sizePixelA: 0,\n        sizePixelB: 0,\n        sizePercentA: 0,\n        sizePercentB: 0,\n    };\n\n    @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;\n\n    constructor(private ngZone: NgZone,\n                private elRef: ElementRef,\n                private cdRef: ChangeDetectorRef,\n                private renderer: Renderer2) {\n        // To force adding default class, could be override by user @Input() or not\n        this.direction = this._direction;\n    }\n\n    public ngAfterViewInit() {\n        this.ngZone.runOutsideAngular(() => {\n            // To avoid transition at first rendering\n            setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'is-init'));\n        });\n    }\n\n    private getNbGutters(): number {\n        return (this.displayedAreas.length === 0) ? 0 : this.displayedAreas.length - 1;\n    }\n\n    public addArea(component: SplitAreaDirective): void {\n        const newArea: IArea = {\n            component,\n            order: 0,\n            size: 0,\n        };\n\n        if(component.visible === true) {\n            this.displayedAreas.push(newArea);\n\n            this.build(true, true);\n        }\n        else {\n            this.hidedAreas.push(newArea);\n        }\n    }\n\n    public removeArea(component: SplitAreaDirective): void {\n        if(this.displayedAreas.some(a => a.component === component)) {\n            const area = this.displayedAreas.find(a => a.component === component);\n            this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\n\n            this.build(true, true);\n        }\n        else if(this.hidedAreas.some(a => a.component === component)) {\n            const area = this.hidedAreas.find(a => a.component === component);\n            this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n        }\n    }\n\n    public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\n        // Only refresh if area is displayed (No need to check inside 'hidedAreas')\n        const area = this.displayedAreas.find(a => a.component === component);\n        if(!area) {\n            return;\n        }\n\n        this.build(resetOrders, resetSizes);\n    }\n\n    public showArea(component: SplitAreaDirective): void {\n        const area = this.hidedAreas.find(a => a.component === component);\n        if(!area) {\n            return;\n        }\n\n        const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n        this.displayedAreas.push(...areas);\n\n        this.build(true, true);\n    }\n\n    public hideArea(comp: SplitAreaDirective): void {\n        const area = this.displayedAreas.find(a => a.component === comp);\n        if(!area) {\n            return;\n        }\n\n        const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\n        areas.forEach(area => {\n            area.order = 0;\n            area.size = 0;\n        })\n        this.hidedAreas.push(...areas);\n\n        this.build(true, true);\n    }\n\n    public getVisibleAreaSizes(): Array<number> {\n        return this.displayedAreas.map(a => a.size * 100);\n    }\n\n    public setVisibleAreaSizes(sizes: Array<number>): boolean {\n        if(sizes.length !== this.displayedAreas.length) {\n            return false;\n        }\n\n        sizes = sizes.map(s => s / 100);\n\n        const total = sizes.reduce((total: number, v: number) => total + v, 0);\n        if(!isValidTotalSize(total)) {\n            return false;\n        }\n\n        this.displayedAreas.forEach((area, i) => {\n            // @ts-ignore\n            area.component._size = sizes[i];\n        })\n\n        this.build(false, true);\n        return true;\n    }\n\n    private build(resetOrders: boolean, resetSizes: boolean): void {\n        this.stopDragging();\n\n        // Â¤ AREAS ORDER\n\n        if(resetOrders === true) {\n\n            // If user provided 'order' for each area, use it to sort them.\n            if(this.displayedAreas.every(a => a.component.order !== null)) {\n                this.displayedAreas.sort((a, b) => (<number> a.component.order) - (<number> b.component.order));\n            }\n\n            // Then set real order with multiples of 2, numbers between will be used by gutters.\n            this.displayedAreas.forEach((area, i) => {\n                area.order = i * 2;\n                area.component.setStyleOrder(area.order);\n            });\n\n        }\n\n        // Â¤ AREAS SIZE PERCENT\n\n        if(resetSizes === true) {\n\n            const totalUserSize = <number> this.displayedAreas.reduce((total: number, s: IArea) => s.component.size ? total + s.component.size : total, 0);\n\n            // If user provided 'size' for each area and total == 1, use it.\n            if(this.displayedAreas.every(a => a.component.size !== null) && isValidTotalSize(totalUserSize) ) {\n\n                this.displayedAreas.forEach(area => {\n                    area.size = <number> area.component.size;\n                });\n            }\n            // Else set equal sizes for all areas.\n            else {\n                const size = 1 / this.displayedAreas.length;\n\n                this.displayedAreas.forEach(area => {\n                    area.size = size;\n                });\n            }\n        }\n\n        // Â¤\n        // If some real area sizes are less than gutterSize,\n        // set them to zero and dispatch size to others.\n\n        let percentToDispatch = 0;\n\n        // Get container pixel size\n        const containerSizePixel = getPixelSize(this.elRef, this.direction);\n\n        this.displayedAreas.forEach(area => {\n            if(area.size * containerSizePixel < this.gutterSize) {\n                percentToDispatch += area.size;\n                area.size = 0;\n            }\n        });\n\n        if(percentToDispatch > 0 && this.displayedAreas.length > 0) {\n            const nbAreasNotZero = this.displayedAreas.filter(a => a.size !== 0).length;\n\n            if(nbAreasNotZero > 0) {\n                const percentToAdd = percentToDispatch / nbAreasNotZero;\n\n                this.displayedAreas.filter(a => a.size !== 0).forEach(area => {\n                    area.size += percentToAdd;\n                });\n            }\n            // All area sizes (container percentage) are less than guterSize,\n            // It means containerSize < ngGutters * gutterSize\n            else {\n                this.displayedAreas[this.displayedAreas.length - 1].size = 1;\n            }\n        }\n\n        this.refreshStyleSizes();\n        this.cdRef.markForCheck();\n    }\n\n    private refreshStyleSizes(): void {\n        const sumGutterSize = this.getNbGutters() * this.gutterSize;\n\n        this.displayedAreas.forEach(area => {\n            area.component.setStyleFlexbasis(`calc( ${ area.size * 100 }% - ${ area.size * sumGutterSize }px )`);\n        });\n    }\n\n    public clickGutter(event: MouseEvent, gutterNum: number): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if(this.startPoint && this.startPoint.x === event.clientX && this.startPoint.y === event.clientY) {\n            this.currentGutterNum = gutterNum;\n\n            this.notify('click');\n        }\n    }\n\n    public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.startPoint = getPointFromEvent(event);\n        if(!this.startPoint || this.disabled) {\n            return;\n        }\n\n        const areaA = this.displayedAreas.find(a => a.order === gutterOrder - 1);\n        const areaB = this.displayedAreas.find(a => a.order === gutterOrder + 1);\n\n        if(!areaA || !areaB) {\n            return;\n        }\n\n        this.dragStartValues.sizePixelContainer = getPixelSize(this.elRef, this.direction);\n        this.dragStartValues.sizePixelA = getPixelSize(areaA.component.elRef, this.direction);\n        this.dragStartValues.sizePixelB = getPixelSize(areaB.component.elRef, this.direction);\n        this.dragStartValues.sizePercentA = areaA.size;\n        this.dragStartValues.sizePercentB = areaB.size;\n        this.currentGutterNum = gutterNum;\n\n        this.ngZone.runOutsideAngular(() => {\n            this.dragListeners.push( this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)) );\n            this.dragListeners.push( this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)) );\n            this.dragListeners.push( this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)) );\n\n            this.dragListeners.push( this.renderer.listen('document', 'mousemove', (e: MouseEvent) => this.dragEvent(e, areaA, areaB)) );\n            this.dragListeners.push( this.renderer.listen('document', 'touchmove', (e: TouchEvent) => this.dragEvent(e, areaA, areaB)) );\n        });\n\n        areaA.component.lockEvents();\n        areaB.component.lockEvents();\n\n        this.isDragging = true;\n        this.renderer.addClass(this.elRef.nativeElement, 'is-dragging');\n        this.renderer.addClass(this.gutterEls.toArray()[this.currentGutterNum-1].nativeElement, 'is-dragged');\n\n        this.notify('start');\n    }\n\n    private dragEvent(event: MouseEvent | TouchEvent, areaA: IArea, areaB: IArea): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if(!this.isDragging) {\n            return;\n        }\n\n        this.endPoint = getPointFromEvent(event);\n        if(!this.endPoint) {\n            return;\n        }\n\n        // Â¤ AREAS SIZE PIXEL\n\n        let offsetPixel = (this.direction === 'horizontal') ? (this.startPoint.x - this.endPoint.x) : (this.startPoint.y - this.endPoint.y);\n        if(this.dir === 'rtl') {\n            offsetPixel = -offsetPixel;\n        }\n\n        let newSizePixelA = this.dragStartValues.sizePixelA - offsetPixel;\n        let newSizePixelB = this.dragStartValues.sizePixelB + offsetPixel;\n\n        if(newSizePixelA < this.gutterSize && newSizePixelB < this.gutterSize) {\n            // WTF.. get out of here!\n            return;\n        }\n        else if(newSizePixelA < this.gutterSize) {\n            newSizePixelB += newSizePixelA;\n            newSizePixelA = 0;\n        }\n        else if(newSizePixelB < this.gutterSize) {\n            newSizePixelA += newSizePixelB;\n            newSizePixelB = 0;\n        }\n\n        // Â¤ AREAS SIZE PERCENT\n\n        if(newSizePixelA === 0) {\n            areaB.size += areaA.size;\n            areaA.size = 0;\n        }\n        else if(newSizePixelB === 0) {\n            areaA.size += areaB.size;\n            areaB.size = 0;\n        }\n        else {\n            // NEW_PERCENT = START_PERCENT / START_PIXEL * NEW_PIXEL;\n            if(this.dragStartValues.sizePercentA === 0) {\n                areaB.size = this.dragStartValues.sizePercentB / this.dragStartValues.sizePixelB * newSizePixelB;\n                areaA.size = this.dragStartValues.sizePercentB - areaB.size;\n            }\n            else if(this.dragStartValues.sizePercentB === 0) {\n                areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\n                areaB.size = this.dragStartValues.sizePercentA - areaA.size;\n            }\n            else {\n                areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\n                areaB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - areaA.size;\n            }\n        }\n\n        this.refreshStyleSizes();\n\n        // If moved from starting point, notify progress\n        if(this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y) {\n            this.notify('progress');\n        }\n    }\n\n    private stopDragging(event?: Event): void {\n        if(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if(this.isDragging === false) {\n            return;\n        }\n\n        this.displayedAreas.forEach(area => {\n            area.component.unlockEvents();\n        });\n\n        while(this.dragListeners.length > 0) {\n            const fct = this.dragListeners.pop();\n            if(fct) {\n                fct();\n            }\n        }\n\n        // If moved from starting point, notify end\n        if(event && this.endPoint && (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)) {\n            this.notify('end');\n        }\n\n        this.isDragging = false;\n        this.renderer.removeClass(this.elRef.nativeElement, 'is-dragging');\n        this.renderer.removeClass(this.gutterEls.toArray()[this.currentGutterNum-1].nativeElement, 'is-dragged');\n\n        // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n        this.ngZone.runOutsideAngular(() => {\n            setTimeout(() => {\n                this.startPoint = null;\n                this.endPoint = null;\n            })\n        });\n    }\n\n    public notify(type: 'start' | 'progress' | 'end' | 'click' | 'transitionEnd'): void {\n        const sizes: Array<number> = this.displayedAreas.map(a => a.size * 100);\n\n        if(type === 'start') {\n            if(this.dragStartSubscriber) {\n                this.ngZone.run(() => this.dragStartSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\n            }\n        }\n        else if(type === 'end') {\n            if(this.dragEndSubscriber) {\n                this.ngZone.run(() => this.dragEndSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\n            }\n        }\n        else if(type === 'click') {\n            if(this.gutterClickSubscriber) {\n                this.ngZone.run(() => this.gutterClickSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\n            }\n        }\n        else if(type === 'transitionEnd') {\n            if(this.transitionEndSubscriber) {\n                this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\n            }\n        }\n        else if(type === 'progress') {\n            // Stay outside zone to allow users do what they want about change detection mechanism.\n            this.dragProgressSubject.next({gutterNum: this.currentGutterNum, sizes});\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.stopDragging();\n    }\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';\n\nimport { SplitComponent } from '../component/split.component';\nimport { getInputBoolean } from '../utils';\n\n@Directive({\n    selector: 'as-split-area, [as-split-area]'\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n\n    private _order: number | null = null;\n\n    @Input() set order(v: number | null) {\n        v = Number(v);\n        this._order = !isNaN(v) ? v : null;\n\n        this.split.updateArea(this, true, false);\n    }\n\n    get order(): number | null {\n        return this._order;\n    }\n\n    ////\n\n    private _size: number | null = null;\n\n    @Input() set size(v: number | null) {\n        v = Number(v);\n        this._size = (!isNaN(v) && v >= 0 && v <= 100) ? (v/100) : null;\n\n        this.split.updateArea(this, false, true);\n    }\n\n    get size(): number | null {\n        return this._size;\n    }\n\n    ////\n\n    private _visible: boolean = true;\n\n    @Input() set visible(v: boolean) {\n        this._visible = getInputBoolean(v);\n\n        if(this._visible) {\n            this.split.showArea(this);\n            this.renderer.removeClass(this.elRef.nativeElement, 'is-hided');\n        }\n        else {\n            this.split.hideArea(this);\n            this.renderer.addClass(this.elRef.nativeElement, 'is-hided');\n        }\n    }\n\n    get visible(): boolean {\n        return this._visible;\n    }\n\n    ////\n\n    private transitionListener: Function;\n    private readonly lockListeners: Array<Function> = [];\n\n    constructor(private ngZone: NgZone,\n                public elRef: ElementRef,\n                private renderer: Renderer2,\n                private split: SplitComponent) {\n        this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');\n    }\n\n    public ngOnInit(): void {\n        this.split.addArea(this);\n\n        this.ngZone.runOutsideAngular(() => {\n            this.transitionListener = this.renderer.listen(this.elRef.nativeElement, 'transitionend', (event: TransitionEvent) => {\n                // Limit only flex-basis transition to trigger the event\n                if(event.propertyName === 'flex-basis') {\n                    this.split.notify('transitionEnd');\n                }\n            });\n        });\n    }\n\n    public setStyleOrder(value: number): void {\n        this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\n    }\n\n    public setStyleFlexbasis(value: string): void {\n        this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', value);\n    }\n\n    public lockEvents(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false) );\n            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false) );\n        });\n    }\n\n    public unlockEvents(): void {\n        while(this.lockListeners.length > 0) {\n            const fct = this.lockListeners.pop();\n            if(fct) {\n                fct();\n            }\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.unlockEvents();\n\n        if(this.transitionListener) {\n            this.transitionListener();\n        }\n\n        this.split.removeArea(this);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\n/**\n * Credit to Michael Strobel from:\n * https://github.com/kryops/ng2-events\n */\n@Injectable()\nexport class UndetectedEventPlugin {\n    manager: EventManager;\n\n    supports(eventName: string): boolean {\n        return eventName.indexOf('as-split-undetected.') === 0;\n    }\n\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const realEventName = eventName.slice(20);\n\n        return this.manager.getZone().runOutsideAngular(() => this.manager.addEventListener(element, realEventName, handler));\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { SplitComponent } from './component/split.component';\nimport { SplitAreaDirective } from './directive/splitArea.directive';\nimport { UndetectedEventPlugin } from \"./service/UndetectedEventPlugin\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SplitComponent,\n        SplitAreaDirective,\n    ],\n    exports: [\n        SplitComponent,\n        SplitAreaDirective,\n    ]\n})\nexport class AngularSplitModule {\n\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: AngularSplitModule,\n            providers: [{\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: UndetectedEventPlugin,\n                multi: true\n            }]\n        };\n    }\n\n    public static forChild(): ModuleWithProviders {\n        return {\n            ngModule: AngularSplitModule,\n            providers: []\n        };\n    }\n\n}\n","/*\n * Public API Surface of angular-split\n */\n\nexport { AngularSplitModule } from './lib/module';\nexport { SplitComponent } from './lib/component/split.component';\nexport { SplitAreaDirective } from './lib/directive/splitArea.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {UndetectedEventPlugin as Éµa} from './lib/service/UndetectedEventPlugin';"],"names":["tslib_1.__decorate"],"mappings":"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"}