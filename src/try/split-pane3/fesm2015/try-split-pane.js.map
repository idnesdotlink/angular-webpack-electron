{"version":3,"file":"try-split-pane.js","sources":["ng://@try/split-pane/lib/utils.ts","ng://@try/split-pane/lib/component/split.component.ts","ng://@try/split-pane/lib/directive/splitArea.directive.ts","ng://@try/split-pane/lib/module.ts","ng://@try/split-pane/public_api.ts","ng://@try/split-pane/try-split-pane.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\n\nimport { IArea, IPoint, IAreaSnapshot, ISplitSideAbsorptionCapacity, IAreaAbsorptionCapacity } from './interface';\n\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {\n  // TouchEvent\n  if ((<TouchEvent>event).changedTouches !== undefined && (<TouchEvent>event).changedTouches.length > 0) {\n    return {\n      x: (<TouchEvent>event).changedTouches[0].clientX,\n      y: (<TouchEvent>event).changedTouches[0].clientY,\n    };\n  }\n  // MouseEvent\n  else if ((<MouseEvent>event).clientX !== undefined && (<MouseEvent>event).clientY !== undefined) {\n    return {\n      x: (<MouseEvent>event).clientX,\n      y: (<MouseEvent>event).clientY,\n    };\n  }\n  return null;\n}\n\nexport function getElementPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\n  const rect = (<HTMLElement>elRef.nativeElement).getBoundingClientRect();\n\n  return (direction === 'horizontal') ? rect.width : rect.height;\n}\n\nexport function getInputBoolean(v: any): boolean {\n  return (typeof (v) === 'boolean') ? v : (v === 'false' ? false : true);\n}\n\nexport function getInputPositiveNumber<T>(v: any, defaultValue: T): number | T {\n  if (v === null || v === undefined) return defaultValue;\n\n  v = Number(v);\n  return !isNaN(v) && v >= 0 ? v : defaultValue;\n}\n\nexport function isUserSizesValid(unit: 'percent' | 'pixel', sizes: Array<number | null>): boolean {\n  // All sizes have to be not null and total should be 100\n  if (unit === 'percent') {\n    const total = sizes.reduce((total, s) => s !== null ? total + s : total, 0);\n    return sizes.every(s => s !== null) && total > 99.9 && total < 100.1;\n  }\n\n  // A size at null is mandatory but only one.\n  if (unit === 'pixel') {\n    return sizes.filter(s => s === null).length === 1;\n  }\n}\n\nexport function getAreaMinSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null;\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size;\n  }\n\n  if (a.component.minSize === null) {\n    return null;\n  }\n\n  if (a.component.minSize > a.size) {\n    return a.size;\n  }\n\n  return a.component.minSize;\n}\n\nexport function getAreaMaxSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null;\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size;\n  }\n\n  if (a.component.maxSize === null) {\n    return null;\n  }\n\n  if (a.component.maxSize < a.size) {\n    return a.size;\n  }\n\n  return a.component.maxSize;\n}\n\nexport function getGutterSideAbsorptionCapacity(unit: 'percent' | 'pixel', sideAreas: Array<IAreaSnapshot>, pixels: number, allAreasSizePixel: number): ISplitSideAbsorptionCapacity {\n  return sideAreas.reduce((acc, area) => {\n    const res = getAreaAbsorptionCapacity(unit, area, acc.remain, allAreasSizePixel);\n    acc.list.push(res);\n    acc.remain = res.pixelRemain;\n    return acc;\n  }, { remain: pixels, list: [] });\n}\n\nfunction getAreaAbsorptionCapacity(unit: 'percent' | 'pixel', areaSnapshot: IAreaSnapshot, pixels: number, allAreasSizePixel: number): IAreaAbsorptionCapacity {\n  // No pain no gain\n  if (pixels === 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\n      pixelRemain: 0,\n    };\n  }\n\n  // Area start at zero and need to be reduced, not possible\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: 0,\n      pixelRemain: pixels,\n    };\n  }\n\n  if (unit === 'percent') {\n    return getAreaAbsorptionCapacityPercent(areaSnapshot, pixels, allAreasSizePixel);\n  }\n\n  if (unit === 'pixel') {\n    return getAreaAbsorptionCapacityPixel(areaSnapshot, pixels, allAreasSizePixel);\n  }\n}\n\nfunction getAreaAbsorptionCapacityPercent(areaSnapshot: IAreaSnapshot, pixels: number, allAreasSizePixel: number): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\n  const tempPercentSize = tempPixelSize / allAreasSizePixel * 100;\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPercentSize > areaSnapshot.area.maxSize) {\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\n      const maxSizePixel = areaSnapshot.area.maxSize / 100 * allAreasSizePixel;\n      return {\n        areaSnapshot,\n        pixelAbsorb: maxSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\n      pixelRemain: 0\n    };\n  }\n\n  // REDUCE AREA\n\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPercentSize < areaSnapshot.area.minSize) {\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\n      const minSizePixel = areaSnapshot.area.minSize / 100 * allAreasSizePixel;\n      return {\n        areaSnapshot,\n        pixelAbsorb: minSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.minSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel\n      };\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPercentSize < 0) {\n      // Use 0 as newPercentSize and return calculate pixels remaining\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: 0,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize,\n      pixelRemain: 0\n    };\n  }\n}\n\nfunction getAreaAbsorptionCapacityPixel(areaSnapshot: IAreaSnapshot, pixels: number, containerSizePixel: number): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPixelSize > areaSnapshot.area.maxSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0\n    };\n  }\n\n  // REDUCE AREA\n\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPixelSize < areaSnapshot.area.minSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize\n      };\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPixelSize < 0) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0\n    };\n  }\n}\n\nexport function updateAreaSize(unit: 'percent' | 'pixel', item: IAreaAbsorptionCapacity) {\n\n  if (unit === 'percent') {\n    item.areaSnapshot.area.size = item.percentAfterAbsorption;\n  }\n  else if (unit === 'pixel') {\n    // Update size except for the wildcard size area\n    if (item.areaSnapshot.area.size !== null) {\n      item.areaSnapshot.area.size = item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb;\n    }\n  }\n}\n","import { Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, AfterViewInit, OnDestroy, ElementRef, NgZone, ViewChildren, QueryList, EventEmitter } from '@angular/core';\nimport { Observable, Subscriber, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { IArea, IPoint, ISplitSnapshot, IAreaSnapshot, IOutputData, IOutputAreaSizes } from '../interface';\nimport { SplitAreaDirective } from '../directive/splitArea.directive';\nimport { getInputPositiveNumber, getInputBoolean, isUserSizesValid, getAreaMinSize, getAreaMaxSize, getPointFromEvent, getElementPixelSize, getGutterSideAbsorptionCapacity, updateAreaSize } from '../utils';\n\n/**\n * angular-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *\n */\n\n@Component({\n  selector: 'as-split',\n  exportAs: 'asSplit',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [`./split.component.scss`],\n  template: `\n        <ng-content></ng-content>\n        <ng-template ngFor [ngForOf]=\"displayedAreas\" let-index=\"index\" let-last=\"last\">\n            <div\n              *ngIf=\"last === false\"\n              #gutterEls\n              class=\"as-split-gutter\"\n              [style.flex-basis.px]=\"gutterSize\"\n              [style.order]=\"index*2+1\"\n              (mousedown)=\"startDragging($event, index*2+1, index+1)\"\n              (touchstart)=\"startDragging($event, index*2+1, index+1)\"\n              (mouseup)=\"clickGutter($event, index+1)\"\n                (touchend)=\"clickGutter($event, index+1)\">\n                <div class=\"as-split-gutter-icon\"></div>\n            </div>\n        </ng-template>`,\n})\nexport class SplitComponent implements AfterViewInit, OnDestroy {\n\n  private _direction: 'horizontal' | 'vertical' = 'horizontal';\n\n  @Input() set direction(v: 'horizontal' | 'vertical') {\n    this._direction = (v === 'vertical') ? 'vertical' : 'horizontal';\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._direction}`);\n    this.renderer.removeClass(this.elRef.nativeElement, `as-${(this._direction === 'vertical') ? 'horizontal' : 'vertical'}`);\n\n    this.build(false, false);\n  }\n\n  get direction(): 'horizontal' | 'vertical' {\n    return this._direction;\n  }\n\n  ////\n\n  private _unit: 'percent' | 'pixel' = 'percent';\n\n  @Input() set unit(v: 'percent' | 'pixel') {\n    this._unit = (v === 'pixel') ? 'pixel' : 'percent';\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._unit}`);\n    this.renderer.removeClass(this.elRef.nativeElement, `as-${(this._unit === 'pixel') ? 'percent' : 'pixel'}`);\n\n    this.build(false, true);\n  }\n\n  get unit(): 'percent' | 'pixel' {\n    return this._unit;\n  }\n\n  ////\n\n  private _gutterSize: number = 11;\n\n  @Input() set gutterSize(v: number | null) {\n    this._gutterSize = getInputPositiveNumber(v, 11);\n\n    this.build(false, false);\n  }\n\n  get gutterSize(): number | null {\n    return this._gutterSize;\n  }\n\n  ////\n\n  private _gutterStep: number = 1;\n\n  @Input() set gutterStep(v: number) {\n    this._gutterStep = getInputPositiveNumber(v, 1);\n  }\n\n  get gutterStep(): number {\n    return this._gutterStep;\n  }\n\n  ////\n\n  private _restrictMove: boolean = false;\n\n  @Input() set restrictMove(v: boolean) {\n    this._restrictMove = getInputBoolean(v);\n  }\n\n  get restrictMove(): boolean {\n    return this._restrictMove;\n  }\n\n  ////\n\n  private _useTransition: boolean = false;\n\n  @Input() set useTransition(v: boolean) {\n    this._useTransition = getInputBoolean(v);\n\n    if (this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'as-transition');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-transition');\n  }\n\n  get useTransition(): boolean {\n    return this._useTransition;\n  }\n\n  ////\n\n  private _disabled: boolean = false;\n\n  @Input() set disabled(v: boolean) {\n    this._disabled = getInputBoolean(v);\n\n    if (this._disabled) this.renderer.addClass(this.elRef.nativeElement, 'as-disabled');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-disabled');\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  ////\n\n  private _dir: 'ltr' | 'rtl' = 'ltr';\n\n  @Input() set dir(v: 'ltr' | 'rtl') {\n    this._dir = (v === 'rtl') ? 'rtl' : 'ltr';\n\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\n  }\n\n  get dir(): 'ltr' | 'rtl' {\n    return this._dir;\n  }\n\n  ////\n\n  private _gutterDblClickDuration: number = 0;\n\n  @Input() set gutterDblClickDuration(v: number) {\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0);\n  }\n\n  get gutterDblClickDuration(): number {\n    return this._gutterDblClickDuration;\n  }\n\n  ////\n\n  @Output() dragStart = new EventEmitter<IOutputData>(false)\n  @Output() dragEnd = new EventEmitter<IOutputData>(false)\n  @Output() gutterClick = new EventEmitter<IOutputData>(false)\n  @Output() gutterDblClick = new EventEmitter<IOutputData>(false)\n\n  private transitionEndSubscriber: Subscriber<IOutputAreaSizes>\n  @Output() get transitionEnd(): Observable<IOutputAreaSizes> {\n    return new Observable(subscriber => this.transitionEndSubscriber = subscriber).pipe(\n      debounceTime<IOutputAreaSizes>(20)\n    );\n  }\n\n  private dragProgressSubject: Subject<IOutputData> = new Subject();\n  dragProgress$: Observable<IOutputData> = this.dragProgressSubject.asObservable();\n\n  ////\n\n  private isDragging: boolean = false;\n  private dragListeners: Array<Function> = [];\n  private snapshot: ISplitSnapshot | null = null;\n  private startPoint: IPoint | null = null;\n  private endPoint: IPoint | null = null;\n\n  public readonly displayedAreas: Array<IArea> = [];\n  private readonly hidedAreas: Array<IArea> = [];\n\n  @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;\n\n  constructor(private ngZone: NgZone,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    private renderer: Renderer2) {\n    // To force adding default class, could be override by user @Input() or not\n    this.direction = this._direction;\n  }\n\n  public ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      // To avoid transition at first rendering\n      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'as-init'));\n    });\n  }\n\n  private getNbGutters(): number {\n    return (this.displayedAreas.length === 0) ? 0 : this.displayedAreas.length - 1;\n  }\n\n  public addArea(component: SplitAreaDirective): void {\n    const newArea: IArea = {\n      component,\n      order: 0,\n      size: 0,\n      minSize: null,\n      maxSize: null,\n    };\n\n    if (component.visible === true) {\n      this.displayedAreas.push(newArea);\n\n      this.build(true, true);\n    }\n    else {\n      this.hidedAreas.push(newArea);\n    }\n  }\n\n  public removeArea(component: SplitAreaDirective): void {\n    if (this.displayedAreas.some(a => a.component === component)) {\n      const area = this.displayedAreas.find(a => a.component === component);\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\n\n      this.build(true, true);\n    }\n    else if (this.hidedAreas.some(a => a.component === component)) {\n      const area = this.hidedAreas.find(a => a.component === component);\n      this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n    }\n  }\n\n  public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\n    if (component.visible === true) {\n      this.build(resetOrders, resetSizes);\n    }\n  }\n\n  public showArea(component: SplitAreaDirective): void {\n    const area = this.hidedAreas.find(a => a.component === component);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n    this.displayedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public hideArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find(a => a.component === comp);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\n    areas.forEach(area => {\n      area.order = 0;\n      area.size = 0;\n    })\n    this.hidedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public getVisibleAreaSizes(): IOutputAreaSizes {\n    return this.displayedAreas.map(a => a.size === null ? '*' : a.size);\n  }\n\n  public setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\n    if (sizes.length !== this.displayedAreas.length) {\n      return false;\n    }\n\n    const formatedSizes = sizes.map(s => getInputPositiveNumber(s, null));\n    const isValid = isUserSizesValid(this.unit, formatedSizes);\n\n    if (isValid === false) {\n      return false;\n    }\n\n    // @ts-ignore\n    this.displayedAreas.forEach((area, i) => area.component._size = formatedSizes[i]);\n\n    this.build(false, true);\n    return true;\n  }\n\n  private build(resetOrders: boolean, resetSizes: boolean): void {\n    this.stopDragging();\n\n    // Â¤ AREAS ORDER\n\n    if (resetOrders === true) {\n\n      // If user provided 'order' for each area, use it to sort them.\n      if (this.displayedAreas.every(a => a.component.order !== null)) {\n        this.displayedAreas.sort((a, b) => (<number>a.component.order) - (<number>b.component.order));\n      }\n\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\n      this.displayedAreas.forEach((area, i) => {\n        area.order = i * 2;\n        area.component.setStyleOrder(area.order);\n      });\n    }\n\n    // Â¤ AREAS SIZE\n\n    if (resetSizes === true) {\n      const useUserSizes = isUserSizesValid(this.unit, this.displayedAreas.map(a => a.component.size));\n\n      switch (this.unit) {\n        case 'percent': {\n          const defaultSize = 100 / this.displayedAreas.length;\n\n          this.displayedAreas.forEach(area => {\n            area.size = useUserSizes ? <number>area.component.size : defaultSize;\n            area.minSize = getAreaMinSize(area);\n            area.maxSize = getAreaMaxSize(area);\n          });\n          break;\n        }\n        case 'pixel': {\n          if (useUserSizes) {\n            this.displayedAreas.forEach(area => {\n              area.size = area.component.size;\n              area.minSize = getAreaMinSize(area);\n              area.maxSize = getAreaMaxSize(area);\n            });\n          }\n          else {\n            const wildcardSizeAreas = this.displayedAreas.filter(a => a.component.size === null);\n\n            // No wildcard area > Need to select one arbitrarily > first\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\n\n              this.displayedAreas.forEach((area, i) => {\n                area.size = (i === 0) ? null : area.component.size;\n                area.minSize = (i === 0) ? null : getAreaMinSize(area);\n                area.maxSize = (i === 0) ? null : getAreaMaxSize(area);\n              });\n            }\n            // More than one wildcard area > Need to keep only one arbitrarly > first\n            else if (wildcardSizeAreas.length > 1) {\n\n              let alreadyGotOne = false;\n              this.displayedAreas.forEach(area => {\n                if (area.component.size === null) {\n                  if (alreadyGotOne === false) {\n                    area.size = null;\n                    area.minSize = null;\n                    area.maxSize = null;\n                    alreadyGotOne = true;\n                  }\n                  else {\n                    area.size = 100;\n                    area.minSize = null;\n                    area.maxSize = null;\n                  }\n                }\n                else {\n                  area.size = area.component.size;\n                  area.minSize = getAreaMinSize(area);\n                  area.maxSize = getAreaMaxSize(area);\n                }\n              });\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    this.refreshStyleSizes();\n    this.cdRef.markForCheck();\n  }\n\n  private refreshStyleSizes(): void {\n    ///////////////////////////////////////////\n    // PERCENT MODE\n    if (this.unit === 'percent') {\n      // Only one area > flex-basis 100%\n      if (this.displayedAreas.length === 1) {\n        this.displayedAreas[0].component.setStyleFlex(0, 0, `100%`, false, false);\n      }\n      // Multiple areas > use each percent basis\n      else {\n        const sumGutterSize = this.getNbGutters() * this.gutterSize;\n\n        this.displayedAreas.forEach(area => {\n          area.component.setStyleFlex(\n            0, 0, `calc( ${area.size}% - ${<number>area.size / 100 * sumGutterSize}px )`,\n            (area.minSize !== null && area.minSize === area.size) ? true : false,\n            (area.maxSize !== null && area.maxSize === area.size) ? true : false,\n          );\n        });\n      }\n    }\n    ///////////////////////////////////////////\n    // PIXEL MODE\n    else if (this.unit === 'pixel') {\n      this.displayedAreas.forEach(area => {\n        // Area with wildcard size\n        if (area.size === null) {\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(1, 1, `100%`, false, false);\n          }\n          else {\n            area.component.setStyleFlex(1, 1, `auto`, false, false);\n          }\n        }\n        // Area with pixel size\n        else {\n          // Only one area > flex-basis 100%\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(0, 0, `100%`, false, false);\n          }\n          // Multiple areas > use each pixel basis\n          else {\n            area.component.setStyleFlex(\n              0, 0, `${area.size}px`,\n              (area.minSize !== null && area.minSize === area.size) ? true : false,\n              (area.maxSize !== null && area.maxSize === area.size) ? true : false,\n            );\n          }\n        }\n      });\n    }\n  }\n\n  _clickTimeout: number | null = null\n\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\n    const tempPoint = getPointFromEvent(event);\n\n    // Be sure mouseup/touchend happened at same point as mousedown/touchstart to trigger click/dblclick\n    if (this.startPoint && this.startPoint.x === tempPoint.x && this.startPoint.y === tempPoint.y) {\n\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\n      if (this._clickTimeout !== null) {\n        window.clearTimeout(this._clickTimeout);\n        this._clickTimeout = null;\n        this.notify('dblclick', gutterNum);\n        this.stopDragging();\n      }\n      // Else start timeout to call clickEvent at end\n      else {\n        this._clickTimeout = window.setTimeout(() => {\n          this._clickTimeout = null;\n          this.notify('click', gutterNum);\n          this.stopDragging();\n        }, this.gutterDblClickDuration);\n      }\n    }\n  }\n\n  public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.startPoint = getPointFromEvent(event);\n    if (this.startPoint === null || this.disabled === true) {\n      return;\n    }\n\n    this.snapshot = {\n      gutterNum,\n      lastSteppedOffset: 0,\n      allAreasSizePixel: getElementPixelSize(this.elRef, this.direction) - this.getNbGutters() * this.gutterSize,\n      allInvolvedAreasSizePercent: 100,\n      areasBeforeGutter: [],\n      areasAfterGutter: [],\n    };\n\n    this.displayedAreas.forEach(area => {\n      const areaSnapshot: IAreaSnapshot = {\n        area,\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, this.direction),\n        sizePercentAtStart: (this.unit === 'percent') ? area.size : -1 // If pixel mode, anyway, will not be used.\n      };\n\n      if (area.order < gutterOrder) {\n        if (this.restrictMove === true) {\n          this.snapshot.areasBeforeGutter = [areaSnapshot];\n        }\n        else {\n          this.snapshot.areasBeforeGutter.unshift(areaSnapshot);\n        }\n      }\n      else if (area.order > gutterOrder) {\n        if (this.restrictMove === true) {\n          if (this.snapshot.areasAfterGutter.length === 0) this.snapshot.areasAfterGutter = [areaSnapshot];\n        }\n        else {\n          this.snapshot.areasAfterGutter.push(areaSnapshot);\n        }\n      }\n    });\n\n    this.snapshot.allInvolvedAreasSizePercent = [...this.snapshot.areasBeforeGutter, ...this.snapshot.areasAfterGutter].reduce((t, a) => t + a.sizePercentAtStart, 0);\n\n    if (this.snapshot.areasBeforeGutter.length === 0 || this.snapshot.areasAfterGutter.length === 0) {\n      return;\n    }\n\n    this.dragListeners.push(this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)));\n    this.dragListeners.push(this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)));\n    this.dragListeners.push(this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)));\n\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(this.renderer.listen('document', 'mousemove', this.dragEvent.bind(this)));\n      this.dragListeners.push(this.renderer.listen('document', 'touchmove', this.dragEvent.bind(this)));\n    });\n\n    this.displayedAreas.forEach(area => area.component.lockEvents());\n\n    this.isDragging = true;\n    this.renderer.addClass(this.elRef.nativeElement, 'as-dragging');\n    this.renderer.addClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged');\n\n    this.notify('start', this.snapshot.gutterNum);\n  }\n\n  private dragEvent(event: MouseEvent | TouchEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this._clickTimeout !== null) {\n      window.clearTimeout(this._clickTimeout);\n      this._clickTimeout = null;\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.endPoint = getPointFromEvent(event);\n    if (this.endPoint === null) {\n      return;\n    }\n\n    // Calculate steppedOffset\n\n    let offset = (this.direction === 'horizontal') ? (this.startPoint.x - this.endPoint.x) : (this.startPoint.y - this.endPoint.y);\n    if (this.dir === 'rtl') {\n      offset = -offset;\n    }\n    const steppedOffset = Math.round(offset / this.gutterStep) * this.gutterStep;\n\n    if (steppedOffset === this.snapshot.lastSteppedOffset) {\n      return;\n    }\n\n    this.snapshot.lastSteppedOffset = steppedOffset;\n\n    // Need to know if each gutter side areas could reacts to steppedOffset\n\n    let areasBefore = getGutterSideAbsorptionCapacity(this.unit, this.snapshot.areasBeforeGutter, -steppedOffset, this.snapshot.allAreasSizePixel);\n    let areasAfter = getGutterSideAbsorptionCapacity(this.unit, this.snapshot.areasAfterGutter, steppedOffset, this.snapshot.allAreasSizePixel);\n\n    // Each gutter side areas can't absorb all offset\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\n      }\n      else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\n        areasAfter = getGutterSideAbsorptionCapacity(this.unit, this.snapshot.areasAfterGutter, steppedOffset + areasBefore.remain, this.snapshot.allAreasSizePixel);\n      }\n      else {\n        areasBefore = getGutterSideAbsorptionCapacity(this.unit, this.snapshot.areasBeforeGutter, -(steppedOffset - areasAfter.remain), this.snapshot.allAreasSizePixel);\n      }\n    }\n    // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\n    else if (areasBefore.remain !== 0) {\n      areasAfter = getGutterSideAbsorptionCapacity(this.unit, this.snapshot.areasAfterGutter, steppedOffset + areasBefore.remain, this.snapshot.allAreasSizePixel);\n    }\n    // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\n    else if (areasAfter.remain !== 0) {\n      areasBefore = getGutterSideAbsorptionCapacity(this.unit, this.snapshot.areasBeforeGutter, -(steppedOffset - areasAfter.remain), this.snapshot.allAreasSizePixel);\n    }\n\n    if (this.unit === 'percent') {\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\n      const all = [...areasBefore.list, ...areasAfter.list];\n      const areaToReset = all.find(a => a.percentAfterAbsorption !== 0 && a.percentAfterAbsorption !== a.areaSnapshot.area.minSize && a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize)\n\n      if (areaToReset) {\n        areaToReset.percentAfterAbsorption = this.snapshot.allInvolvedAreasSizePercent - all.filter(a => a !== areaToReset).reduce((total, a) => total + a.percentAfterAbsorption, 0);\n      }\n    }\n\n    // Now we know areas could absorb steppedOffset, time to really update sizes\n\n    areasBefore.list.forEach(item => updateAreaSize(this.unit, item));\n    areasAfter.list.forEach(item => updateAreaSize(this.unit, item));\n\n    this.refreshStyleSizes();\n    this.notify('progress', this.snapshot.gutterNum);\n  }\n\n  private stopDragging(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.displayedAreas.forEach(area => area.component.unlockEvents());\n\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop();\n      if (fct) fct();\n    }\n\n    // Warning: Have to be before \"notify('end')\"\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\n    this.isDragging = false;\n\n    // If moved from starting point, notify end\n    if (this.endPoint && (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)) {\n      this.notify('end', this.snapshot.gutterNum);\n    }\n\n    this.renderer.removeClass(this.elRef.nativeElement, 'as-dragging');\n    this.renderer.removeClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged');\n    this.snapshot = null;\n\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.startPoint = null;\n        this.endPoint = null;\n      })\n    });\n  }\n\n  public notify(type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd', gutterNum: number): void {\n    const sizes = this.getVisibleAreaSizes();\n\n    if (type === 'start') {\n      this.dragStart.emit({ gutterNum, sizes });\n    }\n    else if (type === 'end') {\n      this.dragEnd.emit({ gutterNum, sizes });\n    }\n    else if (type === 'click') {\n      this.gutterClick.emit({ gutterNum, sizes });\n    }\n    else if (type === 'dblclick') {\n      this.gutterDblClick.emit({ gutterNum, sizes });\n    }\n    else if (type === 'transitionEnd') {\n      if (this.transitionEndSubscriber) {\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\n      }\n    }\n    else if (type === 'progress') {\n      // Stay outside zone to allow users do what they want about change detection mechanism.\n      this.dragProgressSubject.next({ gutterNum, sizes });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.stopDragging();\n  }\n}\n","import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';\n\nimport { SplitComponent } from '../component/split.component';\nimport { getInputPositiveNumber, getInputBoolean } from '../utils';\n\n@Directive({\n  selector: 'as-split-area, [as-split-area]',\n  exportAs: 'asSplitArea'\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n\n  private _order: number | null = null;\n\n  @Input() set order(v: number | null) {\n    this._order = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, true, false);\n  }\n\n  get order(): number | null {\n    return this._order;\n  }\n\n  ////\n\n  private _size: number | null = null;\n\n  @Input() set size(v: number | null) {\n    this._size = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get size(): number | null {\n    return this._size;\n  }\n\n  ////\n\n  private _minSize: number | null = null;\n\n  @Input() set minSize(v: number | null) {\n    this._minSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get minSize(): number | null {\n    return this._minSize;\n  }\n\n  ////\n\n  private _maxSize: number | null = null;\n\n  @Input() set maxSize(v: number | null) {\n    this._maxSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get maxSize(): number | null {\n    return this._maxSize;\n  }\n\n  ////\n\n  private _lockSize: boolean = false;\n\n  @Input() set lockSize(v: boolean) {\n    this._lockSize = getInputBoolean(v);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get lockSize(): boolean {\n    return this._lockSize;\n  }\n\n  ////\n\n  private _visible: boolean = true;\n\n  @Input() set visible(v: boolean) {\n    this._visible = getInputBoolean(v);\n\n    if (this._visible) {\n      this.split.showArea(this);\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-hidden');\n    }\n    else {\n      this.split.hideArea(this);\n      this.renderer.addClass(this.elRef.nativeElement, 'as-hidden');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  ////\n\n  private transitionListener?: Function;\n  private readonly lockListeners: Array<Function> = [];\n\n  constructor(private ngZone: NgZone,\n    public elRef: ElementRef,\n    private renderer: Renderer2,\n    private split: SplitComponent) {\n    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');\n  }\n\n  public ngOnInit(): void {\n    this.split.addArea(this);\n\n    this.ngZone.runOutsideAngular(() => {\n      this.transitionListener = this.renderer.listen(this.elRef.nativeElement, 'transitionend', (event: TransitionEvent) => {\n        // Limit only flex-basis transition to trigger the event\n        if (event.propertyName === 'flex-basis') {\n          this.split.notify('transitionEnd', -1);\n        }\n      });\n    });\n  }\n\n  public setStyleOrder(value: number): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\n  }\n\n  public setStyleFlex(grow: number, shrink: number, basis: string, isMin: boolean, isMax: boolean): void {\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis);\n\n    if (isMin === true) this.renderer.addClass(this.elRef.nativeElement, 'as-min');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-min');\n\n    if (isMax === true) this.renderer.addClass(this.elRef.nativeElement, 'as-max');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-max');\n  }\n\n  public lockEvents(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false));\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false));\n    });\n  }\n\n  public unlockEvents(): void {\n    while (this.lockListeners.length > 0) {\n      const fct = this.lockListeners.pop();\n      if (fct) fct();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unlockEvents();\n\n    if (this.transitionListener) {\n      this.transitionListener();\n    }\n\n    this.split.removeArea(this);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SplitComponent } from './component/split.component';\nimport { SplitAreaDirective } from './directive/splitArea.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SplitComponent,\n    SplitAreaDirective,\n  ],\n  exports: [\n    SplitComponent,\n    SplitAreaDirective,\n  ]\n})\nexport class AngularSplitModule {\n\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AngularSplitModule,\n      providers: []\n    };\n  }\n\n  public static forChild(): ModuleWithProviders {\n    return {\n      ngModule: AngularSplitModule,\n      providers: []\n    };\n  }\n\n}\n","/*\n * Public API Surface of angular-split\n */\n\nexport { AngularSplitModule } from './lib/module';\nexport { SplitComponent } from './lib/component/split.component';\nexport { SplitAreaDirective } from './lib/directive/splitArea.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}