{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@try/svg-chart/lib/common/tooltip/position/placement.type.ts","ng://@try/svg-chart/lib/polyfills.ts","ng://@try/svg-chart/lib/common/tooltip/position/position.ts","ng://@try/svg-chart/lib/common/tooltip/style.type.ts","ng://@try/svg-chart/lib/common/tooltip/alignment.type.ts","ng://@try/svg-chart/lib/common/tooltip/show.type.ts","ng://@try/svg-chart/lib/common/tooltip/injection.service.ts","ng://@try/svg-chart/lib/common/tooltip/injection-registery.service.ts","ng://@try/svg-chart/lib/utils/throttle.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.component.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.service.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.directive.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.module.ts","ng://@try/svg-chart/lib/common/charts/chart.component.ts","ng://@try/svg-chart/lib/common/legend/scale-legend.component.ts","ng://@try/svg-chart/lib/common/label.helper.ts","ng://@try/svg-chart/lib/common/legend/legend.component.ts","ng://@try/svg-chart/lib/common/legend/legend-entry.component.ts","ng://@try/svg-chart/lib/common/trim-label.helper.ts","ng://@try/svg-chart/lib/common/legend/advanced-legend.component.ts","ng://@try/svg-chart/lib/utils/id.ts","ng://@try/svg-chart/lib/utils/color-sets.ts","ng://@try/svg-chart/lib/utils/sort.ts","ng://@try/svg-chart/lib/utils/color-utils.ts","ng://@try/svg-chart/lib/utils/visibility-observer.ts","ng://@try/svg-chart/lib/common/base-chart/base-chart.component.ts","ng://@try/svg-chart/lib/common/axes/axis-label.component.ts","ng://@try/svg-chart/lib/common/axes/ticks.helper.ts","ng://@try/svg-chart/lib/common/axes/x-axis-ticks.component.ts","ng://@try/svg-chart/lib/common/axes/x-axis.component.ts","ng://@try/svg-chart/lib/common/shape.helper.ts","ng://@try/svg-chart/lib/events.ts","ng://@try/svg-chart/lib/common/axes/y-axis-ticks.component.ts","ng://@try/svg-chart/lib/common/axes/y-axis.component.ts","ng://@try/svg-chart/lib/common/axes/axes.module.ts","ng://@try/svg-chart/lib/common/color.helper.ts","ng://@try/svg-chart/lib/common/circle-series/circle-series.component.ts","ng://@try/svg-chart/lib/common/circle/circle.component.ts","ng://@try/svg-chart/lib/common/grid-panel/grid-panel.component.ts","ng://@try/svg-chart/lib/common/grid-panel-series/grid-panel-series.component.ts","ng://@try/svg-chart/lib/common/svg-linear-gradient/svg-linear-gradient.component.ts","ng://@try/svg-chart/lib/common/svg-radial-gradient/svg-radial-gradient.component.ts","ng://@try/svg-chart/lib/common/timeline/timeline.component.ts","ng://@try/svg-chart/lib/area/area.component.ts","ng://@try/svg-chart/lib/common/tooltip-area/tooltip-area.component.ts","ng://@try/svg-chart/lib/common/count/count.helper.ts","ng://@try/svg-chart/lib/common/count/count.directive.ts","ng://@try/svg-chart/lib/common/chart-common.module.ts","ng://@try/svg-chart/lib/common/view-dimensions.helper.ts","ng://@try/svg-chart/lib/common/domain.helper.ts","ng://@try/svg-chart/lib/bar-chart/series-vertical/series-vertical.component.ts","ng://@try/svg-chart/lib/area-chart/area-chart.component.ts","ng://@try/svg-chart/lib/area-chart/area-chart-normalized.component.ts","ng://@try/svg-chart/lib/area-chart/area-chart-stacked.component.ts","ng://@try/svg-chart/lib/area-chart/area-series.component.ts","ng://@try/svg-chart/lib/area-chart/area-chart.module.ts","ng://@try/svg-chart/lib/bar-chart/bar/bar.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal/bar-horizontal.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal-2d/bar-horizontal-2d.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal-normalized/bar-horizontal-normalized.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal-stacked/bar-horizontal-stacked.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical/bar-vertical.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical-2d/bar-vertical-2d.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical-normalized/bar-vertical-normalized.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical-stacked/bar-vertical-stacked.component.ts","ng://@try/svg-chart/lib/bar-chart/series-horizontal/series-horizontal.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-label/bar-label.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-chart.module.ts","ng://@try/svg-chart/lib/bubble-chart/bubble-chart.utils.ts","ng://@try/svg-chart/lib/bubble-chart/bubble-chart.component.ts","ng://@try/svg-chart/lib/bubble-chart/bubble-series.component.ts","ng://@try/svg-chart/lib/bubble-chart/bubble-chart.module.ts","ng://@try/svg-chart/lib/heat-map/heat-map-cell.component.ts","ng://@try/svg-chart/lib/heat-map/heat-map-cell-series.component.ts","ng://@try/svg-chart/lib/heat-map/heat-map.component.ts","ng://@try/svg-chart/lib/heat-map/heat-map.module.ts","ng://@try/svg-chart/lib/line-chart/line.component.ts","ng://@try/svg-chart/lib/line-chart/line-chart.component.ts","ng://@try/svg-chart/lib/line-chart/line-series.component.ts","ng://@try/svg-chart/lib/line-chart/line-chart.module.ts","ng://@try/svg-chart/lib/polar-chart/polar-chart.component.ts","ng://@try/svg-chart/lib/utils/types.ts","ng://@try/svg-chart/lib/polar-chart/polar-series.component.ts","ng://@try/svg-chart/lib/pie-chart/advanced-pie-chart.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-label.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-arc.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-chart.component.ts","ng://@try/svg-chart/lib/common/grid-layout.helper.ts","ng://@try/svg-chart/lib/pie-chart/pie-grid.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-grid-series.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-series.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-chart.module.ts","ng://@try/svg-chart/lib/polar-chart/polar-chart.module.ts","ng://@try/svg-chart/lib/number-card/card.component.ts","ng://@try/svg-chart/lib/number-card/card-series.component.ts","ng://@try/svg-chart/lib/number-card/number-card.component.ts","ng://@try/svg-chart/lib/number-card/number-card.module.ts","ng://@try/svg-chart/lib/tree-map/tree-map-cell.component.ts","ng://@try/svg-chart/lib/tree-map/tree-map-cell-series.component.ts","ng://@try/svg-chart/lib/tree-map/tree-map.component.ts","ng://@try/svg-chart/lib/tree-map/tree-map.module.ts","ng://@try/svg-chart/lib/gauge/linear-gauge.component.ts","ng://@try/svg-chart/lib/gauge/gauge.component.ts","ng://@try/svg-chart/lib/gauge/gauge-arc.component.ts","ng://@try/svg-chart/lib/gauge/gauge-axis.component.ts","ng://@try/svg-chart/lib/gauge/gauge.module.ts","ng://@try/svg-chart/lib/svg-chart.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","PlacementTypes","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","SVGElement","contains","HTMLDivElement","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","height","undefined","horizontalPosition","left","width","StyleTypes","AlignmentTypes","ShowTypes","PositionHelper","calculateVerticalAlignment","result","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","right","bottom","positionContent","determinePlacement","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","InjectionService_1","globalRootViewContainer","getRootViewContainer","rootComponents","components","_container","Error","setRootViewContainer","getComponentRootNode","componentRef","hostView","rootNodes","element","nativeElement","getRootViewContainerNode","projectComponentBindings","component","bindings","inputs","bindingKeys","getOwnPropertyNames","bindingKeys_1","tslib_1.__values","bindingKeys_1_1","bindingName","instance","outputs","eventKeys","eventKeys_1","eventKeys_1_1","eventName","appendComponent","componentClass","location","resolveComponentFactory","appRef","componentRootNode","attachView","onDestroy","detachView","renderer","appendChild","Injectable","ApplicationRef","ComponentFactoryResolver","Injector","InjectionRegistery","injectionService","defaults","Map","getByType","type","get","createByType","assignDefaults","injectComponent","register","destroy","compsByType","componentType","idx","indexOf","splice","destroyAll","destroyByType","comps","comps_1","comps_1_1","comp","_a","has","set","throttle","func","wait","options","context","args","timeout","previous","later","leading","Date","now","remaining","clearTimeout","trailing","setTimeout","throttleable","duration","descriptor","configurable","enumerable","TooltipContentComponent","clz","cssClass","ngAfterViewInit","position","bind","_this","nativeElm","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","tslib_1.__decorate","Input","ViewChild","HostBinding","HostListener","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","TooltipService","_super","tslib_1.__extends","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipTitle","tooltipAppendToBody","tooltipSpacing","tooltipDisabled","tooltipShowCaret","tooltipPlacement","tooltipAlignment","center","tooltipType","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","EventEmitter","hide","focus","mouseover","ngOnDestroy","hideTooltip","onFocus","listensForFocus","showTooltip","onBlur","onMouseEnter","listensForHover","onMouseLeave","onMouseClick","immediate","time","createBoundOptions","addHideListeners","emit","tooltip","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","document","event","destroyFn","title","tooltipTemplate","tooltipContext","Output","Directive","ViewContainerRef","TooltipModule","NgModule","declarations","providers","exports","imports","CommonModule","entryComponents","ChartComponent","vcr","showLegend","animations","legendLabelClick","legendLabelActivate","legendLabelDeactivate","ngOnChanges","changes","update","legendColumns","legendType","getLegendType","legendOptions","chartColumns","chartWidth","view","legendWidth","scaleType","changeDetection","ChangeDetectionStrategy","OnPush","trigger","transition","style","opacity","animate","ScaleLegendComponent","sanitizer","horizontal","gradientValues","gradientString","colors","range","domain","direction","gradient","bypassSecurityTrustStyle","splits","pairs","reverse","forEach","Math","round","join","DomSanitizer","formatLabel","label","toLocaleDateString","toLocaleString","LegendComponent","cd","labelClick","labelActivate","labelDeactivate","legendEntries","markForCheck","getLegendEntries","items","formattedLabel","findIndex","color","this_1","getColor","_b","data","_c","isActive","entry","activeEntries","find","name","activate","item","deactivate","trackBy","index","ChangeDetectorRef","LegendEntryComponent","select","toggle","trimLabel","max","trim","slice","AdvancedLegendComponent","legendItems","labelFormatting","percentageFormatting","percentage","defaultValueFormatting","getTotal","map","reduce","sum","total","roundedTotal","getLegendItems","_value","displayLabel","origialLabel","preserveWhitespaces","cache","id","newId","random","pow","toString","colorSets","selectable","group","sortLinear","property","sort","a","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","aDate","getTime","bDate","invertColor","rgb","g","percent","shadeRGBColor","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","BaseChartComponent","chartElement","scheme","schemeType","bindWindowResizeEvent","visibilityObserver","subscribe","unbindEvents","unsubscribe","results","cloneData","dims","getContainerDims","hostElem","parentNode","formatDates","series","j","resizeSubscription","subscription","observableFromEvent","pipe","debounceTime","data_1","data_1_1","copy","_d","seriesItem","seriesItemCopy","JSON","parse","stringify","NgZone","AxisLabelComponent","textHeight","margin","strokeWidth","textAnchor","transform","orient","y","offset","x","reduceTicks","ticks","maxTicks","reduced","modulus","floor","XAxisTicksComponent","tickArguments","tickStroke","trimTicks","maxTickLength","showGridLines","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","maxTicksLength","maxAllowedLength","updateDims","parseInt","ticksElement","scale","getTicks","tickFormatting","tickFormat","angle","getRotationAngle","adjustedScale","bandwidth","textTransform","tick","tickLength","tickTrim","wordWidth","min","baseWidth","maxBaseWidth","cos","PI","getMaxTicks","maxScaleTicks","tickValues","tickWidth","tickTransform","gridLineTransform","XAxisComponent","xOrient","xAxisOffset","xAxisClassName","labelOffset","fill","stroke","padding","xAxisTickCount","emitTicksHeight","newLabelOffset","roundedRect","w","h","tl","tr","bl","br","retval","root","YAxisTicksComponent","showRefLabels","showRefLines","referenceLineLength","sign","tickSpacing","referenceLines","setReferencelines","y2","y1","dy","x2","x1","refMin","refMax","referenceAreaPath","gridLineWidth","tickHeight","YAxisComponent","yOrient","yAxisOffset","yAxisClassName","yAxisTickCount","emitTicksWidth","AxesModule","ColorHelper","customColors","cs","colorDomain","generateColorScheme","colorScale","scaleQuantile","scaleOrdinal","points","scaleLinear","valueScale","formattedValue_1","found","mapping","toLowerCase","getLinearGradientStops","start","colorValueScale","scaleBand","endColor","startVal","startColor","endVal","currentVal","stops","originalOffset","toFixed","stops_1","stops_1_1","CircleSeriesComponent","barVisible","ngOnInit","gradientId","gradientFill","circle","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","cx","seriesName","tooltipLabel","xScale","Number","cy","yScale","d1","classNames","radius","gradientStops","getGradientStops","getTooltipText","getTooltipMinMaxText","onClick","activateCircle","deactivateCircle","TemplateRef","CircleComponent","isArray","GridPanelComponent","GridPanelSeriesComponent","gridPanels","getGridPanels","className","step","paddingInner","class","SvgLinearGradientComponent","orientation","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","startOpacity","TimelineComponent","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","_e","_f","includes","v","scaleTime","scalePoint","brushX","extent","on","newDomain","d3event","selection","invert","attr","AreaComponent","hasGradient","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","path","global","MouseEvent","TooltipAreaComponent","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","groupName","val","d0","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","xSet","lastAnchorPos","ev","bubbles","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","abs","getToolTipText","tooltipItem","easeOutExpo","count","countFrom","countTo","countDecimals","countDuration","callback","startTime","countDown","decimals","dec","requestAnimationFrame","timestamp","runCount","frameVal","progress","finished","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","cancelAnimationFrame","animationReq","valueFormatting","COMPONENTS","ChartCommonModule","Location","provide","LocationStrategy","useClass","PathLocationStrategy","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","_g","showYLabel","_h","_j","_k","legendPosition","_l","columns","xOffset","chartHeight","getUniqueXDomainValues","valueSet","Set","results_1","results_1_1","add","from","getScaleType","checkDateType","every","D0Types","AreaChartComponent","legendTitle","baseValue","curve","curveLinear","trimXAxisTicks","trimYAxisTicks","maxXAxisTickLength","maxYAxisTickLength","roundDomains","timelineHeight","timelinePadding","xAxis","yAxis","showXAxisLabel","showYAxisLabel","legend","timeline","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","clipPath","timelineWidth","timelineXDomain","timelineXScale","timelineYScale","timelineTransform","xScaleMin","xScaleMax","tslib_1.__spread","autoScale","yScaleMin","yScaleMax","nice","date","num","values_1","values_1_1","isDate","updateDomain","updateHoveredVertical","hoveredVertical","deactivateAll","hideCircles","opts","updateYAxisWidth","updateXAxisHeight","onActivate","entries","onDeactivate","ContentChild","AreaChartNormalizedComponent","valueOf","AreaChartStackedComponent","this_2","AreaSeriesComponent","stacked","normalized","currentArea","startingArea","updateGradient","xProperty","area","y0","d0values","d1values","isInactive","AreaChartModule","BarComponent","roundEdges","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarHorizontalComponent","barPadding","showDataLabel","dataLabelMaxWidth","negative","positive","rangeRound","onDataLabelMaxWidthChanged","size","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valuesDomain","getValueDomain","groupScale","getGroupScale","innerScale","getInnerScale","getValueScale","paddingOuter","groupTransform","groupIndex","BarHorizontalNormalizedComponent","valueDomain","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","BarVerticalComponent","dataLabelMaxHeight","onDataLabelMaxHeightChanged","BarVertical2DComponent","BarVerticalNormalizedComponent","BarVerticalStackedComponent","SeriesVerticalComponent","dataLabelHeightChanged","barsForDataLabels","updateTooltipSettings","d0Type","bars","bar","offset1","offset0","ariaLabel","tooltipText","updateDataLabels","section","totalPositive","totalNegative","trackDataLabelBy","barLabel","SeriesHorizontalComponent","dataLabelWidthChanged","click","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","BarChartModule","getDomain","minVal","maxVal","getScale","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","rScale","getRScale","setScales","getBubblePadding","yMin","xMin","yMax","xMax","xScaleType","yScaleType","Infinity","BubbleSeriesComponent","circles","getCircles","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","xAxisLabel","yAxisLabel","BubbleChartModule","HeatMapCellComponent","gradientUrl","animateToCurrentForm","HeatCellSeriesComponent","cells","getCells","row","cell","HeatMapComponent","innerPadding","rects","getRects","getDimension","N","L","replace","split","f","yVal","rx","HeatMapModule","LineComponent","initialPath","strokeDasharray","strokeDashoffset","LineChartComponent","hasRange","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","outerPath","line","areaGradientStops","LineChartModule","twoPI","PolarChartComponent","curveCardinalClosed","rangeFillOpacity","showSeriesOnHover","yAxisMinScale","labelTrim","labelTrimSize","setDims","setTicks","halfWidth","halfHeight","outerRadius","yOffset","yAxisDims","transformYAxis","transformPlot","xValues","getXValues","yAxisScale","xAxisTickFormatting","thetaTicks","startAngle","dd","startPos","sin","innerRadius","endAngle","pos","radiusTicks","getYValues","PolarSeriesComponent","circleRadius","linearScaleType","seriesColor","getAngle","active","inactive","defaultTooltipText","lineRadial","AdvancedPieChartComponent","PieLabelComponent","isIE","test","navigator","userAgent","startRadius","explodeSlices","innerPos","arc","centroid","outerPos","textX","textY","midAngle","PieArcComponent","cornerRadius","pointerEvents","dblclick","getPointerEvents","calc","calculateArc","radialGradientId","updateAnimation","selectAll","attrTween","_current","copyOfD","interpolater","interpolate","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieChartComponent","labels","doughnut","arcWidth","trimLabels","maxLabelLength","translation","gridSize","len","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","PieGridComponent","getSeries","format","other","PieGridSeriesComponent","layout","pie","arcs","getArcs","PieSeriesComponent","arcData","pieGenerator","calculateLabelPositions","outerArc","pieData","labelPositions","labelVisible","myArc","showLabels","getTooltipTitle","labelText","PieChartModule","PolarChartModule","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","hasValue","card","textWidth","cardData","transformBand","paddedValue","setPadding","bandPath","scaleText","startCount","medianSize","repeat","val_1","decs","valueFormatting_1","textEl","availableWidth","availableHeight","resizeScale","CardSeriesComponent","emptyColor","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","bandColor","textColor","NumberCardComponent","observers","NumberCardModule","TreeMapCellComponent","cellData","formattedValue","getTextColor","TreeMapCellSeriesComponent","children","depth","x0","valueType","TreeMapComponent","treemap","stratify","parentId","isRoot","TreeMapModule","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","hasPreviousValue","previousValue","displayValue","getDisplayValue","transformLine","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","GaugeComponent","bigSegments","smallSegments","showAxis","angleSpan","rotation","availableRadius","radiusPerArc","textRadius","backgroundArc","valueArc","dataMin","dataMax","textValue","availableSpace","GaugeArcComponent","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","smallTickSegment","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","text","getTickPath","smallAngle","lineGenerator","GaugeModule","SvgChartsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum PlacementTypes {\n  top = 'top' as any,\n  bottom = 'bottom' as any,\n  left = 'left' as any,\n  right = 'right' as any\n}\n","// The export is needed here to generate a valid polyfills.metadata.json file\nexport function ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ng-svg-charts/issues/386\n  if (typeof(SVGElement) !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\n\nngxChartsPolyfills();\n","import { PlacementTypes } from './placement.type';\n\nconst caretOffset = 7;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'top') {\n    return elDimensions.top - caretOffset;\n  }\n\n  if (alignment === 'bottom') {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n\n  return undefined;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'left') {\n    return elDimensions.left - caretOffset;\n  }\n\n  if (alignment === 'right') {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n\n  return undefined;\n}\n\n/**\n * Position helper for the popover directive.\n *\n * @export\n * @class PositionHelper\n */\nexport class PositionHelper {\n\n  /**\n   * Calculate vertical alignment position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate vertical caret position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'top') {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n\n    if (alignment === 'bottom') {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += (popoverPosition + popoverDimensions.height - window.innerHeight);\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz alignment position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz caret position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'left') {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n\n    if (alignment === 'right') {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += (popoverPosition + popoverDimensions.width - window.innerWidth);\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} placement\n   * @param {any} alignment\n   * @param {any} spacing\n   * @returns {boolean}\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, alignment, spacing): boolean {\n    let flip = false;\n\n    if (placement === 'right') {\n      const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'left') {\n      const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'top') {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'bottom') {\n      const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n\n    return flip;\n  }\n\n  /**\n   * Position caret\n   *\n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {*}\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    }\n\n    return { top, left };\n  }\n\n  /**\n   * Position content\n   *\n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} spacing\n   * @param {any} alignment\n   * @returns {*}\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(\n        hostDim, elmDim, alignment);\n    }\n\n    return { top, left };\n  }\n\n  /**\n   * Determine placement based on flip\n   *\n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} spacing\n   * @param {any} alignment\n   * @returns {*}\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing, alignment): any {\n    const shouldFlip = PositionHelper.shouldFlip(\n      hostDim,\n      elmDim,\n      placement,\n      alignment,\n      spacing);\n\n    if (shouldFlip) {\n      if (placement === PlacementTypes.right) {\n        return PlacementTypes.left;\n      } else if (placement === PlacementTypes.left) {\n        return PlacementTypes.right;\n      } else if (placement === PlacementTypes.top) {\n        return PlacementTypes.bottom;\n      } else if (placement === PlacementTypes.bottom) {\n        return PlacementTypes.top;\n      }\n    }\n\n    return placement;\n  }\n\n}\n","export enum StyleTypes {\n  popover = 'popover' as any,\n  tooltip = 'tooltip' as any\n}\n","export enum AlignmentTypes {\n  left = 'left' as any,\n  center = 'center' as any,\n  right = 'right' as any\n}\n","export enum ShowTypes {\n  all = 'all' as any,\n  focus = 'focus' as any,\n  mouseover = 'mouseover' as any\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  Injector,\n  EmbeddedViewRef,\n  Type,\n  Renderer2\n} from '@angular/core';\n\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n * @class InjectionService\n */\n@Injectable()\nexport class InjectionService {\n  static globalRootViewContainer: ComponentRef<any> = null;\n\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container: ComponentRef<any>): void {\n    InjectionService.globalRootViewContainer = container;\n  }\n\n  private _container: ComponentRef<any>;\n\n  constructor(\n    private applicationRef: ApplicationRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector\n  ) {}\n\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer(): ComponentRef<any> {\n    const rootComponents = this.applicationRef.components;\n\n    // fix cannot read length of undefined\n    if (rootComponents) {\n      if (rootComponents.length) { return rootComponents[0]; }\n    }\n\n    if (this._container) { return this._container; }\n    if (InjectionService.globalRootViewContainer) {\n      return InjectionService.globalRootViewContainer;\n    }\n\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer.');\n  }\n\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param {any} container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container): void {\n    this._container = container;\n  }\n\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param {ComponentRef<any>} componentRef\n   * @returns {HTMLElement}\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(componentRef: any): HTMLElement {\n    // the top most component root node has no `hostView`\n    if (!componentRef.hostView) { return componentRef.element.nativeElement; }\n\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n\n  /**\n   * Gets the root component container html element.\n   *\n   * @returns {HTMLElement}\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(): HTMLElement {\n    return this.getComponentRootNode(this.getRootViewContainer());\n  }\n\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param {ComponentRef<any>} component\n   * @param {*} options\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component: ComponentRef<any>, bindings: any): ComponentRef<any> {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n\n    return component;\n  }\n\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @template T\n   * @param {Type<T>} componentClass\n   * @param {*} [options={}]\n   * @param {Element} [location=this.getRootViewContainerNode()]\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent<T>(\n    componentClass: Type<T>,\n    bindings: any = {},\n    location: Element = this.getRootViewContainerNode()\n  ): ComponentRef<any> {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);\n    const componentRef: any = componentFactory.create(this.injector);\n    const appRef: any = this.applicationRef;\n    const componentRootNode = this.getComponentRootNode(componentRef);\n\n    // project the options passed to the component instance\n    this.projectComponentBindings(componentRef, bindings);\n\n    appRef.attachView(componentRef.hostView);\n\n    componentRef.onDestroy(() => {\n      appRef.detachView(componentRef.hostView);\n    });\n\n    // use the renderer to append the element for univseral support\n    const renderer: Renderer2 = componentRef.instance.renderer;\n    renderer.appendChild(location, componentRootNode);\n\n    return componentRef;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { InjectionService } from './injection.service';\n\nexport abstract class InjectionRegistery {\n\n  protected abstract type: any;\n\n  protected defaults: any = {};\n  protected components: Map<any, any> = new Map();\n\n  constructor(public injectionService: InjectionService) { }\n\n  getByType(type: any = this.type) {\n    return this.components.get(type);\n  }\n\n  create(bindings: any): any {\n    return this.createByType(this.type, bindings);\n  }\n\n  createByType(type: any, bindings: any): any {\n    bindings = this.assignDefaults(bindings);\n\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n\n    return component;\n  }\n\n  destroy(instance): void {\n    const compsByType = this.components.get(instance.componentType);\n\n    if (compsByType) {\n      const idx = compsByType.indexOf(instance);\n\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n\n  destroyAll(): void {\n    this.destroyByType(this.type);\n  }\n\n  destroyByType(type): void {\n    const comps = this.components.get(type);\n\n    if (comps) {\n      for(const comp of comps) {\n        this.destroy(comp);\n      }\n    }\n  }\n\n  protected assignDefaults(bindings): any {\n    const { inputs, outputs } = this.defaults;\n\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = { inputs: bindings };\n    }\n\n    if (inputs) {\n      bindings.inputs = Object.assign(inputs, bindings.inputs);\n    }\n\n    if (outputs) {\n      bindings.outputs = Object.assign(outputs, bindings.outputs);\n    }\n\n    return bindings;\n  }\n\n  protected injectComponent(type, bindings): ComponentRef<any> {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n\n  protected register(type, component): void {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n\n    const types = this.components.get(type);\n    types.push(component);\n  }\n\n}\n","\n/**\n * Throttle a function\n *\n * @export\n * @param {*}      func\n * @param {number} wait\n * @param {*}      [options]\n * @returns\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function() {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n *\n * @export\n * @param {number} duration\n * @param {*} [options]\n * @returns\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import {\n  Input, Component, ElementRef, AfterViewInit, ViewEncapsulation,\n  HostListener, ViewChild, HostBinding, Renderer2\n} from '@angular/core';\n\nimport { throttleable } from '../../utils/throttle';\nimport { PositionHelper, PlacementTypes } from './position';\n\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\n\n@Component({\n  selector: 'ngx-tooltip-content',\n  template: `\n    <div>\n      <span\n        #caretElm\n        [hidden]=\"!showCaret\"\n        class=\"tooltip-caret position-{{this.placement}}\">\n      </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template\n            [ngTemplateOutlet]=\"template\"\n            [ngTemplateOutletContext]=\"{ model: context }\">\n          </ng-template>\n        </span>\n        <span\n          *ngIf=\"title\"\n          [innerHTML]=\"title\">\n        </span>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipContentComponent implements AfterViewInit {\n\n  @Input() host: any;\n  @Input() showCaret: boolean;\n  @Input() type: StyleTypes;\n  @Input() placement: PlacementTypes;\n  @Input() alignment: AlignmentTypes;\n  @Input() spacing: number;\n  @Input() cssClass: string;\n  @Input() title: string;\n  @Input() template: any;\n  @Input() context: any;\n\n  @ViewChild('caretElm') caretElm;\n\n  @HostBinding('class')\n  get cssClasses(): string {\n    let clz = 'ng-svg-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2) {\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(this.position.bind(this));\n  }\n\n  position(): void {\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n\n    // if no dims were found, never show\n    if (!hostDim.height && !hostDim.width) { return; }\n\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n\n  positionContent(nativeElm, hostDim, elmDim): void {\n    const { top, left } = PositionHelper.positionContent(\n      this.placement, elmDim, hostDim, this.spacing, this.alignment);\n\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n\n  positionCaret(hostDim, elmDim): void {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const { top, left } = PositionHelper.positionCaret(\n      this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n\n  checkFlip(hostDim, elmDim): void {\n    this.placement = PositionHelper.determinePlacement(\n      this.placement, elmDim, hostDim, this.spacing, this.alignment);\n  }\n\n  @HostListener('window:resize')\n  @throttleable(100)\n  onWindowResize(): void {\n    this.position();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InjectionService } from './injection.service';\nimport { InjectionRegistery } from './injection-registery.service';\nimport { TooltipContentComponent } from './tooltip.component';\n\n@Injectable()\nexport class TooltipService extends InjectionRegistery {\n\n  type: any = TooltipContentComponent;\n\n  constructor(public injectionService: InjectionService) {\n    super(injectionService);\n  }\n\n}\n","import {\n  Directive, Input, Output, EventEmitter, HostListener,\n  ViewContainerRef,\n  Renderer2, OnDestroy\n} from '@angular/core';\n\nimport { PlacementTypes } from './position';\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\nimport { ShowTypes } from './show.type';\n\nimport { TooltipService } from './tooltip.service';\n\n@Directive({ selector: '[ngx-tooltip]' })\nexport class TooltipDirective implements OnDestroy {\n\n  @Input() tooltipCssClass = '';\n  @Input() tooltipTitle = '';\n  @Input() tooltipAppendToBody = true;\n  @Input() tooltipSpacing = 10;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipShowCaret = true;\n  @Input() tooltipPlacement: PlacementTypes = PlacementTypes.top;\n  @Input() tooltipAlignment: AlignmentTypes = AlignmentTypes.center;\n  @Input() tooltipType: StyleTypes = StyleTypes.popover;\n  @Input() tooltipCloseOnClickOutside = true;\n  @Input() tooltipCloseOnMouseLeave = true;\n  @Input() tooltipHideTimeout = 300;\n  @Input() tooltipShowTimeout = 100;\n  @Input() tooltipTemplate: any;\n  @Input() tooltipShowEvent: ShowTypes = ShowTypes.all;\n  @Input() tooltipContext: any;\n  @Input() tooltipImmediateExit = false;\n\n  @Output() show = new EventEmitter();\n  @Output() hide = new EventEmitter();\n\n  private get listensForFocus(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all ||\n           this.tooltipShowEvent === ShowTypes.focus;\n  }\n\n  private get listensForHover(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all ||\n           this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n\n  private component: any;\n  private timeout: any;\n  private mouseLeaveContentEvent: any;\n  private mouseEnterContentEvent: any;\n  private documentClickEvent: any;\n\n  constructor(\n    private tooltipService: TooltipService,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2) {\n  }\n\n  ngOnDestroy(): void {\n    this.hideTooltip(true);\n  }\n\n  @HostListener('focusin')\n  onFocus(): void {\n    if (this.listensForFocus) {\n       this.showTooltip();\n     }\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    if (this.listensForHover) {\n       this.showTooltip();\n     }\n  }\n\n  @HostListener('mouseleave', ['$event.target'])\n  onMouseLeave(target): void {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) { return; }\n      }\n\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n\n  @HostListener('click')\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n\n  showTooltip(immediate?: boolean): void {\n    if (this.component || this.tooltipDisabled) { return; }\n\n    const time = immediate ? 0 : this.tooltipShowTimeout;\n\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n\n      this.show.emit(true);\n    }, time);\n  }\n\n  addHideListeners(tooltip): void {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n\n    // content mouse leave listener\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n\n    // content close on click outside\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen(document, 'click', (event) => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) { this.hideTooltip(); }\n      });\n    }\n  }\n\n  hideTooltip(immediate = false): void {\n    if (!this.component) { return; }\n\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) { this.mouseLeaveContentEvent(); }\n      if (this.mouseEnterContentEvent) { this.mouseEnterContentEvent(); }\n      if (this.documentClickEvent) { this.documentClickEvent(); }\n\n      // emit events\n      this.hide.emit(true);\n\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n\n    clearTimeout(this.timeout);\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n\n  private createBoundOptions(): any {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipContentComponent } from './tooltip.component';\nimport { TooltipService } from './tooltip.service';\n\nimport { InjectionService } from './injection.service';\n\n@NgModule({\n  declarations: [TooltipContentComponent, TooltipDirective],\n  providers: [InjectionService, TooltipService],\n  exports: [TooltipContentComponent, TooltipDirective],\n  imports: [CommonModule],\n  entryComponents: [TooltipContentComponent]\n})\nexport class TooltipModule { }\n","import {\n  Component, Input, OnChanges, ViewContainerRef, ChangeDetectionStrategy, EventEmitter,\n  Output, SimpleChanges\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { TooltipService } from '../tooltip';\n\n@Component({\n  providers: [TooltipService],\n  selector: 'ng-svg-charts-chart',\n  template: `\n    <div\n      class=\"ng-svg-charts-outer\"\n      [style.width.px]=\"view[0]\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\">\n      <svg\n        class=\"ng-svg-charts\"\n        [attr.width]=\"chartWidth\"\n        [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ng-svg-charts-scale-legend\n        *ngIf=\"showLegend && legendType === 'scaleLegend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\">\n      </ng-svg-charts-scale-legend>\n      <ng-svg-charts-legend\n        *ngIf=\"showLegend && legendType === 'legend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\">\n      </ng-svg-charts-legend>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('500ms 100ms', style({ opacity: 1 }))\n      ])\n    ])\n  ]\n})\nexport class ChartComponent implements OnChanges {\n\n  @Input() view;\n  @Input() showLegend = false;\n  @Input() legendOptions: any;\n\n  // remove\n  @Input() data;\n  @Input() legendData;\n  @Input() legendType: any;\n  @Input() colors: any;\n  @Input() activeEntries: any[];\n  @Input() animations = true;\n\n  @Output() legendLabelClick: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  chartWidth: any;\n  title: any;\n  legendWidth: any;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private tooltipService: TooltipService) {\n    this.tooltipService.injectionService.setRootViewContainer(this.vcr);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n\n      if (!this.legendOptions || this.legendOptions.position === 'right') {\n        if (this.legendType === 'scaleLegend') {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n\n    const chartColumns = 12 - legendColumns;\n\n    this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);\n    this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')\n      ? ~~(this.view[0] * legendColumns / 12.0)\n      : this.chartWidth;\n  }\n\n  getLegendType(): string {\n    if (this.legendOptions.scaleType === 'linear') {\n      return 'scaleLegend';\n    } else {\n      return 'legend';\n    }\n  }\n\n}\n","import {\n  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ng-svg-charts-scale-legend',\n  template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\">\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div\n        class=\"scale-legend-wrap\"\n        [style.background]=\"gradient\">\n      </div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./scale-legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScaleLegendComponent implements OnChanges {\n\n  @Input() valueRange;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() horizontal = false;\n\n  gradient: any;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = (this.horizontal) ? 'right' : 'bottom';\n    this.gradient = this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to ${direction}, ${gradientValues})`);\n  }\n\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param  {array} colors array of colors\n   * @param  {array} splits array of splits on a scale of (0, 1)\n   * @return {string}\n   */\n  gradientString(colors, splits): string {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n\n    return pairs.join(', ');\n  }\n\n}\n","/**\n * Formats a label given a date, number or string.\n *\n * @export\n * @param {*} label\n * @returns {string}\n */\nexport function formatLabel(label: any): string {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n\n  return label;\n}\n","import {\n  Component, Input, ChangeDetectionStrategy, Output, EventEmitter,\n  SimpleChanges, OnChanges, ChangeDetectorRef, ViewEncapsulation\n } from '@angular/core';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ng-svg-charts-legend',\n  template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{title}}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\"\n            [class.horizontal-legend]=\"horizontal\"\n          [style.max-height.px]=\"height - 45\">\n          <li\n            *ngFor=\"let entry of legendEntries; trackBy: trackBy\"\n            class=\"legend-label\">\n            <ng-svg-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\">\n            </ng-svg-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendComponent implements OnChanges {\n\n  @Input() data;\n  @Input() title;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() activeEntries;\n  @Input() horizontal = false;\n\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @Output() labelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  legendEntries: any[] = [];\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n\n  getLegendEntries(): any[] {\n    const items = [];\n\n    for(const label of this.data) {\n      const formattedLabel = formatLabel(label);\n\n      const idx = items.findIndex((i) => {\n        return i.label === formattedLabel;\n      });\n\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n\n    return items;\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n\n  trackBy(index, item): string {\n    return item.label;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  HostListener,\n  EventEmitter\n } from '@angular/core';\n\n@Component({\n  selector: 'ng-svg-charts-legend-entry',\n  template: `\n    <span\n      [title]=\"formattedLabel\"\n      tabindex=\"-1\"\n      [class.active]=\"isActive\"\n      (click)=\"select.emit(formattedLabel)\">\n      <span\n        class=\"legend-label-color\"\n        [style.background-color]=\"color\"\n        (click)=\"toggle.emit(formattedLabel)\">\n      </span>\n      <span class=\"legend-label-text\">\n        {{trimmedLabel}}\n      </span>\n    </span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendEntryComponent {\n\n  @Input() color: string;\n  @Input() label: any;\n  @Input() formattedLabel: string;\n  @Input() isActive = false;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  get trimmedLabel(): string {\n    return this.formattedLabel || '(empty)';\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit({name: this.label});\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit({name: this.label});\n  }\n\n}\n","export function trimLabel(s, max = 16): string {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ng-svg-charts-advanced-legend',\n  template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ng-svg-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\">\n      </div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.label)\"\n            (mouseleave)=\"deactivate.emit(legendItem.label)\"\n            (click)=\"select.emit({ name: legendItem.label, value: legendItem.value })\">\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ng-svg-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\">\n            </div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ng-svg-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\">\n            </div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./advanced-legend.component.scss'],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedLegendComponent implements OnChanges {\n  @Input() width: number;\n  @Input() data;\n  @Input() colors;\n  @Input() label = 'Total';\n  @Input() animations = true;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  legendItems: any[] = [];\n  total: number;\n  roundedTotal: number;\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() labelFormatting: (value: string) => any = label => label;\n  @Input() percentageFormatting: (value: number) => any = percentage => percentage;\n\n  defaultValueFormatting: (value: number) => any = value => value.toLocaleString();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getTotal(): number {\n    return this.data.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n\n  update(): void {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n\n    this.legendItems = this.getLegendItems();\n  }\n\n  getLegendItems(): any {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n\n      return {\n        _value: value,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n\n  trackBy(item) {\n    return item.formattedLabel;\n  }\n}\n","const cache = {};\n\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nexport function id(): string {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","export let colorSets = [\n  {\n    name: 'vivid',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514'\n    ]\n  },\n  {\n    name: 'natural',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3'\n    ]\n  },\n  {\n    name: 'cool',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886'\n    ]\n  },\n  {\n    name: 'fire',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00'\n    ]\n  },\n  {\n    name: 'solar',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'\n    ]\n  },\n  {\n    name: 'air',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'\n    ]\n  },\n  {\n    name: 'aqua',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'\n    ]\n  },\n  {\n    name: 'flame',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738'\n    ]\n  },\n  {\n    name: 'ocean',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1'\n    ]\n  },\n  {\n    name: 'forest',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32'\n    ]\n  },\n  {\n    name: 'horizon',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0'\n    ]\n  },\n  {\n    name: 'neons',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600'\n    ]\n  },\n  {\n    name: 'picnic',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8'\n    ]\n  },\n  {\n    name: 'night',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634',\n      '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D'\n    ]\n  },\n  {\n    name: 'nightLights',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b',\n      '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3'\n    ]\n  }\n];\n","export function sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\n\nexport function sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\n\nexport function sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\n","import { color, rgb } from 'd3-color';\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nexport function hexToRgb(value: string): any {\n  // deprecated, use d3.color()\n  return rgb(value);\n}\n\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nexport function invertColor(value: string): string {\n  const color = rgb(value);\n  const { r, g, b, opacity } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n  const depth = (yiq >= 128) ? -.8 : .8;\n\n  return shadeRGBColor(color, depth);\n}\n\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n */\nexport function shadeRGBColor({ r, g, b }, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n\n  r = (Math.round((t - r) * p) + r);\n  g = (Math.round((t - g) * p) + g);\n  b = (Math.round((t - b) * p) + b);\n\n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import { Output, EventEmitter, NgZone } from '@angular/core';\n\n/**\n * Visibility Observer\n */\nexport class VisibilityObserver {\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n  isVisible = false;\n\n  constructor(private element: any, private zone: NgZone) {\n    this.runCheck();\n  }\n\n  destroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n\n}\n","import {\n  ElementRef, NgZone, ChangeDetectorRef, Component, Input,\n  Output, EventEmitter, AfterViewInit, OnDestroy, OnChanges, SimpleChanges\n} from '@angular/core';\n\nimport { fromEvent as observableFromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { VisibilityObserver } from '../../utils';\n\n@Component({\n  selector: 'base-chart',\n  template: `<div></div>`\n})\nexport class BaseChartComponent implements OnChanges, AfterViewInit, OnDestroy {\n\n  @Input() results: any;\n  @Input() view: number[];\n  @Input() scheme: any = 'cool';\n  @Input() schemeType = 'ordinal';\n  @Input() customColors: any;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  width: number;\n  height: number;\n  resizeSubscription: any;\n  visibilityObserver: VisibilityObserver;\n\n  constructor(\n    protected chartElement: ElementRef,\n    protected zone: NgZone,\n    protected cd: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit(): void {\n    this.bindWindowResizeEvent();\n\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results =  [];\n    }\n\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n\n    if (!this.height) {\n      this.height = 400;\n    }\n\n    // tslint:disable-next-line: no-bitwise\n    this.width = ~~this.width;\n    // tslint:disable-next-line: no-bitwise\n    this.height = ~~this.height;\n\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n\n  getContainerDims(): any {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n\n    if (hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n\n    if (width && height) {\n      return { width, height };\n    }\n\n    return null;\n  }\n\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n\n      if (g.name instanceof Date) {\n        g.name = g.name.toLocaleDateString();\n      }\n\n      if (g.series) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          if (d.name instanceof Date) {\n            d.name = d.name.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n\n  protected unbindEvents(): void {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  private bindWindowResizeEvent(): void {\n    const source = observableFromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n\n  /**\n   * Clones the data into a new object\n   *\n   * @private\n   * @param {any} data\n   * @returns {*}\n   *\n   * @memberOf BaseChart\n   */\n  private cloneData(data): any {\n    const results = [];\n\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-axis-label]',\n  template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\">\n      {{label}}\n    </svg:text>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AxisLabelComponent implements OnChanges {\n\n  @Input() orient;\n  @Input() label;\n  @Input() offset;\n  @Input() width;\n  @Input() height;\n\n  x: any;\n  y: any;\n  transform: any;\n  strokeWidth: any;\n  textAnchor: any;\n  element: ElementRef;\n  textHeight = 25;\n  margin = 5;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n\n    switch (this.orient) {\n      case 'top':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'bottom':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'left':\n        this.y = - (this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case 'right':\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n\n}\n","export function reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n\n  return ticks;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  SimpleChanges,\n  AfterViewInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-x-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n        [attr.transform]=\"tickTransform(tick)\">\n        <title>{{tickFormat(tick)}}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\">\n          {{tickTrim(tickFormat(tick))}}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\"\n      [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          class=\"gridline-path gridline-path-vertical\"\n          [attr.y1]=\"-gridLineHeight\"\n          y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisTicksComponent implements OnChanges, AfterViewInit {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks = true;\n  @Input() maxTickLength = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineHeight;\n  @Input() width;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  verticalSpacing = 20;\n  rotateLabels = false;\n  innerTickSize = 6;\n  outerTickSize = 6;\n  tickPadding = 3;\n  textAnchor = 'middle';\n  maxTicksLength = 0;\n  maxAllowedLength = 16;\n  adjustedScale: any;\n  textTransform: any;\n  ticks: any;\n  tickFormat: (o: any) => any;\n  height = 0;\n\n  @ViewChild('ticksel') ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({ height });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = (d) => {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    const angle = this.getRotationAngle(this.ticks);\n\n    this.adjustedScale = this.scale.bandwidth\n      ? function(d) {\n          return this.scale(d) + this.scale.bandwidth() * 0.5;\n        }\n      : this.scale;\n\n    this.textTransform = '';\n    if (angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = 'end';\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = 'middle';\n    }\n\n    setTimeout(() => this.updateDims());\n  }\n\n  getRotationAngle(ticks): number {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 8; // need to measure this\n    const wordWidth = len * charWidth;\n\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n\n    return angle;\n  }\n\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickWidth: number): number {\n    return Math.floor(this.width / tickWidth);\n  }\n\n  tickTransform(tick): string {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform(): string {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\n\n@Component({\n  selector: 'g[ng-svg-charts-x-axis]',\n  template: `\n    <svg:g\n      [attr.class]=\"xAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g ng-svg-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g ng-svg-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"'bottom'\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisComponent implements OnChanges {\n\n  @Input() xScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() ticks: any[];\n  @Input() xAxisTickInterval;\n  @Input() xAxisTickCount: any;\n  @Input() xOrient = 'bottom';\n  @Input() xAxisOffset = 0;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  xAxisClassName = 'x axis';\n\n  tickArguments: any;\n  transform: any;\n  labelOffset = 0;\n  fill = 'none';\n  stroke = 'stroke';\n  tickStroke = '#ccc';\n  strokeWidth = 'none';\n  padding = 5;\n\n  @ViewChild(XAxisTicksComponent) ticksComponent: XAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n\n  emitTicksHeight({ height }): void {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({height});\n      }, 0);\n    }\n  }\n\n}\n","/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param {*} x, y, w, h, r, tl, tr, bl, br\n * @returns {string}\n */\nexport function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {\n  let retval = '';\n\n  w = Math.floor(w);\n  h = Math.floor(h);\n\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n\n  retval += `v${h - 2 * r}`;\n\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n\n  retval += `h${2 * r - w}`;\n\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n\n  retval += `v${2 * r - h}`;\n\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n\n  retval += `z`;\n\n  return retval;\n}\n","declare let global: any;\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root: any;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n\n// tslint:disable-next-line:variable-name\nexport const MouseEvent = root.MouseEvent as MouseEvent & {\n  prototype?: MouseEvent;\n  new (typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\n};\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\nimport { roundedRect } from '../../common/shape.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-y-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n        [attr.transform]=\"transform(tick)\" >\n        <title>{{tickFormat(tick)}}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\">\n          {{tickTrim(tickFormat(tick))}}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\"\n      [attr.transform]=\"transform(tick)\">\n      <svg:g\n        *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n        <svg:line *ngIf=\"orient === 'left'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\" />\n        <svg:line *ngIf=\"orient === 'right'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\" />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"/>\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{tickTrim(tickFormat(refLine.value))}}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\" >\n            {{refLine.name}}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisTicksComponent implements OnChanges, AfterViewInit {\n\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks = true;\n  @Input() maxTickLength = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineWidth;\n  @Input() height;\n  @Input() referenceLines;\n  @Input() showRefLabels = false;\n  @Input() showRefLines = false;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  innerTickSize: any = 6;\n  tickPadding: any = 3;\n  tickSpacing: any;\n  verticalSpacing = 20;\n  textAnchor: any = 'middle';\n  dy: any;\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n  adjustedScale: any;\n  transform: (o: any) => string;\n  tickFormat: (o: any) => string;\n  ticks: any;\n  width = 0;\n  outerTickSize = 6;\n  rotateLabels = false;\n  refMax: number;\n  refMin: number;\n  referenceLineLength = 0;\n  referenceAreaPath: string;\n\n  @ViewChild('ticksel') ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({ width });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    let scale;\n    const sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n\n    scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    this.adjustedScale = scale.bandwidth ? function(d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n\n    switch (this.orient) {\n      case 'top':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'bottom':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'left':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'end';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case 'right':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'start';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n\n  setReferencelines(): void {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax,\n      0, [false, false, false, false]);\n  }\n\n  getTicks(): any {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickHeight: number): number {\n    return Math.floor(this.height / tickHeight);\n  }\n\n  tickTransform(tick): string {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n\n  gridLineTransform(): string {\n    return `translate(5,0)`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\n\n@Component({\n  selector: 'g[ng-svg-charts-y-axis]',\n  template: `\n    <svg:g\n      [attr.class]=\"yAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g ng-svg-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g ng-svg-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisComponent implements OnChanges {\n\n  @Input() yScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() ticks: any[];\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() yAxisTickInterval;\n  @Input() yAxisTickCount: any;\n  @Input() yOrient = 'left';\n  @Input() referenceLines;\n  @Input() showRefLines;\n  @Input() showRefLabels;\n  @Input() yAxisOffset = 0;\n  @Output() dimensionsChanged = new EventEmitter();\n\n  yAxisClassName = 'y axis';\n  tickArguments: any;\n  offset: any;\n  transform: any;\n  labelOffset = 15;\n  fill = 'none';\n  stroke = '#CCC';\n  tickStroke = '#CCC';\n  strokeWidth = 1;\n  padding = 5;\n\n  @ViewChild(YAxisTicksComponent) ticksComponent: YAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === 'right') {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.offset = this.offset;\n      this.transform = `translate(${this.offset } , 0)`;\n    }\n\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n\n  emitTicksWidth({ width }): void {\n    if (width !== this.labelOffset && this.yOrient === 'right') {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({width});\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({width});\n      }, 0);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AxisLabelComponent } from './axis-label.component';\nimport { XAxisComponent } from './x-axis.component';\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\nimport { YAxisComponent } from './y-axis.component';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n  exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n})\nexport class AxesModule {}\n","import { range } from 'd3-array';\nimport { scaleBand, scaleLinear, scaleOrdinal, scaleQuantile } from 'd3-scale';\n\nimport { colorSets } from '../utils/color-sets';\n\nexport class ColorHelper {\n  scale: any;\n  scaleType: any;\n  colorDomain: any[];\n  domain: any;\n  customColors: any;\n\n  constructor(scheme, type, domain, customColors?) {\n    if (typeof (scheme) === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n\n  generateColorScheme(scheme, type, domain) {\n    if (typeof (scheme) === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    if (type === 'quantile') {\n      colorScale = scaleQuantile()\n        .range(scheme.domain)\n        .domain(domain);\n\n    } else if (type === 'ordinal') {\n      colorScale = scaleOrdinal()\n        .range(scheme.domain)\n        .domain(domain);\n\n    } else if (type === 'linear') {\n      // linear schemes must have at least 2 colors\n      const colorDomain = [...scheme.domain];\n      if (colorDomain.length === 1) {\n        colorDomain.push(colorDomain[0]);\n        this.colorDomain = colorDomain;\n      }\n\n      const points = range(0, 1, 1.0 / colorDomain.length);\n      colorScale = scaleLinear()\n        .domain(points)\n        .range(colorDomain);\n    }\n\n    return colorScale;\n  }\n\n  getColor(value) {\n    if (this.scaleType === 'linear') {\n      const valueScale = scaleLinear()\n        .domain(this.domain)\n        .range([0, 1]);\n\n      return (this.scale(valueScale(value)));\n    } else {\n\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n\n      const formattedValue = value.toString();\n      let found: any; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find((mapping) => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n\n    const valueScale = scaleLinear()\n      .domain(this.domain)\n      .range([0, 1]);\n\n    const colorValueScale = scaleBand()\n      .domain(this.colorDomain)\n      .range([0, 1]);\n\n    const endColor = this.getColor(value);\n\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n        }\n      }\n    }\n\n    return stops;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../label.helper';\nimport { id } from '../../utils/id';\nimport { ColorHelper } from '../color.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-circle-series]',\n  template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g ng-svg-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g ng-svg-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({name: circle.seriesName})\"\n        [pointerEvents]=\"circle.value === 0 ? 'none': 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick($event, circle.label)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(250, style({opacity: 1}))\n      ])\n    ])\n  ]\n})\nexport class CircleSeriesComponent implements OnChanges, OnInit {\n\n  @Input() data;\n  @Input() type = 'standard';\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors: ColorHelper;\n  @Input() scaleType;\n  @Input() visibleValue;\n  @Input() activeEntries: any[];\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  areaPath: any;\n  circle: any; // active circle\n  barVisible = false;\n  gradientId: string;\n  gradientFill: string;\n\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.circle = this.getActiveCircle();\n  }\n\n  getActiveCircle(): {} {\n    const indexActiveDataPoint = this.data.series.findIndex((d) => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n\n  mapDataPointToCircle(d: any, i: number): any {\n    const seriesName = this.data.name;\n\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n\n    let cx;\n    if (this.scaleType === 'time') {\n      cx = this.xScale(label);\n    } else if (this.scaleType === 'linear') {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n\n    const cy = this.yScale(this.type === 'standard' ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n\n    let color;\n    if (this.colors.scaleType === 'linear') {\n      if (this.type === 'standard') {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n\n    const data = {\n      series: seriesName,\n      value,\n      name: label\n    };\n\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n\n  getTooltipText({ tooltipLabel, value, seriesName, min, max}): string {\n    return `\n      <span class=\"tooltip-label\">${seriesName} â¢ ${tooltipLabel}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n\n  getTooltipMinMaxText(min: any, max: any) {\n    if (min !== undefined || max  !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += 'â¥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += 'â¤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n\n  getGradientStops(color) {\n    return [\n      {\n        offset: 0,\n        color,\n        opacity: 0.2\n      },\n      {\n        offset: 100,\n        color,\n        opacity: 1\n    }];\n  }\n\n  onClick(value, label): void {\n    this.select.emit({\n      name: label,\n      value\n    });\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activateCircle(): void {\n    this.barVisible = true;\n    this.activate.emit({name: this.data.name});\n  }\n\n  deactivateCircle(): void {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({name: this.data.name});\n  }\n\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  HostListener\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-circle]',\n  template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CircleComponent implements OnChanges {\n\n  @Input() cx;\n  @Input() cy;\n  @Input() r;\n  @Input() fill;\n  @Input() stroke;\n  @Input() data;\n  @Input() classNames;\n  @Input() circleOpacity;\n  @Input() pointerEvents;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  @HostListener('click')\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.classNames = Array.isArray(this.classNames) ?\n      this.classNames.join(' ') :\n      '';\n    this.classNames += 'circle';\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-grid-panel]',\n  template: `\n    <svg:rect\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      stroke=\"none\"\n      class=\"gridpanel\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelComponent {\n\n  @Input() path;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n\n}\n","import { Component, SimpleChanges, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-grid-panel-series]',\n  template: `\n    <svg:g ng-svg-charts-grid-panel *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelSeriesComponent implements OnChanges {\n  gridPanels: any[];\n\n  @Input() data;\n\n  @Input() dims;\n\n  @Input() xScale;\n\n  @Input() yScale;\n\n  @Input() orient;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.gridPanels = this.getGridPanels();\n  }\n\n  getGridPanels(): any[] {\n    return this.data.map((d) => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = 'odd';\n\n      if (this.orient === 'vertical') {\n        const position = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-svg-linear-gradient]',\n  template: `\n    <svg:linearGradient\n      [id]=\"name\"\n      [attr.x1]=\"x1\"\n      [attr.y1]=\"y1\"\n      [attr.x2]=\"x2\"\n      [attr.y2]=\"y2\">\n      <svg:stop *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgLinearGradientComponent implements OnChanges {\n\n  @Input() orientation = 'vertical';\n  @Input() name;\n  @Input() stops: any[];\n\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    if (this.orientation === 'horizontal') {\n      this.x2 = '100%';\n    } else if (this.orientation === 'vertical') {\n      this.y1 = '100%';\n    }\n\n  }\n}\n","import {\n  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-svg-radial-gradient]',\n  template: `\n    <svg:radialGradient\n      [id]=\"name\"\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      gradientUnits=\"userSpaceOnUse\">\n      <svg:stop *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgRadialGradientComponent implements OnChanges {\n\n  @Input() color: string;\n  @Input() name: string;\n  @Input() startOpacity: number;\n  @Input() endOpacity = 1;\n  @Input() cx = 0;\n  @Input() cy = 0;\n\n  @Input()\n  get stops(): any[] {\n    return this.stopsInput || this.stopsDefault;\n  }\n\n  set stops(value: any[]) {\n    this.stopsInput = value;\n  }\n\n  r: string;\n\n  private stopsInput: any[];\n  private stopsDefault: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.r = '30%';\n    if (\n      ('color' in changes) ||\n      ('startOpacity' in changes) ||\n      ('endOpacity' in changes)) {\n        this.stopsDefault = [{\n          offset: 0,\n          color: this.color,\n          opacity: this.startOpacity\n        }, {\n          offset: 100,\n          color: this.color,\n          opacity: this.endOpacity\n        }];\n    }\n  }\n\n}\n","import {\n  Component, Input, Output, EventEmitter, ElementRef,\n  OnChanges, ChangeDetectionStrategy,\n  ChangeDetectorRef, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { brushX } from 'd3-brush';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { select, event as d3event } from 'd3-selection';\n\nimport { id } from '../../utils';\n\n@Component({\n  selector: 'g[ng-svg-charts-timeline]',\n  template: `\n    <svg:g\n      class=\"timeline\"\n      [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix in=\"SourceGraphic\"\n            type=\"matrix\"\n            values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\" />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\"\n        [attr.width]=\"view[0]\"\n        y=\"0\"\n        [attr.height]=\"height\"\n        class=\"brush-background\"\n      />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n  styleUrls: ['./timeline.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimelineComponent implements OnChanges {\n\n  @Input() view;\n  @Input() state;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend;\n  @Input() miniChart;\n  @Input() autoScale;\n  @Input() scaleType;\n  @Input() height = 50;\n\n  @Output() select = new EventEmitter();\n  @Output() onDomainChange = new EventEmitter();\n\n  element: HTMLElement;\n  dims: any;\n  xDomain: any[];\n  xScale: any;\n  brush: any;\n  transform: string;\n  initialized = false;\n  filterId: any;\n  filter: any;\n\n  constructor(\n    element: ElementRef,\n    private cd: ChangeDetectorRef) {\n      this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n\n  update(): void {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n\n    if (this.brush) {\n      this.updateBrush();\n    }\n\n    this.transform = `translate(0 , ${ offsetY })`;\n\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n\n    this.cd.markForCheck();\n  }\n\n  getXDomain(): any[] {\n    let values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    let domain = [];\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    return domain;\n  }\n\n  getXScale() {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  addBrush(): void {\n    if (this.brush) { return; }\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush = brushX()\n      .extent([[0, 0], [width, height]])\n      .on('brush end', () => {\n        const selection = d3event.selection || this.xScale.range();\n        const newDomain = selection.map(this.xScale.invert);\n\n        this.onDomainChange.emit(newDomain);\n        this.cd.markForCheck();\n      });\n\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n  }\n\n  updateBrush(): void {\n    if (!this.brush) { return; }\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element).select('.selection')\n      .attr('fill', undefined)\n      .attr('stroke', undefined)\n      .attr('fill-opacity', undefined);\n\n    this.cd.markForCheck();\n  }\n\n  getDims(): any {\n    const width = this.view[0];\n\n    const dims = {\n      width,\n      height: this.height\n    };\n\n    return dims;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { select } from 'd3-selection';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ng-svg-charts-area]',\n  template: 'area.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaComponent implements OnChanges {\n\n  @Input() data;\n  @Input() path;\n  @Input() startingPath;\n  @Input() fill;\n  @Input() opacity = 1;\n  @Input() startOpacity = 0.5;\n  @Input() endOpacity = 1;\n  @Input() activeLabel;\n  @Input() gradient = false;\n  @Input() stops: any[];\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  gradientId: string;\n  gradientFill: string;\n  areaPath: string;\n  initialized = false;\n  gradientStops: any[];\n  hasGradient = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n  }\n\n  loadAnimation(): void {\n    this.areaPath = this.startingPath;\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node: any = select(this.element).select('.area');\n\n    if (this.animations) {\n      node.transition().duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: this.endOpacity\n    }];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ChangeDetectionStrategy,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'g[ng-svg-charts-tooltip-area]',\n  templateUrl: 'tooltip-area.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition('inactive => active', [\n        style({\n          opacity: 0,\n        }),\n        animate(250, style({opacity: 0.7}))\n      ]),\n      transition('active => inactive', [\n        style({\n          opacity: 0.7,\n        }),\n        animate(250, style({opacity: 0}))\n      ])\n    ])\n  ]\n})\nexport class TooltipAreaComponent {\n  anchorOpacity = 0;\n  anchorPos = -1;\n  anchorValues: any[] = [];\n  lastAnchorPos: number;\n\n  @Input() dims;\n  @Input() xSet;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() results;\n  @Input() colors;\n  @Input() showPercentage = false;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() hover = new EventEmitter();\n\n  @ViewChild('tooltipAnchor') tooltipAnchor;\n\n  getValues(xVal): any[] {\n    const results = [];\n\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === 'linear') {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n\n        results.push({\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n      }\n    }\n\n    return results;\n  }\n\n  mouseMove(event) {\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = new MouseEvent('mouseleave', {bubbles: false});\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n\n    while (minIndex <= maxIndex) {\n      // tslint:disable-next-line: no-bitwise\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n\n      const curDiff = Math.abs(currentElement - xPos);\n\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n\n    return closestIndex;\n  }\n\n  showTooltip(): void {\n    const event = new MouseEvent('mouseenter', {bubbles: false});\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n\n  hideTooltip(): void {\n    const event = new MouseEvent('mouseleave', {bubbles: false});\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n\n  getToolTipText(tooltipItem: any): string {\n    let result = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += 'â¥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += 'â¤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n\n}\n","// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n\n/**\n * Counts from a number to the end incrementally.\n *\n * @export\n * @param {any} countFrom\n * @param {any} countTo\n * @param {any} countDecimals\n * @param {any} countDuration\n * @param {any} callback\n * @returns\n */\nexport function count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n\n    frameVal = Math.round(frameVal * dec) / dec;\n\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n\n/**\n * Determine decimals places\n *\n * @export\n * @param {any} countTo\n * @returns\n */\nexport function decimalChecker(countTo) {\n  const endVal = Number(countTo);\n\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n\n  return 0;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, OnDestroy, ElementRef } from '@angular/core';\nimport { count, decimalChecker } from './count.helper';\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n * @class CountUpDirective\n */\n@Component({\n  selector: '[ng-svg-charts-count-up]',\n  template: `{{value}}`\n})\nexport class CountUpDirective implements OnDestroy {\n  @Input() countDuration = 1;\n  @Input() countPrefix = '';\n  @Input() countSuffix = '';\n  @Input() valueFormatting: any;\n\n  @Input()\n  set countDecimals(val: number) {\n    this._countDecimals = val;\n  }\n\n  get countDecimals(): number {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n\n  @Input()\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n\n  get countTo(): any {\n    return this._countTo;\n  }\n\n  @Input()\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n\n  get countFrom(): any {\n    return this._countFrom;\n  }\n\n  @Output() countChange = new EventEmitter();\n  @Output() countFinish = new EventEmitter();\n\n  nativeElement: any;\n\n  value: any = '';\n  formattedValue: string;\n\n  private animationReq: any;\n\n  private _countDecimals = 0;\n  private _countTo = 0;\n  private _countFrom = 0;\n\n  constructor(private cd: ChangeDetectorRef, element: ElementRef) {\n    this.nativeElement = element.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  start(): void {\n    cancelAnimationFrame(this.animationReq);\n\n    const valueFormatting =\n      this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n\n    const callback = ({ value, progress, finished }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({ value: this.value, progress });\n      if (finished) this.countFinish.emit({ value: this.value, progress });\n    };\n\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy, CommonModule } from '@angular/common';\n\nimport { ChartComponent } from './charts/chart.component';\nimport {\n  ScaleLegendComponent\n} from './legend/scale-legend.component';\nimport { LegendComponent } from './legend/legend.component';\nimport { LegendEntryComponent } from './legend/legend-entry.component';\nimport { AdvancedLegendComponent } from './legend/advanced-legend.component';\nimport { BaseChartComponent } from './base-chart/base-chart.component';\nimport { AxesModule } from './axes/axes.module';\nimport { TooltipModule } from './tooltip/tooltip.module';\nimport { CircleSeriesComponent } from './circle-series/circle-series.component';\nimport { CircleComponent } from './circle/circle.component';\nimport { GridPanelComponent } from './grid-panel/grid-panel.component';\nimport { GridPanelSeriesComponent } from './grid-panel-series/grid-panel-series.component';\nimport { SvgLinearGradientComponent } from './svg-linear-gradient/svg-linear-gradient.component';\nimport { SvgRadialGradientComponent } from './svg-radial-gradient/svg-radial-gradient.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { AreaComponent } from '../area/area.component';\nimport { TooltipAreaComponent } from './tooltip-area/tooltip-area.component';\nimport { CountUpDirective } from './count/count.directive';\n\nconst COMPONENTS = [\n  AreaComponent,\n  BaseChartComponent,\n  CountUpDirective,\n  TooltipAreaComponent,\n  ChartComponent,\n  LegendComponent,\n  LegendEntryComponent,\n  ScaleLegendComponent,\n  CircleComponent,\n  CircleSeriesComponent,\n  GridPanelComponent,\n  GridPanelSeriesComponent,\n  SvgLinearGradientComponent,\n  SvgRadialGradientComponent,\n  TimelineComponent,\n  AdvancedLegendComponent\n];\n\n@NgModule({\n  providers: [\n    Location,\n    {\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy\n    }\n  ],\n  imports: [\n    CommonModule,\n    AxesModule,\n    TooltipModule\n  ],\n  declarations: [\n    ...COMPONENTS\n  ],\n  exports: [\n    CommonModule,\n    AxesModule,\n    TooltipModule,\n    ...COMPONENTS\n  ]\n})\nexport class ChartCommonModule { }\n","export interface ViewDimensions {\n  width: number;\n  height: number;\n  xOffset: number;\n}\n\nexport function calculateViewDimensions({\n  width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0,\n  yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false,\n  legendType = 'ordinal', legendPosition = 'right', columns = 12\n}): ViewDimensions {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n\n  if (showLegend && legendPosition === 'right') {\n    if (legendType === 'ordinal') {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n\n  chartWidth = chartWidth * columns / 12;\n\n  chartWidth = chartWidth - margins[1] - margins[3];\n\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n\n  return {\n    // tslint:disable-next-line: no-bitwise\n    width: ~~chartWidth,\n    // tslint:disable-next-line: no-bitwise\n    height: ~~chartHeight,\n    // tslint:disable-next-line: no-bitwise\n    xOffset: ~~xOffset\n  };\n}\n","/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n * @param results\n */\nexport function getUniqueXDomainValues(results: any[]): any[] {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n\n/**\n * Get the scaleType of enumerable of values.\n * @param values\n * @returns {string} 'time', 'linear' or 'ordinal'\n */\nexport function getScaleType(values: any[], checkDateType = true): string {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return 'time';\n    }\n  }\n\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n      return 'linear';\n    }\n\n  return 'ordinal';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition,\n} from '@angular/animations';\nimport { formatLabel } from '../../common/label.helper';\n\nexport enum D0Types {\n  positive = 'positive',\n  negative = 'negative'\n}\n\n@Component({\n  selector: 'g[ng-svg-charts-series-vertical]',\n  template: `\n    <svg:g ng-svg-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [isActive]=\"isActive(bar.data)\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [animations]=\"animations\">\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g ng-svg-charts-bar-label *ngFor=\"let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'vertical'\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({size:$event, index:i})\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesVerticalComponent implements OnChanges {\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations = true;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{x: number, y: number, width: number, height: number,\n                            total: number, series: string}> = [];\n\n  ngOnChanges(changes): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0,\n      };\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops =\n            this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' +  bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${tooltipLabel}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n        this.barsForDataLabels = [];\n        const section: any = {};\n        section.series =  this.seriesName;\n        const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n        const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n        section.total = totalPositive + totalNegative;\n        section.x = 0;\n        section.y = 0;\n        if (section.total > 0)   {\n          section.height = this.yScale(totalPositive);\n        } else {\n          section.height = this.yScale(totalNegative);\n        }\n        section.width = this.xScale.bandwidth();\n        this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series =  this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;\n        section.x = this.xScale(d.name);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, bar): string {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-area-chart',\n  template: 'area-chart.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartComponent extends BaseChartComponent {\n\n  @Input() legend;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() state;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() baseValue: any = 'auto';\n  @Input() autoScale;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  clipPathId: string;\n  clipPath: string;\n  scaleType: string;\n  series: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(...values);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale.range([0, width])\n        .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getScaleType(values): string {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        num = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n\n    if (num) {\n      return 'linear';\n    }\n\n    return 'ordinal';\n  }\n\n  isDate(value): boolean {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-area-chart-normalized',\n  templateUrl: 'area-chart-normalized.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  tooltipAreas: any[];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n\n        if (total > 0) {\n          d.d0 = (d.d0 * 100) / total;\n          d.d1 = (d.d1 * 100) / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    return [0, 100];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale\n      .range([0, width])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-area-chart-stacked',\n  templateUrl: 'area-chart-stacked.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          sum += d.value;\n        }\n      }\n\n      domain.push(sum);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(0, ...domain);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale\n      .range([0, width])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { area } from 'd3-shape';\n\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ng-svg-charts-area-series]',\n  template: 'area-series.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() baseValue: any = 'auto';\n  @Input() colors;\n  @Input() scaleType;\n  @Input() stacked = false;\n  @Input() normalized = false;\n  @Input() gradient;\n  @Input() curve;\n  @Input() activeEntries: any[];\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  opacity: number;\n  path: string;\n  startingPath: string;\n\n  hasGradient: boolean;\n  gradientStops: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradient();\n\n    let currentArea;\n    let startingArea;\n\n    const xProperty = (d) => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    if (this.stacked || this.normalized) {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0((d, i) => this.yScale(d.d0))\n        .y1((d, i) => this.yScale(d.d1));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))\n        .y1(d => this.yScale(d.value));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))\n        .y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n\n    this.opacity = .8;\n\n    let data = this.data.series;\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n\n  updateGradient() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AreaChartComponent } from './area-chart.component';\nimport { AreaChartNormalizedComponent } from './area-chart-normalized.component';\nimport { AreaChartStackedComponent } from './area-chart-stacked.component';\nimport { AreaSeriesComponent } from './area-series.component';\nimport { ChartCommonModule } from '../common/chart-common.module';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    AreaChartComponent,\n    AreaChartNormalizedComponent,\n    AreaChartStackedComponent,\n    AreaSeriesComponent\n  ],\n  exports: [\n    AreaChartComponent,\n    AreaChartNormalizedComponent,\n    AreaChartStackedComponent,\n    AreaSeriesComponent\n  ]\n})\nexport class AreaChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { select } from 'd3-selection';\nimport { roundedRect } from '../../common/shape.helper';\nimport { id } from '../../utils/id';\n\n@Component({\n  selector: 'g[ng-svg-charts-bar]',\n  templateUrl: 'bar.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarComponent implements OnChanges {\n\n  @Input() fill;\n  @Input() data;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n  @Input() orientation;\n  @Input() roundEdges = true;\n  @Input() gradient = false;\n  @Input() offset = 0;\n  @Input() isActive = false;\n  @Input() stops: any[];\n  @Input() animations = true;\n  @Input() ariaLabel: string;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  element: any;\n  path: any;\n  gradientId: any;\n  gradientFill: any;\n  startOpacity: any;\n  initialized = false;\n  gradientStops: any[];\n  hasGradient = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n  }\n\n  loadAnimation(): void {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node: any = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n    node.transition().duration(500)\n        .attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n    }];\n  }\n\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === 'vertical') {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n\n    return path;\n  }\n\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n\n    return path;\n  }\n\n  getRadius(): number {\n    let radius = 0;\n\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n\n    return radius;\n  }\n\n  getStartOpacity(): number {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        if (this.data.value > 0) {\n          edges =  [true, true, false, false];\n        } else {\n          edges =  [false, false, true, true];\n        }\n      } else if (this.orientation === 'horizontal') {\n        if (this.data.value > 0) {\n          edges =  [false, true, false, true];\n        } else {\n          edges =  [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal',\n  templateUrl: 'bar-horizontal.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarHorizontalComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() xScaleMax: number;\n  @Input() xScaleMin: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  yScale: any;\n  xScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0]})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.xDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.yDomain);\n  }\n\n  getXDomain(): any[] {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin\n      ? Math.min(this.xScaleMin, ...values)\n      : Math.min(0, ...values);\n\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...values)\n      : Math.max(0, ...values);\n    return [min, max];\n  }\n\n  getYDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal-2d',\n  templateUrl: 'bar-horizontal-2d.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontal2DComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() xScaleMax: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, height])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valuesDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...domain)\n      : Math.max(0, ...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal-normalized',\n  template: 'bar-horizontal-normalized.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    return [0, 100];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal-stacked',\n  templateUrl: 'bar-horizontal-stacked.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks  = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false\n  @Input() xScaleMax: number;\n  @Input() showDataLabel = false\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...domain)\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical',\n  templateUrl: 'bar-vertical.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarVerticalComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() yScaleMax: number;\n  @Input() yScaleMin: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin: any[] = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getXDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n\n    const min = this.yScaleMin\n      ? Math.min(this.yScaleMin, ...values)\n      : Math.min(0, ...values);\n\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...values)\n      : Math.max(0, ...values);\n\n    return [min, max];\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical-2d',\n  templateUrl: 'bar-vertical-2d.template.html',\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVertical2DComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {negative: 0, positive: 0};\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, width])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...domain)\n      : Math.max(0, ...domain);\n\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical-normalized',\n  templateUrl: 'bar-vertical-normalized.template.html',\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical-stacked',\n  template: 'bar-vertical-stacked.template.html',\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  tickFormatting: (label: string) => string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {negative: 0, positive: 0};\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...domain)\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../../common/label.helper';\nimport { D0Types } from '../series-vertical/series-vertical.component';\n\n@Component({\n  selector: 'g[ng-svg-charts-series-horizontal]',\n  template: `\n    <svg:g ng-svg-charts-bar\n      *ngFor=\"let bar of bars; trackBy:trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'horizontal'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\">\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g ng-svg-charts-bar-label *ngFor=\"let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'horizontal'\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({size:$event, index:i})\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesHorizontalComponent implements OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{x: number, y: number, width: number, height: number,\n                            total: number, series: string}> = [];\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations = true;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelWidthChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type: D0Types;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === 'standard') {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' +  bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${tooltipLabel}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n\n  }\n\n  updateDataLabels() {\n\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series =  this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n        this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series =  this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.name);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n        });\n      }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n  click(data): void {\n    this.select.emit(data);\n  }\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    ElementRef,\n    Output,\n    EventEmitter\n  } from '@angular/core';\nimport { formatLabel } from '../../common/label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-bar-label]',\n  template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\">\n      {{formatedValue}}\n    </svg:text>\n\n  `,\n  styleUrls: ['bar-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\n  export class BarLabelComponent implements OnChanges {\n\n    @Input() value;\n    @Input() valueFormatting: any;\n    @Input() barX;\n    @Input() barY;\n    @Input() barWidth;\n    @Input() barHeight;\n    @Input() orientation;\n\n    @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();\n\n    element: any;\n    x: number;\n    y: number;\n    horizontalPadding = 2;\n    verticalPadding = 5;\n    formatedValue: string;\n    transform: string;\n    textAnchor: string;\n\n    constructor(element: ElementRef) {\n      this.element = element.nativeElement;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n      this.update();\n    }\n\n    getSize(): any {\n      const h = this.element.getBoundingClientRect().height;\n      const w = this.element.getBoundingClientRect().width;\n      return { height: h, width: w, negative: this.value < 0 };\n    }\n\n    ngAfterViewInit() {\n      this.dimensionsChanged.emit(this.getSize());\n    }\n\n    update(): void {\n      if (this.valueFormatting) {\n        this.formatedValue = this.valueFormatting(this.value);\n      } else {\n        this.formatedValue = formatLabel(this.value);\n      }\n\n      if (this.orientation === 'horizontal') {\n          this.x = this.barX + this.barWidth;\n          // if the value is negative then it's on the left of the x0.\n          // we need to put the data label in front of the bar\n          if (this.value < 0) {\n            this.x = this.x - this.horizontalPadding;\n            this.textAnchor = 'end';\n          } else {\n            this.x = this.x + this.horizontalPadding;\n            this.textAnchor = 'start';\n          }\n          this.y = this.barY + this.barHeight / 2;\n\n      } else {\n        // orientation must be \"vertical\"\n        this.x = this.barX + this.barWidth / 2;\n        this.y = this.barY + this.barHeight;\n\n        if (this.value < 0) {\n          this.y = this.y + this.verticalPadding;\n          this.textAnchor = 'end';\n        } else {\n          this.y = this.y - this.verticalPadding;\n          this.textAnchor = 'start';\n        }\n        this.transform = `rotate(-45, ${ this.x } , ${ this.y })`;\n      }\n\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { BarComponent } from './bar/bar.component';\nimport { BarHorizontalComponent } from './bar-horizontal/bar-horizontal.component';\nimport { BarHorizontal2DComponent } from './bar-horizontal-2d/bar-horizontal-2d.component';\nimport { BarHorizontalNormalizedComponent } from './bar-horizontal-normalized/bar-horizontal-normalized.component';\nimport { BarHorizontalStackedComponent } from './bar-horizontal-stacked/bar-horizontal-stacked.component';\nimport { BarVerticalComponent } from './bar-vertical/bar-vertical.component';\nimport { BarVertical2DComponent } from './bar-vertical-2d/bar-vertical-2d.component';\nimport { BarVerticalNormalizedComponent } from './bar-vertical-normalized/bar-vertical-normalized.component';\nimport { BarVerticalStackedComponent } from './bar-vertical-stacked/bar-vertical-stacked.component';\nimport { SeriesHorizontalComponent } from './series-horizontal/series-horizontal.component';\nimport { SeriesVerticalComponent } from './series-vertical/series-vertical.component';\nimport { BarLabelComponent } from './bar-label/bar-label.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontalComponent,\n    SeriesVerticalComponent\n  ],\n  exports: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontalComponent,\n    SeriesVerticalComponent\n  ]\n})\nexport class BarChartModule {}\n","import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\n\nexport function getDomain(values, scaleType, autoScale, minVal?, maxVal?): number[] {\n    let domain: number[] = [];\n    if (scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      if (!autoScale) {\n        values.push(0);\n      }\n    }\n\n    if (scaleType === 'time' || scaleType === 'linear') {\n      const min = minVal ? minVal : Math.min(...values);\n      const max = maxVal ? maxVal : Math.max(...values);\n\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    return domain;\n}\n\nexport function getScale(domain, range: number[], scaleType, roundDomains): any {\n  let scale: any;\n\n  if (scaleType === 'time') {\n    scale = scaleTime()\n      .range(range)\n      .domain(domain);\n  } else if (scaleType === 'linear') {\n    scale = scaleLinear()\n      .range(range)\n      .domain(domain);\n\n    if (roundDomains) {\n      scale = scale.nice();\n    }\n  } else if (scaleType === 'ordinal') {\n    scale = scalePoint()\n      .range([range[0], range[1]])\n      .domain(domain);\n  }\n\n  return scale;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { getScaleType } from '../common/domain.helper';\nimport { getDomain, getScale } from './bubble-chart.utils';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'ng-svg-charts-bubble-chart',\n  template: `\n    <ng-svg-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g ng-svg-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"/>\n        <svg:g ng-svg-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"/>\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy:trackBy\" [@animationState]=\"'active'\">\n            <svg:g ng-svg-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\" />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ng-svg-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(500, style({\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class BubbleChartComponent extends BaseChartComponent {\n  @Input() showGridLines = true;\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis = true;\n  @Input() yAxis = true;\n  @Input() showXAxisLabel: boolean;\n  @Input() showYAxisLabel: boolean;\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() maxRadius = 10;\n  @Input() minRadius = 3;\n  @Input() autoScale: boolean;\n  @Input() schemeType = 'ordinal';\n  @Input() tooltipDisabled = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: any;\n  @Input() yScaleMax: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  colors: ColorHelper;\n  scaleType = 'linear';\n  margin = [10, 20, 10, 20];\n  bubblePadding = [0, 0, 0, 0];\n  data: any;\n\n  legendOptions: any;\n  transform: string;\n\n  clipPath: string;\n  clipPathId: string;\n\n  seriesDomain: any[];\n  xDomain: any[];\n  yDomain: any[];\n  rDomain: number[];\n\n  xScaleType: string;\n  yScaleType: string;\n\n  yScale: any;\n  xScale: any;\n  rScale: any;\n\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n\n  activeEntries: any[] = [];\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n\n    this.transform = `translate(${ this.dims.xOffset },${ this.margin[0] })`;\n\n    const colorDomain = this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n\n    this.data = this.results;\n\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n\n    this.legendOptions = this.getLegendOptions();\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = (this.xScaleType === 'linear') ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = (this.yScaleType === 'linear') ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n\n    return [yMin, xMax, yMax, xMin];\n  }\n\n  setScales() {\n    let width = this.dims.width;\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n    let height = this.dims.height;\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n\n  getYScale(domain, height): any {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n\n  getXScale(domain, width): any {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n\n  getRScale(domain, range): any {\n    const scale = scaleLinear()\n      .range(range)\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getLegendOptions(): any {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  getXDomain(): any[] {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n\n  getYDomain(): any[] {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n\n  getRDomain(): number[] {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n\n    return [min, max];\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-bubble-series]',\n  template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g ng-svg-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick($event, circle.label)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipType]=\"'tooltip'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'scale(0)'\n        }),\n        animate(250, style({opacity: 1, transform: 'scale(1)'}))\n      ])\n    ])\n  ]\n})\nexport class BubbleSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() rScale;\n  @Input() xScaleType;\n  @Input() yScaleType;\n  @Input() colors;\n  @Input() visibleValue;\n  @Input() activeEntries: any[];\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  areaPath: any;\n  circles: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.circles = this.getCircles();\n  }\n\n  getCircles(): any[] {\n    const seriesName = this.data.name;\n\n    return this.data.series.map((d, i) => {\n      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n        const y = d.y;\n        const x = d.x;\n        const r = d.r;\n\n        const radius = this.rScale(r || 1);\n        const tooltipLabel = formatLabel(d.name);\n\n        const cx = (this.xScaleType === 'linear') ? this.xScale(Number(x)) : this.xScale(x);\n        const cy = (this.yScaleType === 'linear') ? this.yScale(Number(y)) : this.yScale(y);\n\n        const color = (this.colors.scaleType === 'linear') ?\n          this.colors.getColor(r) :\n          this.colors.getColor(seriesName);\n\n        const isActive = !this.activeEntries.length ? true : this.isActive({name: seriesName});\n        const opacity = isActive ? 1 : 0.3;\n\n        const data = {\n          series: seriesName,\n          name: d.name,\n          value: d.y,\n          x: d.x,\n          radius: d.r\n        };\n\n        return {\n          data,\n          x,\n          y,\n          r,\n          classNames: [`circle-data-${i}`],\n          value: y,\n          label: x,\n          cx,\n          cy,\n          radius,\n          tooltipLabel,\n          color,\n          opacity,\n          seriesName,\n          isActive,\n          transform: `translate(${cx},${cy})`\n        };\n      }\n    }).filter((circle) => circle !== undefined);\n  }\n\n  getTooltipText(circle): string {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name = (hasSeriesName && hasTooltipLabel) ?\n      `${circle.seriesName} â¢ ${circle.tooltipLabel}` :\n      circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle = (hasSeriesName || hasTooltipLabel) ?\n      `<span class=\"tooltip-label\">${name}</span>` :\n      '';\n\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${xAxisLabel}</label> ${x}<br />\n        <label>${yAxisLabel}</label> ${y}\n      </span>\n      <span class=\"tooltip-val\">\n        ${radiusValue}\n      </span>\n    `;\n  }\n\n  onClick(value, label): void {\n    this.select.emit({\n      name: label,\n      value\n    });\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isVisible(circle): boolean {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({name: circle.seriesName});\n    }\n\n    return circle.opacity !== 0;\n  }\n\n  activateCircle(circle): void {\n    circle.barVisible = true;\n    this.activate.emit({name: this.data.name});\n  }\n\n  deactivateCircle(circle): void {\n    circle.barVisible = false;\n    this.deactivate.emit({name: this.data.name});\n  }\n\n  trackBy(index, circle): string {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { BubbleChartComponent } from './bubble-chart.component';\nimport { BubbleSeriesComponent } from './bubble-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    BubbleChartComponent,\n    BubbleSeriesComponent\n  ],\n  exports: [\n    BubbleChartComponent,\n    BubbleSeriesComponent\n  ]\n})\nexport class BubbleChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { select } from 'd3-selection';\n\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ng-svg-charts-heat-map-cell]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g ng-svg-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        style=\"cursor: pointer\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeatMapCellComponent implements OnChanges {\n\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() data;\n  @Input() label;\n  @Input() gradient = false;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  transform: string;\n  activeRange: any[];\n  startOpacity: number;\n  gradientId: string;\n  gradientUrl: string;\n  gradientStops: any[];\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.transform = `translate(${this.x} , ${this.y})`;\n\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n\n  getGradientStops() {\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n    }];\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm(): void {\n    const node: any = select(this.element).select('.cell');\n\n    node.transition().duration(750)\n      .attr('opacity', 1);\n  }\n\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-heat-map-cell-series]',\n  template: `\n    <svg:g\n      ng-svg-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy:trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick($event, c.label, c.series)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{series: c.series, name: c.label, value: c.data}\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeatCellSeriesComponent implements OnChanges, OnInit {\n\n  @Input() data;\n  @Input() colors;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() gradient: boolean;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipText: any;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  cells: any[];\n\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    const cells = [];\n\n    this.data.map((row) => {\n      row.series.map((cell) => {\n        const value = cell.value;\n\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n\n    return cells;\n  }\n\n  getTooltipText({ label, data, series }): string {\n    return `\n      <span class=\"tooltip-label\">${series} â¢ ${label}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n\n  trackBy(index, item): string {\n    return item.tooltipText;\n  }\n\n  onClick(value, label, series): void {\n    this.select.emit({\n      name: label,\n      value,\n      series\n    });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport {getScaleType} from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-heat-map',\n  template: `\n    <ng-svg-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g ng-svg-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ng-svg-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:rect *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g ng-svg-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ng-svg-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HeatMapComponent extends BaseChartComponent {\n\n  @Input() legend;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n  @Input() innerPadding: number | number[] = 8;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() tooltipDisabled = false;\n  @Input() tooltipText: any;\n  @Input() min: any;\n  @Input() max: any;\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xDomain: any[];\n  yDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  color: any;\n  colors: ColorHelper;\n  colorScale: any;\n  transform: string;\n  rects: any[];\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  scaleType = 'linear';\n\n  update(): void {\n    super.update();\n\n    this.formatDates();\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.scaleType = getScaleType(this.valueDomain, false);\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.scaleType === 'linear') {\n      let min = this.min;\n      let max = this.max;\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n      this.valueDomain = [min, max];\n    }\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n\n  getXDomain(): any {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @param {(string | number | Array<string | number>)} value\n   * @param {number} [index=0]\n   * @param {number} N\n   * @param {number} L\n   * @returns {number}\n   *\n   * @memberOf HeatMapComponent\n   */\n  getDimension(value: string | number | Array<string | number>, index = 0, N: number, L: number): number {\n    if (typeof value === 'string') {\n      value = value\n        .replace('[', '')\n        .replace(']', '')\n        .replace('px', '')\n        .replace('\\'', '');\n\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n    return N / (L / +value + 1);\n  }\n\n  getXScale(): any {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .domain(this.xDomain)\n      .paddingInner(f);\n  }\n\n  getYScale(): any {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .domain(this.yDomain)\n      .paddingInner(f);\n  }\n\n  getRects(): any[] {\n    const rects = [];\n\n    this.xDomain.map((xVal) => {\n      this.yDomain.map((yVal) => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n\n    return rects;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === 'ordinal' ? this.colors : this.colors.scale,\n      title: this.scaleType === 'ordinal' ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { HeatMapCellComponent } from './heat-map-cell.component';\nimport { HeatCellSeriesComponent } from './heat-map-cell-series.component';\nimport { HeatMapComponent } from './heat-map.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    HeatMapCellComponent,\n    HeatCellSeriesComponent,\n    HeatMapComponent\n  ],\n  exports: [\n    HeatMapCellComponent,\n    HeatCellSeriesComponent,\n    HeatMapComponent\n  ]\n})\nexport class HeatMapModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { select } from 'd3-selection';\n\n@Component({\n  selector: 'g[ng-svg-charts-line]',\n  template: `\n    <svg:path\n      [@animationState]=\"'active'\"\n      class=\"line\"\n      [attr.d]=\"initialPath\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      stroke-width=\"1.5px\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          strokeDasharray: 2000,\n          strokeDashoffset: 2000,\n        }),\n        animate(1000, style({\n          strokeDashoffset: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class LineComponent implements OnChanges {\n\n  @Input() path;\n  @Input() stroke;\n  @Input() data;\n  @Input() fill = 'none';\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  initialized = false;\n  initialPath: string;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n\n  updatePathEl(): void {\n    const node: any = select(this.element.nativeElement).select('.line');\n\n    if (this.animations) {\n      node\n        .transition().duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-line-chart',\n  templateUrl: 'line-chart.template.html',\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(500, style({\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class LineChartComponent extends BaseChartComponent {\n\n  @Input() legend;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity: number;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n  @Input() showRefLines = false;\n  @Input() referenceLines: any;\n  @Input() showRefLabels = true;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  clipPath: string;\n  clipPathId: string;\n  series: any;\n  areaPath: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  hasRange: boolean; // whether the line has a min-max range around it\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(...values);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, width])\n        .domain(domain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, width])\n        .domain(domain);\n\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, width])\n        .padding(0.1)\n        .domain(domain);\n    }\n\n    return scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    this.deactivateAll();\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { area, line } from 'd3-shape';\n\nimport { id } from '../utils/id';\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ng-svg-charts-line-series]',\n  template: `\n    <svg:g>\n      <defs>\n        <svg:g ng-svg-charts-svg-linear-gradient *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g ng-svg-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g ng-svg-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n    <svg:g ng-svg-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LineSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() scaleType;\n  @Input() curve: any;\n  @Input() activeEntries: any[];\n  @Input() rangeFillOpacity: number;\n  @Input() hasRange: boolean;\n  @Input() animations = true;\n\n  path: string;\n  outerPath: string;\n  areaPath: string;\n  gradientId: string;\n  gradientUrl: string;\n  hasGradient: boolean;\n  gradientStops: any[];\n  areaGradientStops: any[];\n  stroke: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradients();\n\n    const data = this.sortData(this.data.series);\n\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n\n  getLineGenerator(): any {\n    return line<any>()\n      .x(d => {\n        const label = d.name;\n        let value;\n        if (this.scaleType === 'time') {\n          value = this.xScale(label);\n        } else if (this.scaleType === 'linear') {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      })\n      .y(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  getRangeGenerator(): any {\n    return area<any>()\n        .x(d => {\n          const label = d.name;\n          let value;\n          if (this.scaleType === 'time') {\n            value = this.xScale(label);\n          } else if (this.scaleType === 'linear') {\n            value = this.xScale(Number(label));\n          } else {\n            value = this.xScale(label);\n          }\n          return value;\n        })\n        .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n        .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n        .curve(this.curve);\n  }\n\n  getAreaGenerator(): any {\n    const xProperty = (d) => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    return area<any>()\n      .x(xProperty)\n      .y0(() => this.yScale.range()[0])\n      .y1(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    return data;\n  }\n\n  updateGradients() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { LineComponent } from './line.component';\nimport { LineChartComponent } from './line-chart.component';\nimport { LineSeriesComponent } from './line-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    LineComponent,\n    LineChartComponent,\n    LineSeriesComponent\n  ],\n  exports: [\n    LineComponent,\n    LineChartComponent,\n    LineSeriesComponent\n  ]\n})\nexport class LineChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveCardinalClosed } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { getScaleType } from '../common/domain.helper';\nimport { isDate } from '../utils/types';\n\nconst twoPI = 2 * Math.PI;\n\n@Component({\n  selector: 'ng-svg-charts-polar-chart',\n  template: `\n    <ng-svg-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle\n            class=\"polar-chart-background\"\n            cx=\"0\" cy=\"0\"\n            [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\" cy=\"0\"\n              [attr.r]=\"r\" />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g ng-svg-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\">\n            </svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g ng-svg-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g ng-svg-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"'bottom'\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\">\n        </svg:g>\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\" [@animationState]=\"'active'\">\n            <svg:g ng-svg-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ng-svg-charts-chart>\n  `,\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    '../pie-chart/pie-chart.component.scss',\n    './polar-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(500, style({\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class PolarChartComponent extends BaseChartComponent {\n\n  @Input() legend: boolean;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis: boolean;\n  @Input() yAxis: boolean;\n  @Input() showXAxisLabel: boolean;\n  @Input() showYAxisLabel: boolean;\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() autoScale: boolean;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveCardinalClosed;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity = 0.15;\n  @Input() trimYAxisTicks = true;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: (o: any) => any;\n  @Input() yAxisTickFormatting: (o: any) => any;\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n  @Input() showSeriesOnHover = true;\n  @Input() gradient = false;\n  @Input() yAxisMinScale = 0;\n  @Input() labelTrim = true;\n  @Input() labelTrimSize = 10;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  yAxisDims: ViewDimensions;\n  labelOffset: number;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;  // -> rScale\n  xScale: any;  // -> tScale\n  yAxisScale: any; // -> yScale\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  transformPlot: string;\n  transformYAxis: string;\n  transformXAxis: string;\n  series: any; // ???\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  thetaTicks: any[];\n  radiusTicks: number[];\n  outerRadius: number;\n\n  update(): void {\n    super.update();\n\n    this.setDims();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.setTicks();\n  }\n\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    const halfWidth = ~~(this.dims.width / 2);\n    const halfHeight = ~~(this.dims.height / 2);\n\n    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n\n    this.yAxisDims = {\n      ...this.dims,\n      width: halfWidth\n    };\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n\n  setTicks() {\n    let tickFormat;\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n\n    const minDistance = 10;\n\n    /* from pie chart, abstract out -*/\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    this.radiusTicks = this.yAxisScale\n      .ticks(~~(this.dims.height / 50))\n      .map(d => this.yScale(d));\n  }\n\n  getXValues(): any[] {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    return values;\n  }\n\n  getXDomain(values = this.getXValues()): any[] {\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n    return values;\n  }\n\n  getYValues(): any[] {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    return domain;\n  }\n\n  getYDomain(domain = this.getYValues()): any[] {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n\n    min = Math.max(0, min);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    switch (this.scaleType) {\n      case 'time':\n        return scaleTime()\n          .range([0, width])\n          .domain(domain);\n      case 'linear':\n        const scale = scaleLinear()\n          .range([0, width])\n          .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n      default:\n        return scalePoint()\n          .range([0, width - twoPI / domain.length])\n          .padding(0)\n          .domain(domain);\n    }\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([0, height])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    const domain = (this.schemeType === 'ordinal') ?\n      this.seriesDomain :\n      this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    if (this.schemeType === 'ordinal') {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = this.showSeriesOnHover ? [ item, ...this.activeEntries ] : this.activeEntries;\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n}\n","\nexport function isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { lineRadial } from 'd3-shape';\n\nimport { id } from '../utils/id';\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ng-svg-charts-polar-series]',\n  template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g ng-svg-charts-svg-radial-gradient *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g ng-svg-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g ng-svg-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        tooltipType=\"tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolarSeriesComponent implements OnChanges {\n  @Input() name;\n  @Input() data;\n  @Input() xScale; // Theta\n  @Input() yScale; // R\n  @Input() colors;\n  @Input() scaleType;\n  @Input() curve: any;\n  @Input() activeEntries: any[];\n  @Input() rangeFillOpacity: number;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipText: (o: any) => string;\n  @Input() gradient = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations = true;\n\n  path: string;\n  circles: any[];\n  circleRadius = 3;\n\n  outerPath: string;\n  areaPath: string;\n  gradientId: string;\n  gradientUrl: string;\n  hasGradient: boolean;\n  gradientStops: any[];\n  areaGradientStops: any[];\n  seriesColor: string;\n\n  active: boolean;\n  inactive: boolean;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradients();\n\n    const line = this.getLineGenerator();\n\n    const data = this.sortData(this.data.series);\n\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === 'linear';\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n\n    this.path = line(data) || '';\n\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n\n      const cData = {\n        series: seriesName,\n        value,\n        name: d.name\n      };\n\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n\n  getAngle(d) {\n    const label = d.name;\n    if (this.scaleType === 'time') {\n      return this.xScale(label);\n    } else if (this.scaleType === 'linear') {\n      return this.xScale(Number(label));\n    }\n    return this.xScale(label);\n  }\n\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n\n  getLineGenerator(): any {\n    return lineRadial<any>()\n      .angle(d => this.getAngle(d))\n      .radius(d => this.getRadius(d))\n      .curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === 'linear') {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      return sortByTime(data, 'name');\n    }\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) {\n      return false;\n    }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) {\n      return false;\n    }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n  defaultTooltipText({ label, value }): string {\n    return `\n      <span class=\"tooltip-label\">${this.data.name} â¢ ${label}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === 'linear';\n\n    if (!this.hasGradient) {\n      return;\n    }\n\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n\n    if (this.colors.scaleType === 'linear') {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-advanced-pie-chart',\n  templateUrl: 'advanced-pie-chart.template.html',\n  styleUrls: ['../common/base-chart/base-chart.component.scss', './advanced-pie-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedPieChartComponent extends BaseChartComponent {\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled = false;\n  @Input() tooltipText: any;\n  @Input() label = 'Total';\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  data: any;\n  dims: ViewDimensions;\n  domain: any[];\n  outerRadius: number;\n  innerRadius: number;\n  transform: string;\n  colors: ColorHelper;\n  legendWidth: number;\n  margin = [20, 20, 20, 20];\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() nameFormatting: (value: string) => any;\n  @Input() percentageFormatting: (value: number) => any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: (this.width * 4) / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n    this.setColors();\n\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(event: Event): void {\n    if (this.activeEntries.indexOf(event) > -1) { return; }\n    this.activeEntries = [event, ...this.activeEntries];\n    this.activate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  onDeactivate(event: Event): void {\n    const idx = this.activeEntries.indexOf(event);\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: event, entries: this.activeEntries });\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { arc } from 'd3-shape';\n\nimport { trimLabel } from '../common/trim-label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-label]',\n  templateUrl: 'pie-label.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieLabelComponent implements OnChanges {\n  @Input() data;\n  @Input() radius;\n  @Input() label;\n  @Input() color;\n  @Input() max;\n  @Input() value;\n  @Input() explodeSlices;\n  @Input() animations = true;\n  @Input() labelTrim = true;\n  @Input() labelTrimSize = 10;\n\n  trimLabel: (label: string, max?: number) => string;\n  line: string;\n\n  private readonly isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n\n  constructor() {\n    this.trimLabel = trimLabel;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n\n    const innerArc = arc()\n      .innerRadius(startRadius)\n      .outerRadius(startRadius);\n\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n\n  get textX(): number {\n    return this.data.pos[0];\n  }\n\n  get textY(): number {\n    return this.data.pos[1];\n  }\n\n  get styleTransform(): string {\n    return this.isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n  }\n\n  get attrTransform(): string {\n    return !this.isIE ? null : `translate(${this.textX},${this.textY})`;\n  }\n\n  get textTransition(): string {\n    return this.isIE || !this.animations ? null : 'transform 0.75s';\n  }\n\n  textAnchor(): any {\n    return this.midAngle(this.data) < Math.PI ? 'start' : 'end';\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { interpolate } from 'd3-interpolate';\nimport { select } from 'd3-selection';\nimport { arc } from 'd3-shape';\n\nimport { id } from '../utils/id';\n/* tslint:disable */\nimport { MouseEvent } from '../events';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-arc]',\n  templateUrl: 'pie-arc.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieArcComponent implements OnChanges {\n  @Input() fill;\n  @Input() startAngle = 0;\n  @Input() endAngle = Math.PI * 2;\n  @Input() innerRadius;\n  @Input() outerRadius;\n  @Input() cornerRadius = 0;\n  @Input() value;\n  @Input() max;\n  @Input() data;\n  @Input() explodeSlices = false;\n  @Input() gradient = false;\n  @Input() animate = true;\n  @Input() pointerEvents = true;\n  @Input() isActive = false;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  element: HTMLElement;\n  path: any;\n  startOpacity: number;\n  radialGradientId: string;\n  linearGradientId: string;\n  gradientFill: string;\n  initialized = false;\n  private _timeout;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n\n  update(): void {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n\n  calculateArc(): any {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = (this.outerRadius * this.value) / this.max;\n    }\n\n    return arc()\n      .innerRadius(this.innerRadius)\n      .outerRadius(outerRadius)\n      .cornerRadius(this.cornerRadius);\n  }\n\n  loadAnimation(): void {\n    const node: any = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        const interpolater = interpolate(copyOfD, copyOfD);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      })\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  updateAnimation(): void {\n    const node: any = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  onClick(): void {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n\n  onDblClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-pie-chart',\n  templateUrl: 'pie-chart.template.html',\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    './pie-chart.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieChartComponent extends BaseChartComponent {\n\n  @Input() labels = false;\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() explodeSlices = false;\n  @Input() doughnut = false;\n  @Input() arcWidth = 0.25;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled = false;\n  @Input() labelFormatting: any;\n  @Input() trimLabels = true;\n  @Input() maxLabelLength = 10;\n  @Input() tooltipText: any;\n\n  @Output() dblclick = new EventEmitter();\n  @Output() select = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  translation: string;\n  outerRadius: number;\n  innerRadius: number;\n  data: any;\n  colors: ColorHelper;\n  domain: any;\n  dims: any;\n  margin = [20, 20, 20, 20];\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    if (this.labels) {\n      this.margin = [30, 80, 30, 80];\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n\n    this.domain = this.getDomain();\n\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n\n  getDomain(): any[] {\n    const items = [];\n\n    this.results.map(d => {\n      let label = d.name;\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n\n      if (items.indexOf(label) === -1) {\n        items.push(label);\n      }\n    });\n\n    return items;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: 'ordinal',\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import { scaleBand } from 'd3-scale';\n\nexport function gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n\n  return [cols, rows];\n}\n\nexport function gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale: any = scaleBand<number>();\n  const yScale: any = scaleBand<number>();\n  const width = dims.width;\n  const height = dims.height;\n\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = (total > 0) ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results\n    .map(d => d ? d.value : 0)\n    .reduce((sum, val) => sum + val, 0);\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { min } from 'd3-array';\nimport { format } from 'd3-format';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { gridLayout } from '../common/grid-layout.helper';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'ng-svg-charts-pie-grid',\n  template: 'pie-grid.template.html',\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    './pie-grid.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PieGridComponent extends BaseChartComponent {\n  @Input() designatedTotal: number;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipText: (o: any) => any;\n  @Input() label = 'Total';\n  @Input() minWidth = 150;\n\n  dims: ViewDimensions;\n  data: any[];\n  transform: string;\n  series: any[];\n  domain: any[];\n  colorScale: ColorHelper;\n  margin = [20, 20, 20, 20];\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n\n    this.series = this.getSeries();\n    this.setColors();\n\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  defaultTooltipText({ data }): string {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getSeries(): any[] {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n\n    return this.data.map((d) => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = (min([d.width - padding, d.height - baselineLabelHeight]) / 2) - 5;\n      const innerRadius = radius * 0.9;\n\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n\n  getTotal(): any {\n    return this.results\n      .map(d => d.value)\n      .reduce((sum, d) => sum + d, 0);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { pie } from 'd3-shape';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-grid-series]',\n  template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g ng-svg-charts-pie-arc *ngFor=\"let arc of arcs; trackBy:trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class PieGridSeriesComponent implements OnChanges {\n\n  @Input() colors;\n  @Input() data;\n  @Input() innerRadius = 70;\n  @Input() outerRadius = 80;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  layout: any;\n  arcs: any;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.layout = pie<any, any>()\n      .value((d) => d.data.value).sort(null);\n\n    this.arcs = this.getArcs();\n  }\n\n  getArcs(): any[] {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n\n  onClick(data): void {\n    this.select.emit({\n      name: this.data[0].data.name,\n      value: this.data[0].data.value\n    });\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  label(arc): string {\n    return arc.data.name;\n  }\n\n  color(arc): any {\n    return this.colors(this.label(arc));\n  }\n\n}\n","import {\n  Component,\n  SimpleChanges,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { max } from 'd3-array';\nimport { arc, pie } from 'd3-shape';\n\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-series]',\n  templateUrl: 'pie-series.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieSeriesComponent implements OnChanges {\n  @Input() colors;\n  @Input() series: any = [];\n  @Input() dims;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n  @Input() explodeSlices;\n  @Input() showLabels;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() labelFormatting: any;\n  @Input() trimLabels = true;\n  @Input() maxLabelLength = 10;\n  @Input() tooltipText: (o: any) => any;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  max: number;\n  data: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    const pieGenerator = pie<any, any>()\n      .value(d => d.value)\n      .sort(null);\n\n    const arcData = pieGenerator(this.series);\n\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  outerArc(): any {\n    const factor = 1.5;\n\n    return arc()\n      .innerRadius(this.outerRadius * factor)\n      .outerRadius(this.outerRadius * factor);\n  }\n\n  calculateLabelPositions(pieData): any {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    return labelPositions;\n  }\n\n  labelVisible(myArc): boolean {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n\n  labelText(myArc): string {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n\n  label(myArc): string {\n    return formatLabel(myArc.data.name);\n  }\n\n  defaultTooltipText(myArc): string {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  color(myArc): any {\n    return this.colors.getColor(this.label(myArc));\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { AdvancedPieChartComponent } from './advanced-pie-chart.component';\nimport { PieLabelComponent } from './pie-label.component';\nimport { PieArcComponent } from './pie-arc.component';\nimport { PieChartComponent } from './pie-chart.component';\nimport { PieGridComponent } from './pie-grid.component';\nimport { PieGridSeriesComponent } from './pie-grid-series.component';\nimport { PieSeriesComponent } from './pie-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ],\n  exports: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ]\n})\nexport class PieChartModule {}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { PolarChartComponent } from './polar-chart.component';\nimport { PolarSeriesComponent } from './polar-series.component';\nimport { PieChartModule } from '../pie-chart/';\nimport { LineChartModule } from '../line-chart/';\n\n@NgModule({\n  imports: [ChartCommonModule, PieChartModule, LineChartModule],\n  declarations: [\n    PolarChartComponent,\n    PolarSeriesComponent\n  ],\n  exports: [\n    PolarChartComponent,\n    PolarSeriesComponent\n  ]\n})\nexport class PolarChartModule {}\n","import {\n  Component, Input, Output, EventEmitter, ElementRef,\n  SimpleChanges, OnChanges, ViewChild, ChangeDetectionStrategy,\n  ChangeDetectorRef, NgZone, OnDestroy\n} from '@angular/core';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { roundedRect } from '../common/shape.helper';\nimport { count, decimalChecker } from '../common/count';\n\n@Component({\n  selector: 'g[ng-svg-charts-card]',\n  template: `\n    <svg:g\n      [attr.transform]=\"transform\"\n      class=\"cell\"\n      (click)=\"onClick()\">\n      <svg:rect\n        class=\"card\"\n        [style.fill]=\"color\"\n        [attr.width]=\"cardWidth\"\n        [attr.height]=\"cardHeight\"\n        rx=\"3\"\n        ry=\"3\"\n      />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{label}}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\">\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\">\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\">\n        {{value}}\n      </svg:text>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardComponent implements OnChanges, OnDestroy {\n\n  @Input() color;\n  @Input() bandColor;\n  @Input() textColor;\n\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() data;\n  @Input() medianSize: number;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  @ViewChild('textEl') textEl: ElementRef;\n\n  element: HTMLElement;\n  value = '';\n  transform: string;\n  formattedLabel: string;\n  cardWidth: number;\n  cardHeight: number;\n  textWidth: number;\n  textFontSize = 12;\n  textTransform = '';\n  initialized = false;\n  animationReq: any;\n\n  bandHeight = 10;\n  transformBand: string;\n  textPadding = [10, 20, 5, 20];\n  labelFontSize = 15;\n\n  bandPath: string;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef, private zone: NgZone) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  update(): void {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (card => trimLabel(card.label, 55));\n\n      this.transform = `translate(${this.x} , ${this.y})`;\n\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n\n      this.label = this.data ? this.data.name : '';\n\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n\n      const value = hasValue ? valueFormatting(cardData) : '';\n\n      this.value = this.paddedValue(value);\n      this.setPadding();\n\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n\n      setTimeout(() => {\n        this.scaleText();\n        this.value = value;\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n\n  paddedValue(value: string) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n    return value;\n  }\n\n  startCount(): void {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const callback = ({value, finished}) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({label: this.label, data: this.data, value});\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n          this.cd.markForCheck();\n        });\n      };\n\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n\n  scaleText(): void {\n    this.zone.run(() => {\n      const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return;\n      }\n\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n\n  onClick(): void {\n    this.select.emit({\n      name: this.data.name,\n      value: this.data.value\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { invertColor } from '../utils/color-utils';\n\nexport interface CardModel {\n  x;\n  y;\n  width: number;\n  height: number;\n  color: string;\n  label: string;\n  data;\n  tooltipText: string;\n}\n\n@Component({\n  selector: 'g[ng-svg-charts-card-series]',\n  template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy:trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g ng-svg-charts-card *ngFor=\"let c of cards; trackBy:trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardSeriesComponent implements OnChanges {\n\n  @Input() data: any[];\n  @Input() slots: any[];\n  @Input() dims;\n  @Input() colors;\n  @Input() innerPadding = 15;\n\n  @Input() cardColor;\n  @Input() bandColor;\n  @Input() emptyColor = 'rgba(0, 0, 0, 0)';\n  @Input() textColor;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  cards: CardModel[];\n  emptySlots: any[];\n  medianSize: number;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const sortedLengths = this.data\n        .map(d => {\n          const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n          return hasValue ? valueFormatting({\n            data: d.data,\n            label: d ? d.data.name : '',\n            value: (d && d.data) ? d.data.value : ''\n          }).length : 0;\n        })\n        .sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n\n  getCards(): any[] {\n    const yPadding = typeof this.innerPadding === 'number' ?\n      this.innerPadding :\n      this.innerPadding[0] + this.innerPadding[2];\n    const xPadding = typeof this.innerPadding === 'number' ?\n      this.innerPadding :\n      this.innerPadding[1] + this.innerPadding[3];\n\n    return this.data\n      .map((d, index) => {\n        let label = d.data.name;\n        if (label && label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label ? label.toLocaleString() : label;\n        }\n        d.data.name = label;\n\n        const value = d.data.value;\n        const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n        const color = this.cardColor || valueColor || '#000';\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.width - xPadding,\n          height: d.height - yPadding,\n          color,\n          bandColor: this.bandColor || valueColor,\n          textColor: this.textColor || invertColor(color),\n          label,\n          data: d.data,\n          tooltipText: `${label}: ${value}`\n        };\n      });\n  }\n\n  trackBy(index, card): string {\n    return card.label;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input\n} from '@angular/core';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { gridLayout, gridSize } from '../common/grid-layout.helper';\n\n@Component({\n  selector: 'ng-svg-charts-number-card',\n  templateUrl: 'number-card.template.html',\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    './card.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NumberCardComponent extends BaseChartComponent {\n  @Input() cardColor: string;\n  @Input() bandColor: string;\n  @Input() emptyColor = 'rgba(0, 0, 0, 0)';\n  @Input() innerPadding = 15;\n  @Input() textColor: string;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() designatedTotal: number;\n\n  dims: ViewDimensions;\n  data: any[];\n  slots: any[];\n  colors: ColorHelper;\n  transform: string;\n  domain: any[];\n  margin = [10, 10, 10, 10];\n\n  backgroundCards: any[];\n\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n\n    const data = this.results.slice();\n\n    while (data.length < N) {\n      data.push({value: null});\n    }\n\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { CardComponent } from './card.component';\nimport { CardSeriesComponent } from './card-series.component';\nimport { NumberCardComponent } from './number-card.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    CardComponent,\n    CardSeriesComponent,\n    NumberCardComponent\n  ],\n  exports: [\n    CardComponent,\n    CardSeriesComponent,\n    NumberCardComponent\n  ]\n})\nexport class NumberCardModule {}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { select } from 'd3-selection';\n\nimport { invertColor } from '../utils/color-utils';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ng-svg-charts-tree-map-cell]',\n  templateUrl: 'tree-map-cell.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapCellComponent implements OnChanges {\n  @Input() data;\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() value;\n  @Input() valueType;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient = false;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  gradientStops: any[];\n  gradientId: string;\n  gradientUrl: string;\n\n  element: HTMLElement;\n  transform: string;\n  formattedLabel: string;\n  formattedValue: string;\n  initialized = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(): void {\n    this.update();\n\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n    const labelFormatting = this.labelFormatting || (cell => trimLabel(cell.label, 55));\n\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n\n  update(): void {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n      this.initialized = true;\n    }\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element).select('.cell');\n\n    node\n      .attr('opacity', 0)\n      .attr('x', this.x)\n      .attr('y', this.y);\n\n    this.animateToCurrentForm();\n  }\n\n  getTextColor(): string {\n    return invertColor(this.fill);\n  }\n\n  animateToCurrentForm(): void {\n    const node: any = select(this.element).select('.cell');\n\n    if (this.animations) {\n      node\n        .transition()\n        .duration(750)\n        .attr('opacity', 1)\n        .attr('x', this.x)\n        .attr('y', this.y)\n        .attr('width', this.width)\n        .attr('height', this.height);\n    } else {\n      node\n        .attr('opacity', 1)\n        .attr('x', this.x)\n        .attr('y', this.y)\n        .attr('width', this.width)\n        .attr('height', this.height);\n    }\n  }\n\n  onClick(): void {\n    this.select.emit({\n      name: this.label,\n      value: this.value\n    });\n  }\n\n  getGradientStops() {\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: 0.3\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }\n    ];\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-tree-map-cell-series]',\n  template: `\n    <svg:g ng-svg-charts-tree-map-cell *ngFor=\"let c of cells; trackBy:trackBy\"\n      [data]=\"c\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueType]=\"c.valueType\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapCellSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() dims;\n  @Input() colors;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient = false;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  cells: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.cells = this.getCells();\n  }\n\n  getCells(): any[] {\n    return this.data.children\n      .filter((d) => {\n        return d.depth === 1;\n      })\n      .map((d, index) => {\n        const label = d.id;\n\n        const data = {\n          name: label,\n          value: d.value\n        };\n\n        return {\n          data,\n          x: d.x0,\n          y: d.y0,\n          width: d.x1 - d.x0,\n          height: d.y1 - d.y0,\n          fill: this.colors.getColor(label),\n          label,\n          value: d.value,\n          valueType: d.valueType\n        };\n      });\n  }\n\n  getTooltipText({ label, value }): string {\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { treemap, stratify } from 'd3-hierarchy';\n\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ng-svg-charts-tree-map',\n  template: `\n    <ng-svg-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"false\"\n      [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g ng-svg-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ng-svg-charts-chart>\n  `,\n  styleUrls: ['./tree-map.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapComponent extends BaseChartComponent {\n\n  @Input() results;\n  @Input() tooltipDisabled = false;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient = false;\n\n  @Output() select = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: any;\n  domain: any;\n  transform: any;\n  colors: ColorHelper;\n  treemap: any;\n  data: any;\n  margin = [10, 10, 10, 10];\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.treemap = treemap<any>()\n      .size([this.dims.width, this.dims.height]);\n\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n\n    const root = stratify<any>()\n      .id(d => {\n        let label = d.name;\n\n        if (label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label.toLocaleString();\n        }\n        return label;\n      })\n      .parentId(d => d.isRoot ? null : 'root')\n      ([rootNode, ...this.results])\n      .sum(d => d.value);\n\n    this.data = this.treemap(root);\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { TreeMapCellComponent } from './tree-map-cell.component';\nimport { TreeMapCellSeriesComponent } from './tree-map-cell-series.component';\nimport { TreeMapComponent } from './tree-map.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    TreeMapCellComponent,\n    TreeMapCellSeriesComponent,\n    TreeMapComponent\n  ],\n  exports: [\n    TreeMapCellComponent,\n    TreeMapCellSeriesComponent,\n    TreeMapComponent\n  ]\n})\nexport class TreeMapModule {}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ng-svg-charts-linear-gauge',\n  template: `\n    <ng-svg-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"false\"\n      [animations]=\"animations\"\n      (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g ng-svg-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"'horizontal'\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\">\n        </svg:g>\n        <svg:g ng-svg-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"'horizontal'\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\">\n        </svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\">\n              {{displayValue}}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\">\n              {{units}}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ng-svg-charts-chart>\n  `,\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    './linear-gauge.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinearGaugeComponent extends BaseChartComponent implements AfterViewInit {\n\n  @Input() min = 0;\n  @Input() max = 100;\n  @Input() value = 0;\n  @Input() units: string;\n  @Input() previousValue;\n  @Input() valueFormatting: any;\n\n  @ViewChild('valueTextEl') valueTextEl: ElementRef;\n  @ViewChild('unitsTextEl') unitsTextEl: ElementRef;\n\n  dims: ViewDimensions;\n  valueDomain: any;\n  valueScale: any;\n\n  colors: ColorHelper;\n  transform: string;\n  margin: any[] = [10, 20, 10, 20];\n  transformLine: string;\n\n  valueResizeScale = 1;\n  unitsResizeScale = 1;\n  valueTextTransform = '';\n  valueTranslate = '';\n  unitsTextTransform = '';\n  unitsTranslate = '';\n  displayValue: string;\n  hasPreviousValue: boolean;\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText('value');\n      this.scaleText('units');\n    });\n  }\n\n  update(): void {\n    super.update();\n\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n\n    this.setColors();\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.transform = `translate(${ xOffset }, ${ yOffset })`;\n    this.transformLine = `translate(${ this.margin[3] + this.valueScale(this.previousValue) }, ${ yOffset })`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n    setTimeout(() => this.scaleText('value'), 50);\n    setTimeout(() => this.scaleText('units'), 50);\n  }\n\n  getValueDomain(): any[] {\n    return [this.min, this.max];\n  }\n\n  getValueScale(): any {\n    return scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n  }\n\n  getDisplayValue(): string {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n    return this.value.toLocaleString();\n  }\n\n  scaleText(element, repeat = true): void {\n    let el;\n    let resizeScale;\n    if (element === 'value') {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n\n    const { width, height } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n    const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n\n    if (resizeScale !== oldScale) {\n      if (element === 'value') {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${ resizeScale }, ${ resizeScale })`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${ resizeScale }, ${ resizeScale })`;\n      }\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => { this.scaleText(element, false); }, 50);\n      }\n    }\n  }\n\n  onClick(): void {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', [this.value], this.customColors);\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ng-svg-charts-gauge',\n  template: `\n    <ng-svg-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy:trackBy\" [attr.transform]=\"rotation\">\n          <svg:g ng-svg-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\">\n          </svg:g>\n        </svg:g>\n\n        <svg:g ng-svg-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\">\n        </svg:g>\n\n        <svg:text #textEl\n            [style.textAnchor]=\"'middle'\"\n            [attr.transform]=\"textTransform\"\n            alignment-baseline=\"central\">\n          <tspan x=\"0\" dy=\"0\">{{displayValue}}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{units}}</tspan>\n        </svg:text>\n\n      </svg:g>\n    </ng-svg-charts-chart>\n  `,\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    './gauge.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GaugeComponent extends BaseChartComponent implements AfterViewInit {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() min = 0;\n  @Input() max = 100;\n  @Input() textValue: string;\n  @Input() units: string;\n  @Input() bigSegments = 10;\n  @Input() smallSegments = 5;\n  @Input() results: any[];\n  @Input() showAxis = true;\n  @Input() startAngle = -120;\n  @Input() angleSpan = 240;\n  @Input() activeEntries: any[] = [];\n  @Input() axisTickFormatting: any;\n  @Input() tooltipDisabled = false;\n  @Input() valueFormatting: (value: any) => string;\n\n  // Specify margins\n  @Input() margin: any[];\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  @ViewChild('textEl') textEl: ElementRef;\n\n  dims: ViewDimensions;\n  domain: any[];\n  valueDomain: any;\n  valueScale: any;\n\n  colors: ColorHelper;\n  transform: string;\n\n  outerRadius: number;\n  textRadius: number; // max available radius for the text\n  resizeScale = 1;\n  rotation = '';\n  textTransform = 'scale(1, 1)';\n  cornerRadius = 10;\n  arcs: any[];\n  displayValue: string;\n  legendOptions: any;\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n\n  update(): void {\n    super.update();\n\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    }\n\n    // make the starting angle positive\n    if (this.startAngle < 0) {\n      this.startAngle = (this.startAngle % 360) + 360;\n    }\n\n    this.angleSpan = Math.min(this.angleSpan, 360);\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n\n    this.arcs = this.getArcs();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.transform = `translate(${ xOffset }, ${ yOffset })`;\n    this.rotation = `rotate(${ this.startAngle })`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n\n  getArcs(): any[] {\n    const arcs = [];\n\n    const availableRadius = this.outerRadius * 0.7;\n\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n\n    let i = 0;\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - (i * radiusPerArc);\n      const innerRadius = outerRadius - arcWidth;\n\n      const backgroundArc = {\n        endAngle: this.angleSpan * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n\n      const valueArc = {\n        endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n\n      arcs.push(arc);\n      i++;\n    }\n\n    return arcs;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getValueDomain(): any[] {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n\n    return [this.min, this.max];\n  }\n\n  getValueScale(): any {\n    return scaleLinear()\n      .range([0, this.angleSpan])\n      .nice()\n      .domain(this.valueDomain);\n  }\n\n  getDisplayValue(): string {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n\n    return value.toLocaleString();\n  }\n\n  scaleText(repeat = true): void {\n    const { width } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n    }\n\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  getLegendOptions(): any {\n    return {\n      scaleType: 'ordinal',\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  trackBy(index, item): string {\n    return item.valueArc.data.name;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { formatLabel } from '../common/label.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-gauge-arc]',\n  template: `\n    <svg:g ng-svg-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\">\n    </svg:g>\n    <svg:g ng-svg-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GaugeArcComponent {\n\n  @Input() backgroundArc: any;\n  @Input() valueArc: any;\n  @Input() cornerRadius: any;\n  @Input() colors: ColorHelper;\n  @Input() isActive = false;\n  @Input() tooltipDisabled = false;\n  @Input() valueFormatting: (value: any) => string;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  tooltipText(arc): string {\n    const label = formatLabel(arc.data.name);\n    let val;\n\n    if (this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { line } from 'd3-shape';\n\n@Component({\n  selector: 'g[ng-svg-charts-gauge-axis]',\n  template: `\n    <svg:g [attr.transform]=\"rotate\">\n        <svg:g *ngFor=\"let tick of ticks.big\"\n            class=\"gauge-tick gauge-tick-large\">\n            <svg:path [attr.d]=\"tick.line\" />\n        </svg:g>\n        <svg:g *ngFor=\"let tick of ticks.big\"\n            class=\"gauge-tick gauge-tick-large\">\n            <svg:text\n                [style.textAnchor]=\"tick.textAnchor\"\n                [attr.transform]=\"tick.textTransform\"\n                alignment-baseline=\"central\">\n                {{tick.text}}\n            </svg:text>\n        </svg:g>\n        <svg:g *ngFor=\"let tick of ticks.small\"\n            class=\"gauge-tick gauge-tick-small\">\n            <svg:path [attr.d]=\"tick.line\" />\n        </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GaugeAxisComponent implements OnChanges {\n  @Input() bigSegments: any;\n  @Input() smallSegments: any;\n  @Input() min: any;\n  @Input() max: any;\n  @Input() angleSpan: number;\n  @Input() startAngle: number;\n  @Input() radius: any;\n  @Input() valueScale: any;\n  @Input() tickFormatting: any;\n\n  ticks: any;\n  rotationAngle: number;\n  rotate = '';\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.update();\n  }\n\n  update(): void {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${ this.rotationAngle })`;\n    this.ticks = this.getTicks();\n  }\n\n  getTicks(): any {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / (this.smallSegments);\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = angleDeg * Math.PI / 180;\n\n      const textAnchor = this.getTextAnchor(angleDeg);\n\n      let skip = false;\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${ -this.rotationAngle })\n          `\n        });\n      }\n\n      if (i === this.bigSegments) {\n        continue;\n      }\n\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = smallAngleDeg * Math.PI / 180;\n\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n\n    return ticks;\n  }\n\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = 'middle';\n    if (angle > 45 && angle <= 135) {\n      textAnchor = 'start';\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = 'end';\n    }\n    return textAnchor;\n  }\n\n  getTickPath(startDistance, tickLength, angle): any {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n\n    const points = [{x: x1, y: y1}, {x: x2, y: y2}];\n    const lineGenerator = line<any>().x(d => d.x).y(d => d.y);\n    return lineGenerator(points);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { LinearGaugeComponent } from './linear-gauge.component';\nimport { GaugeComponent } from './gauge.component';\nimport { GaugeArcComponent } from './gauge-arc.component';\nimport { GaugeAxisComponent } from './gauge-axis.component';\nimport { PieChartModule } from '../pie-chart/pie-chart.module';\nimport { BarChartModule } from '../bar-chart/bar-chart.module';\n\n@NgModule({\n  imports: [ChartCommonModule, PieChartModule, BarChartModule],\n  declarations: [\n    LinearGaugeComponent,\n    GaugeComponent,\n    GaugeArcComponent,\n    GaugeAxisComponent\n  ],\n  exports: [\n    LinearGaugeComponent,\n    GaugeComponent,\n    GaugeArcComponent,\n    GaugeAxisComponent\n  ]\n})\nexport class GaugeModule {}\n","import './polyfills';\n\nimport { NgModule } from '@angular/core';\nimport { ChartCommonModule } from './common/chart-common.module';\nimport { AreaChartModule } from './area-chart/area-chart.module';\nimport { BarChartModule } from './bar-chart/bar-chart.module';\nimport { BubbleChartModule } from './bubble-chart/bubble-chart.module';\nimport { HeatMapModule } from './heat-map/heat-map.module';\nimport { LineChartModule } from './line-chart/line-chart.module';\nimport { PolarChartModule } from './polar-chart/polar-chart.module';\nimport { NumberCardModule } from './number-card/number-card.module';\nimport { PieChartModule } from './pie-chart/pie-chart.module';\nimport { TreeMapModule } from './tree-map/tree-map.module';\nimport { GaugeModule } from './gauge/gauge.module';\n\n@NgModule({\n  exports: [\n    ChartCommonModule,\n    AreaChartModule,\n    BarChartModule,\n    BubbleChartModule,\n    HeatMapModule,\n    LineChartModule,\n    PolarChartModule,\n    NumberCardModule,\n    PieChartModule,\n    TreeMapModule,\n    GaugeModule\n  ]\n})\nexport class SvgChartsModule { }\n"]}