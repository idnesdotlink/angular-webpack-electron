{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@try/svg-chart/lib/polyfills.ts","ng://@try/svg-chart/lib/common/tooltip/injection.service.ts","ng://@try/svg-chart/lib/common/tooltip/position/placement.type.ts","ng://@try/svg-chart/lib/common/tooltip/injection-registery.service.ts","ng://@try/svg-chart/lib/utils/throttle.ts","ng://@try/svg-chart/lib/common/tooltip/position/position.ts","ng://@try/svg-chart/lib/common/tooltip/style.type.ts","ng://@try/svg-chart/lib/common/tooltip/alignment.type.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.component.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.service.ts","ng://@try/svg-chart/lib/common/charts/chart.component.ts","ng://@try/svg-chart/lib/common/legend/scale-legend.component.ts","ng://@try/svg-chart/lib/common/label.helper.ts","ng://@try/svg-chart/lib/common/legend/legend.component.ts","ng://@try/svg-chart/lib/common/legend/legend-entry.component.ts","ng://@try/svg-chart/lib/common/trim-label.helper.ts","ng://@try/svg-chart/lib/common/legend/advanced-legend.component.ts","ng://@try/svg-chart/lib/utils/visibility-observer.ts","ng://@try/svg-chart/lib/common/base-chart/base-chart.component.ts","ng://@try/svg-chart/lib/common/axes/axis-label.component.ts","ng://@try/svg-chart/lib/common/axes/ticks.helper.ts","ng://@try/svg-chart/lib/common/axes/x-axis-ticks.component.ts","ng://@try/svg-chart/lib/common/axes/x-axis.component.ts","ng://@try/svg-chart/lib/common/shape.helper.ts","ng://@try/svg-chart/lib/common/tooltip/show.type.ts","ng://@try/svg-chart/lib/common/axes/y-axis-ticks.component.ts","ng://@try/svg-chart/lib/common/axes/y-axis.component.ts","ng://@try/svg-chart/lib/common/axes/axes.module.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.directive.ts","ng://@try/svg-chart/lib/common/tooltip/tooltip.module.ts","ng://@try/svg-chart/lib/utils/id.ts","ng://@try/svg-chart/lib/utils/color-sets.ts","ng://@try/svg-chart/lib/events.ts","ng://@try/svg-chart/lib/common/color.helper.ts","ng://@try/svg-chart/lib/common/circle-series/circle-series.component.ts","ng://@try/svg-chart/lib/common/circle/circle.component.ts","ng://@try/svg-chart/lib/common/grid-panel/grid-panel.component.ts","ng://@try/svg-chart/lib/common/grid-panel-series/grid-panel-series.component.ts","ng://@try/svg-chart/lib/common/svg-linear-gradient/svg-linear-gradient.component.ts","ng://@try/svg-chart/lib/common/svg-radial-gradient/svg-radial-gradient.component.ts","ng://@try/svg-chart/lib/common/timeline/timeline.component.ts","ng://@try/svg-chart/lib/area/area.component.ts","ng://@try/svg-chart/lib/common/tooltip-area/tooltip-area.component.ts","ng://@try/svg-chart/lib/common/count/count.helper.ts","ng://@try/svg-chart/lib/common/count/count.directive.ts","ng://@try/svg-chart/lib/common/chart-common.module.ts","ng://@try/svg-chart/lib/common/view-dimensions.helper.ts","ng://@try/svg-chart/lib/common/domain.helper.ts","ng://@try/svg-chart/lib/area-chart/area-chart.component.ts","ng://@try/svg-chart/lib/area-chart/area-chart-normalized.component.ts","ng://@try/svg-chart/lib/area-chart/area-chart-stacked.component.ts","ng://@try/svg-chart/lib/utils/sort.ts","ng://@try/svg-chart/lib/bar-chart/series-vertical/series-vertical.component.ts","ng://@try/svg-chart/lib/area-chart/area-series.component.ts","ng://@try/svg-chart/lib/area-chart/area-chart.module.ts","ng://@try/svg-chart/lib/bar-chart/bar/bar.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal/bar-horizontal.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal-2d/bar-horizontal-2d.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal-normalized/bar-horizontal-normalized.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-horizontal-stacked/bar-horizontal-stacked.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical/bar-vertical.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical-2d/bar-vertical-2d.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical-normalized/bar-vertical-normalized.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-vertical-stacked/bar-vertical-stacked.component.ts","ng://@try/svg-chart/lib/bar-chart/series-horizontal/series-horizontal.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-label/bar-label.component.ts","ng://@try/svg-chart/lib/bar-chart/bar-chart.module.ts","ng://@try/svg-chart/lib/line-chart/line.component.ts","ng://@try/svg-chart/lib/line-chart/line-chart.component.ts","ng://@try/svg-chart/lib/line-chart/line-series.component.ts","ng://@try/svg-chart/lib/line-chart/line-chart.module.ts","ng://@try/svg-chart/lib/pie-chart/advanced-pie-chart.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-label.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-arc.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-chart.component.ts","ng://@try/svg-chart/lib/common/grid-layout.helper.ts","ng://@try/svg-chart/lib/pie-chart/pie-grid.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-grid-series.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-series.component.ts","ng://@try/svg-chart/lib/pie-chart/pie-chart.module.ts","ng://@try/svg-chart/lib/svg-chart.module.ts","ng://@try/svg-chart/lib/common/tick-format.helper.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","value","done","__read","n","e","ar","push","error","__spread","concat","SVGElement","contains","HTMLDivElement","PlacementTypes","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","InjectionService_1","globalRootViewContainer","getRootViewContainer","rootComponents","components","_container","Error","setRootViewContainer","getComponentRootNode","componentRef","hostView","rootNodes","element","nativeElement","getRootViewContainerNode","projectComponentBindings","component","bindings","inputs","undefined","bindingKeys","getOwnPropertyNames","bindingKeys_1","tslib_1.__values","bindingKeys_1_1","bindingName","instance","outputs","eventKeys","eventKeys_1","eventKeys_1_1","eventName","appendComponent","componentClass","location","resolveComponentFactory","appRef","componentRootNode","attachView","onDestroy","detachView","renderer","appendChild","Injectable","ApplicationRef","ComponentFactoryResolver","Injector","InjectionRegistery","injectionService","defaults","Map","getByType","type","get","createByType","assignDefaults","injectComponent","register","destroy","compsByType","componentType","idx","indexOf","splice","destroyAll","destroyByType","comps","comps_1","comps_1_1","comp","_a","assign","has","set","throttle","func","wait","options","context","args","result","timeout","previous","later","leading","Date","apply","now","remaining","clearTimeout","trailing","setTimeout","throttleable","duration","descriptor","configurable","enumerable","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","height","horizontalPosition","left","width","StyleTypes","AlignmentTypes","PositionHelper","calculateVerticalAlignment","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","right","bottom","positionContent","determinePlacement","TooltipContentComponent","clz","cssClass","ngAfterViewInit","position","bind","_this","nativeElm","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","tslib_1.__decorate","Input","ViewChild","HostBinding","HostListener","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","TooltipService","_super","tslib_1.__extends","ChartComponent","vcr","tooltipService","showLegend","animations","legendLabelClick","EventEmitter","legendLabelActivate","legendLabelDeactivate","ngOnChanges","changes","update","legendColumns","legendType","getLegendType","legendOptions","chartColumns","chartWidth","view","legendWidth","scaleType","Output","providers","changeDetection","ChangeDetectionStrategy","OnPush","trigger","transition","style","opacity","animate","ViewContainerRef","ScaleLegendComponent","sanitizer","horizontal","gradientValues","gradientString","colors","range","domain","direction","gradient","bypassSecurityTrustStyle","splits","pairs","reverse","forEach","Math","round","join","DomSanitizer","formatLabel","label","toLocaleDateString","toLocaleString","LegendComponent","cd","labelClick","labelActivate","labelDeactivate","legendEntries","markForCheck","getLegendEntries","items","formattedLabel","findIndex","color","this_1","getColor","_b","data","_c","isActive","entry","activeEntries","find","name","activate","item","emit","deactivate","trackBy","index","ChangeDetectorRef","LegendEntryComponent","select","toggle","onMouseEnter","onMouseLeave","trimLabel","s","max","trim","slice","AdvancedLegendComponent","legendItems","labelFormatting","percentageFormatting","percentage","defaultValueFormatting","getTotal","map","reduce","sum","total","roundedTotal","getLegendItems","_value","displayLabel","origialLabel","preserveWhitespaces","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","BaseChartComponent","chartElement","scheme","schemeType","bindWindowResizeEvent","visibilityObserver","subscribe","ngOnDestroy","unbindEvents","unsubscribe","results","cloneData","dims","getContainerDims","hostElem","parentNode","formatDates","g","series","j","resizeSubscription","subscription","observableFromEvent","pipe","debounceTime","data_1","data_1_1","copy","_d","seriesItem","seriesItemCopy","JSON","parse","stringify","NgZone","AxisLabelComponent","textHeight","margin","strokeWidth","textAnchor","transform","orient","y","offset","x","reduceTicks","ticks","maxTicks","reduced","modulus","floor","XAxisTicksComponent","tickArguments","tickStroke","trimTicks","maxTickLength","showGridLines","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","maxTicksLength","maxAllowedLength","updateDims","parseInt","ticksElement","scale","getTicks","tickFormatting","tickFormat","angle","getRotationAngle","adjustedScale","bandwidth","textTransform","tick","toString","tickLength","tickTrim","wordWidth","min","baseWidth","maxBaseWidth","cos","PI","getMaxTicks","maxScaleTicks","tickValues","tickWidth","tickTransform","gridLineTransform","XAxisComponent","xOrient","xAxisOffset","xAxisClassName","labelOffset","fill","stroke","padding","xAxisTickCount","emitTicksHeight","newLabelOffset","roundedRect","w","h","tl","tr","bl","br","retval","ShowTypes","YAxisTicksComponent","showRefLabels","showRefLines","referenceLineLength","sign","tickSpacing","referenceLines","setReferencelines","y2","y1","dy","x2","x1","refMin","refMax","referenceAreaPath","gridLineWidth","tickHeight","YAxisComponent","yOrient","yAxisOffset","yAxisClassName","yAxisTickCount","emitTicksWidth","AxesModule","NgModule","imports","CommonModule","declarations","exports","TooltipDirective","viewContainerRef","tooltipCssClass","tooltipTitle","tooltipAppendToBody","tooltipSpacing","tooltipDisabled","tooltipShowCaret","tooltipPlacement","tooltipAlignment","center","tooltipType","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","focus","mouseover","hideTooltip","onFocus","listensForFocus","showTooltip","onBlur","listensForHover","onMouseClick","immediate","time","createBoundOptions","addHideListeners","tooltip","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","document","event","destroyFn","title","tooltipTemplate","tooltipContext","Directive","TooltipModule","entryComponents","cache","id","newId","random","pow","root","colorSets","selectable","group","ColorHelper","customColors","cs","colorDomain","generateColorScheme","colorScale","scaleQuantile","scaleOrdinal","points","scaleLinear","valueScale","formattedValue_1","found","mapping","toLowerCase","getLinearGradientStops","start","colorValueScale","scaleBand","endColor","startVal","startColor","endVal","currentVal","stops","originalOffset","toFixed","stops_1","stops_1_1","CircleSeriesComponent","barVisible","ngOnInit","gradientId","gradientFill","circle","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","cx","seriesName","tooltipLabel","xScale","Number","cy","yScale","d1","classNames","radius","gradientStops","getGradientStops","getTooltipText","getTooltipMinMaxText","onClick","activateCircle","deactivateCircle","TemplateRef","CircleComponent","isArray","GridPanelComponent","GridPanelSeriesComponent","gridPanels","getGridPanels","className","step","paddingInner","class","SvgLinearGradientComponent","orientation","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","startOpacity","TimelineComponent","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","_e","_f","includes","v","scaleTime","scalePoint","brushX","extent","on","newDomain","d3event","selection","invert","attr","AreaComponent","hasGradient","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","path","global","MouseEvent","TooltipAreaComponent","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","groupName","val","d0","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","xSet","lastAnchorPos","ev","bubbles","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","abs","getToolTipText","tooltipItem","easeOutExpo","t","count","countFrom","countTo","countDecimals","countDuration","callback","startTime","countDown","decimals","dec","requestAnimationFrame","timestamp","runCount","frameVal","progress","finished","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","cancelAnimationFrame","animationReq","valueFormatting","COMPONENTS","ChartCommonModule","Location","provide","LocationStrategy","useClass","PathLocationStrategy","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","_g","showYLabel","_h","_j","_k","legendPosition","_l","columns","xOffset","chartHeight","getUniqueXDomainValues","valueSet","Set","results_1","results_1_1","add","from","getScaleType","checkDateType","every","AreaChartComponent","legendTitle","baseValue","curve","curveLinear","trimXAxisTicks","trimYAxisTicks","maxXAxisTickLength","maxYAxisTickLength","roundDomains","timelineHeight","timelinePadding","xAxis","yAxis","showXAxisLabel","showYAxisLabel","legend","timeline","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","clipPath","timelineWidth","timelineXDomain","timelineXScale","timelineYScale","timelineTransform","xScaleMin","xScaleMax","tslib_1.__spread","sort","a","aDate","getTime","bDate","autoScale","yScaleMin","yScaleMax","nice","date","num","values_1","values_1_1","isDate","updateDomain","updateHoveredVertical","hoveredVertical","deactivateAll","hideCircles","opts","updateYAxisWidth","updateXAxisHeight","onActivate","entries","onDeactivate","ContentChild","AreaChartNormalizedComponent","valueOf","AreaChartStackedComponent","this_2","sortLinear","property","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","D0Types","AreaSeriesComponent","stacked","normalized","currentArea","startingArea","updateGradient","xProperty","area","y0","d0values","d1values","isInactive","AreaChartModule","BarComponent","roundEdges","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarHorizontalComponent","barPadding","showDataLabel","dataLabelMaxWidth","negative","positive","rangeRound","onDataLabelMaxWidthChanged","size","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valuesDomain","getValueDomain","groupScale","getGroupScale","innerScale","getInnerScale","getValueScale","paddingOuter","groupTransform","groupIndex","BarHorizontalNormalizedComponent","valueDomain","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","BarVerticalComponent","dataLabelMaxHeight","onDataLabelMaxHeightChanged","BarVertical2DComponent","BarVerticalNormalizedComponent","BarVerticalStackedComponent","SeriesVerticalComponent","dataLabelHeightChanged","barsForDataLabels","updateTooltipSettings","d0Type","bars","bar","offset1","offset0","ariaLabel","tooltipText","updateDataLabels","section","totalPositive","totalNegative","trackDataLabelBy","barLabel","SeriesHorizontalComponent","dataLabelWidthChanged","click","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","BarChartModule","LineComponent","initialPath","strokeDasharray","strokeDashoffset","LineChartComponent","hasRange","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","outerPath","gradientUrl","line","areaGradientStops","LineChartModule","AdvancedPieChartComponent","getDomain","yOffset","outerRadius","innerRadius","PieLabelComponent","labelTrim","labelTrimSize","isIE","test","navigator","userAgent","startRadius","explodeSlices","innerPos","arc","centroid","pos","outerPos","textX","textY","midAngle","startAngle","endAngle","PieArcComponent","cornerRadius","pointerEvents","dblclick","getPointerEvents","calc","calculateArc","radialGradientId","updateAnimation","selectAll","attrTween","_current","copyOfD","interpolater","interpolate","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieChartComponent","labels","doughnut","arcWidth","trimLabels","maxLabelLength","translation","gridSize","len","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","percent","PieGridComponent","getSeries","defaultTooltipText","format","other","PieGridSeriesComponent","layout","pie","arcs","getArcs","PieSeriesComponent","arcData","pieGenerator","calculateLabelPositions","outerArc","pieData","labelPositions","labelVisible","myArc","showLabels","getTooltipTitle","labelText","PieChartModule","SvgChartsModule","fieldType","groupByType","timeFormat","formatter"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// The export is needed here to generate a valid polyfills.metadata.json file\nexport function ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ng-svg-charts/issues/386\n  if (typeof(SVGElement) !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\n\nngxChartsPolyfills();\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  Injector,\n  EmbeddedViewRef,\n  Type,\n  Renderer2\n} from '@angular/core';\n\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n * @class InjectionService\n */\n@Injectable()\nexport class InjectionService {\n  static globalRootViewContainer: ComponentRef<any> = null;\n\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container: ComponentRef<any>): void {\n    InjectionService.globalRootViewContainer = container;\n  }\n\n  private _container: ComponentRef<any>;\n\n  constructor(\n    private applicationRef: ApplicationRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector\n  ) {}\n\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer(): ComponentRef<any> {\n    const rootComponents = this.applicationRef.components;\n\n    // fix cannot read length of undefined\n    if (rootComponents) {\n      if (rootComponents.length) { return rootComponents[0]; }\n    }\n\n    if (this._container) { return this._container; }\n    if (InjectionService.globalRootViewContainer) {\n      return InjectionService.globalRootViewContainer;\n    }\n\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer.');\n  }\n\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param {any} container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container): void {\n    this._container = container;\n  }\n\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param {ComponentRef<any>} componentRef\n   * @returns {HTMLElement}\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(componentRef: any): HTMLElement {\n    // the top most component root node has no `hostView`\n    if (!componentRef.hostView) { return componentRef.element.nativeElement; }\n\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n\n  /**\n   * Gets the root component container html element.\n   *\n   * @returns {HTMLElement}\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(): HTMLElement {\n    return this.getComponentRootNode(this.getRootViewContainer());\n  }\n\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param {ComponentRef<any>} component\n   * @param {*} options\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component: ComponentRef<any>, bindings: any): ComponentRef<any> {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n\n    return component;\n  }\n\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @template T\n   * @param {Type<T>} componentClass\n   * @param {*} [options={}]\n   * @param {Element} [location=this.getRootViewContainerNode()]\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent<T>(\n    componentClass: Type<T>,\n    bindings: any = {},\n    location: Element = this.getRootViewContainerNode()\n  ): ComponentRef<any> {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);\n    const componentRef: any = componentFactory.create(this.injector);\n    const appRef: any = this.applicationRef;\n    const componentRootNode = this.getComponentRootNode(componentRef);\n\n    // project the options passed to the component instance\n    this.projectComponentBindings(componentRef, bindings);\n\n    appRef.attachView(componentRef.hostView);\n\n    componentRef.onDestroy(() => {\n      appRef.detachView(componentRef.hostView);\n    });\n\n    // use the renderer to append the element for univseral support\n    const renderer: Renderer2 = componentRef.instance.renderer;\n    renderer.appendChild(location, componentRootNode);\n\n    return componentRef;\n  }\n}\n","export enum PlacementTypes {\n  top = 'top' as any,\n  bottom = 'bottom' as any,\n  left = 'left' as any,\n  right = 'right' as any\n}\n","import { ComponentRef } from '@angular/core';\nimport { InjectionService } from './injection.service';\n\nexport abstract class InjectionRegistery {\n\n  protected abstract type: any;\n\n  protected defaults: any = {};\n  protected components: Map<any, any> = new Map();\n\n  constructor(public injectionService: InjectionService) { }\n\n  getByType(type: any = this.type) {\n    return this.components.get(type);\n  }\n\n  create(bindings: any): any {\n    return this.createByType(this.type, bindings);\n  }\n\n  createByType(type: any, bindings: any): any {\n    bindings = this.assignDefaults(bindings);\n\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n\n    return component;\n  }\n\n  destroy(instance): void {\n    const compsByType = this.components.get(instance.componentType);\n\n    if (compsByType) {\n      const idx = compsByType.indexOf(instance);\n\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n\n  destroyAll(): void {\n    this.destroyByType(this.type);\n  }\n\n  destroyByType(type): void {\n    const comps = this.components.get(type);\n\n    if (comps) {\n      for(const comp of comps) {\n        this.destroy(comp);\n      }\n    }\n  }\n\n  protected assignDefaults(bindings): any {\n    const { inputs, outputs } = this.defaults;\n\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = { inputs: bindings };\n    }\n\n    if (inputs) {\n      bindings.inputs = Object.assign(inputs, bindings.inputs);\n    }\n\n    if (outputs) {\n      bindings.outputs = Object.assign(outputs, bindings.outputs);\n    }\n\n    return bindings;\n  }\n\n  protected injectComponent(type, bindings): ComponentRef<any> {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n\n  protected register(type, component): void {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n\n    const types = this.components.get(type);\n    types.push(component);\n  }\n\n}\n","\n/**\n * Throttle a function\n *\n * @export\n * @param {*}      func\n * @param {number} wait\n * @param {*}      [options]\n * @returns\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function() {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n *\n * @export\n * @param {number} duration\n * @param {*} [options]\n * @returns\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import { PlacementTypes } from './placement.type';\n\nconst caretOffset = 7;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'top') {\n    return elDimensions.top - caretOffset;\n  }\n\n  if (alignment === 'bottom') {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n\n  return undefined;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'left') {\n    return elDimensions.left - caretOffset;\n  }\n\n  if (alignment === 'right') {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n\n  return undefined;\n}\n\n/**\n * Position helper for the popover directive.\n *\n * @export\n * @class PositionHelper\n */\nexport class PositionHelper {\n\n  /**\n   * Calculate vertical alignment position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate vertical caret position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'top') {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n\n    if (alignment === 'bottom') {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += (popoverPosition + popoverDimensions.height - window.innerHeight);\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz alignment position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz caret position\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {number}\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'left') {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n\n    if (alignment === 'right') {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += (popoverPosition + popoverDimensions.width - window.innerWidth);\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} placement\n   * @param {any} alignment\n   * @param {any} spacing\n   * @returns {boolean}\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, alignment, spacing): boolean {\n    let flip = false;\n\n    if (placement === 'right') {\n      const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'left') {\n      const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'top') {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'bottom') {\n      const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n\n    return flip;\n  }\n\n  /**\n   * Position caret\n   *\n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {*}\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    }\n\n    return { top, left };\n  }\n\n  /**\n   * Position content\n   *\n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} spacing\n   * @param {any} alignment\n   * @returns {*}\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(\n        hostDim, elmDim, alignment);\n    }\n\n    return { top, left };\n  }\n\n  /**\n   * Determine placement based on flip\n   *\n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} spacing\n   * @param {any} alignment\n   * @returns {*}\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing, alignment): any {\n    const shouldFlip = PositionHelper.shouldFlip(\n      hostDim,\n      elmDim,\n      placement,\n      alignment,\n      spacing);\n\n    if (shouldFlip) {\n      if (placement === PlacementTypes.right) {\n        return PlacementTypes.left;\n      } else if (placement === PlacementTypes.left) {\n        return PlacementTypes.right;\n      } else if (placement === PlacementTypes.top) {\n        return PlacementTypes.bottom;\n      } else if (placement === PlacementTypes.bottom) {\n        return PlacementTypes.top;\n      }\n    }\n\n    return placement;\n  }\n\n}\n","export enum StyleTypes {\n  popover = 'popover' as any,\n  tooltip = 'tooltip' as any\n}\n","export enum AlignmentTypes {\n  left = 'left' as any,\n  center = 'center' as any,\n  right = 'right' as any\n}\n","import {\n  Input, Component, ElementRef, AfterViewInit, ViewEncapsulation,\n  HostListener, ViewChild, HostBinding, Renderer2\n} from '@angular/core';\n\nimport { throttleable } from '../../utils/throttle';\nimport { PositionHelper } from './position/position';\nimport { PlacementTypes } from './position/placement.type';\n\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\n\n@Component({\n  selector: 'ngx-tooltip-content',\n  template: `\n    <div>\n      <span\n        #caretElm\n        [hidden]=\"!showCaret\"\n        class=\"tooltip-caret position-{{this.placement}}\">\n      </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template\n            [ngTemplateOutlet]=\"template\"\n            [ngTemplateOutletContext]=\"{ model: context }\">\n          </ng-template>\n        </span>\n        <span\n          *ngIf=\"title\"\n          [innerHTML]=\"title\">\n        </span>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipContentComponent implements AfterViewInit {\n\n  @Input() host: any;\n  @Input() showCaret: boolean;\n  @Input() type: StyleTypes;\n  @Input() placement: PlacementTypes;\n  @Input() alignment: AlignmentTypes;\n  @Input() spacing: number;\n  @Input() cssClass: string;\n  @Input() title: string;\n  @Input() template: any;\n  @Input() context: any;\n\n  @ViewChild('caretElm') caretElm;\n\n  @HostBinding('class')\n  get cssClasses(): string {\n    let clz = 'ng-svg-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2) {\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(this.position.bind(this));\n  }\n\n  position(): void {\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n\n    // if no dims were found, never show\n    if (!hostDim.height && !hostDim.width) { return; }\n\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n\n  positionContent(nativeElm, hostDim, elmDim): void {\n    const { top, left } = PositionHelper.positionContent(\n      this.placement, elmDim, hostDim, this.spacing, this.alignment);\n\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n\n  positionCaret(hostDim, elmDim): void {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const { top, left } = PositionHelper.positionCaret(\n      this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n\n  checkFlip(hostDim, elmDim): void {\n    this.placement = PositionHelper.determinePlacement(\n      this.placement, elmDim, hostDim, this.spacing, this.alignment);\n  }\n\n  @HostListener('window:resize')\n  @throttleable(100)\n  onWindowResize(): void {\n    this.position();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InjectionService } from './injection.service';\nimport { InjectionRegistery } from './injection-registery.service';\nimport { TooltipContentComponent } from './tooltip.component';\n\n@Injectable()\nexport class TooltipService extends InjectionRegistery {\n\n  type: any = TooltipContentComponent;\n\n  constructor(public injectionService: InjectionService) {\n    super(injectionService);\n  }\n\n}\n","import {\n  Component, Input, OnChanges, ViewContainerRef, ChangeDetectionStrategy, EventEmitter,\n  Output, SimpleChanges\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { TooltipService } from '../tooltip/tooltip.service';\n\n@Component({\n  providers: [TooltipService],\n  selector: 'ng-svg-charts-chart',\n  template: `\n    <div\n      class=\"ng-svg-charts-outer\"\n      [style.width.px]=\"view[0]\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\">\n      <svg\n        class=\"ng-svg-charts\"\n        [attr.width]=\"chartWidth\"\n        [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ng-svg-charts-scale-legend\n        *ngIf=\"showLegend && legendType === 'scaleLegend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\">\n      </ng-svg-charts-scale-legend>\n      <ng-svg-charts-legend\n        *ngIf=\"showLegend && legendType === 'legend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\">\n      </ng-svg-charts-legend>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('500ms 100ms', style({ opacity: 1 }))\n      ])\n    ])\n  ]\n})\nexport class ChartComponent implements OnChanges {\n\n  @Input() view;\n  @Input() showLegend = false;\n  @Input() legendOptions: any;\n\n  // remove\n  @Input() data;\n  @Input() legendData;\n  @Input() legendType: any;\n  @Input() colors: any;\n  @Input() activeEntries: any[];\n  @Input() animations = true;\n\n  @Output() legendLabelClick: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  chartWidth: any;\n  title: any;\n  legendWidth: any;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private tooltipService: TooltipService) {\n    this.tooltipService.injectionService.setRootViewContainer(this.vcr);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n\n      if (!this.legendOptions || this.legendOptions.position === 'right') {\n        if (this.legendType === 'scaleLegend') {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n\n    const chartColumns = 12 - legendColumns;\n\n    this.chartWidth = ~~(this.view[0] * chartColumns / 12.0);\n    this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')\n      ? ~~(this.view[0] * legendColumns / 12.0)\n      : this.chartWidth;\n  }\n\n  getLegendType(): string {\n    if (this.legendOptions.scaleType === 'linear') {\n      return 'scaleLegend';\n    } else {\n      return 'legend';\n    }\n  }\n\n}\n","import {\n  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ng-svg-charts-scale-legend',\n  template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\">\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div\n        class=\"scale-legend-wrap\"\n        [style.background]=\"gradient\">\n      </div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./scale-legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScaleLegendComponent implements OnChanges {\n\n  @Input() valueRange;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() horizontal = false;\n\n  gradient: any;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = (this.horizontal) ? 'right' : 'bottom';\n    this.gradient = this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to ${direction}, ${gradientValues})`);\n  }\n\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param  {array} colors array of colors\n   * @param  {array} splits array of splits on a scale of (0, 1)\n   * @return {string}\n   */\n  gradientString(colors, splits): string {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n\n    return pairs.join(', ');\n  }\n\n}\n","/**\n * Formats a label given a date, number or string.\n *\n * @export\n * @param {*} label\n * @returns {string}\n */\nexport function formatLabel(label: any): string {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n\n  return label;\n}\n","import {\n  Component, Input, ChangeDetectionStrategy, Output, EventEmitter,\n  SimpleChanges, OnChanges, ChangeDetectorRef, ViewEncapsulation\n } from '@angular/core';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ng-svg-charts-legend',\n  template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{title}}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\"\n            [class.horizontal-legend]=\"horizontal\"\n          [style.max-height.px]=\"height - 45\">\n          <li\n            *ngFor=\"let entry of legendEntries; trackBy: trackBy\"\n            class=\"legend-label\">\n            <ng-svg-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\">\n            </ng-svg-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendComponent implements OnChanges {\n\n  @Input() data;\n  @Input() title;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() activeEntries;\n  @Input() horizontal = false;\n\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @Output() labelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  legendEntries: any[] = [];\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n\n  getLegendEntries(): any[] {\n    const items = [];\n\n    for(const label of this.data) {\n      const formattedLabel = formatLabel(label);\n\n      const idx = items.findIndex((i) => {\n        return i.label === formattedLabel;\n      });\n\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n\n    return items;\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n\n  trackBy(index, item): string {\n    return item.label;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  HostListener,\n  EventEmitter\n } from '@angular/core';\n\n@Component({\n  selector: 'ng-svg-charts-legend-entry',\n  template: `\n    <span\n      [title]=\"formattedLabel\"\n      tabindex=\"-1\"\n      [class.active]=\"isActive\"\n      (click)=\"select.emit(formattedLabel)\">\n      <span\n        class=\"legend-label-color\"\n        [style.background-color]=\"color\"\n        (click)=\"toggle.emit(formattedLabel)\">\n      </span>\n      <span class=\"legend-label-text\">\n        {{trimmedLabel}}\n      </span>\n    </span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendEntryComponent {\n\n  @Input() color: string;\n  @Input() label: any;\n  @Input() formattedLabel: string;\n  @Input() isActive = false;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  get trimmedLabel(): string {\n    return this.formattedLabel || '(empty)';\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit({name: this.label});\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit({name: this.label});\n  }\n\n}\n","export function trimLabel(s, max = 16): string {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ng-svg-charts-advanced-legend',\n  template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ng-svg-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\">\n      </div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.label)\"\n            (mouseleave)=\"deactivate.emit(legendItem.label)\"\n            (click)=\"select.emit({ name: legendItem.label, value: legendItem.value })\">\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ng-svg-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\">\n            </div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ng-svg-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\">\n            </div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./advanced-legend.component.scss'],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedLegendComponent implements OnChanges {\n  @Input() width: number;\n  @Input() data;\n  @Input() colors;\n  @Input() label = 'Total';\n  @Input() animations = true;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  legendItems: any[] = [];\n  total: number;\n  roundedTotal: number;\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() labelFormatting: (value: string) => any = label => label;\n  @Input() percentageFormatting: (value: number) => any = percentage => percentage;\n\n  defaultValueFormatting: (value: number) => any = value => value.toLocaleString();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getTotal(): number {\n    return this.data.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n\n  update(): void {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n\n    this.legendItems = this.getLegendItems();\n  }\n\n  getLegendItems(): any {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n\n      return {\n        _value: value,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n\n  trackBy(item) {\n    return item.formattedLabel;\n  }\n}\n","import { Output, EventEmitter, NgZone } from '@angular/core';\n\n/**\n * Visibility Observer\n */\nexport class VisibilityObserver {\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n  isVisible = false;\n\n  constructor(private element: any, private zone: NgZone) {\n    this.runCheck();\n  }\n\n  destroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n\n}\n","import {\n  ElementRef, NgZone, ChangeDetectorRef, Component, Input,\n  Output, EventEmitter, AfterViewInit, OnDestroy, OnChanges, SimpleChanges\n} from '@angular/core';\n\nimport { fromEvent as observableFromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { VisibilityObserver } from '../../utils/visibility-observer';\n\n@Component({\n  selector: 'base-chart',\n  template: `<div></div>`\n})\nexport class BaseChartComponent implements OnChanges, AfterViewInit, OnDestroy {\n\n  @Input() results: any;\n  @Input() view: number[];\n  @Input() scheme: any = 'cool';\n  @Input() schemeType = 'ordinal';\n  @Input() customColors: any;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  width: number;\n  height: number;\n  resizeSubscription: any;\n  visibilityObserver: VisibilityObserver;\n\n  constructor(\n    protected chartElement: ElementRef,\n    protected zone: NgZone,\n    protected cd: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit(): void {\n    this.bindWindowResizeEvent();\n\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n\n    if (!this.height) {\n      this.height = 400;\n    }\n\n    // tslint:disable-next-line: no-bitwise\n    this.width = ~~this.width;\n    // tslint:disable-next-line: no-bitwise\n    this.height = ~~this.height;\n\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n\n  getContainerDims(): any {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n\n    if (hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n\n    if (width && height) {\n      return { width, height };\n    }\n\n    return null;\n  }\n\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n\n      if (g.name instanceof Date) {\n        g.name = g.name.toLocaleDateString();\n      }\n\n      if (g.series) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          if (d.name instanceof Date) {\n            d.name = d.name.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n\n  protected unbindEvents(): void {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  private bindWindowResizeEvent(): void {\n    const source = observableFromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n\n  /**\n   * Clones the data into a new object\n   *\n   * @private\n   * @param {any} data\n   * @returns {*}\n   *\n   * @memberOf BaseChart\n   */\n  private cloneData(data): any {\n    const results = [];\n\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-axis-label]',\n  template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\">\n      {{label}}\n    </svg:text>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AxisLabelComponent implements OnChanges {\n\n  @Input() orient;\n  @Input() label;\n  @Input() offset;\n  @Input() width;\n  @Input() height;\n\n  x: any;\n  y: any;\n  transform: any;\n  strokeWidth: any;\n  textAnchor: any;\n  element: ElementRef;\n  textHeight = 25;\n  margin = 5;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n\n    switch (this.orient) {\n      case 'top':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'bottom':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'left':\n        this.y = - (this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case 'right':\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n\n}\n","export function reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n\n  return ticks;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  SimpleChanges,\n  AfterViewInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-x-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n        [attr.transform]=\"tickTransform(tick)\">\n        <title>{{tickFormat(tick)}}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\">\n          {{tickTrim(tickFormat(tick))}}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\"\n      [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          class=\"gridline-path gridline-path-vertical\"\n          [attr.y1]=\"-gridLineHeight\"\n          y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisTicksComponent implements OnChanges, AfterViewInit {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks = true;\n  @Input() maxTickLength = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineHeight;\n  @Input() width;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  verticalSpacing = 20;\n  rotateLabels = false;\n  innerTickSize = 6;\n  outerTickSize = 6;\n  tickPadding = 3;\n  textAnchor = 'middle';\n  maxTicksLength = 0;\n  maxAllowedLength = 16;\n  adjustedScale: any;\n  textTransform: any;\n  ticks: any;\n  tickFormat: (o: any) => any;\n  height = 0;\n\n  @ViewChild('ticksel') ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({ height });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = (d) => {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    const angle = this.getRotationAngle(this.ticks);\n\n    this.adjustedScale = this.scale.bandwidth\n      ? function(d) {\n          return this.scale(d) + this.scale.bandwidth() * 0.5;\n        }\n      : this.scale;\n\n    this.textTransform = '';\n    if (angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = 'end';\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = 'middle';\n    }\n\n    setTimeout(() => this.updateDims());\n  }\n\n  getRotationAngle(ticks): number {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 8; // need to measure this\n    const wordWidth = len * charWidth;\n\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n\n    return angle;\n  }\n\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickWidth: number): number {\n    return Math.floor(this.width / tickWidth);\n  }\n\n  tickTransform(tick): string {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform(): string {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\n\n@Component({\n  selector: 'g[ng-svg-charts-x-axis]',\n  template: `\n    <svg:g\n      [attr.class]=\"xAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g ng-svg-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g ng-svg-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"'bottom'\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisComponent implements OnChanges {\n\n  @Input() xScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() ticks: any[];\n  @Input() xAxisTickInterval;\n  @Input() xAxisTickCount: any;\n  @Input() xOrient = 'bottom';\n  @Input() xAxisOffset = 0;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  xAxisClassName = 'x axis';\n\n  tickArguments: any;\n  transform: any;\n  labelOffset = 0;\n  fill = 'none';\n  stroke = 'stroke';\n  tickStroke = '#ccc';\n  strokeWidth = 'none';\n  padding = 5;\n\n  @ViewChild(XAxisTicksComponent) ticksComponent: XAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n\n  emitTicksHeight({ height }): void {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({height});\n      }, 0);\n    }\n  }\n\n}\n","/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param {*} x, y, w, h, r, tl, tr, bl, br\n * @returns {string}\n */\nexport function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {\n  let retval = '';\n\n  w = Math.floor(w);\n  h = Math.floor(h);\n\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n\n  retval += `v${h - 2 * r}`;\n\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n\n  retval += `h${2 * r - w}`;\n\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n\n  retval += `v${2 * r - h}`;\n\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n\n  retval += `z`;\n\n  return retval;\n}\n","export enum ShowTypes {\n  all = 'all' as any,\n  focus = 'focus' as any,\n  mouseover = 'mouseover' as any\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\nimport { roundedRect } from '../../common/shape.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-y-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n        [attr.transform]=\"transform(tick)\" >\n        <title>{{tickFormat(tick)}}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\">\n          {{tickTrim(tickFormat(tick))}}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\"\n      [attr.transform]=\"transform(tick)\">\n      <svg:g\n        *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n        <svg:line *ngIf=\"orient === 'left'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\" />\n        <svg:line *ngIf=\"orient === 'right'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\" />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"/>\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{tickTrim(tickFormat(refLine.value))}}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\" >\n            {{refLine.name}}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisTicksComponent implements OnChanges, AfterViewInit {\n\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks = true;\n  @Input() maxTickLength = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineWidth;\n  @Input() height;\n  @Input() referenceLines;\n  @Input() showRefLabels = false;\n  @Input() showRefLines = false;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  innerTickSize: any = 6;\n  tickPadding: any = 3;\n  tickSpacing: any;\n  verticalSpacing = 20;\n  textAnchor: any = 'middle';\n  dy: any;\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n  adjustedScale: any;\n  transform: (o: any) => string;\n  tickFormat: (o: any) => string;\n  ticks: any;\n  width = 0;\n  outerTickSize = 6;\n  rotateLabels = false;\n  refMax: number;\n  refMin: number;\n  referenceLineLength = 0;\n  referenceAreaPath: string;\n\n  @ViewChild('ticksel') ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({ width });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    let scale;\n    const sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n\n    scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    this.adjustedScale = scale.bandwidth ? function(d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n\n    switch (this.orient) {\n      case 'top':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'bottom':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'left':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'end';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case 'right':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'start';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n\n  setReferencelines(): void {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax,\n      0, [false, false, false, false]);\n  }\n\n  getTicks(): any {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickHeight: number): number {\n    return Math.floor(this.height / tickHeight);\n  }\n\n  tickTransform(tick): string {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n\n  gridLineTransform(): string {\n    return `translate(5,0)`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\n\n@Component({\n  selector: 'g[ng-svg-charts-y-axis]',\n  template: `\n    <svg:g\n      [attr.class]=\"yAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g ng-svg-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g ng-svg-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisComponent implements OnChanges {\n\n  @Input() yScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() ticks: any[];\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() yAxisTickInterval;\n  @Input() yAxisTickCount: any;\n  @Input() yOrient = 'left';\n  @Input() referenceLines;\n  @Input() showRefLines;\n  @Input() showRefLabels;\n  @Input() yAxisOffset = 0;\n  @Output() dimensionsChanged = new EventEmitter();\n\n  yAxisClassName = 'y axis';\n  tickArguments: any;\n  offset: any;\n  transform: any;\n  labelOffset = 15;\n  fill = 'none';\n  stroke = '#CCC';\n  tickStroke = '#CCC';\n  strokeWidth = 1;\n  padding = 5;\n\n  @ViewChild(YAxisTicksComponent) ticksComponent: YAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === 'right') {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.offset = this.offset;\n      this.transform = `translate(${this.offset } , 0)`;\n    }\n\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n\n  emitTicksWidth({ width }): void {\n    if (width !== this.labelOffset && this.yOrient === 'right') {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({width});\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({width});\n      }, 0);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AxisLabelComponent } from './axis-label.component';\nimport { XAxisComponent } from './x-axis.component';\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\nimport { YAxisComponent } from './y-axis.component';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n  exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n})\nexport class AxesModule {}\n","import {\n  Directive, Input, Output, EventEmitter, HostListener,\n  ViewContainerRef,\n  Renderer2, OnDestroy\n} from '@angular/core';\n\nimport { PlacementTypes } from './position/placement.type';\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\nimport { ShowTypes } from './show.type';\n\nimport { TooltipService } from './tooltip.service';\n\n@Directive({ selector: '[ngx-tooltip]' })\nexport class TooltipDirective implements OnDestroy {\n\n  @Input() tooltipCssClass = '';\n  @Input() tooltipTitle = '';\n  @Input() tooltipAppendToBody = true;\n  @Input() tooltipSpacing = 10;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipShowCaret = true;\n  @Input() tooltipPlacement: PlacementTypes = PlacementTypes.top;\n  @Input() tooltipAlignment: AlignmentTypes = AlignmentTypes.center;\n  @Input() tooltipType: StyleTypes = StyleTypes.popover;\n  @Input() tooltipCloseOnClickOutside = true;\n  @Input() tooltipCloseOnMouseLeave = true;\n  @Input() tooltipHideTimeout = 300;\n  @Input() tooltipShowTimeout = 100;\n  @Input() tooltipTemplate: any;\n  @Input() tooltipShowEvent: ShowTypes = ShowTypes.all;\n  @Input() tooltipContext: any;\n  @Input() tooltipImmediateExit = false;\n\n  @Output() show = new EventEmitter();\n  @Output() hide = new EventEmitter();\n\n  private get listensForFocus(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all ||\n      this.tooltipShowEvent === ShowTypes.focus;\n  }\n\n  private get listensForHover(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all ||\n      this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n\n  private component: any;\n  private timeout: any;\n  private mouseLeaveContentEvent: any;\n  private mouseEnterContentEvent: any;\n  private documentClickEvent: any;\n\n  constructor(\n    private tooltipService: TooltipService,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2) {\n  }\n\n  ngOnDestroy(): void {\n    this.hideTooltip(true);\n  }\n\n  @HostListener('focusin')\n  onFocus(): void {\n    if (this.listensForFocus) {\n      this.showTooltip();\n    }\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    if (this.listensForHover) {\n      this.showTooltip();\n    }\n  }\n\n  @HostListener('mouseleave', ['$event.target'])\n  onMouseLeave(target): void {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) { return; }\n      }\n\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n\n  @HostListener('click')\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n\n  showTooltip(immediate?: boolean): void {\n    if (this.component || this.tooltipDisabled) { return; }\n\n    const time = immediate ? 0 : this.tooltipShowTimeout;\n\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n\n      this.show.emit(true);\n    }, time);\n  }\n\n  addHideListeners(tooltip): void {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n\n    // content mouse leave listener\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n\n    // content close on click outside\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen(document, 'click', (event) => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) { this.hideTooltip(); }\n      });\n    }\n  }\n\n  hideTooltip(immediate = false): void {\n    if (!this.component) { return; }\n\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) { this.mouseLeaveContentEvent(); }\n      if (this.mouseEnterContentEvent) { this.mouseEnterContentEvent(); }\n      if (this.documentClickEvent) { this.documentClickEvent(); }\n\n      // emit events\n      this.hide.emit(true);\n\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n\n    clearTimeout(this.timeout);\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n\n  private createBoundOptions(): any {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipContentComponent } from './tooltip.component';\nimport { TooltipService } from './tooltip.service';\n\nimport { InjectionService } from './injection.service';\n\n@NgModule({\n  declarations: [TooltipContentComponent, TooltipDirective],\n  providers: [InjectionService, TooltipService],\n  exports: [TooltipContentComponent, TooltipDirective],\n  imports: [CommonModule],\n  entryComponents: [TooltipContentComponent]\n})\nexport class TooltipModule { }\n","const cache = {};\n\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nexport function id(): string {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","export let colorSets = [\n  {\n    name: 'vivid',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514'\n    ]\n  },\n  {\n    name: 'natural',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3'\n    ]\n  },\n  {\n    name: 'cool',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886'\n    ]\n  },\n  {\n    name: 'fire',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00'\n    ]\n  },\n  {\n    name: 'solar',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'\n    ]\n  },\n  {\n    name: 'air',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'\n    ]\n  },\n  {\n    name: 'aqua',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'\n    ]\n  },\n  {\n    name: 'flame',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738'\n    ]\n  },\n  {\n    name: 'ocean',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1'\n    ]\n  },\n  {\n    name: 'forest',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32'\n    ]\n  },\n  {\n    name: 'horizon',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0'\n    ]\n  },\n  {\n    name: 'neons',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600'\n    ]\n  },\n  {\n    name: 'picnic',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8'\n    ]\n  },\n  {\n    name: 'night',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634',\n      '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D'\n    ]\n  },\n  {\n    name: 'nightLights',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b',\n      '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3'\n    ]\n  }\n];\n","declare let global: any;\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root: any;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n\n// tslint:disable-next-line:variable-name\nexport const MouseEvent = root.MouseEvent as MouseEvent & {\n  prototype?: MouseEvent;\n  new (typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\n};\n","import { range } from 'd3-array';\nimport { scaleBand, scaleLinear, scaleOrdinal, scaleQuantile } from 'd3-scale';\n\nimport { colorSets } from '../utils/color-sets';\n\nexport class ColorHelper {\n  scale: any;\n  scaleType: any;\n  colorDomain: any[];\n  domain: any;\n  customColors: any;\n\n  constructor(scheme, type, domain, customColors?) {\n    if (typeof (scheme) === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n\n  generateColorScheme(scheme, type, domain) {\n    if (typeof (scheme) === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    if (type === 'quantile') {\n      colorScale = scaleQuantile()\n        .range(scheme.domain)\n        .domain(domain);\n\n    } else if (type === 'ordinal') {\n      colorScale = scaleOrdinal()\n        .range(scheme.domain)\n        .domain(domain);\n\n    } else if (type === 'linear') {\n      // linear schemes must have at least 2 colors\n      const colorDomain = [...scheme.domain];\n      if (colorDomain.length === 1) {\n        colorDomain.push(colorDomain[0]);\n        this.colorDomain = colorDomain;\n      }\n\n      const points = range(0, 1, 1.0 / colorDomain.length);\n      colorScale = scaleLinear()\n        .domain(points)\n        .range(colorDomain);\n    }\n\n    return colorScale;\n  }\n\n  getColor(value) {\n    if (this.scaleType === 'linear') {\n      const valueScale = scaleLinear()\n        .domain(this.domain)\n        .range([0, 1]);\n\n      return (this.scale(valueScale(value)));\n    } else {\n\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n\n      const formattedValue = value.toString();\n      let found: any; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find((mapping) => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n\n    const valueScale = scaleLinear()\n      .domain(this.domain)\n      .range([0, 1]);\n\n    const colorValueScale = scaleBand()\n      .domain(this.colorDomain)\n      .range([0, 1]);\n\n    const endColor = this.getColor(value);\n\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n        }\n      }\n    }\n\n    return stops;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../label.helper';\nimport { id } from '../../utils/id';\nimport { ColorHelper } from '../color.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-circle-series]',\n  template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g ng-svg-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g ng-svg-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({name: circle.seriesName})\"\n        [pointerEvents]=\"circle.value === 0 ? 'none': 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick($event, circle.label)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(250, style({opacity: 1}))\n      ])\n    ])\n  ]\n})\nexport class CircleSeriesComponent implements OnChanges, OnInit {\n\n  @Input() data;\n  @Input() type = 'standard';\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors: ColorHelper;\n  @Input() scaleType;\n  @Input() visibleValue;\n  @Input() activeEntries: any[];\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  areaPath: any;\n  circle: any; // active circle\n  barVisible = false;\n  gradientId: string;\n  gradientFill: string;\n\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.circle = this.getActiveCircle();\n  }\n\n  getActiveCircle(): {} {\n    const indexActiveDataPoint = this.data.series.findIndex((d) => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n\n  mapDataPointToCircle(d: any, i: number): any {\n    const seriesName = this.data.name;\n\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n\n    let cx;\n    if (this.scaleType === 'time') {\n      cx = this.xScale(label);\n    } else if (this.scaleType === 'linear') {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n\n    const cy = this.yScale(this.type === 'standard' ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n\n    let color;\n    if (this.colors.scaleType === 'linear') {\n      if (this.type === 'standard') {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n\n    const data = {\n      series: seriesName,\n      value,\n      name: label\n    };\n\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n\n  getTooltipText({ tooltipLabel, value, seriesName, min, max}): string {\n    return `\n      <span class=\"tooltip-label\">${seriesName} â¢ ${tooltipLabel}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n\n  getTooltipMinMaxText(min: any, max: any) {\n    if (min !== undefined || max  !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += 'â¥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += 'â¤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n\n  getGradientStops(color) {\n    return [\n      {\n        offset: 0,\n        color,\n        opacity: 0.2\n      },\n      {\n        offset: 100,\n        color,\n        opacity: 1\n    }];\n  }\n\n  onClick(value, label): void {\n    this.select.emit({\n      name: label,\n      value\n    });\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activateCircle(): void {\n    this.barVisible = true;\n    this.activate.emit({name: this.data.name});\n  }\n\n  deactivateCircle(): void {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({name: this.data.name});\n  }\n\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  HostListener\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-circle]',\n  template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CircleComponent implements OnChanges {\n\n  @Input() cx;\n  @Input() cy;\n  @Input() r;\n  @Input() fill;\n  @Input() stroke;\n  @Input() data;\n  @Input() classNames;\n  @Input() circleOpacity;\n  @Input() pointerEvents;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  @HostListener('click')\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.classNames = Array.isArray(this.classNames) ?\n      this.classNames.join(' ') :\n      '';\n    this.classNames += 'circle';\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-grid-panel]',\n  template: `\n    <svg:rect\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      stroke=\"none\"\n      class=\"gridpanel\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelComponent {\n\n  @Input() path;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n\n}\n","import { Component, SimpleChanges, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-grid-panel-series]',\n  template: `\n    <svg:g ng-svg-charts-grid-panel *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelSeriesComponent implements OnChanges {\n  gridPanels: any[];\n\n  @Input() data;\n\n  @Input() dims;\n\n  @Input() xScale;\n\n  @Input() yScale;\n\n  @Input() orient;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.gridPanels = this.getGridPanels();\n  }\n\n  getGridPanels(): any[] {\n    return this.data.map((d) => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = 'odd';\n\n      if (this.orient === 'vertical') {\n        const position = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-svg-linear-gradient]',\n  template: `\n    <svg:linearGradient\n      [id]=\"name\"\n      [attr.x1]=\"x1\"\n      [attr.y1]=\"y1\"\n      [attr.x2]=\"x2\"\n      [attr.y2]=\"y2\">\n      <svg:stop *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgLinearGradientComponent implements OnChanges {\n\n  @Input() orientation = 'vertical';\n  @Input() name;\n  @Input() stops: any[];\n\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    if (this.orientation === 'horizontal') {\n      this.x2 = '100%';\n    } else if (this.orientation === 'vertical') {\n      this.y1 = '100%';\n    }\n\n  }\n}\n","import {\n  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ng-svg-charts-svg-radial-gradient]',\n  template: `\n    <svg:radialGradient\n      [id]=\"name\"\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      gradientUnits=\"userSpaceOnUse\">\n      <svg:stop *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgRadialGradientComponent implements OnChanges {\n\n  @Input() color: string;\n  @Input() name: string;\n  @Input() startOpacity: number;\n  @Input() endOpacity = 1;\n  @Input() cx = 0;\n  @Input() cy = 0;\n\n  @Input()\n  get stops(): any[] {\n    return this.stopsInput || this.stopsDefault;\n  }\n\n  set stops(value: any[]) {\n    this.stopsInput = value;\n  }\n\n  r: string;\n\n  private stopsInput: any[];\n  private stopsDefault: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.r = '30%';\n    if (\n      ('color' in changes) ||\n      ('startOpacity' in changes) ||\n      ('endOpacity' in changes)) {\n        this.stopsDefault = [{\n          offset: 0,\n          color: this.color,\n          opacity: this.startOpacity\n        }, {\n          offset: 100,\n          color: this.color,\n          opacity: this.endOpacity\n        }];\n    }\n  }\n\n}\n","import {\n  Component, Input, Output, EventEmitter, ElementRef,\n  OnChanges, ChangeDetectionStrategy,\n  ChangeDetectorRef, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { brushX } from 'd3-brush';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { select, event as d3event } from 'd3-selection';\n\nimport { id } from '../../utils/id';\n\n@Component({\n  selector: 'g[ng-svg-charts-timeline]',\n  template: `\n    <svg:g\n      class=\"timeline\"\n      [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix in=\"SourceGraphic\"\n            type=\"matrix\"\n            values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\" />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\"\n        [attr.width]=\"view[0]\"\n        y=\"0\"\n        [attr.height]=\"height\"\n        class=\"brush-background\"\n      />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n  styleUrls: ['./timeline.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimelineComponent implements OnChanges {\n\n  @Input() view;\n  @Input() state;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend;\n  @Input() miniChart;\n  @Input() autoScale;\n  @Input() scaleType;\n  @Input() height = 50;\n\n  @Output() select = new EventEmitter();\n  @Output() onDomainChange = new EventEmitter();\n\n  element: HTMLElement;\n  dims: any;\n  xDomain: any[];\n  xScale: any;\n  brush: any;\n  transform: string;\n  initialized = false;\n  filterId: any;\n  filter: any;\n\n  constructor(\n    element: ElementRef,\n    private cd: ChangeDetectorRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n\n  update(): void {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n\n    if (this.brush) {\n      this.updateBrush();\n    }\n\n    this.transform = `translate(0 , ${offsetY})`;\n\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n\n    this.cd.markForCheck();\n  }\n\n  getXDomain(): any[] {\n    let values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    let domain = [];\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    return domain;\n  }\n\n  getXScale() {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  addBrush(): void {\n    if (this.brush) { return; }\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush = brushX()\n      .extent([[0, 0], [width, height]])\n      .on('brush end', () => {\n        const selection = d3event.selection || this.xScale.range();\n        const newDomain = selection.map(this.xScale.invert);\n\n        this.onDomainChange.emit(newDomain);\n        this.cd.markForCheck();\n      });\n\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n  }\n\n  updateBrush(): void {\n    if (!this.brush) { return; }\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element).select('.selection')\n      .attr('fill', undefined)\n      .attr('stroke', undefined)\n      .attr('fill-opacity', undefined);\n\n    this.cd.markForCheck();\n  }\n\n  getDims(): any {\n    const width = this.view[0];\n\n    const dims = {\n      width,\n      height: this.height\n    };\n\n    return dims;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { select } from 'd3-selection';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ng-svg-charts-area]',\n  template: 'area.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaComponent implements OnChanges {\n\n  @Input() data;\n  @Input() path;\n  @Input() startingPath;\n  @Input() fill;\n  @Input() opacity = 1;\n  @Input() startOpacity = 0.5;\n  @Input() endOpacity = 1;\n  @Input() activeLabel;\n  @Input() gradient = false;\n  @Input() stops: any[];\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  gradientId: string;\n  gradientFill: string;\n  areaPath: string;\n  initialized = false;\n  gradientStops: any[];\n  hasGradient = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n  }\n\n  loadAnimation(): void {\n    this.areaPath = this.startingPath;\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node: any = select(this.element).select('.area');\n\n    if (this.animations) {\n      node.transition().duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: this.endOpacity\n    }];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ChangeDetectionStrategy,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'g[ng-svg-charts-tooltip-area]',\n  templateUrl: 'tooltip-area.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition('inactive => active', [\n        style({\n          opacity: 0,\n        }),\n        animate(250, style({opacity: 0.7}))\n      ]),\n      transition('active => inactive', [\n        style({\n          opacity: 0.7,\n        }),\n        animate(250, style({opacity: 0}))\n      ])\n    ])\n  ]\n})\nexport class TooltipAreaComponent {\n  anchorOpacity = 0;\n  anchorPos = -1;\n  anchorValues: any[] = [];\n  lastAnchorPos: number;\n\n  @Input() dims;\n  @Input() xSet;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() results;\n  @Input() colors;\n  @Input() showPercentage = false;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() hover = new EventEmitter();\n\n  @ViewChild('tooltipAnchor') tooltipAnchor;\n\n  getValues(xVal): any[] {\n    const results = [];\n\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === 'linear') {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n\n        results.push({\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n      }\n    }\n\n    return results;\n  }\n\n  mouseMove(event) {\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = new MouseEvent('mouseleave', {bubbles: false});\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n\n    while (minIndex <= maxIndex) {\n      // tslint:disable-next-line: no-bitwise\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n\n      const curDiff = Math.abs(currentElement - xPos);\n\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n\n    return closestIndex;\n  }\n\n  showTooltip(): void {\n    const event = new MouseEvent('mouseenter', {bubbles: false});\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n\n  hideTooltip(): void {\n    const event = new MouseEvent('mouseleave', {bubbles: false});\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n\n  getToolTipText(tooltipItem: any): string {\n    let result = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += 'â¥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += 'â¤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n\n}\n","// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n\n/**\n * Counts from a number to the end incrementally.\n *\n * @export\n * @param {any} countFrom\n * @param {any} countTo\n * @param {any} countDecimals\n * @param {any} countDuration\n * @param {any} callback\n * @returns\n */\nexport function count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n\n    frameVal = Math.round(frameVal * dec) / dec;\n\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n\n/**\n * Determine decimals places\n *\n * @export\n * @param {any} countTo\n * @returns\n */\nexport function decimalChecker(countTo) {\n  const endVal = Number(countTo);\n\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n\n  return 0;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, OnDestroy, ElementRef } from '@angular/core';\nimport { count, decimalChecker } from './count.helper';\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n * @class CountUpDirective\n */\n@Component({\n  selector: '[ng-svg-charts-count-up]',\n  template: `{{value}}`\n})\nexport class CountUpDirective implements OnDestroy {\n  @Input() countDuration = 1;\n  @Input() countPrefix = '';\n  @Input() countSuffix = '';\n  @Input() valueFormatting: any;\n\n  @Input()\n  set countDecimals(val: number) {\n    this._countDecimals = val;\n  }\n\n  get countDecimals(): number {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n\n  @Input()\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n\n  get countTo(): any {\n    return this._countTo;\n  }\n\n  @Input()\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n\n  get countFrom(): any {\n    return this._countFrom;\n  }\n\n  @Output() countChange = new EventEmitter();\n  @Output() countFinish = new EventEmitter();\n\n  nativeElement: any;\n\n  value: any = '';\n  formattedValue: string;\n\n  private animationReq: any;\n\n  private _countDecimals = 0;\n  private _countTo = 0;\n  private _countFrom = 0;\n\n  constructor(private cd: ChangeDetectorRef, element: ElementRef) {\n    this.nativeElement = element.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  start(): void {\n    cancelAnimationFrame(this.animationReq);\n\n    const valueFormatting =\n      this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n\n    const callback = ({ value, progress, finished }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({ value: this.value, progress });\n      if (finished) this.countFinish.emit({ value: this.value, progress });\n    };\n\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy, CommonModule } from '@angular/common';\n\nimport { ChartComponent } from './charts/chart.component';\nimport {\n  ScaleLegendComponent\n} from './legend/scale-legend.component';\nimport { LegendComponent } from './legend/legend.component';\nimport { LegendEntryComponent } from './legend/legend-entry.component';\nimport { AdvancedLegendComponent } from './legend/advanced-legend.component';\nimport { BaseChartComponent } from './base-chart/base-chart.component';\nimport { AxesModule } from './axes/axes.module';\nimport { TooltipModule } from './tooltip/tooltip.module';\nimport { CircleSeriesComponent } from './circle-series/circle-series.component';\nimport { CircleComponent } from './circle/circle.component';\nimport { GridPanelComponent } from './grid-panel/grid-panel.component';\nimport { GridPanelSeriesComponent } from './grid-panel-series/grid-panel-series.component';\nimport { SvgLinearGradientComponent } from './svg-linear-gradient/svg-linear-gradient.component';\nimport { SvgRadialGradientComponent } from './svg-radial-gradient/svg-radial-gradient.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { AreaComponent } from '../area/area.component';\nimport { TooltipAreaComponent } from './tooltip-area/tooltip-area.component';\nimport { CountUpDirective } from './count/count.directive';\n\nconst COMPONENTS = [\n  AreaComponent,\n  BaseChartComponent,\n  CountUpDirective,\n  TooltipAreaComponent,\n  ChartComponent,\n  LegendComponent,\n  LegendEntryComponent,\n  ScaleLegendComponent,\n  CircleComponent,\n  CircleSeriesComponent,\n  GridPanelComponent,\n  GridPanelSeriesComponent,\n  SvgLinearGradientComponent,\n  SvgRadialGradientComponent,\n  TimelineComponent,\n  AdvancedLegendComponent\n];\n\n@NgModule({\n  providers: [\n    Location,\n    {\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy\n    }\n  ],\n  imports: [\n    CommonModule,\n    AxesModule,\n    TooltipModule\n  ],\n  declarations: [\n    ...COMPONENTS\n  ],\n  exports: [\n    CommonModule,\n    AxesModule,\n    TooltipModule,\n    ...COMPONENTS\n  ]\n})\nexport class ChartCommonModule { }\n","export interface ViewDimensions {\n  width: number;\n  height: number;\n  xOffset: number;\n}\n\nexport function calculateViewDimensions({\n  width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0,\n  yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false,\n  legendType = 'ordinal', legendPosition = 'right', columns = 12\n}): ViewDimensions {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n\n  if (showLegend && legendPosition === 'right') {\n    if (legendType === 'ordinal') {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n\n  chartWidth = chartWidth * columns / 12;\n\n  chartWidth = chartWidth - margins[1] - margins[3];\n\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n\n  return {\n    // tslint:disable-next-line: no-bitwise\n    width: ~~chartWidth,\n    // tslint:disable-next-line: no-bitwise\n    height: ~~chartHeight,\n    // tslint:disable-next-line: no-bitwise\n    xOffset: ~~xOffset\n  };\n}\n","/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n * @param results\n */\nexport function getUniqueXDomainValues(results: any[]): any[] {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n\n/**\n * Get the scaleType of enumerable of values.\n * @param values\n * @returns {string} 'time', 'linear' or 'ordinal'\n */\nexport function getScaleType(values: any[], checkDateType = true): string {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return 'time';\n    }\n  }\n\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n      return 'linear';\n    }\n\n  return 'ordinal';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-area-chart',\n  template: 'area-chart.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartComponent extends BaseChartComponent {\n\n  @Input() legend;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() state;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() baseValue: any = 'auto';\n  @Input() autoScale;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  clipPathId: string;\n  clipPath: string;\n  scaleType: string;\n  series: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(...values);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale.range([0, width])\n        .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getScaleType(values): string {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        num = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n\n    if (num) {\n      return 'linear';\n    }\n\n    return 'ordinal';\n  }\n\n  isDate(value): boolean {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-area-chart-normalized',\n  templateUrl: 'area-chart-normalized.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  tooltipAreas: any[];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n\n        if (total > 0) {\n          d.d0 = (d.d0 * 100) / total;\n          d.d1 = (d.d1 * 100) / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    return [0, 100];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale\n      .range([0, width])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-area-chart-stacked',\n  templateUrl: 'area-chart-stacked.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          sum += d.value;\n        }\n      }\n\n      domain.push(sum);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(0, ...domain);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale\n      .range([0, width])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n}\n","export function sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\n\nexport function sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\n\nexport function sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition,\n} from '@angular/animations';\nimport { formatLabel } from '../../common/label.helper';\n\nexport enum D0Types {\n  positive = 'positive',\n  negative = 'negative'\n}\n\n@Component({\n  selector: 'g[ng-svg-charts-series-vertical]',\n  template: `\n    <svg:g ng-svg-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [isActive]=\"isActive(bar.data)\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [animations]=\"animations\">\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g ng-svg-charts-bar-label *ngFor=\"let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'vertical'\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({size:$event, index:i})\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesVerticalComponent implements OnChanges {\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations = true;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{x: number, y: number, width: number, height: number,\n                            total: number, series: string}> = [];\n\n  ngOnChanges(changes): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0,\n      };\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops =\n            this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' +  bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${tooltipLabel}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n        this.barsForDataLabels = [];\n        const section: any = {};\n        section.series =  this.seriesName;\n        const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n        const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n        section.total = totalPositive + totalNegative;\n        section.x = 0;\n        section.y = 0;\n        if (section.total > 0)   {\n          section.height = this.yScale(totalPositive);\n        } else {\n          section.height = this.yScale(totalNegative);\n        }\n        section.width = this.xScale.bandwidth();\n        this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series =  this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;\n        section.x = this.xScale(d.name);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, bar): string {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { area } from 'd3-shape';\n\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ng-svg-charts-area-series]',\n  template: 'area-series.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() baseValue: any = 'auto';\n  @Input() colors;\n  @Input() scaleType;\n  @Input() stacked = false;\n  @Input() normalized = false;\n  @Input() gradient;\n  @Input() curve;\n  @Input() activeEntries: any[];\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  opacity: number;\n  path: string;\n  startingPath: string;\n\n  hasGradient: boolean;\n  gradientStops: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradient();\n\n    let currentArea;\n    let startingArea;\n\n    const xProperty = (d) => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    if (this.stacked || this.normalized) {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0((d, i) => this.yScale(d.d0))\n        .y1((d, i) => this.yScale(d.d1));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))\n        .y1(d => this.yScale(d.value));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))\n        .y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n\n    this.opacity = .8;\n\n    let data = this.data.series;\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n\n  updateGradient() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AreaChartComponent } from './area-chart.component';\nimport { AreaChartNormalizedComponent } from './area-chart-normalized.component';\nimport { AreaChartStackedComponent } from './area-chart-stacked.component';\nimport { AreaSeriesComponent } from './area-series.component';\nimport { ChartCommonModule } from '../common/chart-common.module';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    AreaChartComponent,\n    AreaChartNormalizedComponent,\n    AreaChartStackedComponent,\n    AreaSeriesComponent\n  ],\n  exports: [\n    AreaChartComponent,\n    AreaChartNormalizedComponent,\n    AreaChartStackedComponent,\n    AreaSeriesComponent\n  ]\n})\nexport class AreaChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { select } from 'd3-selection';\nimport { roundedRect } from '../../common/shape.helper';\nimport { id } from '../../utils/id';\n\n@Component({\n  selector: 'g[ng-svg-charts-bar]',\n  templateUrl: 'bar.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarComponent implements OnChanges {\n\n  @Input() fill;\n  @Input() data;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n  @Input() orientation;\n  @Input() roundEdges = true;\n  @Input() gradient = false;\n  @Input() offset = 0;\n  @Input() isActive = false;\n  @Input() stops: any[];\n  @Input() animations = true;\n  @Input() ariaLabel: string;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  element: any;\n  path: any;\n  gradientId: any;\n  gradientFill: any;\n  startOpacity: any;\n  initialized = false;\n  gradientStops: any[];\n  hasGradient = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n  }\n\n  loadAnimation(): void {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node: any = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n    node.transition().duration(500)\n        .attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n    }];\n  }\n\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === 'vertical') {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n\n    return path;\n  }\n\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n\n    return path;\n  }\n\n  getRadius(): number {\n    let radius = 0;\n\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n\n    return radius;\n  }\n\n  getStartOpacity(): number {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        if (this.data.value > 0) {\n          edges =  [true, true, false, false];\n        } else {\n          edges =  [false, false, true, true];\n        }\n      } else if (this.orientation === 'horizontal') {\n        if (this.data.value > 0) {\n          edges =  [false, true, false, true];\n        } else {\n          edges =  [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal',\n  templateUrl: 'bar-horizontal.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarHorizontalComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() xScaleMax: number;\n  @Input() xScaleMin: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  yScale: any;\n  xScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0]})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.xDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.yDomain);\n  }\n\n  getXDomain(): any[] {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin\n      ? Math.min(this.xScaleMin, ...values)\n      : Math.min(0, ...values);\n\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...values)\n      : Math.max(0, ...values);\n    return [min, max];\n  }\n\n  getYDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal-2d',\n  templateUrl: 'bar-horizontal-2d.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontal2DComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() xScaleMax: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, height])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valuesDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...domain)\n      : Math.max(0, ...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal-normalized',\n  template: 'bar-horizontal-normalized.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    return [0, 100];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-horizontal-stacked',\n  templateUrl: 'bar-horizontal-stacked.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks  = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false\n  @Input() xScaleMax: number;\n  @Input() showDataLabel = false\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...domain)\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical',\n  templateUrl: 'bar-vertical.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarVerticalComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() yScaleMax: number;\n  @Input() yScaleMin: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin: any[] = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getXDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n\n    const min = this.yScaleMin\n      ? Math.min(this.yScaleMin, ...values)\n      : Math.min(0, ...values);\n\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...values)\n      : Math.max(0, ...values);\n\n    return [min, max];\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical-2d',\n  templateUrl: 'bar-vertical-2d.template.html',\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVertical2DComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() roundEdges = true;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {negative: 0, positive: 0};\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, width])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...domain)\n      : Math.max(0, ...domain);\n\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical-normalized',\n  templateUrl: 'bar-vertical-normalized.template.html',\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../../common/view-dimensions.helper';\nimport { ColorHelper } from '../../common/color.helper';\nimport { BaseChartComponent } from '../../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-bar-vertical-stacked',\n  template: 'bar-vertical-stacked.template.html',\n  styleUrls: ['../../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains = false;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  tickFormatting: (label: string) => string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {negative: 0, positive: 0};\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...domain)\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative)  {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../../common/label.helper';\nimport { D0Types } from '../series-vertical/series-vertical.component';\n\n@Component({\n  selector: 'g[ng-svg-charts-series-horizontal]',\n  template: `\n    <svg:g ng-svg-charts-bar\n      *ngFor=\"let bar of bars; trackBy:trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'horizontal'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\">\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g ng-svg-charts-bar-label *ngFor=\"let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'horizontal'\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({size:$event, index:i})\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesHorizontalComponent implements OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{x: number, y: number, width: number, height: number,\n                            total: number, series: string}> = [];\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() tooltipDisabled = false;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations = true;\n  @Input() showDataLabel = false;\n  @Input() dataLabelFormatting: any;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelWidthChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type: D0Types;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === 'standard') {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' +  bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${tooltipLabel}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n\n  }\n\n  updateDataLabels() {\n\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series =  this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n        this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series =  this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.name);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n        });\n      }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n  click(data): void {\n    this.select.emit(data);\n  }\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    ElementRef,\n    Output,\n    EventEmitter\n  } from '@angular/core';\nimport { formatLabel } from '../../common/label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-bar-label]',\n  template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\">\n      {{formatedValue}}\n    </svg:text>\n\n  `,\n  styleUrls: ['bar-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\n  export class BarLabelComponent implements OnChanges {\n\n    @Input() value;\n    @Input() valueFormatting: any;\n    @Input() barX;\n    @Input() barY;\n    @Input() barWidth;\n    @Input() barHeight;\n    @Input() orientation;\n\n    @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();\n\n    element: any;\n    x: number;\n    y: number;\n    horizontalPadding = 2;\n    verticalPadding = 5;\n    formatedValue: string;\n    transform: string;\n    textAnchor: string;\n\n    constructor(element: ElementRef) {\n      this.element = element.nativeElement;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n      this.update();\n    }\n\n    getSize(): any {\n      const h = this.element.getBoundingClientRect().height;\n      const w = this.element.getBoundingClientRect().width;\n      return { height: h, width: w, negative: this.value < 0 };\n    }\n\n    ngAfterViewInit() {\n      this.dimensionsChanged.emit(this.getSize());\n    }\n\n    update(): void {\n      if (this.valueFormatting) {\n        this.formatedValue = this.valueFormatting(this.value);\n      } else {\n        this.formatedValue = formatLabel(this.value);\n      }\n\n      if (this.orientation === 'horizontal') {\n          this.x = this.barX + this.barWidth;\n          // if the value is negative then it's on the left of the x0.\n          // we need to put the data label in front of the bar\n          if (this.value < 0) {\n            this.x = this.x - this.horizontalPadding;\n            this.textAnchor = 'end';\n          } else {\n            this.x = this.x + this.horizontalPadding;\n            this.textAnchor = 'start';\n          }\n          this.y = this.barY + this.barHeight / 2;\n\n      } else {\n        // orientation must be \"vertical\"\n        this.x = this.barX + this.barWidth / 2;\n        this.y = this.barY + this.barHeight;\n\n        if (this.value < 0) {\n          this.y = this.y + this.verticalPadding;\n          this.textAnchor = 'end';\n        } else {\n          this.y = this.y - this.verticalPadding;\n          this.textAnchor = 'start';\n        }\n        this.transform = `rotate(-45, ${ this.x } , ${ this.y })`;\n      }\n\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { BarComponent } from './bar/bar.component';\nimport { BarHorizontalComponent } from './bar-horizontal/bar-horizontal.component';\nimport { BarHorizontal2DComponent } from './bar-horizontal-2d/bar-horizontal-2d.component';\nimport { BarHorizontalNormalizedComponent } from './bar-horizontal-normalized/bar-horizontal-normalized.component';\nimport { BarHorizontalStackedComponent } from './bar-horizontal-stacked/bar-horizontal-stacked.component';\nimport { BarVerticalComponent } from './bar-vertical/bar-vertical.component';\nimport { BarVertical2DComponent } from './bar-vertical-2d/bar-vertical-2d.component';\nimport { BarVerticalNormalizedComponent } from './bar-vertical-normalized/bar-vertical-normalized.component';\nimport { BarVerticalStackedComponent } from './bar-vertical-stacked/bar-vertical-stacked.component';\nimport { SeriesHorizontalComponent } from './series-horizontal/series-horizontal.component';\nimport { SeriesVerticalComponent } from './series-vertical/series-vertical.component';\nimport { BarLabelComponent } from './bar-label/bar-label.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontalComponent,\n    SeriesVerticalComponent\n  ],\n  exports: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontalComponent,\n    SeriesVerticalComponent\n  ]\n})\nexport class BarChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { select } from 'd3-selection';\n\n@Component({\n  selector: 'g[ng-svg-charts-line]',\n  template: `\n    <svg:path\n      [@animationState]=\"'active'\"\n      class=\"line\"\n      [attr.d]=\"initialPath\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      stroke-width=\"1.5px\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          strokeDasharray: 2000,\n          strokeDashoffset: 2000,\n        }),\n        animate(1000, style({\n          strokeDashoffset: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class LineComponent implements OnChanges {\n\n  @Input() path;\n  @Input() stroke;\n  @Input() data;\n  @Input() fill = 'none';\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  initialized = false;\n  initialPath: string;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n\n  updatePathEl(): void {\n    const node: any = select(this.element.nativeElement).select('.line');\n\n    if (this.animations) {\n      node\n        .transition().duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ng-svg-charts-line-chart',\n  templateUrl: 'line-chart.template.html',\n  styleUrls: ['../common/base-chart/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(500, style({\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class LineChartComponent extends BaseChartComponent {\n\n  @Input() legend;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity: number;\n  @Input() trimXAxisTicks = true;\n  @Input() trimYAxisTicks = true;\n  @Input() maxXAxisTickLength = 16;\n  @Input() maxYAxisTickLength = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains = false;\n  @Input() tooltipDisabled = false;\n  @Input() showRefLines = false;\n  @Input() referenceLines: any;\n  @Input() showRefLabels = true;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  clipPath: string;\n  clipPathId: string;\n  series: any;\n  areaPath: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  hasRange: boolean; // whether the line has a min-max range around it\n  timelineWidth: any;\n  timelineHeight = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) { return 1; }\n        if (bDate > aDate) { return -1; }\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(...values);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, width])\n        .domain(domain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, width])\n        .domain(domain);\n\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, width])\n        .padding(0.1)\n        .domain(domain);\n    }\n\n    return scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    this.deactivateAll();\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { area, line } from 'd3-shape';\n\nimport { id } from '../utils/id';\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ng-svg-charts-line-series]',\n  template: `\n    <svg:g>\n      <defs>\n        <svg:g ng-svg-charts-svg-linear-gradient *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g ng-svg-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g ng-svg-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n    <svg:g ng-svg-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LineSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() scaleType;\n  @Input() curve: any;\n  @Input() activeEntries: any[];\n  @Input() rangeFillOpacity: number;\n  @Input() hasRange: boolean;\n  @Input() animations = true;\n\n  path: string;\n  outerPath: string;\n  areaPath: string;\n  gradientId: string;\n  gradientUrl: string;\n  hasGradient: boolean;\n  gradientStops: any[];\n  areaGradientStops: any[];\n  stroke: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradients();\n\n    const data = this.sortData(this.data.series);\n\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n\n  getLineGenerator(): any {\n    return line<any>()\n      .x(d => {\n        const label = d.name;\n        let value;\n        if (this.scaleType === 'time') {\n          value = this.xScale(label);\n        } else if (this.scaleType === 'linear') {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      })\n      .y(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  getRangeGenerator(): any {\n    return area<any>()\n        .x(d => {\n          const label = d.name;\n          let value;\n          if (this.scaleType === 'time') {\n            value = this.xScale(label);\n          } else if (this.scaleType === 'linear') {\n            value = this.xScale(Number(label));\n          } else {\n            value = this.xScale(label);\n          }\n          return value;\n        })\n        .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n        .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n        .curve(this.curve);\n  }\n\n  getAreaGenerator(): any {\n    const xProperty = (d) => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    return area<any>()\n      .x(xProperty)\n      .y0(() => this.yScale.range()[0])\n      .y1(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    return data;\n  }\n\n  updateGradients() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) { return false; }\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { LineComponent } from './line.component';\nimport { LineChartComponent } from './line-chart.component';\nimport { LineSeriesComponent } from './line-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    LineComponent,\n    LineChartComponent,\n    LineSeriesComponent\n  ],\n  exports: [\n    LineComponent,\n    LineChartComponent,\n    LineSeriesComponent\n  ]\n})\nexport class LineChartModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-advanced-pie-chart',\n  templateUrl: 'advanced-pie-chart.template.html',\n  styleUrls: ['../common/base-chart/base-chart.component.scss', './advanced-pie-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedPieChartComponent extends BaseChartComponent {\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled = false;\n  @Input() tooltipText: any;\n  @Input() label = 'Total';\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  data: any;\n  dims: ViewDimensions;\n  domain: any[];\n  outerRadius: number;\n  innerRadius: number;\n  transform: string;\n  colors: ColorHelper;\n  legendWidth: number;\n  margin = [20, 20, 20, 20];\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() nameFormatting: (value: string) => any;\n  @Input() percentageFormatting: (value: number) => any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: (this.width * 4) / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n    this.setColors();\n\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(event: Event): void {\n    if (this.activeEntries.indexOf(event) > -1) { return; }\n    this.activeEntries = [event, ...this.activeEntries];\n    this.activate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  onDeactivate(event: Event): void {\n    const idx = this.activeEntries.indexOf(event);\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: event, entries: this.activeEntries });\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { arc } from 'd3-shape';\n\nimport { trimLabel } from '../common/trim-label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-label]',\n  templateUrl: 'pie-label.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieLabelComponent implements OnChanges {\n  @Input() data;\n  @Input() radius;\n  @Input() label;\n  @Input() color;\n  @Input() max;\n  @Input() value;\n  @Input() explodeSlices;\n  @Input() animations = true;\n  @Input() labelTrim = true;\n  @Input() labelTrimSize = 10;\n\n  trimLabel: (label: string, max?: number) => string;\n  line: string;\n\n  private readonly isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n\n  constructor() {\n    this.trimLabel = trimLabel;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n\n    const innerArc = arc()\n      .innerRadius(startRadius)\n      .outerRadius(startRadius);\n\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n\n  get textX(): number {\n    return this.data.pos[0];\n  }\n\n  get textY(): number {\n    return this.data.pos[1];\n  }\n\n  get styleTransform(): string {\n    return this.isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n  }\n\n  get attrTransform(): string {\n    return !this.isIE ? null : `translate(${this.textX},${this.textY})`;\n  }\n\n  get textTransition(): string {\n    return this.isIE || !this.animations ? null : 'transform 0.75s';\n  }\n\n  textAnchor(): any {\n    return this.midAngle(this.data) < Math.PI ? 'start' : 'end';\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { interpolate } from 'd3-interpolate';\nimport { select } from 'd3-selection';\nimport { arc } from 'd3-shape';\n\nimport { id } from '../utils/id';\n/* tslint:disable */\nimport { MouseEvent } from '../events';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-arc]',\n  templateUrl: 'pie-arc.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieArcComponent implements OnChanges {\n  @Input() fill;\n  @Input() startAngle = 0;\n  @Input() endAngle = Math.PI * 2;\n  @Input() innerRadius;\n  @Input() outerRadius;\n  @Input() cornerRadius = 0;\n  @Input() value;\n  @Input() max;\n  @Input() data;\n  @Input() explodeSlices = false;\n  @Input() gradient = false;\n  @Input() animate = true;\n  @Input() pointerEvents = true;\n  @Input() isActive = false;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  element: HTMLElement;\n  path: any;\n  startOpacity: number;\n  radialGradientId: string;\n  linearGradientId: string;\n  gradientFill: string;\n  initialized = false;\n  private _timeout;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n\n  update(): void {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n\n  calculateArc(): any {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = (this.outerRadius * this.value) / this.max;\n    }\n\n    return arc()\n      .innerRadius(this.innerRadius)\n      .outerRadius(outerRadius)\n      .cornerRadius(this.cornerRadius);\n  }\n\n  loadAnimation(): void {\n    const node: any = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        const interpolater = interpolate(copyOfD, copyOfD);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      })\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  updateAnimation(): void {\n    const node: any = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  onClick(): void {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n\n  onDblClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\n\n@Component({\n  selector: 'ng-svg-charts-pie-chart',\n  templateUrl: 'pie-chart.template.html',\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    './pie-chart.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieChartComponent extends BaseChartComponent {\n\n  @Input() labels = false;\n  @Input() legend = false;\n  @Input() legendTitle = 'Legend';\n  @Input() legendPosition = 'right';\n  @Input() explodeSlices = false;\n  @Input() doughnut = false;\n  @Input() arcWidth = 0.25;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled = false;\n  @Input() labelFormatting: any;\n  @Input() trimLabels = true;\n  @Input() maxLabelLength = 10;\n  @Input() tooltipText: any;\n\n  @Output() dblclick = new EventEmitter();\n  @Output() select = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  translation: string;\n  outerRadius: number;\n  innerRadius: number;\n  data: any;\n  colors: ColorHelper;\n  domain: any;\n  dims: any;\n  margin = [20, 20, 20, 20];\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    if (this.labels) {\n      this.margin = [30, 80, 30, 80];\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n\n    this.domain = this.getDomain();\n\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n\n  getDomain(): any[] {\n    const items = [];\n\n    this.results.map(d => {\n      let label = d.name;\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n\n      if (items.indexOf(label) === -1) {\n        items.push(label);\n      }\n    });\n\n    return items;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: 'ordinal',\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import { scaleBand } from 'd3-scale';\n\nexport function gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n\n  return [cols, rows];\n}\n\nexport function gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale: any = scaleBand<number>();\n  const yScale: any = scaleBand<number>();\n  const width = dims.width;\n  const height = dims.height;\n\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = (total > 0) ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results\n    .map(d => d ? d.value : 0)\n    .reduce((sum, val) => sum + val, 0);\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { min } from 'd3-array';\nimport { format } from 'd3-format';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { gridLayout } from '../common/grid-layout.helper';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'ng-svg-charts-pie-grid',\n  template: 'pie-grid.template.html',\n  styleUrls: [\n    '../common/base-chart/base-chart.component.scss',\n    './pie-grid.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PieGridComponent extends BaseChartComponent {\n  @Input() designatedTotal: number;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipText: (o: any) => any;\n  @Input() label = 'Total';\n  @Input() minWidth = 150;\n\n  dims: ViewDimensions;\n  data: any[];\n  transform: string;\n  series: any[];\n  domain: any[];\n  colorScale: ColorHelper;\n  margin = [20, 20, 20, 20];\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n\n    this.series = this.getSeries();\n    this.setColors();\n\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  defaultTooltipText({ data }): string {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getSeries(): any[] {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n\n    return this.data.map((d) => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = (min([d.width - padding, d.height - baselineLabelHeight]) / 2) - 5;\n      const innerRadius = radius * 0.9;\n\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n\n  getTotal(): any {\n    return this.results\n      .map(d => d.value)\n      .reduce((sum, d) => sum + d, 0);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { pie } from 'd3-shape';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-grid-series]',\n  template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g ng-svg-charts-pie-arc *ngFor=\"let arc of arcs; trackBy:trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class PieGridSeriesComponent implements OnChanges {\n\n  @Input() colors;\n  @Input() data;\n  @Input() innerRadius = 70;\n  @Input() outerRadius = 80;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  layout: any;\n  arcs: any;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.layout = pie<any, any>()\n      .value((d) => d.data.value).sort(null);\n\n    this.arcs = this.getArcs();\n  }\n\n  getArcs(): any[] {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n\n  onClick(data): void {\n    this.select.emit({\n      name: this.data[0].data.name,\n      value: this.data[0].data.value\n    });\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  label(arc): string {\n    return arc.data.name;\n  }\n\n  color(arc): any {\n    return this.colors(this.label(arc));\n  }\n\n}\n","import {\n  Component,\n  SimpleChanges,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { max } from 'd3-array';\nimport { arc, pie } from 'd3-shape';\n\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ng-svg-charts-pie-series]',\n  templateUrl: 'pie-series.template.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieSeriesComponent implements OnChanges {\n  @Input() colors;\n  @Input() series: any = [];\n  @Input() dims;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n  @Input() explodeSlices;\n  @Input() showLabels;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() labelFormatting: any;\n  @Input() trimLabels = true;\n  @Input() maxLabelLength = 10;\n  @Input() tooltipText: (o: any) => any;\n  @Input() tooltipDisabled = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  max: number;\n  data: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    const pieGenerator = pie<any, any>()\n      .value(d => d.value)\n      .sort(null);\n\n    const arcData = pieGenerator(this.series);\n\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  outerArc(): any {\n    const factor = 1.5;\n\n    return arc()\n      .innerRadius(this.outerRadius * factor)\n      .outerRadius(this.outerRadius * factor);\n  }\n\n  calculateLabelPositions(pieData): any {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    return labelPositions;\n  }\n\n  labelVisible(myArc): boolean {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n\n  labelText(myArc): string {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n\n  label(myArc): string {\n    return formatLabel(myArc.data.name);\n  }\n\n  defaultTooltipText(myArc): string {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  color(myArc): any {\n    return this.colors.getColor(this.label(myArc));\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { AdvancedPieChartComponent } from './advanced-pie-chart.component';\nimport { PieLabelComponent } from './pie-label.component';\nimport { PieArcComponent } from './pie-arc.component';\nimport { PieChartComponent } from './pie-chart.component';\nimport { PieGridComponent } from './pie-grid.component';\nimport { PieGridSeriesComponent } from './pie-grid-series.component';\nimport { PieSeriesComponent } from './pie-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ],\n  exports: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ]\n})\nexport class PieChartModule {}\n","import './polyfills';\n\nimport { NgModule } from '@angular/core';\nimport { ChartCommonModule } from './common/chart-common.module';\nimport { AreaChartModule } from './area-chart/area-chart.module';\nimport { BarChartModule } from './bar-chart/bar-chart.module';\n// import { BubbleChartModule } from './bubble-chart/bubble-chart.module';\n// import { HeatMapModule } from './heat-map/heat-map.module';\nimport { LineChartModule } from './line-chart/line-chart.module';\n// import { PolarChartModule } from './polar-chart/polar-chart.module';\n// import { NumberCardModule } from './number-card/number-card.module';\nimport { PieChartModule } from './pie-chart/pie-chart.module';\n// import { TreeMapModule } from './tree-map/tree-map.module';\n// import { GaugeModule } from './gauge/gauge.module';\n\n@NgModule({\n  exports: [\n    ChartCommonModule,\n    AreaChartModule,\n    BarChartModule,\n    // BubbleChartModule,\n    // HeatMapModule,\n    LineChartModule,\n    // PolarChartModule,\n    // NumberCardModule,\n    PieChartModule,\n    // TreeMapModule,\n    // GaugeModule\n  ]\n})\nexport class SvgChartsModule { }\n","import { timeFormat } from 'd3-time-format';\n\nexport function tickFormat(fieldType, groupByType): (label: string) => string {\n  return function(label: string): string {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(<any>label);\n    }\n\n    return label.toString();\n  };\n}\n"]}